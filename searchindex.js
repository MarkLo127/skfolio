Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Analysis": [[7, "analysis"], [8, "analysis"], [9, "analysis"], [10, "analysis"], [18, "analysis"], [19, "analysis"], [20, "analysis"], [23, "analysis"], [26, "analysis"], [31, "analysis"], [33, "analysis"], [36, "analysis"]], "Analyst views": [[4, "analyst-views"], [6, "analyst-views"]], "Attributes and Methods": [[185, "attributes-and-methods"], [185, "id3"]], "Available models": [[170, "available-models"]], "Base Class": [[0, "base-class"], [0, "id10"], [0, "id12"], [0, "id15"]], "Base Classe": [[0, "base-classe"], [0, "id2"]], "Base Classes": [[0, "base-classes"], [0, "id21"]], "Base Portfolio": [[185, "base-portfolio"]], "Benchmark": [[3, "benchmark"], [36, "benchmark"]], "Black & Litterman": [[4, null], [187, "black-litterman"]], "Black & Litterman Factor Model": [[6, null], [6, "id1"], [170, "black-litterman-factor-model"]], "Black & Litterman Model": [[4, "black-litterman-model"], [170, "black-litterman-model"]], "Budget": [[11, "budget"]], "Citation": [[170, "citation"]], "Classes": [[0, "classes"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "id6"], [0, "id7"], [0, "id8"], [0, "id9"], [0, "id11"], [0, "id13"], [0, "id16"], [0, "id17"], [0, "id19"], [0, "id20"], [0, "id22"]], "Clustering Estimator": [[32, "clustering-estimator"]], "Clustering Estimators": [[172, null]], "Combinatorial Purged Cross-Validation": [[31, "combinatorial-purged-cross-validation"], [33, "combinatorial-purged-cross-validation"], [36, "combinatorial-purged-cross-validation"], [39, "combinatorial-purged-cross-validation"], [170, "combinatorial-purged-cross-validation"], [182, "combinatorial-purged-cross-validation"]], "Combining Multiple Prior Estimators": [[187, "combining-multiple-prior-estimators"]], "Combining Prior Estimators": [[183, "combining-prior-estimators"]], "Composite Estimators and Parameter Spaces": [[178, "composite-estimators-and-parameter-spaces"]], "Composition": [[29, "composition"], [30, "composition"], [32, "composition"]], "Computation times": [[16, null], [21, null], [24, null], [27, null], [34, null], [37, null], [42, null], [45, null], [48, null], [50, null], [171, null]], "Conclusion": [[7, "conclusion"], [8, "conclusion"], [33, "conclusion"], [36, "conclusion"], [44, "conclusion"]], "Covariance Estimator": [[173, null]], "Cross Validation": [[44, "cross-validation"]], "Cross-Validation": [[41, "cross-validation"]], "Cross-Validation Prediction": [[182, "cross-validation-prediction"]], "Custom Estimator": [[183, "custom-estimator"]], "Custom Pre-selection Transformer": [[41, "custom-pre-selection-transformer"]], "Custom Pre-selection Using Volumes": [[41, null]], "Data": [[2, "data"], [3, "data"], [4, "data"], [5, "data"], [6, "data"], [7, "data"], [8, "data"], [9, "data"], [10, "data"], [11, "data"], [12, "data"], [13, "data"], [14, "data"], [15, "data"], [18, "data"], [19, "data"], [20, "data"], [23, "data"], [26, "data"], [29, "data"], [30, "data"], [31, "data"], [32, "data"], [33, "data"], [36, "data"], [39, "data"], [40, "data"], [41, "data"]], "Data Preparation": [[46, null], [49, "data-preparation"], [174, null]], "Datasets": [[175, null]], "Dendrogram": [[29, "dendrogram"], [30, "dendrogram"], [32, "dendrogram"]], "Denoised Covariance & Shrunk Expected Returns": [[170, "denoised-covariance-shrunk-expected-returns"]], "Distance Estimator": [[29, "distance-estimator"], [30, "distance-estimator"], [32, "distance-estimator"], [176, null]], "Distribution": [[31, "distribution"], [33, "distribution"], [36, "distribution"], [39, "distribution"]], "Distributionally Robust CVaR": [[25, null], [26, null], [49, "distributionally-robust-cvar"], [183, "distributionally-robust-cvar"]], "Diversification Analysis": [[23, "diversification-analysis"]], "Drop Highly Correlated Assets": [[39, null]], "Efficient Frontier": [[9, null], [14, "efficient-frontier"], [15, "efficient-frontier"]], "Empirical Model": [[4, "empirical-model"], [5, "empirical-model"]], "Empirical Prior": [[3, null], [187, "empirical-prior"]], "Ensemble Optimizations": [[35, null], [49, "ensemble-optimizations"]], "Enum": [[0, "enum"]], "Example for stocks": [[174, "example-for-stocks"]], "Examples": [[49, null]], "Exhaustive Grid Search": [[178, "exhaustive-grid-search"]], "Expected Return Estimator": [[177, null]], "Factor Analysis": [[5, "factor-analysis"]], "Factor Model": [[5, null], [5, "id1"], [170, "factor-model"], [187, "factor-model"]], "Factor Model & Covariance Detoning": [[170, "factor-model-covariance-detoning"]], "Fit on training set": [[170, "fit-on-training-set"]], "Functions": [[0, "functions"], [0, "id23"], [0, "id24"], [0, "id25"], [0, "id26"], [0, "id27"]], "Going Further": [[6, "going-further"], [183, "going-further"]], "Grid Search on embedded parameters": [[170, "grid-search-on-embedded-parameters"]], "Group and Linear Constraints": [[11, "group-and-linear-constraints"]], "HRP vs HERC": [[31, null]], "Hierarchical Clustering and NCO": [[28, null], [49, "hierarchical-clustering-and-nco"]], "Hierarchical Equal Risk Contribution": [[183, "hierarchical-equal-risk-contribution"]], "Hierarchical Equal Risk Contribution - CDaR": [[30, null]], "Hierarchical Risk Parity": [[183, "hierarchical-risk-parity"]], "Hierarchical Risk Parity - CVaR": [[29, null]], "Hyper-Parameter Tuning": [[15, "hyper-parameter-tuning"]], "Hyper-Parameters Tuning": [[44, "hyper-parameters-tuning"], [178, null]], "Hyper-parameter Tuning": [[14, "hyper-parameter-tuning"]], "Implied Covariance Estimator": [[44, "implied-covariance-estimator"]], "Imports": [[170, "imports"]], "In skfolio": [[174, "in-skfolio"]], "Installation": [[170, "installation"], [180, null]], "Inverse Volatility": [[44, "inverse-volatility"]], "Investment Horizon": [[47, null]], "K-fold Cross-Validation": [[170, "k-fold-cross-validation"]], "Key Concepts": [[170, "key-concepts"]], "L1 and L2 Regularization": [[14, null]], "Left and Right Inequalities": [[11, "left-and-right-inequalities"]], "Linear Returns": [[47, "linear-returns"]], "Linear return": [[174, "linear-return"]], "Linkage Methods": [[29, "linkage-methods"], [30, "linkage-methods"], [32, "linkage-methods"]], "Load Dataset": [[170, "load-dataset"]], "Load Datasets": [[44, "load-datasets"]], "Loading Matrix Classes for Factor Models": [[0, "loading-matrix-classes-for-factor-models"]], "Logarithmic return": [[174, "logarithmic-return"]], "Lower and Upper Bounds on Weights": [[11, "lower-and-upper-bounds-on-weights"]], "Management Fees": [[13, null], [13, "id1"]], "Maximum Diversification": [[22, null], [23, null], [49, "maximum-diversification"], [183, "maximum-diversification"]], "Maximum Sharpe Ratio": [[7, null]], "Maximum Sortino Ratio": [[170, "maximum-sortino-ratio"]], "Mean-Risk": [[1, null], [49, "mean-risk"]], "Mean-Risk Optimization": [[183, "mean-risk-optimization"]], "Mean-Variance-CDaR Surface": [[10, null]], "Metadata Routing": [[43, null], [49, "metadata-routing"], [181, null]], "Minimum CVaR": [[8, null]], "Minimum Variance": [[170, "minimum-variance"]], "Model": [[2, "model"], [3, "model"], [7, "model"], [8, "model"], [9, "model"], [10, "model"], [11, "model"], [12, "model"], [13, "model"], [18, "model"], [19, "model"], [20, "model"], [23, "model"], [26, "model"], [29, "model"], [30, "model"], [31, "model"], [32, "model"], [33, "model"], [39, "model"], [40, "model"], [47, "model"]], "Model Dataclass": [[0, "model-dataclass"], [0, "id18"]], "Model Selection": [[182, null]], "Multi Period Portfolio": [[185, "multi-period-portfolio"]], "Multi-period portfolio": [[12, "multi-period-portfolio"], [13, "multi-period-portfolio"]], "NCO - Combinatorial Purged CV": [[33, null]], "Naive Allocation": [[183, "naive-allocation"]], "Nested Cluster Optimization with cross-validation and parallelization": [[170, "nested-cluster-optimization-with-cross-validation-and-parallelization"]], "Nested Clusters Optimization": [[32, null], [183, "nested-clusters-optimization"]], "Optimization": [[183, null]], "Parallelism": [[178, "parallelism"]], "Parameter Tuning": [[31, "parameter-tuning"], [33, "parameter-tuning"], [36, "parameter-tuning"], [40, "parameter-tuning"]], "Pareto Optimal Surface": [[10, "pareto-optimal-surface"]], "Pipeline": [[39, "pipeline"], [40, "pipeline"], [41, "pipeline"]], "Pitfall in Portfolio Optimization": [[174, "pitfall-in-portfolio-optimization"]], "Population": [[184, null]], "Portfolio": [[185, null], [185, "id2"]], "Pre-Selection Pipeline": [[170, "pre-selection-pipeline"]], "Pre-Selection Transformers": [[186, null]], "Pre-selection": [[38, null], [49, "pre-selection"]], "Predict on test set": [[170, "predict-on-test-set"]], "Prediction": [[2, "prediction"], [3, "prediction"], [4, "prediction"], [5, "prediction"], [6, "prediction"], [7, "prediction"], [8, "prediction"], [9, "prediction"], [14, "prediction"], [18, "prediction"], [19, "prediction"], [20, "prediction"], [23, "prediction"], [26, "prediction"], [29, "prediction"], [30, "prediction"], [31, "prediction"], [32, "prediction"], [33, "prediction"], [36, "prediction"], [39, "prediction"], [40, "prediction"]], "Prices": [[47, "prices"]], "Prior Estimator": [[29, "prior-estimator"], [183, "prior-estimator"], [187, null]], "Quickstart": [[170, "quickstart"]], "Randomized Parameter Optimization": [[178, "randomized-parameter-optimization"]], "Randomized Search of the L2 Norm": [[170, "randomized-search-of-the-l2-norm"]], "Recognition": [[170, "recognition"]], "Risk Budget": [[19, "risk-budget"]], "Risk Budgeting": [[17, null], [49, "risk-budgeting"], [183, "risk-budgeting"]], "Risk Budgeting - CVaR": [[19, null]], "Risk Contribution": [[29, "risk-contribution"], [30, "risk-contribution"]], "Risk Contribution Analysis": [[18, "risk-contribution-analysis"], [19, "risk-contribution-analysis"]], "Risk Parity & Gerber Covariance": [[170, "risk-parity-gerber-covariance"]], "Risk Parity - Covariance shrinkage": [[20, null]], "Risk Parity - Variance": [[18, null]], "Risk Parity on CVaR": [[170, "risk-parity-on-cvar"]], "Select Best Performers": [[40, null]], "Short and Long Position Constraints": [[11, "short-and-long-position-constraints"]], "Specifying an Objective Metric": [[178, "specifying-an-objective-metric"]], "Stacking Model": [[36, "stacking-model"]], "Stacking Optimization": [[36, null], [183, "stacking-optimization"]], "Summary": [[29, "summary"]], "The correct approach": [[174, "the-correct-approach"]], "Tips for Parameter Search": [[178, "tips-for-parameter-search"]], "Tracking Error": [[2, null]], "Train/Test split": [[170, "train-test-split"]], "Transaction Cost": [[12, "transaction-cost"]], "Transaction Costs": [[12, null]], "Uncertainty Set": [[15, null]], "Uncertainty Set Estimator": [[188, null]], "Uncertainty Set on Expected Returns": [[170, "uncertainty-set-on-expected-returns"]], "User Guide": [[179, null]], "Using Implied Volatility with Metadata Routing": [[44, null]], "Weight Constraints": [[11, null]], "Weight Constraints & Transaction Costs": [[170, "weight-constraints-transaction-costs"]], "Worst-Case Optimization": [[183, "worst-case-optimization"]], "skfolio": [[170, null]], "skfolio.cluster.HierarchicalClustering": [[51, null]], "skfolio.cluster.LinkageMethod": [[52, null]], "skfolio.cluster: Cluster Estimators": [[0, "module-3"]], "skfolio.datasets.load_factors_dataset": [[53, null]], "skfolio.datasets.load_ftse100_dataset": [[54, null]], "skfolio.datasets.load_nasdaq_dataset": [[55, null]], "skfolio.datasets.load_sp500_dataset": [[56, null]], "skfolio.datasets.load_sp500_index": [[57, null]], "skfolio.datasets: Datasets": [[0, "skfolio-datasets-datasets"]], "skfolio.distance.BaseDistance": [[58, null]], "skfolio.distance.CovarianceDistance": [[59, null]], "skfolio.distance.DistanceCorrelation": [[60, null]], "skfolio.distance.KendallDistance": [[61, null]], "skfolio.distance.MutualInformation": [[62, null]], "skfolio.distance.PearsonDistance": [[63, null]], "skfolio.distance.SpearmanDistance": [[64, null]], "skfolio.distance: Distance Estimators": [[0, "module-2"]], "skfolio.measures.BaseMeasure": [[65, null]], "skfolio.measures.ExtraRiskMeasure": [[66, null]], "skfolio.measures.PerfMeasure": [[67, null]], "skfolio.measures.RatioMeasure": [[68, null]], "skfolio.measures.RiskMeasure": [[69, null]], "skfolio.measures.average_drawdown": [[70, null]], "skfolio.measures.cdar": [[71, null]], "skfolio.measures.cvar": [[72, null]], "skfolio.measures.drawdown_at_risk": [[73, null]], "skfolio.measures.edar": [[74, null]], "skfolio.measures.effective_number_assets": [[75, null]], "skfolio.measures.entropic_risk_measure": [[76, null]], "skfolio.measures.evar": [[77, null]], "skfolio.measures.first_lower_partial_moment": [[78, null]], "skfolio.measures.fourth_central_moment": [[79, null]], "skfolio.measures.fourth_lower_partial_moment": [[80, null]], "skfolio.measures.get_cumulative_returns": [[81, null]], "skfolio.measures.get_drawdowns": [[82, null]], "skfolio.measures.gini_mean_difference": [[83, null]], "skfolio.measures.max_drawdown": [[84, null]], "skfolio.measures.mean": [[85, null]], "skfolio.measures.mean_absolute_deviation": [[86, null]], "skfolio.measures.owa_gmd_weights": [[87, null]], "skfolio.measures.semi_deviation": [[88, null]], "skfolio.measures.semi_variance": [[89, null]], "skfolio.measures.standard_deviation": [[90, null]], "skfolio.measures.third_central_moment": [[91, null]], "skfolio.measures.ulcer_index": [[92, null]], "skfolio.measures.value_at_risk": [[93, null]], "skfolio.measures.variance": [[94, null]], "skfolio.measures.worst_realization": [[95, null]], "skfolio.measures: Measures": [[0, "module-skfolio.measures"]], "skfolio.metrics.make_scorer": [[96, null]], "skfolio.metrics: Metrics": [[0, "module-7"]], "skfolio.model_selection.BaseCombinatorialCV": [[97, null]], "skfolio.model_selection.CombinatorialPurgedCV": [[98, null]], "skfolio.model_selection.WalkForward": [[99, null]], "skfolio.model_selection.cross_val_predict": [[100, null]], "skfolio.model_selection.optimal_folds_number": [[101, null]], "skfolio.model_selection: Model Selection": [[0, "module-6"]], "skfolio.moments.BaseCovariance": [[102, null]], "skfolio.moments.BaseMu": [[103, null]], "skfolio.moments.DenoiseCovariance": [[104, null]], "skfolio.moments.DetoneCovariance": [[105, null]], "skfolio.moments.EWCovariance": [[106, null]], "skfolio.moments.EWMu": [[107, null]], "skfolio.moments.EmpiricalCovariance": [[108, null]], "skfolio.moments.EmpiricalMu": [[109, null]], "skfolio.moments.EquilibriumMu": [[110, null]], "skfolio.moments.GerberCovariance": [[111, null]], "skfolio.moments.GraphicalLassoCV": [[112, null]], "skfolio.moments.ImpliedCovariance": [[113, null]], "skfolio.moments.LedoitWolf": [[114, null]], "skfolio.moments.OAS": [[115, null]], "skfolio.moments.ShrunkCovariance": [[116, null]], "skfolio.moments.ShrunkMu": [[117, null]], "skfolio.moments.ShrunkMuMethods": [[118, null]], "skfolio.moments.covariance: Covariance Estimators": [[0, "module-1"]], "skfolio.moments.mu: Mu Estimators": [[0, "module-0"]], "skfolio.optimization.BaseComposition": [[119, null]], "skfolio.optimization.BaseHierarchicalOptimization": [[120, null]], "skfolio.optimization.ConvexOptimization": [[121, null]], "skfolio.optimization.DistributionallyRobustCVaR": [[122, null]], "skfolio.optimization.EqualWeighted": [[123, null]], "skfolio.optimization.HierarchicalEqualRiskContribution": [[124, null]], "skfolio.optimization.HierarchicalRiskParity": [[125, null]], "skfolio.optimization.InverseVolatility": [[126, null]], "skfolio.optimization.MaximumDiversification": [[127, null]], "skfolio.optimization.MeanRisk": [[128, null]], "skfolio.optimization.NestedClustersOptimization": [[129, null]], "skfolio.optimization.ObjectiveFunction": [[130, null]], "skfolio.optimization.Random": [[131, null]], "skfolio.optimization.RiskBudgeting": [[132, null]], "skfolio.optimization.StackingOptimization": [[133, null]], "skfolio.optimization.cluster: Clustering Optimization Estimators": [[0, "module-skfolio.optimization.cluster"]], "skfolio.optimization.convex: Convex Optimization Estimators": [[0, "module-skfolio.optimization.convex"]], "skfolio.optimization.ensemble: Ensemble Optimization Estimators": [[0, "module-skfolio.optimization.ensemble"]], "skfolio.optimization.naive: Naive Optimization Estimators": [[0, "module-skfolio.optimization.naive"]], "skfolio.population.Population": [[134, null]], "skfolio.population: Population": [[0, "module-skfolio.population"]], "skfolio.portfolio.BasePortfolio": [[135, null]], "skfolio.portfolio.MultiPeriodPortfolio": [[136, null]], "skfolio.portfolio.Portfolio": [[137, null]], "skfolio.portfolio: Portfolio": [[0, "module-skfolio.portfolio"]], "skfolio.pre_selection.DropCorrelated": [[138, null]], "skfolio.pre_selection.SelectKExtremes": [[139, null]], "skfolio.pre_selection.SelectNonDominated": [[140, null]], "skfolio.pre_selection: Pre-selection Transformers": [[0, "module-5"]], "skfolio.preprocessing.prices_to_returns": [[141, null]], "skfolio.preprocessing: Preprocessing": [[0, "skfolio-preprocessing-preprocessing"]], "skfolio.prior.BaseLoadingMatrix": [[142, null]], "skfolio.prior.BasePrior": [[143, null]], "skfolio.prior.BlackLitterman": [[144, null]], "skfolio.prior.EmpiricalPrior": [[145, null]], "skfolio.prior.FactorModel": [[146, null]], "skfolio.prior.LoadingMatrixRegression": [[147, null]], "skfolio.prior.PriorModel": [[148, null]], "skfolio.prior: Prior Estimators": [[0, "module-skfolio"]], "skfolio.uncertainty_set.BaseCovarianceUncertaintySet": [[149, null]], "skfolio.uncertainty_set.BaseMuUncertaintySet": [[150, null]], "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet": [[151, null]], "skfolio.uncertainty_set.BootstrapMuUncertaintySet": [[152, null]], "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet": [[153, null]], "skfolio.uncertainty_set.EmpiricalMuUncertaintySet": [[154, null]], "skfolio.uncertainty_set.UncertaintySet": [[155, null]], "skfolio.uncertainty_set: Uncertainty set Estimators": [[0, "module-4"]], "skfolio.utils.stats.NBinsMethod": [[156, null]], "skfolio.utils.stats.assert_is_distance": [[157, null]], "skfolio.utils.stats.assert_is_square": [[158, null]], "skfolio.utils.stats.assert_is_symmetric": [[159, null]], "skfolio.utils.stats.commutation_matrix": [[160, null]], "skfolio.utils.stats.compute_optimal_n_clusters": [[161, null]], "skfolio.utils.stats.corr_to_cov": [[162, null]], "skfolio.utils.stats.cov_nearest": [[163, null]], "skfolio.utils.stats.cov_to_corr": [[164, null]], "skfolio.utils.stats.is_cholesky_dec": [[165, null]], "skfolio.utils.stats.n_bins_freedman": [[166, null]], "skfolio.utils.stats.n_bins_knuth": [[167, null]], "skfolio.utils.stats.rand_weights": [[168, null]], "skfolio.utils.stats.rand_weights_dirichlet": [[169, null]], "skfolio.utils.stats: Stats": [[0, "skfolio-utils-stats-stats"]]}, "docnames": ["api", "auto_examples/1_mean_risk/index", "auto_examples/1_mean_risk/plot_10_tracking_error", "auto_examples/1_mean_risk/plot_11_empirical_prior", "auto_examples/1_mean_risk/plot_12_black_and_litterman", "auto_examples/1_mean_risk/plot_13_factor_model", "auto_examples/1_mean_risk/plot_14_black_litterman_factor_model", "auto_examples/1_mean_risk/plot_1_maximum_sharpe_ratio", "auto_examples/1_mean_risk/plot_2_minimum_CVaR", "auto_examples/1_mean_risk/plot_3_efficient_frontier", "auto_examples/1_mean_risk/plot_4_mean_variance_cdar", "auto_examples/1_mean_risk/plot_5_weight_constraints", "auto_examples/1_mean_risk/plot_6_transaction_costs", "auto_examples/1_mean_risk/plot_7_management_fees", "auto_examples/1_mean_risk/plot_8_regularization", "auto_examples/1_mean_risk/plot_9_uncertainty_set", "auto_examples/1_mean_risk/sg_execution_times", "auto_examples/2_risk_budgeting/index", "auto_examples/2_risk_budgeting/plot_1_risk_parity_variance", "auto_examples/2_risk_budgeting/plot_2_risk_budgeting_CVaR", "auto_examples/2_risk_budgeting/plot_3_risk_parity_ledoit_wolf", "auto_examples/2_risk_budgeting/sg_execution_times", "auto_examples/3_maxiumum_diversification/index", "auto_examples/3_maxiumum_diversification/plot_1_maximum_divesification", "auto_examples/3_maxiumum_diversification/sg_execution_times", "auto_examples/4_distributionally_robust_cvar/index", "auto_examples/4_distributionally_robust_cvar/plot_1_distributionally_robust_cvar", "auto_examples/4_distributionally_robust_cvar/sg_execution_times", "auto_examples/5_clustering/index", "auto_examples/5_clustering/plot_1_hrp_cvar", "auto_examples/5_clustering/plot_2_herc_cdar", "auto_examples/5_clustering/plot_3_hrp_vs_herc", "auto_examples/5_clustering/plot_4_nco", "auto_examples/5_clustering/plot_5_nco_grid_search", "auto_examples/5_clustering/sg_execution_times", "auto_examples/6_ensemble/index", "auto_examples/6_ensemble/plot_1_stacking", "auto_examples/6_ensemble/sg_execution_times", "auto_examples/7_pre_selection/index", "auto_examples/7_pre_selection/plot_1_drop_correlated", "auto_examples/7_pre_selection/plot_2_select_best_performers", "auto_examples/7_pre_selection/plot_3_custom_pre_selection_volumes", "auto_examples/7_pre_selection/sg_execution_times", "auto_examples/8_metadata_routing/index", "auto_examples/8_metadata_routing/plot_1_implied_volatility", "auto_examples/8_metadata_routing/sg_execution_times", "auto_examples/9_data_preparation/index", "auto_examples/9_data_preparation/plot_1_investment_horizon", "auto_examples/9_data_preparation/sg_execution_times", "auto_examples/index", "auto_examples/sg_execution_times", "generated/skfolio.cluster.HierarchicalClustering", "generated/skfolio.cluster.LinkageMethod", "generated/skfolio.datasets.load_factors_dataset", "generated/skfolio.datasets.load_ftse100_dataset", "generated/skfolio.datasets.load_nasdaq_dataset", "generated/skfolio.datasets.load_sp500_dataset", "generated/skfolio.datasets.load_sp500_index", "generated/skfolio.distance.BaseDistance", "generated/skfolio.distance.CovarianceDistance", "generated/skfolio.distance.DistanceCorrelation", "generated/skfolio.distance.KendallDistance", "generated/skfolio.distance.MutualInformation", "generated/skfolio.distance.PearsonDistance", "generated/skfolio.distance.SpearmanDistance", "generated/skfolio.measures.BaseMeasure", "generated/skfolio.measures.ExtraRiskMeasure", "generated/skfolio.measures.PerfMeasure", "generated/skfolio.measures.RatioMeasure", "generated/skfolio.measures.RiskMeasure", "generated/skfolio.measures.average_drawdown", "generated/skfolio.measures.cdar", "generated/skfolio.measures.cvar", "generated/skfolio.measures.drawdown_at_risk", "generated/skfolio.measures.edar", "generated/skfolio.measures.effective_number_assets", "generated/skfolio.measures.entropic_risk_measure", "generated/skfolio.measures.evar", "generated/skfolio.measures.first_lower_partial_moment", "generated/skfolio.measures.fourth_central_moment", "generated/skfolio.measures.fourth_lower_partial_moment", "generated/skfolio.measures.get_cumulative_returns", "generated/skfolio.measures.get_drawdowns", "generated/skfolio.measures.gini_mean_difference", "generated/skfolio.measures.max_drawdown", "generated/skfolio.measures.mean", "generated/skfolio.measures.mean_absolute_deviation", "generated/skfolio.measures.owa_gmd_weights", "generated/skfolio.measures.semi_deviation", "generated/skfolio.measures.semi_variance", "generated/skfolio.measures.standard_deviation", "generated/skfolio.measures.third_central_moment", "generated/skfolio.measures.ulcer_index", "generated/skfolio.measures.value_at_risk", "generated/skfolio.measures.variance", "generated/skfolio.measures.worst_realization", "generated/skfolio.metrics.make_scorer", "generated/skfolio.model_selection.BaseCombinatorialCV", "generated/skfolio.model_selection.CombinatorialPurgedCV", "generated/skfolio.model_selection.WalkForward", "generated/skfolio.model_selection.cross_val_predict", "generated/skfolio.model_selection.optimal_folds_number", "generated/skfolio.moments.BaseCovariance", "generated/skfolio.moments.BaseMu", "generated/skfolio.moments.DenoiseCovariance", "generated/skfolio.moments.DetoneCovariance", "generated/skfolio.moments.EWCovariance", "generated/skfolio.moments.EWMu", "generated/skfolio.moments.EmpiricalCovariance", "generated/skfolio.moments.EmpiricalMu", "generated/skfolio.moments.EquilibriumMu", "generated/skfolio.moments.GerberCovariance", "generated/skfolio.moments.GraphicalLassoCV", "generated/skfolio.moments.ImpliedCovariance", "generated/skfolio.moments.LedoitWolf", "generated/skfolio.moments.OAS", "generated/skfolio.moments.ShrunkCovariance", "generated/skfolio.moments.ShrunkMu", "generated/skfolio.moments.ShrunkMuMethods", "generated/skfolio.optimization.BaseComposition", "generated/skfolio.optimization.BaseHierarchicalOptimization", "generated/skfolio.optimization.ConvexOptimization", "generated/skfolio.optimization.DistributionallyRobustCVaR", "generated/skfolio.optimization.EqualWeighted", "generated/skfolio.optimization.HierarchicalEqualRiskContribution", "generated/skfolio.optimization.HierarchicalRiskParity", "generated/skfolio.optimization.InverseVolatility", "generated/skfolio.optimization.MaximumDiversification", "generated/skfolio.optimization.MeanRisk", "generated/skfolio.optimization.NestedClustersOptimization", "generated/skfolio.optimization.ObjectiveFunction", "generated/skfolio.optimization.Random", "generated/skfolio.optimization.RiskBudgeting", "generated/skfolio.optimization.StackingOptimization", "generated/skfolio.population.Population", "generated/skfolio.portfolio.BasePortfolio", "generated/skfolio.portfolio.MultiPeriodPortfolio", "generated/skfolio.portfolio.Portfolio", "generated/skfolio.pre_selection.DropCorrelated", "generated/skfolio.pre_selection.SelectKExtremes", "generated/skfolio.pre_selection.SelectNonDominated", "generated/skfolio.preprocessing.prices_to_returns", "generated/skfolio.prior.BaseLoadingMatrix", "generated/skfolio.prior.BasePrior", "generated/skfolio.prior.BlackLitterman", "generated/skfolio.prior.EmpiricalPrior", "generated/skfolio.prior.FactorModel", "generated/skfolio.prior.LoadingMatrixRegression", "generated/skfolio.prior.PriorModel", "generated/skfolio.uncertainty_set.BaseCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.BaseMuUncertaintySet", "generated/skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.BootstrapMuUncertaintySet", "generated/skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.EmpiricalMuUncertaintySet", "generated/skfolio.uncertainty_set.UncertaintySet", "generated/skfolio.utils.stats.NBinsMethod", "generated/skfolio.utils.stats.assert_is_distance", "generated/skfolio.utils.stats.assert_is_square", "generated/skfolio.utils.stats.assert_is_symmetric", "generated/skfolio.utils.stats.commutation_matrix", "generated/skfolio.utils.stats.compute_optimal_n_clusters", "generated/skfolio.utils.stats.corr_to_cov", "generated/skfolio.utils.stats.cov_nearest", "generated/skfolio.utils.stats.cov_to_corr", "generated/skfolio.utils.stats.is_cholesky_dec", "generated/skfolio.utils.stats.n_bins_freedman", "generated/skfolio.utils.stats.n_bins_knuth", "generated/skfolio.utils.stats.rand_weights", "generated/skfolio.utils.stats.rand_weights_dirichlet", "index", "sg_execution_times", "user_guide/cluster", "user_guide/covariance", "user_guide/data_preparation", "user_guide/datasets", "user_guide/distance", "user_guide/expected_returns", "user_guide/hyper_parameters_tuning", "user_guide/index", "user_guide/install", "user_guide/metadata_routing", "user_guide/model_selection", "user_guide/optimization", "user_guide/population", "user_guide/portfolio", "user_guide/pre_selection", "user_guide/prior", "user_guide/uncertainty_set"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "auto_examples/1_mean_risk/index.rst", "auto_examples/1_mean_risk/plot_10_tracking_error.rst", "auto_examples/1_mean_risk/plot_11_empirical_prior.rst", "auto_examples/1_mean_risk/plot_12_black_and_litterman.rst", "auto_examples/1_mean_risk/plot_13_factor_model.rst", "auto_examples/1_mean_risk/plot_14_black_litterman_factor_model.rst", "auto_examples/1_mean_risk/plot_1_maximum_sharpe_ratio.rst", "auto_examples/1_mean_risk/plot_2_minimum_CVaR.rst", "auto_examples/1_mean_risk/plot_3_efficient_frontier.rst", "auto_examples/1_mean_risk/plot_4_mean_variance_cdar.rst", "auto_examples/1_mean_risk/plot_5_weight_constraints.rst", "auto_examples/1_mean_risk/plot_6_transaction_costs.rst", "auto_examples/1_mean_risk/plot_7_management_fees.rst", "auto_examples/1_mean_risk/plot_8_regularization.rst", "auto_examples/1_mean_risk/plot_9_uncertainty_set.rst", "auto_examples/1_mean_risk/sg_execution_times.rst", "auto_examples/2_risk_budgeting/index.rst", "auto_examples/2_risk_budgeting/plot_1_risk_parity_variance.rst", "auto_examples/2_risk_budgeting/plot_2_risk_budgeting_CVaR.rst", "auto_examples/2_risk_budgeting/plot_3_risk_parity_ledoit_wolf.rst", "auto_examples/2_risk_budgeting/sg_execution_times.rst", "auto_examples/3_maxiumum_diversification/index.rst", "auto_examples/3_maxiumum_diversification/plot_1_maximum_divesification.rst", "auto_examples/3_maxiumum_diversification/sg_execution_times.rst", "auto_examples/4_distributionally_robust_cvar/index.rst", "auto_examples/4_distributionally_robust_cvar/plot_1_distributionally_robust_cvar.rst", "auto_examples/4_distributionally_robust_cvar/sg_execution_times.rst", "auto_examples/5_clustering/index.rst", "auto_examples/5_clustering/plot_1_hrp_cvar.rst", "auto_examples/5_clustering/plot_2_herc_cdar.rst", "auto_examples/5_clustering/plot_3_hrp_vs_herc.rst", "auto_examples/5_clustering/plot_4_nco.rst", "auto_examples/5_clustering/plot_5_nco_grid_search.rst", "auto_examples/5_clustering/sg_execution_times.rst", "auto_examples/6_ensemble/index.rst", "auto_examples/6_ensemble/plot_1_stacking.rst", "auto_examples/6_ensemble/sg_execution_times.rst", "auto_examples/7_pre_selection/index.rst", "auto_examples/7_pre_selection/plot_1_drop_correlated.rst", "auto_examples/7_pre_selection/plot_2_select_best_performers.rst", "auto_examples/7_pre_selection/plot_3_custom_pre_selection_volumes.rst", "auto_examples/7_pre_selection/sg_execution_times.rst", "auto_examples/8_metadata_routing/index.rst", "auto_examples/8_metadata_routing/plot_1_implied_volatility.rst", "auto_examples/8_metadata_routing/sg_execution_times.rst", "auto_examples/9_data_preparation/index.rst", "auto_examples/9_data_preparation/plot_1_investment_horizon.rst", "auto_examples/9_data_preparation/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/sg_execution_times.rst", "generated/skfolio.cluster.HierarchicalClustering.rst", "generated/skfolio.cluster.LinkageMethod.rst", "generated/skfolio.datasets.load_factors_dataset.rst", "generated/skfolio.datasets.load_ftse100_dataset.rst", "generated/skfolio.datasets.load_nasdaq_dataset.rst", "generated/skfolio.datasets.load_sp500_dataset.rst", "generated/skfolio.datasets.load_sp500_index.rst", "generated/skfolio.distance.BaseDistance.rst", "generated/skfolio.distance.CovarianceDistance.rst", "generated/skfolio.distance.DistanceCorrelation.rst", "generated/skfolio.distance.KendallDistance.rst", "generated/skfolio.distance.MutualInformation.rst", "generated/skfolio.distance.PearsonDistance.rst", "generated/skfolio.distance.SpearmanDistance.rst", "generated/skfolio.measures.BaseMeasure.rst", "generated/skfolio.measures.ExtraRiskMeasure.rst", "generated/skfolio.measures.PerfMeasure.rst", "generated/skfolio.measures.RatioMeasure.rst", "generated/skfolio.measures.RiskMeasure.rst", "generated/skfolio.measures.average_drawdown.rst", "generated/skfolio.measures.cdar.rst", "generated/skfolio.measures.cvar.rst", "generated/skfolio.measures.drawdown_at_risk.rst", "generated/skfolio.measures.edar.rst", "generated/skfolio.measures.effective_number_assets.rst", "generated/skfolio.measures.entropic_risk_measure.rst", "generated/skfolio.measures.evar.rst", "generated/skfolio.measures.first_lower_partial_moment.rst", "generated/skfolio.measures.fourth_central_moment.rst", "generated/skfolio.measures.fourth_lower_partial_moment.rst", "generated/skfolio.measures.get_cumulative_returns.rst", "generated/skfolio.measures.get_drawdowns.rst", "generated/skfolio.measures.gini_mean_difference.rst", "generated/skfolio.measures.max_drawdown.rst", "generated/skfolio.measures.mean.rst", "generated/skfolio.measures.mean_absolute_deviation.rst", "generated/skfolio.measures.owa_gmd_weights.rst", "generated/skfolio.measures.semi_deviation.rst", "generated/skfolio.measures.semi_variance.rst", "generated/skfolio.measures.standard_deviation.rst", "generated/skfolio.measures.third_central_moment.rst", "generated/skfolio.measures.ulcer_index.rst", "generated/skfolio.measures.value_at_risk.rst", "generated/skfolio.measures.variance.rst", "generated/skfolio.measures.worst_realization.rst", "generated/skfolio.metrics.make_scorer.rst", "generated/skfolio.model_selection.BaseCombinatorialCV.rst", "generated/skfolio.model_selection.CombinatorialPurgedCV.rst", "generated/skfolio.model_selection.WalkForward.rst", "generated/skfolio.model_selection.cross_val_predict.rst", "generated/skfolio.model_selection.optimal_folds_number.rst", "generated/skfolio.moments.BaseCovariance.rst", "generated/skfolio.moments.BaseMu.rst", "generated/skfolio.moments.DenoiseCovariance.rst", "generated/skfolio.moments.DetoneCovariance.rst", "generated/skfolio.moments.EWCovariance.rst", "generated/skfolio.moments.EWMu.rst", "generated/skfolio.moments.EmpiricalCovariance.rst", "generated/skfolio.moments.EmpiricalMu.rst", "generated/skfolio.moments.EquilibriumMu.rst", "generated/skfolio.moments.GerberCovariance.rst", "generated/skfolio.moments.GraphicalLassoCV.rst", "generated/skfolio.moments.ImpliedCovariance.rst", "generated/skfolio.moments.LedoitWolf.rst", "generated/skfolio.moments.OAS.rst", "generated/skfolio.moments.ShrunkCovariance.rst", "generated/skfolio.moments.ShrunkMu.rst", "generated/skfolio.moments.ShrunkMuMethods.rst", "generated/skfolio.optimization.BaseComposition.rst", "generated/skfolio.optimization.BaseHierarchicalOptimization.rst", "generated/skfolio.optimization.ConvexOptimization.rst", "generated/skfolio.optimization.DistributionallyRobustCVaR.rst", "generated/skfolio.optimization.EqualWeighted.rst", "generated/skfolio.optimization.HierarchicalEqualRiskContribution.rst", "generated/skfolio.optimization.HierarchicalRiskParity.rst", "generated/skfolio.optimization.InverseVolatility.rst", "generated/skfolio.optimization.MaximumDiversification.rst", "generated/skfolio.optimization.MeanRisk.rst", "generated/skfolio.optimization.NestedClustersOptimization.rst", "generated/skfolio.optimization.ObjectiveFunction.rst", "generated/skfolio.optimization.Random.rst", "generated/skfolio.optimization.RiskBudgeting.rst", "generated/skfolio.optimization.StackingOptimization.rst", "generated/skfolio.population.Population.rst", "generated/skfolio.portfolio.BasePortfolio.rst", "generated/skfolio.portfolio.MultiPeriodPortfolio.rst", "generated/skfolio.portfolio.Portfolio.rst", "generated/skfolio.pre_selection.DropCorrelated.rst", "generated/skfolio.pre_selection.SelectKExtremes.rst", "generated/skfolio.pre_selection.SelectNonDominated.rst", "generated/skfolio.preprocessing.prices_to_returns.rst", "generated/skfolio.prior.BaseLoadingMatrix.rst", "generated/skfolio.prior.BasePrior.rst", "generated/skfolio.prior.BlackLitterman.rst", "generated/skfolio.prior.EmpiricalPrior.rst", "generated/skfolio.prior.FactorModel.rst", "generated/skfolio.prior.LoadingMatrixRegression.rst", "generated/skfolio.prior.PriorModel.rst", "generated/skfolio.uncertainty_set.BaseCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.BaseMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.BootstrapMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.EmpiricalMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.UncertaintySet.rst", "generated/skfolio.utils.stats.NBinsMethod.rst", "generated/skfolio.utils.stats.assert_is_distance.rst", "generated/skfolio.utils.stats.assert_is_square.rst", "generated/skfolio.utils.stats.assert_is_symmetric.rst", "generated/skfolio.utils.stats.commutation_matrix.rst", "generated/skfolio.utils.stats.compute_optimal_n_clusters.rst", "generated/skfolio.utils.stats.corr_to_cov.rst", "generated/skfolio.utils.stats.cov_nearest.rst", "generated/skfolio.utils.stats.cov_to_corr.rst", "generated/skfolio.utils.stats.is_cholesky_dec.rst", "generated/skfolio.utils.stats.n_bins_freedman.rst", "generated/skfolio.utils.stats.n_bins_knuth.rst", "generated/skfolio.utils.stats.rand_weights.rst", "generated/skfolio.utils.stats.rand_weights_dirichlet.rst", "index.rst", "sg_execution_times.rst", "user_guide/cluster.rst", "user_guide/covariance.rst", "user_guide/data_preparation.rst", "user_guide/datasets.rst", "user_guide/distance.rst", "user_guide/expected_returns.rst", "user_guide/hyper_parameters_tuning.rst", "user_guide/index.rst", "user_guide/install.rst", "user_guide/metadata_routing.rst", "user_guide/model_selection.rst", "user_guide/optimization.rst", "user_guide/population.rst", "user_guide/portfolio.rst", "user_guide/pre_selection.rst", "user_guide/prior.rst", "user_guide/uncertainty_set.rst"], "indexentries": {"annualized_factor (skfolio.portfolio.baseportfolio property)": [[135, "skfolio.portfolio.BasePortfolio.annualized_factor", false]], "annualized_factor (skfolio.portfolio.multiperiodportfolio property)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.annualized_factor", false]], "annualized_factor (skfolio.portfolio.portfolio property)": [[137, "skfolio.portfolio.Portfolio.annualized_factor", false]], "append() (skfolio.population.population method)": [[134, "skfolio.population.Population.append", false]], "append() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.append", false]], "assert_is_distance() (in module skfolio.utils.stats)": [[157, "skfolio.utils.stats.assert_is_distance", false]], "assert_is_square() (in module skfolio.utils.stats)": [[158, "skfolio.utils.stats.assert_is_square", false]], "assert_is_symmetric() (in module skfolio.utils.stats)": [[159, "skfolio.utils.stats.assert_is_symmetric", false]], "assets (skfolio.portfolio.multiperiodportfolio property)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.assets", false]], "average_drawdown() (in module skfolio.measures)": [[70, "skfolio.measures.average_drawdown", false]], "basecombinatorialcv (class in skfolio.model_selection)": [[97, "skfolio.model_selection.BaseCombinatorialCV", false]], "basecomposition (class in skfolio.optimization)": [[119, "skfolio.optimization.BaseComposition", false]], "basecovariance (class in skfolio.moments)": [[102, "skfolio.moments.BaseCovariance", false]], "basecovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[149, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet", false]], "basedistance (class in skfolio.distance)": [[58, "skfolio.distance.BaseDistance", false]], "basehierarchicaloptimization (class in skfolio.optimization)": [[120, "skfolio.optimization.BaseHierarchicalOptimization", false]], "baseloadingmatrix (class in skfolio.prior)": [[142, "skfolio.prior.BaseLoadingMatrix", false]], "basemeasure (class in skfolio.measures)": [[65, "skfolio.measures.BaseMeasure", false]], "basemu (class in skfolio.moments)": [[103, "skfolio.moments.BaseMu", false]], "basemuuncertaintyset (class in skfolio.uncertainty_set)": [[150, "skfolio.uncertainty_set.BaseMuUncertaintySet", false]], "baseportfolio (class in skfolio.portfolio)": [[135, "skfolio.portfolio.BasePortfolio", false]], "baseprior (class in skfolio.prior)": [[143, "skfolio.prior.BasePrior", false]], "binary_train_test_sets (skfolio.model_selection.combinatorialpurgedcv property)": [[98, "skfolio.model_selection.CombinatorialPurgedCV.binary_train_test_sets", false]], "blacklitterman (class in skfolio.prior)": [[144, "skfolio.prior.BlackLitterman", false]], "bootstrapcovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[151, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet", false]], "bootstrapmuuncertaintyset (class in skfolio.uncertainty_set)": [[152, "skfolio.uncertainty_set.BootstrapMuUncertaintySet", false]], "capitalize() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.capitalize", false]], "capitalize() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.capitalize", false]], "capitalize() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.capitalize", false]], "capitalize() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.capitalize", false]], "capitalize() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.capitalize", false]], "capitalize() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.capitalize", false]], "capitalize() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.capitalize", false]], "capitalize() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.capitalize", false]], "casefold() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.casefold", false]], "casefold() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.casefold", false]], "casefold() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.casefold", false]], "casefold() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.casefold", false]], "casefold() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.casefold", false]], "casefold() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.casefold", false]], "casefold() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.casefold", false]], "casefold() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.casefold", false]], "cdar() (in module skfolio.measures)": [[71, "skfolio.measures.cdar", false]], "center() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.center", false]], "center() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.center", false]], "center() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.center", false]], "center() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.center", false]], "center() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.center", false]], "center() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.center", false]], "center() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.center", false]], "center() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.center", false]], "clear() (skfolio.population.population method)": [[134, "skfolio.population.Population.clear", false]], "clear() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.clear", false]], "clear() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.clear", false]], "clear() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.clear", false]], "combinatorialpurgedcv (class in skfolio.model_selection)": [[98, "skfolio.model_selection.CombinatorialPurgedCV", false]], "commutation_matrix() (in module skfolio.utils.stats)": [[160, "skfolio.utils.stats.commutation_matrix", false]], "composition (skfolio.portfolio.baseportfolio property)": [[135, "skfolio.portfolio.BasePortfolio.composition", false]], "composition (skfolio.portfolio.multiperiodportfolio property)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.composition", false]], "composition (skfolio.portfolio.portfolio property)": [[137, "skfolio.portfolio.Portfolio.composition", false]], "composition() (skfolio.population.population method)": [[134, "skfolio.population.Population.composition", false]], "compute_optimal_n_clusters() (in module skfolio.utils.stats)": [[161, "skfolio.utils.stats.compute_optimal_n_clusters", false]], "contribution() (skfolio.population.population method)": [[134, "skfolio.population.Population.contribution", false]], "contribution() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.contribution", false]], "contribution() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.contribution", false]], "contribution() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.contribution", false]], "convexoptimization (class in skfolio.optimization)": [[121, "skfolio.optimization.ConvexOptimization", false]], "copy() (skfolio.population.population method)": [[134, "skfolio.population.Population.copy", false]], "copy() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.copy", false]], "copy() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.copy", false]], "copy() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.copy", false]], "corr_to_cov() (in module skfolio.utils.stats)": [[162, "skfolio.utils.stats.corr_to_cov", false]], "count() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.count", false]], "count() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.count", false]], "count() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.count", false]], "count() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.count", false]], "count() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.count", false]], "count() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.count", false]], "count() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.count", false]], "count() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.count", false]], "count() (skfolio.population.population method)": [[134, "skfolio.population.Population.count", false]], "cov_nearest() (in module skfolio.utils.stats)": [[163, "skfolio.utils.stats.cov_nearest", false]], "cov_to_corr() (in module skfolio.utils.stats)": [[164, "skfolio.utils.stats.cov_to_corr", false]], "covariancedistance (class in skfolio.distance)": [[59, "skfolio.distance.CovarianceDistance", false]], "cross_val_predict() (in module skfolio.model_selection)": [[100, "skfolio.model_selection.cross_val_predict", false]], "cumulative_returns (skfolio.portfolio.baseportfolio attribute)": [[135, "skfolio.portfolio.BasePortfolio.cumulative_returns", false]], "cumulative_returns (skfolio.portfolio.multiperiodportfolio attribute)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.cumulative_returns", false]], "cumulative_returns (skfolio.portfolio.portfolio attribute)": [[137, "skfolio.portfolio.Portfolio.cumulative_returns", false]], "cumulative_returns_df (skfolio.portfolio.baseportfolio property)": [[135, "skfolio.portfolio.BasePortfolio.cumulative_returns_df", false]], "cumulative_returns_df (skfolio.portfolio.multiperiodportfolio property)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.cumulative_returns_df", false]], "cumulative_returns_df (skfolio.portfolio.portfolio property)": [[137, "skfolio.portfolio.Portfolio.cumulative_returns_df", false]], "cvar() (in module skfolio.measures)": [[72, "skfolio.measures.cvar", false]], "denoisecovariance (class in skfolio.moments)": [[104, "skfolio.moments.DenoiseCovariance", false]], "detonecovariance (class in skfolio.moments)": [[105, "skfolio.moments.DetoneCovariance", false]], "distancecorrelation (class in skfolio.distance)": [[60, "skfolio.distance.DistanceCorrelation", false]], "distributionallyrobustcvar (class in skfolio.optimization)": [[122, "skfolio.optimization.DistributionallyRobustCVaR", false]], "diversification (skfolio.portfolio.portfolio property)": [[137, "skfolio.portfolio.Portfolio.diversification", false]], "dominates() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.dominates", false]], "dominates() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.dominates", false]], "dominates() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.dominates", false]], "drawdown_at_risk() (in module skfolio.measures)": [[73, "skfolio.measures.drawdown_at_risk", false]], "drawdowns (skfolio.portfolio.baseportfolio attribute)": [[135, "skfolio.portfolio.BasePortfolio.drawdowns", false]], "drawdowns (skfolio.portfolio.multiperiodportfolio attribute)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.drawdowns", false]], "drawdowns (skfolio.portfolio.portfolio attribute)": [[137, "skfolio.portfolio.Portfolio.drawdowns", false]], "dropcorrelated (class in skfolio.pre_selection)": [[138, "skfolio.pre_selection.DropCorrelated", false]], "edar() (in module skfolio.measures)": [[74, "skfolio.measures.edar", false]], "effective_number_assets (skfolio.portfolio.portfolio property)": [[137, "skfolio.portfolio.Portfolio.effective_number_assets", false]], "effective_number_assets() (in module skfolio.measures)": [[75, "skfolio.measures.effective_number_assets", false]], "empiricalcovariance (class in skfolio.moments)": [[108, "skfolio.moments.EmpiricalCovariance", false]], "empiricalcovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[153, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet", false]], "empiricalmu (class in skfolio.moments)": [[109, "skfolio.moments.EmpiricalMu", false]], "empiricalmuuncertaintyset (class in skfolio.uncertainty_set)": [[154, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet", false]], "empiricalprior (class in skfolio.prior)": [[145, "skfolio.prior.EmpiricalPrior", false]], "encode() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.encode", false]], "encode() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.encode", false]], "encode() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.encode", false]], "encode() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.encode", false]], "encode() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.encode", false]], "encode() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.encode", false]], "encode() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.encode", false]], "encode() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.encode", false]], "endswith() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.endswith", false]], "endswith() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.endswith", false]], "endswith() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.endswith", false]], "endswith() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.endswith", false]], "endswith() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.endswith", false]], "endswith() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.endswith", false]], "endswith() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.endswith", false]], "endswith() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.endswith", false]], "entropic_risk_measure() (in module skfolio.measures)": [[76, "skfolio.measures.entropic_risk_measure", false]], "equalweighted (class in skfolio.optimization)": [[123, "skfolio.optimization.EqualWeighted", false]], "equilibriummu (class in skfolio.moments)": [[110, "skfolio.moments.EquilibriumMu", false]], "error_norm() (skfolio.moments.graphicallassocv method)": [[112, "skfolio.moments.GraphicalLassoCV.error_norm", false]], "error_norm() (skfolio.moments.ledoitwolf method)": [[114, "skfolio.moments.LedoitWolf.error_norm", false]], "error_norm() (skfolio.moments.oas method)": [[115, "skfolio.moments.OAS.error_norm", false]], "error_norm() (skfolio.moments.shrunkcovariance method)": [[116, "skfolio.moments.ShrunkCovariance.error_norm", false]], "evar() (in module skfolio.measures)": [[77, "skfolio.measures.evar", false]], "ewcovariance (class in skfolio.moments)": [[106, "skfolio.moments.EWCovariance", false]], "ewmu (class in skfolio.moments)": [[107, "skfolio.moments.EWMu", false]], "expandtabs() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.expandtabs", false]], "expandtabs() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.expandtabs", false]], "expandtabs() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.expandtabs", false]], "expandtabs() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.expandtabs", false]], "expected_returns_from_assets() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.expected_returns_from_assets", false]], "extend() (skfolio.population.population method)": [[134, "skfolio.population.Population.extend", false]], "extrariskmeasure (class in skfolio.measures)": [[66, "skfolio.measures.ExtraRiskMeasure", false]], "factormodel (class in skfolio.prior)": [[146, "skfolio.prior.FactorModel", false]], "filter() (skfolio.population.population method)": [[134, "skfolio.population.Population.filter", false]], "find() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.find", false]], "find() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.find", false]], "find() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.find", false]], "find() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.find", false]], "find() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.find", false]], "find() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.find", false]], "find() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.find", false]], "find() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.find", false]], "first_lower_partial_moment() (in module skfolio.measures)": [[78, "skfolio.measures.first_lower_partial_moment", false]], "fit() (skfolio.cluster.hierarchicalclustering method)": [[51, "skfolio.cluster.HierarchicalClustering.fit", false]], "fit() (skfolio.distance.basedistance method)": [[58, "skfolio.distance.BaseDistance.fit", false]], "fit() (skfolio.distance.covariancedistance method)": [[59, "skfolio.distance.CovarianceDistance.fit", false]], "fit() (skfolio.distance.distancecorrelation method)": [[60, "skfolio.distance.DistanceCorrelation.fit", false]], "fit() (skfolio.distance.kendalldistance method)": [[61, "skfolio.distance.KendallDistance.fit", false]], "fit() (skfolio.distance.mutualinformation method)": [[62, "skfolio.distance.MutualInformation.fit", false]], "fit() (skfolio.distance.pearsondistance method)": [[63, "skfolio.distance.PearsonDistance.fit", false]], "fit() (skfolio.distance.spearmandistance method)": [[64, "skfolio.distance.SpearmanDistance.fit", false]], "fit() (skfolio.moments.denoisecovariance method)": [[104, "skfolio.moments.DenoiseCovariance.fit", false]], "fit() (skfolio.moments.detonecovariance method)": [[105, "skfolio.moments.DetoneCovariance.fit", false]], "fit() (skfolio.moments.empiricalcovariance method)": [[108, "skfolio.moments.EmpiricalCovariance.fit", false]], "fit() (skfolio.moments.empiricalmu method)": [[109, "skfolio.moments.EmpiricalMu.fit", false]], "fit() (skfolio.moments.equilibriummu method)": [[110, "skfolio.moments.EquilibriumMu.fit", false]], "fit() (skfolio.moments.ewcovariance method)": [[106, "skfolio.moments.EWCovariance.fit", false]], "fit() (skfolio.moments.ewmu method)": [[107, "skfolio.moments.EWMu.fit", false]], "fit() (skfolio.moments.gerbercovariance method)": [[111, "skfolio.moments.GerberCovariance.fit", false]], "fit() (skfolio.moments.graphicallassocv method)": [[112, "skfolio.moments.GraphicalLassoCV.fit", false]], "fit() (skfolio.moments.impliedcovariance method)": [[113, "skfolio.moments.ImpliedCovariance.fit", false]], "fit() (skfolio.moments.ledoitwolf method)": [[114, "skfolio.moments.LedoitWolf.fit", false]], "fit() (skfolio.moments.oas method)": [[115, "skfolio.moments.OAS.fit", false]], "fit() (skfolio.moments.shrunkcovariance method)": [[116, "skfolio.moments.ShrunkCovariance.fit", false]], "fit() (skfolio.moments.shrunkmu method)": [[117, "skfolio.moments.ShrunkMu.fit", false]], "fit() (skfolio.optimization.distributionallyrobustcvar method)": [[122, "skfolio.optimization.DistributionallyRobustCVaR.fit", false]], "fit() (skfolio.optimization.equalweighted method)": [[123, "skfolio.optimization.EqualWeighted.fit", false]], "fit() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[124, "skfolio.optimization.HierarchicalEqualRiskContribution.fit", false]], "fit() (skfolio.optimization.hierarchicalriskparity method)": [[125, "skfolio.optimization.HierarchicalRiskParity.fit", false]], "fit() (skfolio.optimization.inversevolatility method)": [[126, "skfolio.optimization.InverseVolatility.fit", false]], "fit() (skfolio.optimization.maximumdiversification method)": [[127, "skfolio.optimization.MaximumDiversification.fit", false]], "fit() (skfolio.optimization.meanrisk method)": [[128, "skfolio.optimization.MeanRisk.fit", false]], "fit() (skfolio.optimization.nestedclustersoptimization method)": [[129, "skfolio.optimization.NestedClustersOptimization.fit", false]], "fit() (skfolio.optimization.random method)": [[131, "skfolio.optimization.Random.fit", false]], "fit() (skfolio.optimization.riskbudgeting method)": [[132, "skfolio.optimization.RiskBudgeting.fit", false]], "fit() (skfolio.optimization.stackingoptimization method)": [[133, "skfolio.optimization.StackingOptimization.fit", false]], "fit() (skfolio.pre_selection.dropcorrelated method)": [[138, "skfolio.pre_selection.DropCorrelated.fit", false]], "fit() (skfolio.pre_selection.selectkextremes method)": [[139, "skfolio.pre_selection.SelectKExtremes.fit", false]], "fit() (skfolio.pre_selection.selectnondominated method)": [[140, "skfolio.pre_selection.SelectNonDominated.fit", false]], "fit() (skfolio.prior.blacklitterman method)": [[144, "skfolio.prior.BlackLitterman.fit", false]], "fit() (skfolio.prior.empiricalprior method)": [[145, "skfolio.prior.EmpiricalPrior.fit", false]], "fit() (skfolio.prior.factormodel method)": [[146, "skfolio.prior.FactorModel.fit", false]], "fit() (skfolio.prior.loadingmatrixregression method)": [[147, "skfolio.prior.LoadingMatrixRegression.fit", false]], "fit() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[151, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[152, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[153, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[154, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.fit", false]], "fit_predict() (skfolio.cluster.hierarchicalclustering method)": [[51, "skfolio.cluster.HierarchicalClustering.fit_predict", false]], "fit_predict() (skfolio.optimization.basehierarchicaloptimization method)": [[120, "skfolio.optimization.BaseHierarchicalOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.convexoptimization method)": [[121, "skfolio.optimization.ConvexOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.distributionallyrobustcvar method)": [[122, "skfolio.optimization.DistributionallyRobustCVaR.fit_predict", false]], "fit_predict() (skfolio.optimization.equalweighted method)": [[123, "skfolio.optimization.EqualWeighted.fit_predict", false]], "fit_predict() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[124, "skfolio.optimization.HierarchicalEqualRiskContribution.fit_predict", false]], "fit_predict() (skfolio.optimization.hierarchicalriskparity method)": [[125, "skfolio.optimization.HierarchicalRiskParity.fit_predict", false]], "fit_predict() (skfolio.optimization.inversevolatility method)": [[126, "skfolio.optimization.InverseVolatility.fit_predict", false]], "fit_predict() (skfolio.optimization.maximumdiversification method)": [[127, "skfolio.optimization.MaximumDiversification.fit_predict", false]], "fit_predict() (skfolio.optimization.meanrisk method)": [[128, "skfolio.optimization.MeanRisk.fit_predict", false]], "fit_predict() (skfolio.optimization.nestedclustersoptimization method)": [[129, "skfolio.optimization.NestedClustersOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.random method)": [[131, "skfolio.optimization.Random.fit_predict", false]], "fit_predict() (skfolio.optimization.riskbudgeting method)": [[132, "skfolio.optimization.RiskBudgeting.fit_predict", false]], "fit_predict() (skfolio.optimization.stackingoptimization method)": [[133, "skfolio.optimization.StackingOptimization.fit_predict", false]], "fit_transform() (skfolio.pre_selection.dropcorrelated method)": [[138, "skfolio.pre_selection.DropCorrelated.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectkextremes method)": [[139, "skfolio.pre_selection.SelectKExtremes.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectnondominated method)": [[140, "skfolio.pre_selection.SelectNonDominated.fit_transform", false]], "fitness (skfolio.portfolio.baseportfolio attribute)": [[135, "skfolio.portfolio.BasePortfolio.fitness", false]], "fitness (skfolio.portfolio.multiperiodportfolio attribute)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.fitness", false]], "fitness (skfolio.portfolio.portfolio attribute)": [[137, "skfolio.portfolio.Portfolio.fitness", false]], "fitness_measures (skfolio.portfolio.baseportfolio property)": [[135, "skfolio.portfolio.BasePortfolio.fitness_measures", false]], "fitness_measures (skfolio.portfolio.multiperiodportfolio property)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.fitness_measures", false]], "fitness_measures (skfolio.portfolio.portfolio property)": [[137, "skfolio.portfolio.Portfolio.fitness_measures", false]], "format() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.format", false]], "format() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.format", false]], "format() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.format", false]], "format() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.format", false]], "format() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.format", false]], "format() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.format", false]], "format() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.format", false]], "format() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.format", false]], "format_map() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.format_map", false]], "format_map() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.format_map", false]], "format_map() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.format_map", false]], "format_map() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.format_map", false]], "format_map() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.format_map", false]], "format_map() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.format_map", false]], "format_map() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.format_map", false]], "format_map() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.format_map", false]], "fourth_central_moment() (in module skfolio.measures)": [[79, "skfolio.measures.fourth_central_moment", false]], "fourth_lower_partial_moment() (in module skfolio.measures)": [[80, "skfolio.measures.fourth_lower_partial_moment", false]], "gerbercovariance (class in skfolio.moments)": [[111, "skfolio.moments.GerberCovariance", false]], "get_cumulative_returns() (in module skfolio.measures)": [[81, "skfolio.measures.get_cumulative_returns", false]], "get_drawdowns() (in module skfolio.measures)": [[82, "skfolio.measures.get_drawdowns", false]], "get_feature_names_out() (skfolio.pre_selection.dropcorrelated method)": [[138, "skfolio.pre_selection.DropCorrelated.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectkextremes method)": [[139, "skfolio.pre_selection.SelectKExtremes.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectnondominated method)": [[140, "skfolio.pre_selection.SelectNonDominated.get_feature_names_out", false]], "get_measure() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.get_measure", false]], "get_measure() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.get_measure", false]], "get_measure() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.get_measure", false]], "get_metadata_routing() (skfolio.cluster.hierarchicalclustering method)": [[51, "skfolio.cluster.HierarchicalClustering.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.basedistance method)": [[58, "skfolio.distance.BaseDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.covariancedistance method)": [[59, "skfolio.distance.CovarianceDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.distancecorrelation method)": [[60, "skfolio.distance.DistanceCorrelation.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.kendalldistance method)": [[61, "skfolio.distance.KendallDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.mutualinformation method)": [[62, "skfolio.distance.MutualInformation.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.pearsondistance method)": [[63, "skfolio.distance.PearsonDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.spearmandistance method)": [[64, "skfolio.distance.SpearmanDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.model_selection.walkforward method)": [[99, "skfolio.model_selection.WalkForward.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.basecovariance method)": [[102, "skfolio.moments.BaseCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.basemu method)": [[103, "skfolio.moments.BaseMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.denoisecovariance method)": [[104, "skfolio.moments.DenoiseCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.detonecovariance method)": [[105, "skfolio.moments.DetoneCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.empiricalcovariance method)": [[108, "skfolio.moments.EmpiricalCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.empiricalmu method)": [[109, "skfolio.moments.EmpiricalMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.equilibriummu method)": [[110, "skfolio.moments.EquilibriumMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ewcovariance method)": [[106, "skfolio.moments.EWCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ewmu method)": [[107, "skfolio.moments.EWMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.gerbercovariance method)": [[111, "skfolio.moments.GerberCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.graphicallassocv method)": [[112, "skfolio.moments.GraphicalLassoCV.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.impliedcovariance method)": [[113, "skfolio.moments.ImpliedCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ledoitwolf method)": [[114, "skfolio.moments.LedoitWolf.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.oas method)": [[115, "skfolio.moments.OAS.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.shrunkcovariance method)": [[116, "skfolio.moments.ShrunkCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.shrunkmu method)": [[117, "skfolio.moments.ShrunkMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.basecomposition method)": [[119, "skfolio.optimization.BaseComposition.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.basehierarchicaloptimization method)": [[120, "skfolio.optimization.BaseHierarchicalOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.convexoptimization method)": [[121, "skfolio.optimization.ConvexOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.distributionallyrobustcvar method)": [[122, "skfolio.optimization.DistributionallyRobustCVaR.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.equalweighted method)": [[123, "skfolio.optimization.EqualWeighted.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[124, "skfolio.optimization.HierarchicalEqualRiskContribution.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.hierarchicalriskparity method)": [[125, "skfolio.optimization.HierarchicalRiskParity.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.inversevolatility method)": [[126, "skfolio.optimization.InverseVolatility.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.maximumdiversification method)": [[127, "skfolio.optimization.MaximumDiversification.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.meanrisk method)": [[128, "skfolio.optimization.MeanRisk.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.nestedclustersoptimization method)": [[129, "skfolio.optimization.NestedClustersOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.random method)": [[131, "skfolio.optimization.Random.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.riskbudgeting method)": [[132, "skfolio.optimization.RiskBudgeting.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.stackingoptimization method)": [[133, "skfolio.optimization.StackingOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.dropcorrelated method)": [[138, "skfolio.pre_selection.DropCorrelated.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectkextremes method)": [[139, "skfolio.pre_selection.SelectKExtremes.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectnondominated method)": [[140, "skfolio.pre_selection.SelectNonDominated.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.baseloadingmatrix method)": [[142, "skfolio.prior.BaseLoadingMatrix.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.baseprior method)": [[143, "skfolio.prior.BasePrior.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.blacklitterman method)": [[144, "skfolio.prior.BlackLitterman.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.empiricalprior method)": [[145, "skfolio.prior.EmpiricalPrior.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.factormodel method)": [[146, "skfolio.prior.FactorModel.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.loadingmatrixregression method)": [[147, "skfolio.prior.LoadingMatrixRegression.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[149, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[150, "skfolio.uncertainty_set.BaseMuUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[151, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[152, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[153, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[154, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.get_metadata_routing", false]], "get_n_splits() (skfolio.model_selection.walkforward method)": [[99, "skfolio.model_selection.WalkForward.get_n_splits", false]], "get_params() (skfolio.cluster.hierarchicalclustering method)": [[51, "skfolio.cluster.HierarchicalClustering.get_params", false]], "get_params() (skfolio.distance.basedistance method)": [[58, "skfolio.distance.BaseDistance.get_params", false]], "get_params() (skfolio.distance.covariancedistance method)": [[59, "skfolio.distance.CovarianceDistance.get_params", false]], "get_params() (skfolio.distance.distancecorrelation method)": [[60, "skfolio.distance.DistanceCorrelation.get_params", false]], "get_params() (skfolio.distance.kendalldistance method)": [[61, "skfolio.distance.KendallDistance.get_params", false]], "get_params() (skfolio.distance.mutualinformation method)": [[62, "skfolio.distance.MutualInformation.get_params", false]], "get_params() (skfolio.distance.pearsondistance method)": [[63, "skfolio.distance.PearsonDistance.get_params", false]], "get_params() (skfolio.distance.spearmandistance method)": [[64, "skfolio.distance.SpearmanDistance.get_params", false]], "get_params() (skfolio.moments.basecovariance method)": [[102, "skfolio.moments.BaseCovariance.get_params", false]], "get_params() (skfolio.moments.basemu method)": [[103, "skfolio.moments.BaseMu.get_params", false]], "get_params() (skfolio.moments.denoisecovariance method)": [[104, "skfolio.moments.DenoiseCovariance.get_params", false]], "get_params() (skfolio.moments.detonecovariance method)": [[105, "skfolio.moments.DetoneCovariance.get_params", false]], "get_params() (skfolio.moments.empiricalcovariance method)": [[108, "skfolio.moments.EmpiricalCovariance.get_params", false]], "get_params() (skfolio.moments.empiricalmu method)": [[109, "skfolio.moments.EmpiricalMu.get_params", false]], "get_params() (skfolio.moments.equilibriummu method)": [[110, "skfolio.moments.EquilibriumMu.get_params", false]], "get_params() (skfolio.moments.ewcovariance method)": [[106, "skfolio.moments.EWCovariance.get_params", false]], "get_params() (skfolio.moments.ewmu method)": [[107, "skfolio.moments.EWMu.get_params", false]], "get_params() (skfolio.moments.gerbercovariance method)": [[111, "skfolio.moments.GerberCovariance.get_params", false]], "get_params() (skfolio.moments.graphicallassocv method)": [[112, "skfolio.moments.GraphicalLassoCV.get_params", false]], "get_params() (skfolio.moments.impliedcovariance method)": [[113, "skfolio.moments.ImpliedCovariance.get_params", false]], "get_params() (skfolio.moments.ledoitwolf method)": [[114, "skfolio.moments.LedoitWolf.get_params", false]], "get_params() (skfolio.moments.oas method)": [[115, "skfolio.moments.OAS.get_params", false]], "get_params() (skfolio.moments.shrunkcovariance method)": [[116, "skfolio.moments.ShrunkCovariance.get_params", false]], "get_params() (skfolio.moments.shrunkmu method)": [[117, "skfolio.moments.ShrunkMu.get_params", false]], "get_params() (skfolio.optimization.basecomposition method)": [[119, "skfolio.optimization.BaseComposition.get_params", false]], "get_params() (skfolio.optimization.basehierarchicaloptimization method)": [[120, "skfolio.optimization.BaseHierarchicalOptimization.get_params", false]], "get_params() (skfolio.optimization.convexoptimization method)": [[121, "skfolio.optimization.ConvexOptimization.get_params", false]], "get_params() (skfolio.optimization.distributionallyrobustcvar method)": [[122, "skfolio.optimization.DistributionallyRobustCVaR.get_params", false]], "get_params() (skfolio.optimization.equalweighted method)": [[123, "skfolio.optimization.EqualWeighted.get_params", false]], "get_params() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[124, "skfolio.optimization.HierarchicalEqualRiskContribution.get_params", false]], "get_params() (skfolio.optimization.hierarchicalriskparity method)": [[125, "skfolio.optimization.HierarchicalRiskParity.get_params", false]], "get_params() (skfolio.optimization.inversevolatility method)": [[126, "skfolio.optimization.InverseVolatility.get_params", false]], "get_params() (skfolio.optimization.maximumdiversification method)": [[127, "skfolio.optimization.MaximumDiversification.get_params", false]], "get_params() (skfolio.optimization.meanrisk method)": [[128, "skfolio.optimization.MeanRisk.get_params", false]], "get_params() (skfolio.optimization.nestedclustersoptimization method)": [[129, "skfolio.optimization.NestedClustersOptimization.get_params", false]], "get_params() (skfolio.optimization.random method)": [[131, "skfolio.optimization.Random.get_params", false]], "get_params() (skfolio.optimization.riskbudgeting method)": [[132, "skfolio.optimization.RiskBudgeting.get_params", false]], "get_params() (skfolio.optimization.stackingoptimization method)": [[133, "skfolio.optimization.StackingOptimization.get_params", false]], "get_params() (skfolio.pre_selection.dropcorrelated method)": [[138, "skfolio.pre_selection.DropCorrelated.get_params", false]], "get_params() (skfolio.pre_selection.selectkextremes method)": [[139, "skfolio.pre_selection.SelectKExtremes.get_params", false]], "get_params() (skfolio.pre_selection.selectnondominated method)": [[140, "skfolio.pre_selection.SelectNonDominated.get_params", false]], "get_params() (skfolio.prior.baseloadingmatrix method)": [[142, "skfolio.prior.BaseLoadingMatrix.get_params", false]], "get_params() (skfolio.prior.baseprior method)": [[143, "skfolio.prior.BasePrior.get_params", false]], "get_params() (skfolio.prior.blacklitterman method)": [[144, "skfolio.prior.BlackLitterman.get_params", false]], "get_params() (skfolio.prior.empiricalprior method)": [[145, "skfolio.prior.EmpiricalPrior.get_params", false]], "get_params() (skfolio.prior.factormodel method)": [[146, "skfolio.prior.FactorModel.get_params", false]], "get_params() (skfolio.prior.loadingmatrixregression method)": [[147, "skfolio.prior.LoadingMatrixRegression.get_params", false]], "get_params() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[149, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[150, "skfolio.uncertainty_set.BaseMuUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[151, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[152, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[153, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[154, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.get_params", false]], "get_path_ids() (skfolio.model_selection.basecombinatorialcv method)": [[97, "skfolio.model_selection.BaseCombinatorialCV.get_path_ids", false]], "get_path_ids() (skfolio.model_selection.combinatorialpurgedcv method)": [[98, "skfolio.model_selection.CombinatorialPurgedCV.get_path_ids", false]], "get_precision() (skfolio.moments.graphicallassocv method)": [[112, "skfolio.moments.GraphicalLassoCV.get_precision", false]], "get_precision() (skfolio.moments.ledoitwolf method)": [[114, "skfolio.moments.LedoitWolf.get_precision", false]], "get_precision() (skfolio.moments.oas method)": [[115, "skfolio.moments.OAS.get_precision", false]], "get_precision() (skfolio.moments.shrunkcovariance method)": [[116, "skfolio.moments.ShrunkCovariance.get_precision", false]], "get_support() (skfolio.pre_selection.dropcorrelated method)": [[138, "skfolio.pre_selection.DropCorrelated.get_support", false]], "get_support() (skfolio.pre_selection.selectkextremes method)": [[139, "skfolio.pre_selection.SelectKExtremes.get_support", false]], "get_support() (skfolio.pre_selection.selectnondominated method)": [[140, "skfolio.pre_selection.SelectNonDominated.get_support", false]], "get_weight() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.get_weight", false]], "gini_mean_difference() (in module skfolio.measures)": [[83, "skfolio.measures.gini_mean_difference", false]], "graphicallassocv (class in skfolio.moments)": [[112, "skfolio.moments.GraphicalLassoCV", false]], "has() (skfolio.cluster.linkagemethod class method)": [[52, "skfolio.cluster.LinkageMethod.has", false]], "has() (skfolio.measures.basemeasure class method)": [[65, "skfolio.measures.BaseMeasure.has", false]], "has() (skfolio.measures.extrariskmeasure class method)": [[66, "skfolio.measures.ExtraRiskMeasure.has", false]], "has() (skfolio.measures.perfmeasure class method)": [[67, "skfolio.measures.PerfMeasure.has", false]], "has() (skfolio.measures.ratiomeasure class method)": [[68, "skfolio.measures.RatioMeasure.has", false]], "has() (skfolio.measures.riskmeasure class method)": [[69, "skfolio.measures.RiskMeasure.has", false]], "has() (skfolio.moments.shrunkmumethods class method)": [[118, "skfolio.moments.ShrunkMuMethods.has", false]], "has() (skfolio.optimization.objectivefunction class method)": [[130, "skfolio.optimization.ObjectiveFunction.has", false]], "hierarchicalclustering (class in skfolio.cluster)": [[51, "skfolio.cluster.HierarchicalClustering", false]], "hierarchicalequalriskcontribution (class in skfolio.optimization)": [[124, "skfolio.optimization.HierarchicalEqualRiskContribution", false]], "hierarchicalriskparity (class in skfolio.optimization)": [[125, "skfolio.optimization.HierarchicalRiskParity", false]], "impliedcovariance (class in skfolio.moments)": [[113, "skfolio.moments.ImpliedCovariance", false]], "index() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.index", false]], "index() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.index", false]], "index() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.index", false]], "index() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.index", false]], "index() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.index", false]], "index() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.index", false]], "index() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.index", false]], "index() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.index", false]], "index() (skfolio.population.population method)": [[134, "skfolio.population.Population.index", false]], "insert() (skfolio.population.population method)": [[134, "skfolio.population.Population.insert", false]], "inverse_transform() (skfolio.pre_selection.dropcorrelated method)": [[138, "skfolio.pre_selection.DropCorrelated.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectkextremes method)": [[139, "skfolio.pre_selection.SelectKExtremes.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectnondominated method)": [[140, "skfolio.pre_selection.SelectNonDominated.inverse_transform", false]], "inversevolatility (class in skfolio.optimization)": [[126, "skfolio.optimization.InverseVolatility", false]], "is_cholesky_dec() (in module skfolio.utils.stats)": [[165, "skfolio.utils.stats.is_cholesky_dec", false]], "isalnum() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.isalnum", false]], "isalnum() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.isalnum", false]], "isalnum() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.isalnum", false]], "isalnum() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.isalnum", false]], "isalnum() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.isalnum", false]], "isalnum() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.isalnum", false]], "isalnum() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.isalnum", false]], "isalnum() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.isalnum", false]], "isalpha() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.isalpha", false]], "isalpha() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.isalpha", false]], "isalpha() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.isalpha", false]], "isalpha() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.isalpha", false]], "isalpha() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.isalpha", false]], "isalpha() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.isalpha", false]], "isalpha() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.isalpha", false]], "isalpha() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.isalpha", false]], "isascii() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.isascii", false]], "isascii() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.isascii", false]], "isascii() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.isascii", false]], "isascii() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.isascii", false]], "isascii() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.isascii", false]], "isascii() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.isascii", false]], "isascii() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.isascii", false]], "isascii() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.isascii", false]], "isdecimal() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.isdecimal", false]], "isdecimal() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.isdecimal", false]], "isdecimal() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.isdecimal", false]], "isdecimal() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.isdecimal", false]], "isdigit() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.isdigit", false]], "isdigit() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.isdigit", false]], "isdigit() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.isdigit", false]], "isdigit() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.isdigit", false]], "isdigit() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.isdigit", false]], "isdigit() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.isdigit", false]], "isdigit() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.isdigit", false]], "isdigit() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.isdigit", false]], "isidentifier() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.isidentifier", false]], "isidentifier() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.isidentifier", false]], "isidentifier() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.isidentifier", false]], "isidentifier() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.isidentifier", false]], "islower() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.islower", false]], "islower() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.islower", false]], "islower() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.islower", false]], "islower() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.islower", false]], "islower() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.islower", false]], "islower() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.islower", false]], "islower() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.islower", false]], "islower() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.islower", false]], "isnumeric() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.isnumeric", false]], "isnumeric() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.isnumeric", false]], "isnumeric() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.isnumeric", false]], "isnumeric() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.isnumeric", false]], "isprintable() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.isprintable", false]], "isprintable() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.isprintable", false]], "isprintable() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.isprintable", false]], "isprintable() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.isprintable", false]], "isprintable() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.isprintable", false]], "isprintable() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.isprintable", false]], "isprintable() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.isprintable", false]], "isprintable() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.isprintable", false]], "isspace() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.isspace", false]], "isspace() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.isspace", false]], "isspace() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.isspace", false]], "isspace() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.isspace", false]], "isspace() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.isspace", false]], "isspace() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.isspace", false]], "isspace() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.isspace", false]], "isspace() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.isspace", false]], "istitle() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.istitle", false]], "istitle() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.istitle", false]], "istitle() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.istitle", false]], "istitle() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.istitle", false]], "istitle() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.istitle", false]], "istitle() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.istitle", false]], "istitle() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.istitle", false]], "istitle() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.istitle", false]], "isupper() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.isupper", false]], "isupper() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.isupper", false]], "isupper() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.isupper", false]], "isupper() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.isupper", false]], "isupper() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.isupper", false]], "isupper() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.isupper", false]], "isupper() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.isupper", false]], "isupper() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.isupper", false]], "join() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.join", false]], "join() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.join", false]], "join() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.join", false]], "join() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.join", false]], "join() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.join", false]], "join() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.join", false]], "join() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.join", false]], "join() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.join", false]], "kendalldistance (class in skfolio.distance)": [[61, "skfolio.distance.KendallDistance", false]], "ledoitwolf (class in skfolio.moments)": [[114, "skfolio.moments.LedoitWolf", false]], "linkagemethod (class in skfolio.cluster)": [[52, "skfolio.cluster.LinkageMethod", false]], "ljust() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.ljust", false]], "ljust() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.ljust", false]], "ljust() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.ljust", false]], "ljust() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.ljust", false]], "ljust() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.ljust", false]], "ljust() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.ljust", false]], "ljust() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.ljust", false]], "ljust() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.ljust", false]], "load_factors_dataset() (in module skfolio.datasets)": [[53, "skfolio.datasets.load_factors_dataset", false]], "load_ftse100_dataset() (in module skfolio.datasets)": [[54, "skfolio.datasets.load_ftse100_dataset", false]], "load_nasdaq_dataset() (in module skfolio.datasets)": [[55, "skfolio.datasets.load_nasdaq_dataset", false]], "load_sp500_dataset() (in module skfolio.datasets)": [[56, "skfolio.datasets.load_sp500_dataset", false]], "load_sp500_index() (in module skfolio.datasets)": [[57, "skfolio.datasets.load_sp500_index", false]], "loadingmatrixregression (class in skfolio.prior)": [[147, "skfolio.prior.LoadingMatrixRegression", false]], "lower() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.lower", false]], "lower() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.lower", false]], "lower() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.lower", false]], "lower() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.lower", false]], "lower() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.lower", false]], "lower() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.lower", false]], "lower() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.lower", false]], "lower() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.lower", false]], "lstrip() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.lstrip", false]], "lstrip() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.lstrip", false]], "lstrip() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.lstrip", false]], "lstrip() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.lstrip", false]], "lstrip() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.lstrip", false]], "lstrip() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.lstrip", false]], "lstrip() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.lstrip", false]], "lstrip() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.lstrip", false]], "mahalanobis() (skfolio.moments.graphicallassocv method)": [[112, "skfolio.moments.GraphicalLassoCV.mahalanobis", false]], "mahalanobis() (skfolio.moments.ledoitwolf method)": [[114, "skfolio.moments.LedoitWolf.mahalanobis", false]], "mahalanobis() (skfolio.moments.oas method)": [[115, "skfolio.moments.OAS.mahalanobis", false]], "mahalanobis() (skfolio.moments.shrunkcovariance method)": [[116, "skfolio.moments.ShrunkCovariance.mahalanobis", false]], "make_scorer() (in module skfolio.metrics)": [[96, "skfolio.metrics.make_scorer", false]], "maketrans() (skfolio.cluster.linkagemethod static method)": [[52, "skfolio.cluster.LinkageMethod.maketrans", false]], "maketrans() (skfolio.measures.basemeasure static method)": [[65, "skfolio.measures.BaseMeasure.maketrans", false]], "maketrans() (skfolio.measures.extrariskmeasure static method)": [[66, "skfolio.measures.ExtraRiskMeasure.maketrans", false]], "maketrans() (skfolio.measures.perfmeasure static method)": [[67, "skfolio.measures.PerfMeasure.maketrans", false]], "maketrans() (skfolio.measures.ratiomeasure static method)": [[68, "skfolio.measures.RatioMeasure.maketrans", false]], "maketrans() (skfolio.measures.riskmeasure static method)": [[69, "skfolio.measures.RiskMeasure.maketrans", false]], "maketrans() (skfolio.moments.shrunkmumethods static method)": [[118, "skfolio.moments.ShrunkMuMethods.maketrans", false]], "maketrans() (skfolio.optimization.objectivefunction static method)": [[130, "skfolio.optimization.ObjectiveFunction.maketrans", false]], "max_drawdown() (in module skfolio.measures)": [[84, "skfolio.measures.max_drawdown", false]], "max_measure() (skfolio.population.population method)": [[134, "skfolio.population.Population.max_measure", false]], "maximumdiversification (class in skfolio.optimization)": [[127, "skfolio.optimization.MaximumDiversification", false]], "mean() (in module skfolio.measures)": [[85, "skfolio.measures.mean", false]], "mean_absolute_deviation() (in module skfolio.measures)": [[86, "skfolio.measures.mean_absolute_deviation", false]], "meanrisk (class in skfolio.optimization)": [[128, "skfolio.optimization.MeanRisk", false]], "measures() (skfolio.population.population method)": [[134, "skfolio.population.Population.measures", false]], "measures_df (skfolio.portfolio.baseportfolio property)": [[135, "skfolio.portfolio.BasePortfolio.measures_df", false]], "measures_df (skfolio.portfolio.multiperiodportfolio property)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.measures_df", false]], "measures_df (skfolio.portfolio.portfolio property)": [[137, "skfolio.portfolio.Portfolio.measures_df", false]], "measures_mean() (skfolio.population.population method)": [[134, "skfolio.population.Population.measures_mean", false]], "measures_std() (skfolio.population.population method)": [[134, "skfolio.population.Population.measures_std", false]], "min_measure() (skfolio.population.population method)": [[134, "skfolio.population.Population.min_measure", false]], "module": [[0, "module-0", false], [0, "module-1", false], [0, "module-2", false], [0, "module-3", false], [0, "module-4", false], [0, "module-5", false], [0, "module-6", false], [0, "module-7", false], [0, "module-skfolio", false], [0, "module-skfolio.measures", false], [0, "module-skfolio.optimization.cluster", false], [0, "module-skfolio.optimization.convex", false], [0, "module-skfolio.optimization.ensemble", false], [0, "module-skfolio.optimization.naive", false], [0, "module-skfolio.population", false], [0, "module-skfolio.portfolio", false]], "multiperiodportfolio (class in skfolio.portfolio)": [[136, "skfolio.portfolio.MultiPeriodPortfolio", false]], "mutualinformation (class in skfolio.distance)": [[62, "skfolio.distance.MutualInformation", false]], "n_bins_freedman() (in module skfolio.utils.stats)": [[166, "skfolio.utils.stats.n_bins_freedman", false]], "n_bins_knuth() (in module skfolio.utils.stats)": [[167, "skfolio.utils.stats.n_bins_knuth", false]], "n_observations (skfolio.portfolio.baseportfolio property)": [[135, "skfolio.portfolio.BasePortfolio.n_observations", false]], "n_observations (skfolio.portfolio.multiperiodportfolio property)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.n_observations", false]], "n_observations (skfolio.portfolio.portfolio property)": [[137, "skfolio.portfolio.Portfolio.n_observations", false]], "n_splits (skfolio.model_selection.combinatorialpurgedcv property)": [[98, "skfolio.model_selection.CombinatorialPurgedCV.n_splits", false]], "n_test_paths (skfolio.model_selection.combinatorialpurgedcv property)": [[98, "skfolio.model_selection.CombinatorialPurgedCV.n_test_paths", false]], "named_estimators (skfolio.optimization.stackingoptimization property)": [[133, "skfolio.optimization.StackingOptimization.named_estimators", false]], "nbinsmethod() (in module skfolio.utils.stats)": [[156, "skfolio.utils.stats.NBinsMethod", false]], "nestedclustersoptimization (class in skfolio.optimization)": [[129, "skfolio.optimization.NestedClustersOptimization", false]], "non_denominated_sort() (skfolio.population.population method)": [[134, "skfolio.population.Population.non_denominated_sort", false]], "nonzero_assets (skfolio.portfolio.portfolio attribute)": [[137, "skfolio.portfolio.Portfolio.nonzero_assets", false]], "nonzero_assets_index (skfolio.portfolio.portfolio attribute)": [[137, "skfolio.portfolio.Portfolio.nonzero_assets_index", false]], "oas (class in skfolio.moments)": [[115, "skfolio.moments.OAS", false]], "objectivefunction (class in skfolio.optimization)": [[130, "skfolio.optimization.ObjectiveFunction", false]], "optimal_folds_number() (in module skfolio.model_selection)": [[101, "skfolio.model_selection.optimal_folds_number", false]], "owa_gmd_weights() (in module skfolio.measures)": [[87, "skfolio.measures.owa_gmd_weights", false]], "partition() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.partition", false]], "partition() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.partition", false]], "partition() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.partition", false]], "partition() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.partition", false]], "partition() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.partition", false]], "partition() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.partition", false]], "partition() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.partition", false]], "partition() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.partition", false]], "pearsondistance (class in skfolio.distance)": [[63, "skfolio.distance.PearsonDistance", false]], "perfmeasure (class in skfolio.measures)": [[67, "skfolio.measures.PerfMeasure", false]], "plot_composition() (skfolio.population.population method)": [[134, "skfolio.population.Population.plot_composition", false]], "plot_composition() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.plot_composition", false]], "plot_composition() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.plot_composition", false]], "plot_composition() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.plot_composition", false]], "plot_contribution() (skfolio.population.population method)": [[134, "skfolio.population.Population.plot_contribution", false]], "plot_contribution() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.plot_contribution", false]], "plot_contribution() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.plot_contribution", false]], "plot_contribution() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.plot_contribution", false]], "plot_cumulative_returns() (skfolio.population.population method)": [[134, "skfolio.population.Population.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.plot_cumulative_returns", false]], "plot_dendrogram() (skfolio.cluster.hierarchicalclustering method)": [[51, "skfolio.cluster.HierarchicalClustering.plot_dendrogram", false]], "plot_distribution() (skfolio.population.population method)": [[134, "skfolio.population.Population.plot_distribution", false]], "plot_measures() (skfolio.population.population method)": [[134, "skfolio.population.Population.plot_measures", false]], "plot_returns() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.plot_returns", false]], "plot_returns() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.plot_returns", false]], "plot_returns() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.plot_returns", false]], "plot_rolling_measure() (skfolio.population.population method)": [[134, "skfolio.population.Population.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.plot_rolling_measure", false]], "plot_train_test_folds() (skfolio.model_selection.combinatorialpurgedcv method)": [[98, "skfolio.model_selection.CombinatorialPurgedCV.plot_train_test_folds", false]], "plot_train_test_index() (skfolio.model_selection.combinatorialpurgedcv method)": [[98, "skfolio.model_selection.CombinatorialPurgedCV.plot_train_test_index", false]], "pop() (skfolio.population.population method)": [[134, "skfolio.population.Population.pop", false]], "population (class in skfolio.population)": [[134, "skfolio.population.Population", false]], "portfolio (class in skfolio.portfolio)": [[137, "skfolio.portfolio.Portfolio", false]], "portfolios (skfolio.portfolio.multiperiodportfolio property)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.portfolios", false]], "predict() (skfolio.optimization.basehierarchicaloptimization method)": [[120, "skfolio.optimization.BaseHierarchicalOptimization.predict", false]], "predict() (skfolio.optimization.convexoptimization method)": [[121, "skfolio.optimization.ConvexOptimization.predict", false]], "predict() (skfolio.optimization.distributionallyrobustcvar method)": [[122, "skfolio.optimization.DistributionallyRobustCVaR.predict", false]], "predict() (skfolio.optimization.equalweighted method)": [[123, "skfolio.optimization.EqualWeighted.predict", false]], "predict() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[124, "skfolio.optimization.HierarchicalEqualRiskContribution.predict", false]], "predict() (skfolio.optimization.hierarchicalriskparity method)": [[125, "skfolio.optimization.HierarchicalRiskParity.predict", false]], "predict() (skfolio.optimization.inversevolatility method)": [[126, "skfolio.optimization.InverseVolatility.predict", false]], "predict() (skfolio.optimization.maximumdiversification method)": [[127, "skfolio.optimization.MaximumDiversification.predict", false]], "predict() (skfolio.optimization.meanrisk method)": [[128, "skfolio.optimization.MeanRisk.predict", false]], "predict() (skfolio.optimization.nestedclustersoptimization method)": [[129, "skfolio.optimization.NestedClustersOptimization.predict", false]], "predict() (skfolio.optimization.random method)": [[131, "skfolio.optimization.Random.predict", false]], "predict() (skfolio.optimization.riskbudgeting method)": [[132, "skfolio.optimization.RiskBudgeting.predict", false]], "predict() (skfolio.optimization.stackingoptimization method)": [[133, "skfolio.optimization.StackingOptimization.predict", false]], "prices_to_returns() (in module skfolio.preprocessing)": [[141, "skfolio.preprocessing.prices_to_returns", false]], "priormodel (class in skfolio.prior)": [[148, "skfolio.prior.PriorModel", false]], "quantile() (skfolio.population.population method)": [[134, "skfolio.population.Population.quantile", false]], "rand_weights() (in module skfolio.utils.stats)": [[168, "skfolio.utils.stats.rand_weights", false]], "rand_weights_dirichlet() (in module skfolio.utils.stats)": [[169, "skfolio.utils.stats.rand_weights_dirichlet", false]], "random (class in skfolio.optimization)": [[131, "skfolio.optimization.Random", false]], "ratiomeasure (class in skfolio.measures)": [[68, "skfolio.measures.RatioMeasure", false]], "recombined_paths (skfolio.model_selection.combinatorialpurgedcv property)": [[98, "skfolio.model_selection.CombinatorialPurgedCV.recombined_paths", false]], "remove() (skfolio.population.population method)": [[134, "skfolio.population.Population.remove", false]], "removeprefix() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.removeprefix", false]], "removeprefix() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.removeprefix", false]], "removeprefix() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.removeprefix", false]], "removeprefix() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.removeprefix", false]], "removesuffix() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.removesuffix", false]], "removesuffix() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.removesuffix", false]], "removesuffix() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.removesuffix", false]], "removesuffix() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.removesuffix", false]], "replace() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.replace", false]], "replace() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.replace", false]], "replace() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.replace", false]], "replace() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.replace", false]], "replace() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.replace", false]], "replace() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.replace", false]], "replace() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.replace", false]], "replace() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.replace", false]], "returns_df (skfolio.portfolio.baseportfolio property)": [[135, "skfolio.portfolio.BasePortfolio.returns_df", false]], "returns_df (skfolio.portfolio.multiperiodportfolio property)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.returns_df", false]], "returns_df (skfolio.portfolio.portfolio property)": [[137, "skfolio.portfolio.Portfolio.returns_df", false]], "reverse() (skfolio.population.population method)": [[134, "skfolio.population.Population.reverse", false]], "rfind() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.rfind", false]], "rfind() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.rfind", false]], "rfind() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.rfind", false]], "rfind() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.rfind", false]], "rfind() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.rfind", false]], "rfind() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.rfind", false]], "rfind() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.rfind", false]], "rfind() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.rfind", false]], "rindex() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.rindex", false]], "rindex() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.rindex", false]], "rindex() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.rindex", false]], "rindex() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.rindex", false]], "rindex() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.rindex", false]], "rindex() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.rindex", false]], "rindex() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.rindex", false]], "rindex() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.rindex", false]], "riskbudgeting (class in skfolio.optimization)": [[132, "skfolio.optimization.RiskBudgeting", false]], "riskmeasure (class in skfolio.measures)": [[69, "skfolio.measures.RiskMeasure", false]], "rjust() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.rjust", false]], "rjust() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.rjust", false]], "rjust() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.rjust", false]], "rjust() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.rjust", false]], "rjust() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.rjust", false]], "rjust() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.rjust", false]], "rjust() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.rjust", false]], "rjust() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.rjust", false]], "rolling_measure() (skfolio.population.population method)": [[134, "skfolio.population.Population.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.rolling_measure", false]], "rpartition() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.rpartition", false]], "rpartition() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.rpartition", false]], "rpartition() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.rpartition", false]], "rpartition() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.rpartition", false]], "rpartition() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.rpartition", false]], "rpartition() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.rpartition", false]], "rpartition() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.rpartition", false]], "rpartition() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.rpartition", false]], "rsplit() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.rsplit", false]], "rsplit() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.rsplit", false]], "rsplit() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.rsplit", false]], "rsplit() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.rsplit", false]], "rsplit() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.rsplit", false]], "rsplit() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.rsplit", false]], "rsplit() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.rsplit", false]], "rsplit() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.rsplit", false]], "rstrip() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.rstrip", false]], "rstrip() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.rstrip", false]], "rstrip() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.rstrip", false]], "rstrip() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.rstrip", false]], "rstrip() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.rstrip", false]], "rstrip() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.rstrip", false]], "rstrip() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.rstrip", false]], "rstrip() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.rstrip", false]], "score() (skfolio.moments.graphicallassocv method)": [[112, "skfolio.moments.GraphicalLassoCV.score", false]], "score() (skfolio.moments.ledoitwolf method)": [[114, "skfolio.moments.LedoitWolf.score", false]], "score() (skfolio.moments.oas method)": [[115, "skfolio.moments.OAS.score", false]], "score() (skfolio.moments.shrunkcovariance method)": [[116, "skfolio.moments.ShrunkCovariance.score", false]], "score() (skfolio.optimization.basehierarchicaloptimization method)": [[120, "skfolio.optimization.BaseHierarchicalOptimization.score", false]], "score() (skfolio.optimization.convexoptimization method)": [[121, "skfolio.optimization.ConvexOptimization.score", false]], "score() (skfolio.optimization.distributionallyrobustcvar method)": [[122, "skfolio.optimization.DistributionallyRobustCVaR.score", false]], "score() (skfolio.optimization.equalweighted method)": [[123, "skfolio.optimization.EqualWeighted.score", false]], "score() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[124, "skfolio.optimization.HierarchicalEqualRiskContribution.score", false]], "score() (skfolio.optimization.hierarchicalriskparity method)": [[125, "skfolio.optimization.HierarchicalRiskParity.score", false]], "score() (skfolio.optimization.inversevolatility method)": [[126, "skfolio.optimization.InverseVolatility.score", false]], "score() (skfolio.optimization.maximumdiversification method)": [[127, "skfolio.optimization.MaximumDiversification.score", false]], "score() (skfolio.optimization.meanrisk method)": [[128, "skfolio.optimization.MeanRisk.score", false]], "score() (skfolio.optimization.nestedclustersoptimization method)": [[129, "skfolio.optimization.NestedClustersOptimization.score", false]], "score() (skfolio.optimization.random method)": [[131, "skfolio.optimization.Random.score", false]], "score() (skfolio.optimization.riskbudgeting method)": [[132, "skfolio.optimization.RiskBudgeting.score", false]], "score() (skfolio.optimization.stackingoptimization method)": [[133, "skfolio.optimization.StackingOptimization.score", false]], "selectkextremes (class in skfolio.pre_selection)": [[139, "skfolio.pre_selection.SelectKExtremes", false]], "selectnondominated (class in skfolio.pre_selection)": [[140, "skfolio.pre_selection.SelectNonDominated", false]], "semi_deviation() (in module skfolio.measures)": [[88, "skfolio.measures.semi_deviation", false]], "semi_variance() (in module skfolio.measures)": [[89, "skfolio.measures.semi_variance", false]], "set_fit_request() (skfolio.moments.impliedcovariance method)": [[113, "skfolio.moments.ImpliedCovariance.set_fit_request", false]], "set_output() (skfolio.pre_selection.dropcorrelated method)": [[138, "skfolio.pre_selection.DropCorrelated.set_output", false]], "set_output() (skfolio.pre_selection.selectkextremes method)": [[139, "skfolio.pre_selection.SelectKExtremes.set_output", false]], "set_output() (skfolio.pre_selection.selectnondominated method)": [[140, "skfolio.pre_selection.SelectNonDominated.set_output", false]], "set_params() (skfolio.cluster.hierarchicalclustering method)": [[51, "skfolio.cluster.HierarchicalClustering.set_params", false]], "set_params() (skfolio.distance.basedistance method)": [[58, "skfolio.distance.BaseDistance.set_params", false]], "set_params() (skfolio.distance.covariancedistance method)": [[59, "skfolio.distance.CovarianceDistance.set_params", false]], "set_params() (skfolio.distance.distancecorrelation method)": [[60, "skfolio.distance.DistanceCorrelation.set_params", false]], "set_params() (skfolio.distance.kendalldistance method)": [[61, "skfolio.distance.KendallDistance.set_params", false]], "set_params() (skfolio.distance.mutualinformation method)": [[62, "skfolio.distance.MutualInformation.set_params", false]], "set_params() (skfolio.distance.pearsondistance method)": [[63, "skfolio.distance.PearsonDistance.set_params", false]], "set_params() (skfolio.distance.spearmandistance method)": [[64, "skfolio.distance.SpearmanDistance.set_params", false]], "set_params() (skfolio.moments.basecovariance method)": [[102, "skfolio.moments.BaseCovariance.set_params", false]], "set_params() (skfolio.moments.basemu method)": [[103, "skfolio.moments.BaseMu.set_params", false]], "set_params() (skfolio.moments.denoisecovariance method)": [[104, "skfolio.moments.DenoiseCovariance.set_params", false]], "set_params() (skfolio.moments.detonecovariance method)": [[105, "skfolio.moments.DetoneCovariance.set_params", false]], "set_params() (skfolio.moments.empiricalcovariance method)": [[108, "skfolio.moments.EmpiricalCovariance.set_params", false]], "set_params() (skfolio.moments.empiricalmu method)": [[109, "skfolio.moments.EmpiricalMu.set_params", false]], "set_params() (skfolio.moments.equilibriummu method)": [[110, "skfolio.moments.EquilibriumMu.set_params", false]], "set_params() (skfolio.moments.ewcovariance method)": [[106, "skfolio.moments.EWCovariance.set_params", false]], "set_params() (skfolio.moments.ewmu method)": [[107, "skfolio.moments.EWMu.set_params", false]], "set_params() (skfolio.moments.gerbercovariance method)": [[111, "skfolio.moments.GerberCovariance.set_params", false]], "set_params() (skfolio.moments.graphicallassocv method)": [[112, "skfolio.moments.GraphicalLassoCV.set_params", false]], "set_params() (skfolio.moments.impliedcovariance method)": [[113, "skfolio.moments.ImpliedCovariance.set_params", false]], "set_params() (skfolio.moments.ledoitwolf method)": [[114, "skfolio.moments.LedoitWolf.set_params", false]], "set_params() (skfolio.moments.oas method)": [[115, "skfolio.moments.OAS.set_params", false]], "set_params() (skfolio.moments.shrunkcovariance method)": [[116, "skfolio.moments.ShrunkCovariance.set_params", false]], "set_params() (skfolio.moments.shrunkmu method)": [[117, "skfolio.moments.ShrunkMu.set_params", false]], "set_params() (skfolio.optimization.basecomposition method)": [[119, "skfolio.optimization.BaseComposition.set_params", false]], "set_params() (skfolio.optimization.basehierarchicaloptimization method)": [[120, "skfolio.optimization.BaseHierarchicalOptimization.set_params", false]], "set_params() (skfolio.optimization.convexoptimization method)": [[121, "skfolio.optimization.ConvexOptimization.set_params", false]], "set_params() (skfolio.optimization.distributionallyrobustcvar method)": [[122, "skfolio.optimization.DistributionallyRobustCVaR.set_params", false]], "set_params() (skfolio.optimization.equalweighted method)": [[123, "skfolio.optimization.EqualWeighted.set_params", false]], "set_params() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[124, "skfolio.optimization.HierarchicalEqualRiskContribution.set_params", false]], "set_params() (skfolio.optimization.hierarchicalriskparity method)": [[125, "skfolio.optimization.HierarchicalRiskParity.set_params", false]], "set_params() (skfolio.optimization.inversevolatility method)": [[126, "skfolio.optimization.InverseVolatility.set_params", false]], "set_params() (skfolio.optimization.maximumdiversification method)": [[127, "skfolio.optimization.MaximumDiversification.set_params", false]], "set_params() (skfolio.optimization.meanrisk method)": [[128, "skfolio.optimization.MeanRisk.set_params", false]], "set_params() (skfolio.optimization.nestedclustersoptimization method)": [[129, "skfolio.optimization.NestedClustersOptimization.set_params", false]], "set_params() (skfolio.optimization.random method)": [[131, "skfolio.optimization.Random.set_params", false]], "set_params() (skfolio.optimization.riskbudgeting method)": [[132, "skfolio.optimization.RiskBudgeting.set_params", false]], "set_params() (skfolio.optimization.stackingoptimization method)": [[133, "skfolio.optimization.StackingOptimization.set_params", false]], "set_params() (skfolio.pre_selection.dropcorrelated method)": [[138, "skfolio.pre_selection.DropCorrelated.set_params", false]], "set_params() (skfolio.pre_selection.selectkextremes method)": [[139, "skfolio.pre_selection.SelectKExtremes.set_params", false]], "set_params() (skfolio.pre_selection.selectnondominated method)": [[140, "skfolio.pre_selection.SelectNonDominated.set_params", false]], "set_params() (skfolio.prior.baseloadingmatrix method)": [[142, "skfolio.prior.BaseLoadingMatrix.set_params", false]], "set_params() (skfolio.prior.baseprior method)": [[143, "skfolio.prior.BasePrior.set_params", false]], "set_params() (skfolio.prior.blacklitterman method)": [[144, "skfolio.prior.BlackLitterman.set_params", false]], "set_params() (skfolio.prior.empiricalprior method)": [[145, "skfolio.prior.EmpiricalPrior.set_params", false]], "set_params() (skfolio.prior.factormodel method)": [[146, "skfolio.prior.FactorModel.set_params", false]], "set_params() (skfolio.prior.loadingmatrixregression method)": [[147, "skfolio.prior.LoadingMatrixRegression.set_params", false]], "set_params() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[149, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[150, "skfolio.uncertainty_set.BaseMuUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[151, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[152, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[153, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[154, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.set_params", false]], "set_portfolio_params() (skfolio.population.population method)": [[134, "skfolio.population.Population.set_portfolio_params", false]], "set_score_request() (skfolio.moments.graphicallassocv method)": [[112, "skfolio.moments.GraphicalLassoCV.set_score_request", false]], "set_score_request() (skfolio.moments.ledoitwolf method)": [[114, "skfolio.moments.LedoitWolf.set_score_request", false]], "set_score_request() (skfolio.moments.oas method)": [[115, "skfolio.moments.OAS.set_score_request", false]], "set_score_request() (skfolio.moments.shrunkcovariance method)": [[116, "skfolio.moments.ShrunkCovariance.set_score_request", false]], "shrunkcovariance (class in skfolio.moments)": [[116, "skfolio.moments.ShrunkCovariance", false]], "shrunkmu (class in skfolio.moments)": [[117, "skfolio.moments.ShrunkMu", false]], "shrunkmumethods (class in skfolio.moments)": [[118, "skfolio.moments.ShrunkMuMethods", false]], "skfolio": [[0, "module-0", false], [0, "module-1", false], [0, "module-2", false], [0, "module-3", false], [0, "module-4", false], [0, "module-5", false], [0, "module-6", false], [0, "module-7", false], [0, "module-skfolio", false]], "skfolio.measures": [[0, "module-skfolio.measures", false]], "skfolio.optimization.cluster": [[0, "module-skfolio.optimization.cluster", false]], "skfolio.optimization.convex": [[0, "module-skfolio.optimization.convex", false]], "skfolio.optimization.ensemble": [[0, "module-skfolio.optimization.ensemble", false]], "skfolio.optimization.naive": [[0, "module-skfolio.optimization.naive", false]], "skfolio.population": [[0, "module-skfolio.population", false]], "skfolio.portfolio": [[0, "module-skfolio.portfolio", false]], "sort() (skfolio.population.population method)": [[134, "skfolio.population.Population.sort", false]], "sort_measure() (skfolio.population.population method)": [[134, "skfolio.population.Population.sort_measure", false]], "spearmandistance (class in skfolio.distance)": [[64, "skfolio.distance.SpearmanDistance", false]], "split() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.split", false]], "split() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.split", false]], "split() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.split", false]], "split() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.split", false]], "split() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.split", false]], "split() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.split", false]], "split() (skfolio.model_selection.combinatorialpurgedcv method)": [[98, "skfolio.model_selection.CombinatorialPurgedCV.split", false]], "split() (skfolio.model_selection.walkforward method)": [[99, "skfolio.model_selection.WalkForward.split", false]], "split() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.split", false]], "split() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.split", false]], "splitlines() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.splitlines", false]], "splitlines() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.splitlines", false]], "splitlines() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.splitlines", false]], "splitlines() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.splitlines", false]], "splitlines() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.splitlines", false]], "splitlines() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.splitlines", false]], "splitlines() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.splitlines", false]], "splitlines() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.splitlines", false]], "sric (skfolio.portfolio.portfolio property)": [[137, "skfolio.portfolio.Portfolio.sric", false]], "stackingoptimization (class in skfolio.optimization)": [[133, "skfolio.optimization.StackingOptimization", false]], "standard_deviation() (in module skfolio.measures)": [[90, "skfolio.measures.standard_deviation", false]], "startswith() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.startswith", false]], "startswith() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.startswith", false]], "startswith() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.startswith", false]], "startswith() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.startswith", false]], "startswith() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.startswith", false]], "startswith() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.startswith", false]], "startswith() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.startswith", false]], "startswith() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.startswith", false]], "strip() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.strip", false]], "strip() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.strip", false]], "strip() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.strip", false]], "strip() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.strip", false]], "strip() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.strip", false]], "strip() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.strip", false]], "strip() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.strip", false]], "strip() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.strip", false]], "summary() (skfolio.population.population method)": [[134, "skfolio.population.Population.summary", false]], "summary() (skfolio.portfolio.baseportfolio method)": [[135, "skfolio.portfolio.BasePortfolio.summary", false]], "summary() (skfolio.portfolio.multiperiodportfolio method)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.summary", false]], "summary() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.summary", false]], "swapcase() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.swapcase", false]], "swapcase() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.swapcase", false]], "swapcase() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.swapcase", false]], "swapcase() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.swapcase", false]], "swapcase() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.swapcase", false]], "swapcase() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.swapcase", false]], "swapcase() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.swapcase", false]], "swapcase() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.swapcase", false]], "test_set_index (skfolio.model_selection.combinatorialpurgedcv property)": [[98, "skfolio.model_selection.CombinatorialPurgedCV.test_set_index", false]], "third_central_moment() (in module skfolio.measures)": [[91, "skfolio.measures.third_central_moment", false]], "title() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.title", false]], "title() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.title", false]], "title() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.title", false]], "title() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.title", false]], "title() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.title", false]], "title() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.title", false]], "title() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.title", false]], "title() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.title", false]], "transform() (skfolio.pre_selection.dropcorrelated method)": [[138, "skfolio.pre_selection.DropCorrelated.transform", false]], "transform() (skfolio.pre_selection.selectkextremes method)": [[139, "skfolio.pre_selection.SelectKExtremes.transform", false]], "transform() (skfolio.pre_selection.selectnondominated method)": [[140, "skfolio.pre_selection.SelectNonDominated.transform", false]], "translate() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.translate", false]], "translate() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.translate", false]], "translate() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.translate", false]], "translate() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.translate", false]], "translate() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.translate", false]], "translate() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.translate", false]], "translate() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.translate", false]], "translate() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.translate", false]], "ulcer_index() (in module skfolio.measures)": [[92, "skfolio.measures.ulcer_index", false]], "uncertaintyset (class in skfolio.uncertainty_set)": [[155, "skfolio.uncertainty_set.UncertaintySet", false]], "upper() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.upper", false]], "upper() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.upper", false]], "upper() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.upper", false]], "upper() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.upper", false]], "upper() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.upper", false]], "upper() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.upper", false]], "upper() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.upper", false]], "upper() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.upper", false]], "value_at_risk() (in module skfolio.measures)": [[93, "skfolio.measures.value_at_risk", false]], "variance() (in module skfolio.measures)": [[94, "skfolio.measures.variance", false]], "variance_from_assets() (skfolio.portfolio.portfolio method)": [[137, "skfolio.portfolio.Portfolio.variance_from_assets", false]], "walkforward (class in skfolio.model_selection)": [[99, "skfolio.model_selection.WalkForward", false]], "weights_per_observation (skfolio.portfolio.multiperiodportfolio property)": [[136, "skfolio.portfolio.MultiPeriodPortfolio.weights_per_observation", false]], "weights_per_observation (skfolio.portfolio.portfolio property)": [[137, "skfolio.portfolio.Portfolio.weights_per_observation", false]], "worst_realization() (in module skfolio.measures)": [[95, "skfolio.measures.worst_realization", false]], "zfill() (skfolio.cluster.linkagemethod method)": [[52, "skfolio.cluster.LinkageMethod.zfill", false]], "zfill() (skfolio.measures.basemeasure method)": [[65, "skfolio.measures.BaseMeasure.zfill", false]], "zfill() (skfolio.measures.extrariskmeasure method)": [[66, "skfolio.measures.ExtraRiskMeasure.zfill", false]], "zfill() (skfolio.measures.perfmeasure method)": [[67, "skfolio.measures.PerfMeasure.zfill", false]], "zfill() (skfolio.measures.ratiomeasure method)": [[68, "skfolio.measures.RatioMeasure.zfill", false]], "zfill() (skfolio.measures.riskmeasure method)": [[69, "skfolio.measures.RiskMeasure.zfill", false]], "zfill() (skfolio.moments.shrunkmumethods method)": [[118, "skfolio.moments.ShrunkMuMethods.zfill", false]], "zfill() (skfolio.optimization.objectivefunction method)": [[130, "skfolio.optimization.ObjectiveFunction.zfill", false]]}, "objects": {"": [[0, 0, 0, "module-7", "skfolio"]], "skfolio": [[0, 0, 0, "-", "measures"], [0, 0, 0, "-", "population"], [0, 0, 0, "-", "portfolio"]], "skfolio.cluster": [[51, 1, 1, "", "HierarchicalClustering"], [52, 1, 1, "", "LinkageMethod"]], "skfolio.cluster.HierarchicalClustering": [[51, 2, 1, "", "fit"], [51, 2, 1, "", "fit_predict"], [51, 2, 1, "", "get_metadata_routing"], [51, 2, 1, "", "get_params"], [51, 2, 1, "", "plot_dendrogram"], [51, 2, 1, "", "set_params"]], "skfolio.cluster.LinkageMethod": [[52, 2, 1, "", "capitalize"], [52, 2, 1, "", "casefold"], [52, 2, 1, "", "center"], [52, 2, 1, "", "count"], [52, 2, 1, "", "encode"], [52, 2, 1, "", "endswith"], [52, 2, 1, "", "expandtabs"], [52, 2, 1, "", "find"], [52, 2, 1, "", "format"], [52, 2, 1, "", "format_map"], [52, 2, 1, "", "has"], [52, 2, 1, "", "index"], [52, 2, 1, "", "isalnum"], [52, 2, 1, "", "isalpha"], [52, 2, 1, "", "isascii"], [52, 2, 1, "", "isdecimal"], [52, 2, 1, "", "isdigit"], [52, 2, 1, "", "isidentifier"], [52, 2, 1, "", "islower"], [52, 2, 1, "", "isnumeric"], [52, 2, 1, "", "isprintable"], [52, 2, 1, "", "isspace"], [52, 2, 1, "", "istitle"], [52, 2, 1, "", "isupper"], [52, 2, 1, "", "join"], [52, 2, 1, "", "ljust"], [52, 2, 1, "", "lower"], [52, 2, 1, "", "lstrip"], [52, 2, 1, "", "maketrans"], [52, 2, 1, "", "partition"], [52, 2, 1, "", "removeprefix"], [52, 2, 1, "", "removesuffix"], [52, 2, 1, "", "replace"], [52, 2, 1, "", "rfind"], [52, 2, 1, "", "rindex"], [52, 2, 1, "", "rjust"], [52, 2, 1, "", "rpartition"], [52, 2, 1, "", "rsplit"], [52, 2, 1, "", "rstrip"], [52, 2, 1, "", "split"], [52, 2, 1, "", "splitlines"], [52, 2, 1, "", "startswith"], [52, 2, 1, "", "strip"], [52, 2, 1, "", "swapcase"], [52, 2, 1, "", "title"], [52, 2, 1, "", "translate"], [52, 2, 1, "", "upper"], [52, 2, 1, "", "zfill"]], "skfolio.datasets": [[53, 3, 1, "", "load_factors_dataset"], [54, 3, 1, "", "load_ftse100_dataset"], [55, 3, 1, "", "load_nasdaq_dataset"], [56, 3, 1, "", "load_sp500_dataset"], [57, 3, 1, "", "load_sp500_index"]], "skfolio.distance": [[58, 1, 1, "", "BaseDistance"], [59, 1, 1, "", "CovarianceDistance"], [60, 1, 1, "", "DistanceCorrelation"], [61, 1, 1, "", "KendallDistance"], [62, 1, 1, "", "MutualInformation"], [63, 1, 1, "", "PearsonDistance"], [64, 1, 1, "", "SpearmanDistance"]], "skfolio.distance.BaseDistance": [[58, 2, 1, "", "fit"], [58, 2, 1, "", "get_metadata_routing"], [58, 2, 1, "", "get_params"], [58, 2, 1, "", "set_params"]], "skfolio.distance.CovarianceDistance": [[59, 2, 1, "", "fit"], [59, 2, 1, "", "get_metadata_routing"], [59, 2, 1, "", "get_params"], [59, 2, 1, "", "set_params"]], "skfolio.distance.DistanceCorrelation": [[60, 2, 1, "", "fit"], [60, 2, 1, "", "get_metadata_routing"], [60, 2, 1, "", "get_params"], [60, 2, 1, "", "set_params"]], "skfolio.distance.KendallDistance": [[61, 2, 1, "", "fit"], [61, 2, 1, "", "get_metadata_routing"], [61, 2, 1, "", "get_params"], [61, 2, 1, "", "set_params"]], "skfolio.distance.MutualInformation": [[62, 2, 1, "", "fit"], [62, 2, 1, "", "get_metadata_routing"], [62, 2, 1, "", "get_params"], [62, 2, 1, "", "set_params"]], "skfolio.distance.PearsonDistance": [[63, 2, 1, "", "fit"], [63, 2, 1, "", "get_metadata_routing"], [63, 2, 1, "", "get_params"], [63, 2, 1, "", "set_params"]], "skfolio.distance.SpearmanDistance": [[64, 2, 1, "", "fit"], [64, 2, 1, "", "get_metadata_routing"], [64, 2, 1, "", "get_params"], [64, 2, 1, "", "set_params"]], "skfolio.measures": [[65, 1, 1, "", "BaseMeasure"], [66, 1, 1, "", "ExtraRiskMeasure"], [67, 1, 1, "", "PerfMeasure"], [68, 1, 1, "", "RatioMeasure"], [69, 1, 1, "", "RiskMeasure"], [70, 3, 1, "", "average_drawdown"], [71, 3, 1, "", "cdar"], [72, 3, 1, "", "cvar"], [73, 3, 1, "", "drawdown_at_risk"], [74, 3, 1, "", "edar"], [75, 3, 1, "", "effective_number_assets"], [76, 3, 1, "", "entropic_risk_measure"], [77, 3, 1, "", "evar"], [78, 3, 1, "", "first_lower_partial_moment"], [79, 3, 1, "", "fourth_central_moment"], [80, 3, 1, "", "fourth_lower_partial_moment"], [81, 3, 1, "", "get_cumulative_returns"], [82, 3, 1, "", "get_drawdowns"], [83, 3, 1, "", "gini_mean_difference"], [84, 3, 1, "", "max_drawdown"], [85, 3, 1, "", "mean"], [86, 3, 1, "", "mean_absolute_deviation"], [87, 3, 1, "", "owa_gmd_weights"], [88, 3, 1, "", "semi_deviation"], [89, 3, 1, "", "semi_variance"], [90, 3, 1, "", "standard_deviation"], [91, 3, 1, "", "third_central_moment"], [92, 3, 1, "", "ulcer_index"], [93, 3, 1, "", "value_at_risk"], [94, 3, 1, "", "variance"], [95, 3, 1, "", "worst_realization"]], "skfolio.measures.BaseMeasure": [[65, 2, 1, "", "capitalize"], [65, 2, 1, "", "casefold"], [65, 2, 1, "", "center"], [65, 2, 1, "", "count"], [65, 2, 1, "", "encode"], [65, 2, 1, "", "endswith"], [65, 2, 1, "", "expandtabs"], [65, 2, 1, "", "find"], [65, 2, 1, "", "format"], [65, 2, 1, "", "format_map"], [65, 2, 1, "", "has"], [65, 2, 1, "", "index"], [65, 2, 1, "", "isalnum"], [65, 2, 1, "", "isalpha"], [65, 2, 1, "", "isascii"], [65, 2, 1, "", "isdecimal"], [65, 2, 1, "", "isdigit"], [65, 2, 1, "", "isidentifier"], [65, 2, 1, "", "islower"], [65, 2, 1, "", "isnumeric"], [65, 2, 1, "", "isprintable"], [65, 2, 1, "", "isspace"], [65, 2, 1, "", "istitle"], [65, 2, 1, "", "isupper"], [65, 2, 1, "", "join"], [65, 2, 1, "", "ljust"], [65, 2, 1, "", "lower"], [65, 2, 1, "", "lstrip"], [65, 2, 1, "", "maketrans"], [65, 2, 1, "", "partition"], [65, 2, 1, "", "removeprefix"], [65, 2, 1, "", "removesuffix"], [65, 2, 1, "", "replace"], [65, 2, 1, "", "rfind"], [65, 2, 1, "", "rindex"], [65, 2, 1, "", "rjust"], [65, 2, 1, "", "rpartition"], [65, 2, 1, "", "rsplit"], [65, 2, 1, "", "rstrip"], [65, 2, 1, "", "split"], [65, 2, 1, "", "splitlines"], [65, 2, 1, "", "startswith"], [65, 2, 1, "", "strip"], [65, 2, 1, "", "swapcase"], [65, 2, 1, "", "title"], [65, 2, 1, "", "translate"], [65, 2, 1, "", "upper"], [65, 2, 1, "", "zfill"]], "skfolio.measures.ExtraRiskMeasure": [[66, 2, 1, "", "capitalize"], [66, 2, 1, "", "casefold"], [66, 2, 1, "", "center"], [66, 2, 1, "", "count"], [66, 2, 1, "", "encode"], [66, 2, 1, "", "endswith"], [66, 2, 1, "", "expandtabs"], [66, 2, 1, "", "find"], [66, 2, 1, "", "format"], [66, 2, 1, "", "format_map"], [66, 2, 1, "", "has"], [66, 2, 1, "", "index"], [66, 2, 1, "", "isalnum"], [66, 2, 1, "", "isalpha"], [66, 2, 1, "", "isascii"], [66, 2, 1, "", "isdecimal"], [66, 2, 1, "", "isdigit"], [66, 2, 1, "", "isidentifier"], [66, 2, 1, "", "islower"], [66, 2, 1, "", "isnumeric"], [66, 2, 1, "", "isprintable"], [66, 2, 1, "", "isspace"], [66, 2, 1, "", "istitle"], [66, 2, 1, "", "isupper"], [66, 2, 1, "", "join"], [66, 2, 1, "", "ljust"], [66, 2, 1, "", "lower"], [66, 2, 1, "", "lstrip"], [66, 2, 1, "", "maketrans"], [66, 2, 1, "", "partition"], [66, 2, 1, "", "removeprefix"], [66, 2, 1, "", "removesuffix"], [66, 2, 1, "", "replace"], [66, 2, 1, "", "rfind"], [66, 2, 1, "", "rindex"], [66, 2, 1, "", "rjust"], [66, 2, 1, "", "rpartition"], [66, 2, 1, "", "rsplit"], [66, 2, 1, "", "rstrip"], [66, 2, 1, "", "split"], [66, 2, 1, "", "splitlines"], [66, 2, 1, "", "startswith"], [66, 2, 1, "", "strip"], [66, 2, 1, "", "swapcase"], [66, 2, 1, "", "title"], [66, 2, 1, "", "translate"], [66, 2, 1, "", "upper"], [66, 2, 1, "", "zfill"]], "skfolio.measures.PerfMeasure": [[67, 2, 1, "", "capitalize"], [67, 2, 1, "", "casefold"], [67, 2, 1, "", "center"], [67, 2, 1, "", "count"], [67, 2, 1, "", "encode"], [67, 2, 1, "", "endswith"], [67, 2, 1, "", "expandtabs"], [67, 2, 1, "", "find"], [67, 2, 1, "", "format"], [67, 2, 1, "", "format_map"], [67, 2, 1, "", "has"], [67, 2, 1, "", "index"], [67, 2, 1, "", "isalnum"], [67, 2, 1, "", "isalpha"], [67, 2, 1, "", "isascii"], [67, 2, 1, "", "isdecimal"], [67, 2, 1, "", "isdigit"], [67, 2, 1, "", "isidentifier"], [67, 2, 1, "", "islower"], [67, 2, 1, "", "isnumeric"], [67, 2, 1, "", "isprintable"], [67, 2, 1, "", "isspace"], [67, 2, 1, "", "istitle"], [67, 2, 1, "", "isupper"], [67, 2, 1, "", "join"], [67, 2, 1, "", "ljust"], [67, 2, 1, "", "lower"], [67, 2, 1, "", "lstrip"], [67, 2, 1, "", "maketrans"], [67, 2, 1, "", "partition"], [67, 2, 1, "", "removeprefix"], [67, 2, 1, "", "removesuffix"], [67, 2, 1, "", "replace"], [67, 2, 1, "", "rfind"], [67, 2, 1, "", "rindex"], [67, 2, 1, "", "rjust"], [67, 2, 1, "", "rpartition"], [67, 2, 1, "", "rsplit"], [67, 2, 1, "", "rstrip"], [67, 2, 1, "", "split"], [67, 2, 1, "", "splitlines"], [67, 2, 1, "", "startswith"], [67, 2, 1, "", "strip"], [67, 2, 1, "", "swapcase"], [67, 2, 1, "", "title"], [67, 2, 1, "", "translate"], [67, 2, 1, "", "upper"], [67, 2, 1, "", "zfill"]], "skfolio.measures.RatioMeasure": [[68, 2, 1, "", "capitalize"], [68, 2, 1, "", "casefold"], [68, 2, 1, "", "center"], [68, 2, 1, "", "count"], [68, 2, 1, "", "encode"], [68, 2, 1, "", "endswith"], [68, 2, 1, "", "expandtabs"], [68, 2, 1, "", "find"], [68, 2, 1, "", "format"], [68, 2, 1, "", "format_map"], [68, 2, 1, "", "has"], [68, 2, 1, "", "index"], [68, 2, 1, "", "isalnum"], [68, 2, 1, "", "isalpha"], [68, 2, 1, "", "isascii"], [68, 2, 1, "", "isdecimal"], [68, 2, 1, "", "isdigit"], [68, 2, 1, "", "isidentifier"], [68, 2, 1, "", "islower"], [68, 2, 1, "", "isnumeric"], [68, 2, 1, "", "isprintable"], [68, 2, 1, "", "isspace"], [68, 2, 1, "", "istitle"], [68, 2, 1, "", "isupper"], [68, 2, 1, "", "join"], [68, 2, 1, "", "ljust"], [68, 2, 1, "", "lower"], [68, 2, 1, "", "lstrip"], [68, 2, 1, "", "maketrans"], [68, 2, 1, "", "partition"], [68, 2, 1, "", "removeprefix"], [68, 2, 1, "", "removesuffix"], [68, 2, 1, "", "replace"], [68, 2, 1, "", "rfind"], [68, 2, 1, "", "rindex"], [68, 2, 1, "", "rjust"], [68, 2, 1, "", "rpartition"], [68, 2, 1, "", "rsplit"], [68, 2, 1, "", "rstrip"], [68, 2, 1, "", "split"], [68, 2, 1, "", "splitlines"], [68, 2, 1, "", "startswith"], [68, 2, 1, "", "strip"], [68, 2, 1, "", "swapcase"], [68, 2, 1, "", "title"], [68, 2, 1, "", "translate"], [68, 2, 1, "", "upper"], [68, 2, 1, "", "zfill"]], "skfolio.measures.RiskMeasure": [[69, 2, 1, "", "capitalize"], [69, 2, 1, "", "casefold"], [69, 2, 1, "", "center"], [69, 2, 1, "", "count"], [69, 2, 1, "", "encode"], [69, 2, 1, "", "endswith"], [69, 2, 1, "", "expandtabs"], [69, 2, 1, "", "find"], [69, 2, 1, "", "format"], [69, 2, 1, "", "format_map"], [69, 2, 1, "", "has"], [69, 2, 1, "", "index"], [69, 2, 1, "", "isalnum"], [69, 2, 1, "", "isalpha"], [69, 2, 1, "", "isascii"], [69, 2, 1, "", "isdecimal"], [69, 2, 1, "", "isdigit"], [69, 2, 1, "", "isidentifier"], [69, 2, 1, "", "islower"], [69, 2, 1, "", "isnumeric"], [69, 2, 1, "", "isprintable"], [69, 2, 1, "", "isspace"], [69, 2, 1, "", "istitle"], [69, 2, 1, "", "isupper"], [69, 2, 1, "", "join"], [69, 2, 1, "", "ljust"], [69, 2, 1, "", "lower"], [69, 2, 1, "", "lstrip"], [69, 2, 1, "", "maketrans"], [69, 2, 1, "", "partition"], [69, 2, 1, "", "removeprefix"], [69, 2, 1, "", "removesuffix"], [69, 2, 1, "", "replace"], [69, 2, 1, "", "rfind"], [69, 2, 1, "", "rindex"], [69, 2, 1, "", "rjust"], [69, 2, 1, "", "rpartition"], [69, 2, 1, "", "rsplit"], [69, 2, 1, "", "rstrip"], [69, 2, 1, "", "split"], [69, 2, 1, "", "splitlines"], [69, 2, 1, "", "startswith"], [69, 2, 1, "", "strip"], [69, 2, 1, "", "swapcase"], [69, 2, 1, "", "title"], [69, 2, 1, "", "translate"], [69, 2, 1, "", "upper"], [69, 2, 1, "", "zfill"]], "skfolio.metrics": [[96, 3, 1, "", "make_scorer"]], "skfolio.model_selection": [[97, 1, 1, "", "BaseCombinatorialCV"], [98, 1, 1, "", "CombinatorialPurgedCV"], [99, 1, 1, "", "WalkForward"], [100, 3, 1, "", "cross_val_predict"], [101, 3, 1, "", "optimal_folds_number"]], "skfolio.model_selection.BaseCombinatorialCV": [[97, 2, 1, "", "get_path_ids"]], "skfolio.model_selection.CombinatorialPurgedCV": [[98, 4, 1, "", "binary_train_test_sets"], [98, 2, 1, "", "get_path_ids"], [98, 4, 1, "", "n_splits"], [98, 4, 1, "", "n_test_paths"], [98, 2, 1, "", "plot_train_test_folds"], [98, 2, 1, "", "plot_train_test_index"], [98, 4, 1, "", "recombined_paths"], [98, 2, 1, "", "split"], [98, 4, 1, "", "test_set_index"]], "skfolio.model_selection.WalkForward": [[99, 2, 1, "", "get_metadata_routing"], [99, 2, 1, "", "get_n_splits"], [99, 2, 1, "", "split"]], "skfolio.moments": [[102, 1, 1, "", "BaseCovariance"], [103, 1, 1, "", "BaseMu"], [104, 1, 1, "", "DenoiseCovariance"], [105, 1, 1, "", "DetoneCovariance"], [106, 1, 1, "", "EWCovariance"], [107, 1, 1, "", "EWMu"], [108, 1, 1, "", "EmpiricalCovariance"], [109, 1, 1, "", "EmpiricalMu"], [110, 1, 1, "", "EquilibriumMu"], [111, 1, 1, "", "GerberCovariance"], [112, 1, 1, "", "GraphicalLassoCV"], [113, 1, 1, "", "ImpliedCovariance"], [114, 1, 1, "", "LedoitWolf"], [115, 1, 1, "", "OAS"], [116, 1, 1, "", "ShrunkCovariance"], [117, 1, 1, "", "ShrunkMu"], [118, 1, 1, "", "ShrunkMuMethods"]], "skfolio.moments.BaseCovariance": [[102, 2, 1, "", "get_metadata_routing"], [102, 2, 1, "", "get_params"], [102, 2, 1, "", "set_params"]], "skfolio.moments.BaseMu": [[103, 2, 1, "", "get_metadata_routing"], [103, 2, 1, "", "get_params"], [103, 2, 1, "", "set_params"]], "skfolio.moments.DenoiseCovariance": [[104, 2, 1, "", "fit"], [104, 2, 1, "", "get_metadata_routing"], [104, 2, 1, "", "get_params"], [104, 2, 1, "", "set_params"]], "skfolio.moments.DetoneCovariance": [[105, 2, 1, "", "fit"], [105, 2, 1, "", "get_metadata_routing"], [105, 2, 1, "", "get_params"], [105, 2, 1, "", "set_params"]], "skfolio.moments.EWCovariance": [[106, 2, 1, "", "fit"], [106, 2, 1, "", "get_metadata_routing"], [106, 2, 1, "", "get_params"], [106, 2, 1, "", "set_params"]], "skfolio.moments.EWMu": [[107, 2, 1, "", "fit"], [107, 2, 1, "", "get_metadata_routing"], [107, 2, 1, "", "get_params"], [107, 2, 1, "", "set_params"]], "skfolio.moments.EmpiricalCovariance": [[108, 2, 1, "", "fit"], [108, 2, 1, "", "get_metadata_routing"], [108, 2, 1, "", "get_params"], [108, 2, 1, "", "set_params"]], "skfolio.moments.EmpiricalMu": [[109, 2, 1, "", "fit"], [109, 2, 1, "", "get_metadata_routing"], [109, 2, 1, "", "get_params"], [109, 2, 1, "", "set_params"]], "skfolio.moments.EquilibriumMu": [[110, 2, 1, "", "fit"], [110, 2, 1, "", "get_metadata_routing"], [110, 2, 1, "", "get_params"], [110, 2, 1, "", "set_params"]], "skfolio.moments.GerberCovariance": [[111, 2, 1, "", "fit"], [111, 2, 1, "", "get_metadata_routing"], [111, 2, 1, "", "get_params"], [111, 2, 1, "", "set_params"]], "skfolio.moments.GraphicalLassoCV": [[112, 2, 1, "", "error_norm"], [112, 2, 1, "", "fit"], [112, 2, 1, "", "get_metadata_routing"], [112, 2, 1, "", "get_params"], [112, 2, 1, "", "get_precision"], [112, 2, 1, "", "mahalanobis"], [112, 2, 1, "", "score"], [112, 2, 1, "", "set_params"], [112, 2, 1, "", "set_score_request"]], "skfolio.moments.ImpliedCovariance": [[113, 2, 1, "", "fit"], [113, 2, 1, "", "get_metadata_routing"], [113, 2, 1, "", "get_params"], [113, 2, 1, "", "set_fit_request"], [113, 2, 1, "", "set_params"]], "skfolio.moments.LedoitWolf": [[114, 2, 1, "", "error_norm"], [114, 2, 1, "", "fit"], [114, 2, 1, "", "get_metadata_routing"], [114, 2, 1, "", "get_params"], [114, 2, 1, "", "get_precision"], [114, 2, 1, "", "mahalanobis"], [114, 2, 1, "", "score"], [114, 2, 1, "", "set_params"], [114, 2, 1, "", "set_score_request"]], "skfolio.moments.OAS": [[115, 2, 1, "", "error_norm"], [115, 2, 1, "", "fit"], [115, 2, 1, "", "get_metadata_routing"], [115, 2, 1, "", "get_params"], [115, 2, 1, "", "get_precision"], [115, 2, 1, "", "mahalanobis"], [115, 2, 1, "", "score"], [115, 2, 1, "", "set_params"], [115, 2, 1, "", "set_score_request"]], "skfolio.moments.ShrunkCovariance": [[116, 2, 1, "", "error_norm"], [116, 2, 1, "", "fit"], [116, 2, 1, "", "get_metadata_routing"], [116, 2, 1, "", "get_params"], [116, 2, 1, "", "get_precision"], [116, 2, 1, "", "mahalanobis"], [116, 2, 1, "", "score"], [116, 2, 1, "", "set_params"], [116, 2, 1, "", "set_score_request"]], "skfolio.moments.ShrunkMu": [[117, 2, 1, "", "fit"], [117, 2, 1, "", "get_metadata_routing"], [117, 2, 1, "", "get_params"], [117, 2, 1, "", "set_params"]], "skfolio.moments.ShrunkMuMethods": [[118, 2, 1, "", "capitalize"], [118, 2, 1, "", "casefold"], [118, 2, 1, "", "center"], [118, 2, 1, "", "count"], [118, 2, 1, "", "encode"], [118, 2, 1, "", "endswith"], [118, 2, 1, "", "expandtabs"], [118, 2, 1, "", "find"], [118, 2, 1, "", "format"], [118, 2, 1, "", "format_map"], [118, 2, 1, "", "has"], [118, 2, 1, "", "index"], [118, 2, 1, "", "isalnum"], [118, 2, 1, "", "isalpha"], [118, 2, 1, "", "isascii"], [118, 2, 1, "", "isdecimal"], [118, 2, 1, "", "isdigit"], [118, 2, 1, "", "isidentifier"], [118, 2, 1, "", "islower"], [118, 2, 1, "", "isnumeric"], [118, 2, 1, "", "isprintable"], [118, 2, 1, "", "isspace"], [118, 2, 1, "", "istitle"], [118, 2, 1, "", "isupper"], [118, 2, 1, "", "join"], [118, 2, 1, "", "ljust"], [118, 2, 1, "", "lower"], [118, 2, 1, "", "lstrip"], [118, 2, 1, "", "maketrans"], [118, 2, 1, "", "partition"], [118, 2, 1, "", "removeprefix"], [118, 2, 1, "", "removesuffix"], [118, 2, 1, "", "replace"], [118, 2, 1, "", "rfind"], [118, 2, 1, "", "rindex"], [118, 2, 1, "", "rjust"], [118, 2, 1, "", "rpartition"], [118, 2, 1, "", "rsplit"], [118, 2, 1, "", "rstrip"], [118, 2, 1, "", "split"], [118, 2, 1, "", "splitlines"], [118, 2, 1, "", "startswith"], [118, 2, 1, "", "strip"], [118, 2, 1, "", "swapcase"], [118, 2, 1, "", "title"], [118, 2, 1, "", "translate"], [118, 2, 1, "", "upper"], [118, 2, 1, "", "zfill"]], "skfolio.optimization": [[119, 1, 1, "", "BaseComposition"], [120, 1, 1, "", "BaseHierarchicalOptimization"], [121, 1, 1, "", "ConvexOptimization"], [122, 1, 1, "", "DistributionallyRobustCVaR"], [123, 1, 1, "", "EqualWeighted"], [124, 1, 1, "", "HierarchicalEqualRiskContribution"], [125, 1, 1, "", "HierarchicalRiskParity"], [126, 1, 1, "", "InverseVolatility"], [127, 1, 1, "", "MaximumDiversification"], [128, 1, 1, "", "MeanRisk"], [129, 1, 1, "", "NestedClustersOptimization"], [130, 1, 1, "", "ObjectiveFunction"], [131, 1, 1, "", "Random"], [132, 1, 1, "", "RiskBudgeting"], [133, 1, 1, "", "StackingOptimization"], [0, 0, 0, "-", "cluster"], [0, 0, 0, "-", "convex"], [0, 0, 0, "-", "ensemble"], [0, 0, 0, "-", "naive"]], "skfolio.optimization.BaseComposition": [[119, 2, 1, "", "get_metadata_routing"], [119, 2, 1, "", "get_params"], [119, 2, 1, "", "set_params"]], "skfolio.optimization.BaseHierarchicalOptimization": [[120, 2, 1, "", "fit_predict"], [120, 2, 1, "", "get_metadata_routing"], [120, 2, 1, "", "get_params"], [120, 2, 1, "", "predict"], [120, 2, 1, "", "score"], [120, 2, 1, "", "set_params"]], "skfolio.optimization.ConvexOptimization": [[121, 2, 1, "", "fit_predict"], [121, 2, 1, "", "get_metadata_routing"], [121, 2, 1, "", "get_params"], [121, 2, 1, "", "predict"], [121, 2, 1, "", "score"], [121, 2, 1, "", "set_params"]], "skfolio.optimization.DistributionallyRobustCVaR": [[122, 2, 1, "", "fit"], [122, 2, 1, "", "fit_predict"], [122, 2, 1, "", "get_metadata_routing"], [122, 2, 1, "", "get_params"], [122, 2, 1, "", "predict"], [122, 2, 1, "", "score"], [122, 2, 1, "", "set_params"]], "skfolio.optimization.EqualWeighted": [[123, 2, 1, "", "fit"], [123, 2, 1, "", "fit_predict"], [123, 2, 1, "", "get_metadata_routing"], [123, 2, 1, "", "get_params"], [123, 2, 1, "", "predict"], [123, 2, 1, "", "score"], [123, 2, 1, "", "set_params"]], "skfolio.optimization.HierarchicalEqualRiskContribution": [[124, 2, 1, "", "fit"], [124, 2, 1, "", "fit_predict"], [124, 2, 1, "", "get_metadata_routing"], [124, 2, 1, "", "get_params"], [124, 2, 1, "", "predict"], [124, 2, 1, "", "score"], [124, 2, 1, "", "set_params"]], "skfolio.optimization.HierarchicalRiskParity": [[125, 2, 1, "", "fit"], [125, 2, 1, "", "fit_predict"], [125, 2, 1, "", "get_metadata_routing"], [125, 2, 1, "", "get_params"], [125, 2, 1, "", "predict"], [125, 2, 1, "", "score"], [125, 2, 1, "", "set_params"]], "skfolio.optimization.InverseVolatility": [[126, 2, 1, "", "fit"], [126, 2, 1, "", "fit_predict"], [126, 2, 1, "", "get_metadata_routing"], [126, 2, 1, "", "get_params"], [126, 2, 1, "", "predict"], [126, 2, 1, "", "score"], [126, 2, 1, "", "set_params"]], "skfolio.optimization.MaximumDiversification": [[127, 2, 1, "", "fit"], [127, 2, 1, "", "fit_predict"], [127, 2, 1, "", "get_metadata_routing"], [127, 2, 1, "", "get_params"], [127, 2, 1, "", "predict"], [127, 2, 1, "", "score"], [127, 2, 1, "", "set_params"]], "skfolio.optimization.MeanRisk": [[128, 2, 1, "", "fit"], [128, 2, 1, "", "fit_predict"], [128, 2, 1, "", "get_metadata_routing"], [128, 2, 1, "", "get_params"], [128, 2, 1, "", "predict"], [128, 2, 1, "", "score"], [128, 2, 1, "", "set_params"]], "skfolio.optimization.NestedClustersOptimization": [[129, 2, 1, "", "fit"], [129, 2, 1, "", "fit_predict"], [129, 2, 1, "", "get_metadata_routing"], [129, 2, 1, "", "get_params"], [129, 2, 1, "", "predict"], [129, 2, 1, "", "score"], [129, 2, 1, "", "set_params"]], "skfolio.optimization.ObjectiveFunction": [[130, 2, 1, "", "capitalize"], [130, 2, 1, "", "casefold"], [130, 2, 1, "", "center"], [130, 2, 1, "", "count"], [130, 2, 1, "", "encode"], [130, 2, 1, "", "endswith"], [130, 2, 1, "", "expandtabs"], [130, 2, 1, "", "find"], [130, 2, 1, "", "format"], [130, 2, 1, "", "format_map"], [130, 2, 1, "", "has"], [130, 2, 1, "", "index"], [130, 2, 1, "", "isalnum"], [130, 2, 1, "", "isalpha"], [130, 2, 1, "", "isascii"], [130, 2, 1, "", "isdecimal"], [130, 2, 1, "", "isdigit"], [130, 2, 1, "", "isidentifier"], [130, 2, 1, "", "islower"], [130, 2, 1, "", "isnumeric"], [130, 2, 1, "", "isprintable"], [130, 2, 1, "", "isspace"], [130, 2, 1, "", "istitle"], [130, 2, 1, "", "isupper"], [130, 2, 1, "", "join"], [130, 2, 1, "", "ljust"], [130, 2, 1, "", "lower"], [130, 2, 1, "", "lstrip"], [130, 2, 1, "", "maketrans"], [130, 2, 1, "", "partition"], [130, 2, 1, "", "removeprefix"], [130, 2, 1, "", "removesuffix"], [130, 2, 1, "", "replace"], [130, 2, 1, "", "rfind"], [130, 2, 1, "", "rindex"], [130, 2, 1, "", "rjust"], [130, 2, 1, "", "rpartition"], [130, 2, 1, "", "rsplit"], [130, 2, 1, "", "rstrip"], [130, 2, 1, "", "split"], [130, 2, 1, "", "splitlines"], [130, 2, 1, "", "startswith"], [130, 2, 1, "", "strip"], [130, 2, 1, "", "swapcase"], [130, 2, 1, "", "title"], [130, 2, 1, "", "translate"], [130, 2, 1, "", "upper"], [130, 2, 1, "", "zfill"]], "skfolio.optimization.Random": [[131, 2, 1, "", "fit"], [131, 2, 1, "", "fit_predict"], [131, 2, 1, "", "get_metadata_routing"], [131, 2, 1, "", "get_params"], [131, 2, 1, "", "predict"], [131, 2, 1, "", "score"], [131, 2, 1, "", "set_params"]], "skfolio.optimization.RiskBudgeting": [[132, 2, 1, "", "fit"], [132, 2, 1, "", "fit_predict"], [132, 2, 1, "", "get_metadata_routing"], [132, 2, 1, "", "get_params"], [132, 2, 1, "", "predict"], [132, 2, 1, "", "score"], [132, 2, 1, "", "set_params"]], "skfolio.optimization.StackingOptimization": [[133, 2, 1, "", "fit"], [133, 2, 1, "", "fit_predict"], [133, 2, 1, "", "get_metadata_routing"], [133, 2, 1, "", "get_params"], [133, 4, 1, "", "named_estimators"], [133, 2, 1, "", "predict"], [133, 2, 1, "", "score"], [133, 2, 1, "", "set_params"]], "skfolio.population": [[134, 1, 1, "", "Population"]], "skfolio.population.Population": [[134, 2, 1, "", "append"], [134, 2, 1, "", "clear"], [134, 2, 1, "", "composition"], [134, 2, 1, "", "contribution"], [134, 2, 1, "", "copy"], [134, 2, 1, "", "count"], [134, 2, 1, "", "extend"], [134, 2, 1, "", "filter"], [134, 2, 1, "", "index"], [134, 2, 1, "", "insert"], [134, 2, 1, "", "max_measure"], [134, 2, 1, "", "measures"], [134, 2, 1, "", "measures_mean"], [134, 2, 1, "", "measures_std"], [134, 2, 1, "", "min_measure"], [134, 2, 1, "", "non_denominated_sort"], [134, 2, 1, "", "plot_composition"], [134, 2, 1, "", "plot_contribution"], [134, 2, 1, "", "plot_cumulative_returns"], [134, 2, 1, "", "plot_distribution"], [134, 2, 1, "", "plot_measures"], [134, 2, 1, "", "plot_rolling_measure"], [134, 2, 1, "", "pop"], [134, 2, 1, "", "quantile"], [134, 2, 1, "", "remove"], [134, 2, 1, "", "reverse"], [134, 2, 1, "", "rolling_measure"], [134, 2, 1, "", "set_portfolio_params"], [134, 2, 1, "", "sort"], [134, 2, 1, "", "sort_measure"], [134, 2, 1, "", "summary"]], "skfolio.portfolio": [[135, 1, 1, "", "BasePortfolio"], [136, 1, 1, "", "MultiPeriodPortfolio"], [137, 1, 1, "", "Portfolio"]], "skfolio.portfolio.BasePortfolio": [[135, 4, 1, "", "annualized_factor"], [135, 2, 1, "", "clear"], [135, 4, 1, "", "composition"], [135, 2, 1, "", "contribution"], [135, 2, 1, "", "copy"], [135, 5, 1, "", "cumulative_returns"], [135, 4, 1, "", "cumulative_returns_df"], [135, 2, 1, "", "dominates"], [135, 5, 1, "", "drawdowns"], [135, 5, 1, "", "fitness"], [135, 4, 1, "", "fitness_measures"], [135, 2, 1, "", "get_measure"], [135, 4, 1, "", "measures_df"], [135, 4, 1, "", "n_observations"], [135, 2, 1, "", "plot_composition"], [135, 2, 1, "", "plot_contribution"], [135, 2, 1, "", "plot_cumulative_returns"], [135, 2, 1, "", "plot_returns"], [135, 2, 1, "", "plot_rolling_measure"], [135, 4, 1, "", "returns_df"], [135, 2, 1, "", "rolling_measure"], [135, 2, 1, "", "summary"]], "skfolio.portfolio.MultiPeriodPortfolio": [[136, 4, 1, "", "annualized_factor"], [136, 2, 1, "", "append"], [136, 4, 1, "", "assets"], [136, 2, 1, "", "clear"], [136, 4, 1, "", "composition"], [136, 2, 1, "", "contribution"], [136, 2, 1, "", "copy"], [136, 5, 1, "", "cumulative_returns"], [136, 4, 1, "", "cumulative_returns_df"], [136, 2, 1, "", "dominates"], [136, 5, 1, "", "drawdowns"], [136, 5, 1, "", "fitness"], [136, 4, 1, "", "fitness_measures"], [136, 2, 1, "", "get_measure"], [136, 4, 1, "", "measures_df"], [136, 4, 1, "", "n_observations"], [136, 2, 1, "", "plot_composition"], [136, 2, 1, "", "plot_contribution"], [136, 2, 1, "", "plot_cumulative_returns"], [136, 2, 1, "", "plot_returns"], [136, 2, 1, "", "plot_rolling_measure"], [136, 4, 1, "", "portfolios"], [136, 4, 1, "", "returns_df"], [136, 2, 1, "", "rolling_measure"], [136, 2, 1, "", "summary"], [136, 4, 1, "", "weights_per_observation"]], "skfolio.portfolio.Portfolio": [[137, 4, 1, "", "annualized_factor"], [137, 2, 1, "", "clear"], [137, 4, 1, "", "composition"], [137, 2, 1, "", "contribution"], [137, 2, 1, "", "copy"], [137, 5, 1, "", "cumulative_returns"], [137, 4, 1, "", "cumulative_returns_df"], [137, 4, 1, "", "diversification"], [137, 2, 1, "", "dominates"], [137, 5, 1, "", "drawdowns"], [137, 4, 1, "", "effective_number_assets"], [137, 2, 1, "", "expected_returns_from_assets"], [137, 5, 1, "", "fitness"], [137, 4, 1, "", "fitness_measures"], [137, 2, 1, "", "get_measure"], [137, 2, 1, "", "get_weight"], [137, 4, 1, "", "measures_df"], [137, 4, 1, "", "n_observations"], [137, 5, 1, "", "nonzero_assets"], [137, 5, 1, "", "nonzero_assets_index"], [137, 2, 1, "", "plot_composition"], [137, 2, 1, "", "plot_contribution"], [137, 2, 1, "", "plot_cumulative_returns"], [137, 2, 1, "", "plot_returns"], [137, 2, 1, "", "plot_rolling_measure"], [137, 4, 1, "", "returns_df"], [137, 2, 1, "", "rolling_measure"], [137, 4, 1, "", "sric"], [137, 2, 1, "", "summary"], [137, 2, 1, "", "variance_from_assets"], [137, 4, 1, "", "weights_per_observation"]], "skfolio.pre_selection": [[138, 1, 1, "", "DropCorrelated"], [139, 1, 1, "", "SelectKExtremes"], [140, 1, 1, "", "SelectNonDominated"]], "skfolio.pre_selection.DropCorrelated": [[138, 2, 1, "", "fit"], [138, 2, 1, "", "fit_transform"], [138, 2, 1, "", "get_feature_names_out"], [138, 2, 1, "", "get_metadata_routing"], [138, 2, 1, "", "get_params"], [138, 2, 1, "", "get_support"], [138, 2, 1, "", "inverse_transform"], [138, 2, 1, "", "set_output"], [138, 2, 1, "", "set_params"], [138, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectKExtremes": [[139, 2, 1, "", "fit"], [139, 2, 1, "", "fit_transform"], [139, 2, 1, "", "get_feature_names_out"], [139, 2, 1, "", "get_metadata_routing"], [139, 2, 1, "", "get_params"], [139, 2, 1, "", "get_support"], [139, 2, 1, "", "inverse_transform"], [139, 2, 1, "", "set_output"], [139, 2, 1, "", "set_params"], [139, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectNonDominated": [[140, 2, 1, "", "fit"], [140, 2, 1, "", "fit_transform"], [140, 2, 1, "", "get_feature_names_out"], [140, 2, 1, "", "get_metadata_routing"], [140, 2, 1, "", "get_params"], [140, 2, 1, "", "get_support"], [140, 2, 1, "", "inverse_transform"], [140, 2, 1, "", "set_output"], [140, 2, 1, "", "set_params"], [140, 2, 1, "", "transform"]], "skfolio.preprocessing": [[141, 3, 1, "", "prices_to_returns"]], "skfolio.prior": [[142, 1, 1, "", "BaseLoadingMatrix"], [143, 1, 1, "", "BasePrior"], [144, 1, 1, "", "BlackLitterman"], [145, 1, 1, "", "EmpiricalPrior"], [146, 1, 1, "", "FactorModel"], [147, 1, 1, "", "LoadingMatrixRegression"], [148, 1, 1, "", "PriorModel"]], "skfolio.prior.BaseLoadingMatrix": [[142, 2, 1, "", "get_metadata_routing"], [142, 2, 1, "", "get_params"], [142, 2, 1, "", "set_params"]], "skfolio.prior.BasePrior": [[143, 2, 1, "", "get_metadata_routing"], [143, 2, 1, "", "get_params"], [143, 2, 1, "", "set_params"]], "skfolio.prior.BlackLitterman": [[144, 2, 1, "", "fit"], [144, 2, 1, "", "get_metadata_routing"], [144, 2, 1, "", "get_params"], [144, 2, 1, "", "set_params"]], "skfolio.prior.EmpiricalPrior": [[145, 2, 1, "", "fit"], [145, 2, 1, "", "get_metadata_routing"], [145, 2, 1, "", "get_params"], [145, 2, 1, "", "set_params"]], "skfolio.prior.FactorModel": [[146, 2, 1, "", "fit"], [146, 2, 1, "", "get_metadata_routing"], [146, 2, 1, "", "get_params"], [146, 2, 1, "", "set_params"]], "skfolio.prior.LoadingMatrixRegression": [[147, 2, 1, "", "fit"], [147, 2, 1, "", "get_metadata_routing"], [147, 2, 1, "", "get_params"], [147, 2, 1, "", "set_params"]], "skfolio.uncertainty_set": [[149, 1, 1, "", "BaseCovarianceUncertaintySet"], [150, 1, 1, "", "BaseMuUncertaintySet"], [151, 1, 1, "", "BootstrapCovarianceUncertaintySet"], [152, 1, 1, "", "BootstrapMuUncertaintySet"], [153, 1, 1, "", "EmpiricalCovarianceUncertaintySet"], [154, 1, 1, "", "EmpiricalMuUncertaintySet"], [155, 1, 1, "", "UncertaintySet"]], "skfolio.uncertainty_set.BaseCovarianceUncertaintySet": [[149, 2, 1, "", "get_metadata_routing"], [149, 2, 1, "", "get_params"], [149, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BaseMuUncertaintySet": [[150, 2, 1, "", "get_metadata_routing"], [150, 2, 1, "", "get_params"], [150, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet": [[151, 2, 1, "", "fit"], [151, 2, 1, "", "get_metadata_routing"], [151, 2, 1, "", "get_params"], [151, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BootstrapMuUncertaintySet": [[152, 2, 1, "", "fit"], [152, 2, 1, "", "get_metadata_routing"], [152, 2, 1, "", "get_params"], [152, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet": [[153, 2, 1, "", "fit"], [153, 2, 1, "", "get_metadata_routing"], [153, 2, 1, "", "get_params"], [153, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.EmpiricalMuUncertaintySet": [[154, 2, 1, "", "fit"], [154, 2, 1, "", "get_metadata_routing"], [154, 2, 1, "", "get_params"], [154, 2, 1, "", "set_params"]], "skfolio.utils.stats": [[156, 3, 1, "", "NBinsMethod"], [157, 3, 1, "", "assert_is_distance"], [158, 3, 1, "", "assert_is_square"], [159, 3, 1, "", "assert_is_symmetric"], [160, 3, 1, "", "commutation_matrix"], [161, 3, 1, "", "compute_optimal_n_clusters"], [162, 3, 1, "", "corr_to_cov"], [163, 3, 1, "", "cov_nearest"], [164, 3, 1, "", "cov_to_corr"], [165, 3, 1, "", "is_cholesky_dec"], [166, 3, 1, "", "n_bins_freedman"], [167, 3, 1, "", "n_bins_knuth"], [168, 3, 1, "", "rand_weights"], [169, 3, 1, "", "rand_weights_dirichlet"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "terms": {"": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 161, 167, 170, 173, 174, 175, 176, 177, 181, 183, 184, 185, 186, 187, 188], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 50, 56, 59, 60, 61, 63, 64, 71, 72, 73, 74, 76, 77, 81, 93, 98, 99, 100, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 120, 121, 122, 124, 125, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 140, 141, 144, 151, 152, 153, 154, 155, 168, 170, 171, 174, 178, 179, 182, 183, 184, 185, 186, 187, 188], "00": [7, 8, 9, 14, 15, 16, 18, 19, 20, 21, 23, 24, 27, 29, 34, 36, 40, 42, 44, 48, 50, 171], "000": [47, 50], "0000": [52, 56, 65, 66, 67, 68, 69, 118, 130], "000000": [7, 8, 41], "0000000000000002": 11, "000000000000002": 11, "0000001319361242": 9, "000005": 40, "000006": [9, 40], "000007": [9, 40], "000008": [8, 9], "000009": [9, 15, 23], "000010": [9, 19, 36], "000011": [7, 9, 18, 19, 20], "000012": [9, 20], "000013": [8, 9, 14, 15, 23], "000014": [9, 15, 36], "000015": [9, 36], "000016": [8, 9], "000017": 9, "000018": 9, "000019": 9, "000020": [9, 14], "000021": [9, 14, 19], "000022": [7, 9, 18, 19], "000023": [9, 18, 20], "000024": 9, "000025": 20, "000026": 9, "000027": [8, 23], "000028": [9, 23], "000029": [7, 9], "000031": 9, "000033": 9, "000034": 9, "000035": 9, "000037": [9, 29], "000038": 9, "000039": 29, "000040": [9, 29], "000041": [9, 29], "000043": [9, 29], "000045": 9, "000046": 9, "000050": 9, "000054": 9, "000055": 9, "000056": 9, "000057": 9, "000058": 9, "000062": 9, "00007": 6, "000070": 9, "000073": 29, "000074": 29, "000078": 29, "000079": [9, 29], "000082": 15, "000088": 9, "000090": 29, "000096": 40, "000097": 9, "000098": 9, "0001": [26, 112, 170, 178], "00010": [15, 144], "00011": [6, 9, 40], "00012": [9, 10], "00013": 14, "00014": 9, "00015": 144, "00016": 9, "00017": [8, 9, 36], "00018": 9, "00019": 9, "0002": [144, 170, 185], "00020": 9, "00021": [7, 9, 18, 19], "00022": [9, 18, 20], "00023": [8, 9, 14, 19, 20, 23], "00024": [7, 9, 23], "00025": [9, 15], "00026": [9, 29], "00027": [9, 29], "00028": [9, 29], "00029": 9, "0003": [183, 187], "00030": 9, "00031": 9, "00032": 9, "00033": 9, "00034": 9, "00035": 9, "00035714285714285714": 14, "00036": 9, "00037": 9, "00038": 9, "00039": [6, 9, 144], "0004": [144, 183, 187], "00040": 9, "00041": 9, "00042": 9, "00043": 9, "00044": 9, "00045": 9, "00046": 9, "00047": 9, "00048": 9, "0005": 31, "00059": [4, 6, 9], "0006": [183, 187], "00062": 15, "00068": 15, "00071": 14, "00074": 15, "00075": 15, "00077": 9, "00079": [14, 15], "00080": 15, "00081": 14, "00084": 14, "00085": 9, "00086": [4, 6, 14], "00087": 14, "00092": 15, "00094": 14, "00097": 40, "00098": [4, 6], "001": [14, 26, 36, 137, 178, 185], "0010": 185, "00105085": 8, "0011": [9, 40], "0012": [9, 14, 15, 36], "00122": 36, "00125": 36, "0013": [11, 14, 15, 40, 121, 122, 127, 128, 132], "00139632": 2, "0014": [9, 185], "0015": [8, 9, 40, 185], "00152747": 7, "0016": [9, 15, 40], "0017": [9, 14, 15], "00175085e": 5, "0018": [7, 9, 14, 18, 19, 40], "0019": [9, 15, 18, 20, 36], "00199173": 7, "002": [12, 185], "0020": [8, 9, 20, 23, 40], "0021": [9, 14, 15, 19], "0022": [7, 9, 15], "0023": [9, 14, 29, 40], "0024": [9, 23, 29], "0025": [8, 9, 185], "0026": [9, 36], "00263": 36, "0027": [9, 14, 15], "0028": [9, 14], "0029": [9, 15, 31], "003": [2, 15, 16, 171, 185], "0030": [9, 185], "00305": 36, "0031": [9, 36], "0032": [7, 9, 18, 19], "00322793": 2, "0033": [8, 9, 15, 18, 20, 23, 29], "00333111e": 32, "0034": [9, 15, 29, 40], "00342423": 8, "0035": [8, 9], "00354605": 8, "00356473": 9, "0036": [9, 19], "0036976120249752": 7, "0037": [7, 9, 14], "00370324": 2, "003731": [7, 8], "003745": [7, 8], "003759": [7, 8], "0038": [9, 40], "0039": [9, 23], "004": 185, "0040": [9, 15, 36, 40], "0041": [9, 14, 40], "0042": 40, "0043": [9, 15], "0044": [9, 14], "0045": [9, 15, 29], "0046": [8, 9, 29], "0047": [9, 29, 36], "0048": [9, 36, 40], "0049": [9, 23], "005": 12, "0050": 9, "0051": [8, 9, 15, 23], "0052": [7, 9, 18, 19, 20, 36], "005201": [7, 8], "005267": [7, 8], "0053": [7, 9, 14, 18, 19, 20], "0054": [9, 14, 18, 20, 36], "00542224": 8, "0055": [9, 15], "0056": [9, 19], "005633": [7, 8], "0057": [15, 36], "0058": [9, 20], "0059": 9, "006": 15, "0060": [8, 9, 23], "0061": [7, 8, 9, 18, 19], "0062": [9, 23], "0063": [7, 9, 14, 15, 18, 20, 40], "0064": [8, 9, 15, 23], "0065": 9, "00652106e": 32, "0066": [9, 40], "0067": [9, 19], "0068": 9, "0069": [9, 15], "0070": [9, 29, 40], "0071": [7, 9, 14], "0072": [8, 9, 14, 23, 29], "0073": [7, 9, 18, 19, 20, 29, 40], "0074": [9, 29, 40], "007435": [7, 8], "0075": [9, 40], "007576": [7, 8], "0076": [9, 14, 29], "00765335": 19, "0077": [9, 19, 29], "0078": [9, 14, 29], "0079": [9, 23], "007f": [52, 65, 66, 67, 68, 69, 118, 130], "0080": [9, 29], "008045": [7, 8], "00805152": 7, "0081": [9, 36], "0082": 9, "00827991": 30, "0083": 9, "0084": 9, "0085": [9, 14], "0086": 9, "0087": 9, "0088": [9, 14], "0089": 9, "0090": [8, 9], "0091": 9, "0092": 9, "0093": 9, "0093012": 19, "00932275": 7, "0094": 9, "0095": [9, 36], "0096": [9, 36], "00965673e": 39, "0097": [9, 15], "0098": [9, 15, 36], "009868": [7, 8], "0099": [9, 15], "00992555": 9, "009933": [7, 8], "01": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 26, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 44, 45, 47, 53, 54, 55, 56, 57, 144, 171, 175, 178, 183, 185], "010": [7, 8, 9, 15, 18, 19, 20], "0100": 9, "010079": [7, 8], "01024013e": 8, "01028137": 2, "01069377": 8, "010732": [7, 8], "01084089": 7, "011": [8, 9, 20, 29, 36], "01100645": 2, "01140416": 30, "012": [7, 8, 9, 14, 18, 19, 20, 23, 29], "01217676": 8, "01241175": 9, "013": [8, 9, 14, 15, 19, 20, 23, 29, 36], "013630": [7, 8], "014": [7, 9, 14, 23, 29, 40, 55], "0141": 31, "0149": 31, "015": [7, 8, 9, 14, 15, 23, 29, 144], "015381": [7, 8], "015500": [7, 8], "01562655e": 5, "0157": 31, "0159": 31, "016": [7, 9, 15, 18, 19, 20, 36, 40], "016527": [7, 8], "017": [8, 9, 19], "01757816": 30, "01787286": 7, "018": 9, "019": [9, 14], "01910610e": 26, "019355": [7, 8], "01943433": 9, "02": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 37, 39, 40, 41, 47, 53, 55, 56, 57, 122, 144, 171, 175, 185], "020": [9, 14], "020114": [7, 8], "020193584925389": 9, "020833": [7, 8], "02092595": 9, "021": [9, 15, 36, 47], "02117437": 2, "021355": [7, 8], "02155918": 2, "02170548": 30, "021741551637176403": 8, "021821": [7, 8], "022": [9, 15, 23, 29, 36], "022087577333468": 9, "022214368760193715": 14, "02231082e": 4, "02274707": 44, "023": [9, 14, 29, 40, 47], "02313728e": 6, "02346903e": 39, "0235": 33, "02374444": 2, "024": [7, 8, 9, 14, 15, 29, 47], "02409012": 30, "02428936": 30, "024823": [7, 8], "02483767": 29, "025": [9, 29], "025061083134673378": 8, "02548697": [7, 18, 19], "02554287": 44, "02564642": [7, 18, 19], "02575021": 30, "02596219": 29, "026": [8, 9, 14, 20, 23, 29, 40], "026619": [7, 8], "027": [7, 8, 9, 14, 18, 19, 20, 23, 29, 47], "02702131": 9, "02730592": 30, "02737024e": 23, "02773558": 29, "028": 9, "029": [7, 9, 19, 23, 40], "02943678": 9, "0296872": [7, 18, 19], "02979163": 44, "0298146": 2, "02983878": 30, "03": [2, 4, 5, 6, 7, 8, 9, 13, 15, 16, 19, 23, 29, 32, 36, 39, 40, 47, 53, 55, 56, 57, 170, 171, 185], "030": 9, "030303": [7, 8], "031": [9, 15], "03133290e": [5, 6], "03144452": 29, "031996": [7, 8], "032": [9, 15, 40, 47], "03210848": [18, 20], "03257461": 19, "032813": 9, "033": [9, 40], "03306735": [7, 18, 19], "03319698": 30, "03336015": 19, "03372647": [18, 20], "034": [9, 14, 40], "03451801": [18, 20], "03454161e": 39, "03497807": 29, "035": [9, 14, 15, 36], "03551377": [7, 18, 19], "03629576": 44, "03632272": 29, "03676195": 2, "037": [9, 14, 36, 40], "03703667": 44, "03704654": 9, "0373302": 2, "03752756": 44, "0376": 33, "03774863": 9, "03785094": [18, 20], "03790179": 29, "038": [9, 40], "03882539": [7, 18, 19], "039": [8, 9, 29, 54, 144], "0393462": 29, "03970752": [7, 18, 19], "03978034e": 32, "03993049": 9, "03994768": 19, "0399564198202886": 7, "04": [2, 3, 4, 7, 8, 9, 14, 15, 20, 21, 31, 36, 39, 40, 44, 47, 54, 55, 56, 57, 144, 170], "040": [7, 9, 14, 18, 19, 29], "04046603": [18, 20], "04094166": 29, "041": [9, 18, 20, 29, 47], "0413538": [18, 20], "04135536": 44, "04158213": 9, "04183614e": 6, "042": [9, 15, 54], "04203502": 185, "04203503": 185, "04204356": 9, "04207543": 44, "04230882": 19, "04238321": 44, "0425223": [18, 20], "04289017": 9, "042905188108048": 9, "043": [9, 20], "0430764": 9, "043189": [7, 8], "0437015": 20, "044": [7, 8, 9, 15, 18, 19, 23], "04421773": 29, "04432756": [18, 20], "04462864": 44, "045": [8, 9, 15, 18, 20, 23, 40], "04503263": 20, "04535355": [18, 20], "0453914": 20, "04579241": 19, "04585759e": 8, "04592872": 44, "046": [9, 54], "04647771": 20, "04667582": [18, 20], "047": [7, 9, 14, 19], "04723274": [7, 18, 19], "04726087": 30, "04742354": [7, 18, 19], "04745674": 44, "04755329": 20, "04774432": 20, "048": [7, 9, 40, 54], "04807705": 29, "04828249": 19, "04852969": 20, "04863941e": 3, "04893332": 12, "04897392": 19, "049": [9, 36], "04907541": 20, "04927078": 20, "04927288": 30, "04988135": 20, "05": [7, 8, 9, 10, 14, 15, 16, 18, 19, 23, 26, 29, 30, 31, 32, 36, 39, 40, 42, 44, 45, 47, 54, 55, 56, 57, 121, 122, 127, 128, 132, 144, 170, 171], "050": [8, 9, 14, 36], "05033705": 29, "0507476631082548": 33, "051": [9, 23, 30, 34, 36, 40, 171], "05103838": [18, 20], "05112798": 20, "05137979": 20, "05150748e": 13, "0517859": 20, "05199345": 20, "052": [8, 9, 29, 36], "05201907e": 39, "0520937": [18, 20], "0528462": 20, "05289115": 29, "0529288": 20, "053": [9, 29], "05358558": 44, "05360544": 20, "05371274": 19, "0537393": 20, "05375933": 20, "054": [9, 29, 40, 53], "05417573": 20, "05418786": [18, 20], "05430773": 19, "05434705": [7, 18, 19], "055": [8, 9, 14, 29], "05537228": 19, "05570808": [7, 18, 19], "05576851": [7, 18, 19], "05581397": [7, 18, 19], "056": [8, 9, 29], "05618856": 44, "05627071": [18, 20], "05685439e": 5, "057": [9, 29], "05717669e": 3, "05726203": 30, "05744543": [7, 18, 19], "058": [9, 29], "05814153": 30, "05865087e": 12, "05865225e": 12, "059": 9, "059202": 29, "06": [7, 8, 9, 13, 18, 19, 20, 23, 29, 37, 44, 53, 54, 170, 171], "060": 9, "061": 9, "06105331": [18, 20], "06119574": [18, 20], "06173016": 19, "062": 9, "06210401": 11, "06251756": 19, "063": [7, 9, 14, 18, 19, 36], "06308422": 29, "06310889": 29, "06348968": 19, "06351213": [7, 18, 19], "06358463": [7, 18, 19], "06368034": 44, "064": [7, 8, 9, 18, 19, 20, 23], "06469243": [18, 20], "065": [7, 9, 18, 19, 20, 23], "06560031": 19, "06568282": [18, 20], "06593521": [18, 20], "066": [7, 9], "06610498": [7, 18, 19], "06656721": 30, "06697905": [7, 18, 19], "067": [9, 19, 40, 53], "06700177": 19, "06701373": 44, "06751700747046248": 10, "0676481": [7, 18, 19], "068": [9, 14, 19, 20, 36, 40, 47], "06832987": 11, "06858182": 2, "06880861": 19, "06892752": 19, "06894686": [18, 20], "069": [8, 9, 15, 23], "06982611e": 26, "07": [8, 9, 12, 15, 16, 23, 29, 44, 53, 54, 171], "070": [9, 15, 36], "07033698": 19, "07049715": [7, 18, 19], "07087663e": 26, "071": 9, "07120393e": 39, "072": [9, 23], "07275256": 44, "073": [7, 9, 14, 36], "07317879": 2, "0739193": 44, "074": [9, 15, 29], "07464383": 29, "07489027": 44, "075": [9, 14, 29], "07596741": 29, "076": [8, 9, 29], "077": [9, 29, 36], "078": 9, "079": [9, 29], "07941073": 2, "08": [2, 4, 5, 7, 8, 9, 13, 14, 19, 23, 36, 40, 44, 47, 53, 55, 56, 57], "080": [9, 54], "08070112": 30, "08083036": 30, "08086158e": 23, "081": [9, 29], "0810491": 2, "082": 9, "08277551": 29, "083": 9, "083026522037701": 9, "084": [9, 29], "085": [8, 9, 29], "08520002": 44, "086": [9, 29, 44, 45, 171], "08622477": 29, "087": [9, 29], "08797657e": 39, "088": [7, 8, 9, 18, 19, 23], "089": [9, 18, 20], "08919173e": 39, "09": [3, 4, 5, 6, 7, 8, 9, 12, 13, 16, 26, 40, 44, 171], "090": [9, 15], "091": 9, "092": [7, 9, 23], "09226948e": [3, 4, 7], "093": [9, 19], "0933616": 30, "094": 9, "09420898": 30, "09437885e": 39, "095": 9, "09507654e": [3, 4, 7], "096": [9, 23], "097": [8, 9, 20, 23, 40], "09702783e": 39, "09718550832245015": 10, "0972": 10, "098": [7, 9, 18, 19, 20], "09849875e": [5, 6], "099": [7, 9], "1": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 24, 26, 27, 29, 30, 31, 32, 33, 36, 37, 39, 40, 41, 44, 45, 47, 48, 51, 52, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 93, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 151, 152, 153, 154, 155, 156, 161, 163, 166, 167, 170, 174, 178, 179, 183, 184, 185, 188], "10": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 23, 26, 29, 36, 39, 40, 41, 44, 47, 54, 98, 115, 121, 122, 127, 128, 132, 139, 170, 178, 182], "100": [9, 11, 14, 15, 31, 36, 39, 40, 44, 54, 102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 120, 121, 122, 124, 125, 127, 128, 132, 146, 163, 182, 184], "1000": [81, 114, 134, 135, 136, 137, 151, 152], "1006": 33, "10083470e": 5, "1010": 9, "102": 47, "1021": 9, "10292071071001885": 10, "103": 55, "1030": 9, "10319630e": 8, "10326076e": 32, "10362386": 11, "1037": 9, "105": 31, "1053": 9, "10584830e": 5, "106": 9, "1060": 9, "107": 15, "10758846e": 39, "1077": 9, "10847215e": 23, "10y": 47, "11": [3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 26, 29, 32, 36, 39, 40, 56, 98, 171], "1106": 9, "11063721e": 32, "11093659": 2, "112": 53, "113": 47, "1133": 9, "11391513": 11, "11421641e": 4, "11478008e": 23, "11484352e": 39, "115": 54, "1162": 9, "117": 47, "1176": 9, "1177": 9, "118": 54, "11868007e": 12, "11892006e": 23, "119": [14, 40, 54], "1191": 9, "1193": 9, "11982861e": 39, "12": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 39, 41, 44, 47, 53, 55, 56, 57, 98, 170, 175], "120": 31, "12051211e": 39, "121": [47, 54], "1210": 9, "12158920e": 39, "1220": 9, "1225": 14, "1235": 9, "124": 54, "1248": 9, "12489362e": 39, "12492676e": 5, "125": 47, "1250": 56, "12587013e": 39, "126": 39, "1275": 9, "128": 47, "1289": 15, "12895735e": [5, 6], "129": 41, "1291": 9, "1298": 9, "13": [5, 7, 8, 9, 14, 15, 20, 23, 29, 40, 55, 102, 104, 105, 106, 108, 111, 113, 114, 163], "13001762e": [5, 6], "1301": 9, "1304": 36, "1314": 9, "1315": 9, "1317": 9, "132": 9, "13239659e": 39, "1327": 9, "1330": 9, "1332": [9, 40], "13346758e": [5, 6], "1335": 9, "1343": 15, "1346": 40, "13607836e": 8, "1362": 55, "13696569e": [5, 6], "13808863e": 39, "1394": 9, "14": [7, 8, 9, 14, 15, 16, 18, 19, 23, 26, 27, 29, 31, 34, 40, 41, 47, 171], "1428": 9, "14323018e": 39, "144": 47, "1453": 9, "1455": 55, "147": 47, "14733606e": 8, "14759387e": 6, "148": 47, "1486": 14, "14895433": 30, "1494": 9, "14964179e": 39, "15": [4, 8, 9, 14, 15, 23, 29, 36, 40], "150": 11, "151": [3, 16, 171], "152135": 44, "152278": 44, "1526": 29, "153001": 44, "1536": 9, "154207": 44, "155202": 44, "1565": 29, "1577": 29, "1588": 29, "1589": 9, "159": 47, "15980287": 2, "16": [7, 8, 9, 14, 15, 18, 19, 20, 29, 31, 36, 40, 44], "1604": 36, "161": 47, "16112642e": 26, "16206284e": 5, "16254780e": 39, "1630": 29, "16368341e": [3, 4, 7], "1648": 9, "165": [14, 15, 40], "16514560e": 32, "16562529e": 8, "166667": 41, "16732030e": 32, "169083": 44, "1695": 9, "16956647": 11, "17": [7, 8, 9, 10, 14, 15, 19, 20, 23, 29, 40, 41, 42, 44, 171], "170": 36, "1700238781664583": 10, "170897": 44, "171": 36, "171737": 44, "17183301e": 39, "171892": 44, "17212380e": 39, "17341817e": 11, "17359260e": 39, "1739": 9, "174": 47, "1742": 9, "174764": 44, "17510456": 2, "17733231e": [12, 13], "177369": 44, "178946": 44, "1794": 9, "18": [7, 9, 14, 15, 18, 19, 20, 23, 29, 33, 36, 40, 41, 44], "180": [14, 40], "1800": 23, "181": 47, "182061194357152": 9, "18289085e": 8, "183766": 44, "184": [7, 16, 171], "18408031e": 5, "184267": 44, "1843": 9, "18441126e": [3, 4, 7], "185": 54, "18538495e": 5, "186081": 44, "187148": 44, "187463": 44, "1875": 56, "18803064e": 26, "18849904e": 39, "1888": 7, "1890": 9, "19": [7, 8, 9, 14, 18, 20, 23, 29, 36, 41], "190": 36, "190308": 44, "190412": 44, "191375": 44, "192": 47, "192007": 44, "19328243e": 32, "1938": 9, "194368": 44, "195078": 44, "1952": 170, "1955": 117, "1959": [8, 23], "195953": 44, "19657594e": [5, 6], "1967": [31, 39], "196927": 44, "197475": 44, "1976": 8, "19789402e": 6, "1981": 166, "1984": 9, "1986": 117, "19871439e": [3, 4, 7], "1988": [75, 137], "199": [2, 16, 171], "1990": [3, 4, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 32, 41, 47, 56, 57, 175], "1991": 144, "1996": 20, "1_mean_risk": [16, 171], "1d": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "1e": [14, 102, 104, 105, 106, 108, 111, 112, 113, 114, 121, 122, 127, 128, 132, 163, 170], "1e5": 101, "1e6": 41, "1y": 47, "2": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 23, 26, 29, 31, 32, 36, 39, 40, 44, 47, 51, 52, 55, 59, 61, 62, 63, 64, 75, 98, 99, 100, 101, 106, 107, 111, 113, 114, 115, 117, 121, 122, 124, 125, 127, 128, 129, 132, 134, 137, 138, 140, 144, 151, 152, 153, 154, 155, 161, 170, 174, 178, 183, 184, 185, 188], "20": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 39, 41, 44, 47, 56, 57, 113, 121, 122, 127, 128, 132, 175], "200": [11, 121, 122, 127, 128, 132], "2000": [14, 15, 31, 36, 39, 40, 54, 122], "200046": 44, "200105310175214": 9, "2002": [102, 104, 105, 106, 108, 111, 113, 114, 146, 163], "2004": [114, 151, 152], "2005": [60, 117], "200575932248872": 9, "2006": 113, "2007": [144, 170], "2009": [51, 124, 151, 152, 153, 154, 161], "2010": [44, 115, 141, 145, 174, 181], "20106233e": 8, "2014": [2, 5, 6, 29, 53], "201485": 44, "2015": [10, 33, 111, 113], "2016": [59, 61, 63, 64, 125, 129], "2017": [124, 140, 174], "2018": [26, 55, 98, 122, 124], "2019": [111, 117, 125, 129, 137], "2020": [26, 30, 104, 105, 113, 124, 125, 129, 183, 188], "202081924170507": 9, "20210608e": 39, "2022": [3, 4, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 30, 32, 33, 41, 44, 47, 53, 56, 57, 111, 175, 185], "20227491": 2, "2023": [14, 15, 31, 36, 39, 40, 54, 55, 111, 170], "2024": 179, "2025": 9, "203": 47, "2031": 19, "203852": 44, "2041": 9, "204832": 44, "20495386e": 39, "205": 54, "20549958e": 39, "20575709e": 39, "2061": 9, "2065": [18, 20], "20663228": 11, "20664617": 11, "206697": 44, "20670474": 11, "20671539": 11, "206951": 44, "206968": 44, "207576": 44, "2076": 9, "20898034e": [3, 4, 7], "209": 54, "20904431e": 32, "2091": 9, "209388": 44, "21": [8, 9, 10, 12, 14, 15, 16, 19, 29, 39, 40, 171], "210": 39, "2102": 9, "2112": 9, "2117": [7, 9, 18, 19], "212": [20, 21, 171], "2124": 9, "2126": 9, "21327461e": 5, "215": 47, "215212": 44, "21580436": 2, "216570": 44, "22": [4, 7, 9, 14, 15, 18, 19, 20, 29], "220": [47, 54], "221074": 44, "22117587e": 32, "221868": 44, "22188511e": [5, 6], "222": 54, "223": 33, "22380709e": 5, "224": 54, "225127": 44, "22541347e": 32, "2264": 53, "22736942e": 39, "22768876": 11, "22770146": 11, "22770271": 11, "22788246": 11, "229": [47, 54], "23": [7, 8, 9, 15, 18, 20, 23, 29, 115], "23117943e": 39, "23245370e": 32, "23352411e": 3, "235": 47, "235650": 44, "236": [5, 16, 171], "23719260e": 5, "239496": 44, "239639": 44, "24": [9, 14, 23, 29, 36, 40, 42, 44], "240": 54, "24004576e": 5, "24120028e": [3, 4, 7], "241811": 44, "241965": 44, "242284": 44, "242375": 44, "24355699e": 4, "245": 31, "24556425e": 6, "246774": 44, "247": 55, "249": 54, "24959219e": [5, 6], "25": [4, 9, 14, 15, 31, 33, 36, 40, 120, 124, 125], "2500": 56, "25000": 56, "25073031e": 32, "251145": 44, "251838": 44, "252": [9, 12, 13, 14, 15, 31, 33, 36, 39, 40, 47, 113, 135, 136, 137, 170, 174, 182], "25212125e": 13, "253": 53, "253970": 44, "254": 54, "25426519e": 39, "254766": 44, "255": [14, 15, 40], "256": 53, "26": [8, 9, 15, 36, 40], "26134346e": 5, "26155697e": 8, "261709": 44, "263": 53, "264": 47, "264077": 44, "264144": 44, "266": 47, "266908": 44, "267": 47, "268": 47, "269": 47, "269549": 44, "269812": 44, "26990281e": 32, "27": [8, 9, 15, 29, 36], "270434": 44, "27194222e": 3, "272263586429105": 29, "27250993e": 4, "27314017e": 39, "275882": 44, "27962284e": 4, "27967880e": [5, 6], "28": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 40, 41, 44, 47, 53, 56, 57, 175], "28133405e": 39, "282": 47, "28246101": 11, "283": [47, 54], "28439988": 12, "28498817e": [3, 4, 7], "285": 54, "28522027e": [3, 4, 7], "286204": 44, "287342": 44, "288": 47, "288435": 44, "289": 54, "289510": 44, "29": [7, 9, 14, 18, 19, 23, 29, 40, 53], "292817": 44, "29453598e": 13, "29453703e": 13, "295364": 44, "296356964248307": 9, "297652": 44, "298": 36, "2980": 36, "29962478e": 32, "2_": [151, 152, 153, 154], "2_risk_budget": [21, 171], "2d": [5, 11, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 144, 187], "2f": [2, 14, 23, 33, 36, 39, 40], "2h": [134, 135, 136, 137], "2x3x3": 15, "3": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 26, 29, 31, 32, 36, 39, 40, 41, 42, 44, 47, 52, 56, 65, 66, 67, 68, 69, 98, 99, 101, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 127, 128, 129, 130, 132, 138, 151, 152, 170, 174, 178, 185, 186], "30": [2, 8, 9, 14, 15, 18, 20, 23, 33, 36, 40, 41, 47, 134, 135, 136, 137, 171, 184], "30000034617916516": 11, "301": 47, "301057537801782": 29, "303": 55, "30314924e": 3, "304": 47, "30530766e": [3, 4, 7], "305664213686036": 9, "306039": 44, "30675668e": 39, "307": [14, 16, 171], "30700985e": 32, "30775206e": 39, "31": [8, 9, 14, 15, 31, 36, 39, 40, 44, 54, 55], "310": [34, 47, 55], "31092783e": 5, "312173": 44, "31250": 56, "313": 54, "314383": 44, "315": [26, 27, 171], "31563874e": 39, "316": 55, "316284": 44, "31737525e": [5, 6], "318": [11, 16, 171], "32": [7, 8, 9, 14, 15, 18, 19, 23, 29, 40], "320883": 44, "321191": 44, "32124541e": 5, "322": 47, "322091": 44, "322661810340446": 9, "32493866e": 6, "32678922e": 39, "33": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 32, 33, 34, 36, 39, 40, 170, 171, 178, 183, 184], "330": 53, "330876": 44, "332589": 56, "3333332": 12, "33333333e": 11, "33333336": 12, "33333345": 12, "33456624e": 23, "334821": 56, "335938": 56, "336": 55, "337": 54, "337054": 56, "338": 53, "339286": 56, "33953561e": 5, "34": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 31, 34, 171], "34073945e": 4, "34097308e": 6, "345087054431556": 10, "34583888e": 32, "347656": 56, "348085": 44, "34862950e": [3, 4, 7], "34906672e": 32, "34914228e": 26, "349220": 44, "35": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 44, 55], "35005322e": 3, "351": 53, "351130": 44, "352": 57, "35228602e": 5, "353": 57, "354": 54, "354942": 44, "355": 57, "355469": 56, "355792": 44, "35632022e": 23, "35652050e": [5, 6], "356746": 44, "35710067e": [3, 4, 7], "358": 57, "359": 57, "35927671e": 8, "36": [9, 14, 18, 20, 29, 33, 44, 55], "360345": 44, "361084": 44, "36110766e": 39, "36241349e": 26, "362751": 44, "36336705e": [5, 6], "364": 47, "36401076e": 4, "364353": 44, "365": 114, "368335377715717": 9, "368504": 44, "368514": 44, "37": [7, 9, 14, 15, 18, 20, 23, 29, 55], "371094": 56, "371865": 44, "37192080e": 12, "374699": 44, "3750": 56, "375000": 56, "38": [9, 15, 29, 40, 55], "38087390e": 5, "381": 54, "382": 54, "382813": 56, "382926": 44, "38396567e": 32, "384": 47, "38460704e": 26, "38469617e": 39, "38535227e": 39, "386": [47, 54], "387": 47, "388": [10, 16, 171], "39": [2, 7, 9, 14, 15, 18, 19, 20, 29, 36, 40], "391": 47, "391758": 44, "392": 54, "393": 47, "394": 47, "394581": 44, "395642": 44, "397": 47, "399360341488464": 9, "399780": 44, "3_maxiumum_diversif": [24, 171], "3d": 134, "3f": 15, "3fri": [41, 99], "3m": 47, "3rd": 41, "3x3": 14, "4": [3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 23, 26, 29, 32, 36, 39, 40, 44, 47, 51, 55, 56, 98, 99, 111, 112, 113, 124, 125, 128, 138, 139, 140, 161, 174, 183, 185], "40": [8, 9, 14, 18, 20, 23, 29, 36, 39, 54, 185], "400": [44, 55], "40116574e": 39, "40239485319279": 9, "40287802e": 39, "40429482e": 4, "405": 54, "40597193e": 4, "407690290599575": 9, "40812344e": 3, "408136": 44, "40973224e": 39, "40979832e": 12, "41": [9, 14, 18, 20, 29, 55, 114], "41147667e": 23, "412": [4, 16, 171], "416": [6, 16, 171], "41661311e": 39, "41726679e": 8, "41742527e": 8, "41851375e": 32, "42": [9, 14, 15, 29, 36], "422": 53, "42282444e": 5, "423": 47, "42391438e": 5, "42685508e": 6, "42766417e": 39, "42768380e": 26, "428": [23, 24, 171], "42859778e": 39, "42882219e": 26, "43": [7, 8, 9, 14, 19, 23, 29, 36], "430": [53, 55], "43028265e": 13, "43231855e": [3, 4, 7], "43695519e": 32, "437": 53, "43758398806516": 9, "438": 47, "43855248e": [3, 4, 7], "43876113e": 5, "44": [9, 15, 29, 31, 40], "44086886e": 32, "44128512e": [5, 6], "44532312e": 5, "44687699e": 5, "44938306e": 3, "45": [7, 9, 14, 15, 18, 19, 23, 31, 36], "45171911e": 23, "452": [47, 54], "455": 53, "45574521e": 5, "458": 54, "45803069e": 4, "459": 47, "46": [9, 14, 15, 18, 20, 23, 29, 36, 39, 53], "460": 55, "460872007821077": [7, 18, 19], "461275191312059": 8, "462": [18, 21, 54, 171], "463": 47, "46436338e": [5, 6], "47": [7, 9, 19, 20, 29, 53], "47134961e": 5, "47358386e": 8, "474123745524875": 9, "475": 54, "476": 54, "48": [8, 9, 14, 15, 19, 23, 29, 36, 53], "481": 47, "48148340e": 39, "48213167e": 39, "48283750e": 5, "483": 54, "48339328e": 32, "48492469e": 32, "48598568e": 5, "48699105e": 23, "48850261e": 5, "49": [7, 8, 9, 15, 18, 19, 23, 29, 36, 40], "492": [12, 16, 171], "495": 55, "49645166e": 5, "498": 54, "49938736e": [3, 4, 7], "49999867": 11, "4_distributionally_robust_cvar": [27, 171], "4f": [31, 33], "5": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 36, 39, 40, 41, 44, 53, 56, 59, 60, 61, 63, 64, 98, 99, 100, 111, 112, 113, 120, 121, 122, 124, 125, 127, 128, 129, 132, 133, 140, 170, 174, 186, 188], "50": [9, 11, 12, 14, 15, 19, 29, 31, 36, 40, 44, 55, 120, 124, 125], "500": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 33, 41, 44, 47, 56, 57, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 175], "5000": 56, "50000": 56, "501": [39, 42, 171], "5016": 115, "502": 53, "5029": 115, "50514320e": 5, "50727312e": 23, "508": 47, "51": [8, 9, 14, 15, 20, 23, 29, 39, 55], "512": [16, 54], "51323607e": 23, "51376159e": 4, "51475217e": 39, "5152184941723748": 9, "51844546e": 3, "52": [8, 9, 15, 18, 20, 23, 53], "522": 47, "52209193e": 39, "52217700e": 39, "527": [8, 16, 171], "52708811e": 8, "53": [7, 8, 9, 14, 15, 36, 40, 53], "53270264e": 39, "53328937509076": 29, "53379955e": 26, "53398775": 9, "535": 54, "536": 47, "53621465e": 39, "537": 47, "54": [7, 8, 9, 14, 18, 19, 23, 29, 40], "540": 54, "54391616e": 39, "543932": 44, "54482537e": 39, "54697151e": 5, "548": 54, "549": 47, "55": [9, 14, 23], "550": 55, "55249501e": 32, "553": 54, "55455742": 9, "558054": 44, "55969356e": 32, "56": [7, 9, 15, 18, 19, 29, 40], "56000809e": 6, "56017723500113": 29, "560475": 44, "562": 54, "56214479e": 6, "56311233e": 39, "56548525": 11, "56558315": 11, "56559255": 11, "56566507": 11, "568791": 44, "56967308e": 26, "57": [9, 14, 19, 23], "571": 171, "572": 54, "572056": 44, "57560762e": 23, "578": 54, "57851861e": 5, "5798056188194143": 9, "58": [2, 7, 9, 14, 15, 20, 29, 115], "581": [47, 54], "58269647e": 3, "58312606e": 39, "58350612e": 8, "585": 21, "59": [9, 14, 15, 23, 40, 44], "590": 54, "59086641e": 32, "591675649894958": 9, "59482204e": 5, "595": 47, "5960": 54, "59687833e": 39, "59789920e": 5, "59858003": 9, "59880563e": 5, "599": 47, "5_cluster": [34, 171], "5f": 36, "6": [3, 5, 6, 8, 9, 11, 12, 13, 15, 23, 26, 29, 32, 36, 39, 41, 47, 55, 98, 99, 113, 174, 185], "60": [2, 9, 12, 13, 14, 15, 31, 33, 36, 40, 44, 170], "6008387080754516": 9, "60306246e": 39, "61": [8, 9, 29, 40], "611": [32, 34, 171], "61481439e": 5, "61513792e": 5, "62": [8, 9, 14, 15, 29], "62035863e": 39, "621": [47, 55], "62236661e": 32, "62545194e": 26, "62632716e": 5, "63": [9, 15, 18, 19, 20, 29], "63374918e": 39, "634": 47, "63432134e": [5, 6], "636": 47, "638": [41, 42, 171], "63901744e": 32, "64": [9, 14, 15, 29, 31, 36, 39, 40, 54], "64005580e": 6, "64171693e": 32, "64220700e": 5, "644": 47, "64535333e": 32, "64582189e": 5, "646": 47, "64696218e": 39, "64772972e": [3, 4, 7], "648": 55, "64823756e": 3, "64862543e": 39, "64888981e": 8, "65": [7, 9, 14, 15, 18, 19, 29, 36, 40], "65046123e": 39, "65079997e": 39, "653": 47, "65451603e": 4, "655": 15, "65625": 56, "658": 47, "66": [9, 15, 18, 20, 23, 29, 40, 54, 55], "66255502e": 5, "664": 47, "66647584e": 4, "66666667e": 11, "66785730e": 5, "669076363622692": 9, "67": [8, 9, 18, 20, 23, 44, 57], "67249461e": 26, "67279164e": 39, "677": 53, "67826275e": 39, "68": [7, 8, 9, 36], "681": 55, "68197345e": 5, "685": 54, "685271602584908": 23, "68550154": 9, "686": [36, 37, 171], "68739416e": 5, "68752474e": 39, "687782011560027": 9, "69": [9, 14, 15, 20, 29, 36, 54, 57], "692": 47, "69581067e": 6, "69632764e": 6, "6_ensembl": [37, 171], "7": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 23, 26, 32, 33, 39, 40, 55, 98, 121, 122, 127, 128, 132, 174], "70": [8, 9, 15, 23, 29, 36, 51, 54, 121, 122, 127, 128, 132], "700": 55, "704": 53, "70440099e": [5, 6], "709": 47, "71": [8, 9, 14, 23, 29, 40], "711": 54, "716": 54, "72": [7, 9, 10, 14, 15, 19, 29, 36, 40, 54, 55], "722": 53, "72248235e": 5, "72469426e": 6, "725": 54, "72770463e": 39, "72794158e": 5, "728117696106207": 19, "729": 54, "72968062e": 32, "72985253e": 4, "73": [7, 9, 14, 15, 18, 19, 20], "731": 53, "73658093e": 39, "73670065e": 4, "73718908e": 4, "738": [40, 42, 47, 171], "73909314e": [3, 4, 7], "74": [7, 9, 14, 15, 29, 40, 54], "74138185e": 23, "74162504e": 32, "74197781": 11, "74253021e": [5, 6], "74284346e": 32, "74361693e": 5, "74395933e": 39, "74514930e": 39, "74523289e": 39, "74787861e": 13, "74823262e": 5, "74856659e": [3, 4, 7], "75": [9, 11, 14, 15, 23, 29, 36], "75000": 56, "75767841e": 39, "75790832e": 32, "75802352": 11, "75907600e": 39, "76": [8, 9, 15, 20, 57], "76926114e": 39, "77": [8, 9, 14, 23, 29, 55], "77006663e": 5, "772": [47, 48, 171], "77319466e": 39, "775": 47, "777": 47, "77784307e": 5, "77910456e": 4, "78": [2, 8, 9, 14, 19, 23, 29, 40, 55], "780": 55, "78010014e": [3, 4, 7], "78013891e": 6, "78090544": 9, "78413867e": 3, "786": 39, "78708311e": 3, "78775169e": [12, 13], "788185892520897": 9, "78965839e": 5, "79": [7, 8, 9, 14, 18, 19, 23, 36, 57], "79050966e": 23, "79104637e": [5, 6], "792": 53, "79313343e": 32, "79558938e": 39, "79633825e": 39, "796875": 56, "79844555e": 8, "79851683e": 4, "7_pre_select": [42, 171], "8": [3, 4, 5, 6, 7, 8, 9, 12, 15, 18, 19, 20, 23, 26, 29, 31, 32, 33, 36, 39, 40, 44, 52, 55, 65, 66, 67, 68, 69, 98, 118, 130, 161, 170, 182], "80": [9, 15, 19, 40], "800": 39, "80664221e": 39, "80823150e": 39, "809": 55, "81": [7, 8, 9, 14, 15, 19, 29, 40], "811": 55, "81108516e": 39, "81161325e": 3, "81176235e": 5, "812": 47, "8125": 56, "81629430e": 26, "82": [9, 15, 20, 23, 29, 36, 55], "820": 47, "82266765e": [12, 13], "825": 55, "82564384e": 39, "82592031e": 23, "82872903e": 39, "829": 54, "83": [7, 9, 15, 18, 19, 23, 36], "8313": [56, 57], "83522508e": 6, "83697624e": 39, "837": [33, 34, 171], "84": [9, 14, 20, 29, 36], "84021249e": [3, 4, 7], "84069930e": 39, "843069929154527": 9, "84348572e": 26, "84375687e": 39, "84526736e": 39, "84531907e": 26, "847": 47, "84887386e": 39, "84916828e": 39, "84980192e": 4, "85": [9, 14, 15, 40], "852": 54, "853": 47, "85405564e": 39, "85498669e": 32, "85688593e": 6, "859": 9, "859375": 56, "85983398e": 26, "86": [9, 14, 18, 20, 29, 33, 40], "860": [14, 47], "864764715990296": 9, "869": [9, 55], "87": [8, 9, 14, 29], "875000": 56, "877": 42, "87866505e": 3, "87986871": 9, "88": [9, 33, 36, 40, 114], "88131852e": 12, "88142338e": [5, 6], "88210632e": 5, "884": [13, 16, 171], "885": 54, "89": [9, 15, 29, 40, 55], "890625": 56, "89116954e": 5, "89248471e": 39, "89279675e": 39, "89322196e": 3, "894001701422519": 9, "89793803e": 8, "8_metadata_rout": [45, 171], "9": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 20, 23, 26, 32, 33, 36, 39, 44, 98, 121, 122, 127, 128, 132, 183, 186], "90": [8, 9, 15, 23, 29, 36], "90123331e": 26, "902": [29, 34, 171], "90340137e": 23, "9038840095066056": 10, "907": 54, "90879685e": 3, "90935190e": 32, "91": [9, 15, 29, 40, 55], "910": [19, 21, 31, 34, 47, 171], "91035768e": 8, "912975728797552": 7, "913": 55, "914061803583557": 9, "91471166e": 39, "91741539e": 39, "91785162": 9, "91802980e": 5, "91846109e": 39, "92": [8, 9, 15, 23, 29, 54], "921033968992518": 20, "92183632e": 39, "922": [9, 55], "926": 54, "92817471e": 8, "92866673e": 39, "92880653e": 39, "93": [9, 14, 29], "93000375": 9, "93188830e": 6, "933": 55, "936428254316073": 9, "93749217": 9, "9375": 56, "93771054e": 3, "938": 47, "93952573e": 23, "94": [7, 8, 9, 15, 18, 19, 23, 29, 36], "940": 9, "9401232": 9, "94513306e": 39, "94746608e": 5, "94836568e": 39, "95": [2, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 54, 71, 72, 73, 74, 76, 77, 93, 121, 122, 128, 132, 135, 136, 137, 138, 151, 152, 153, 154, 182, 184], "950": 54, "95027284": 9, "95048460e": 23, "95142106e": 5, "96": [9, 14, 54], "96049980e": 39, "965": 55, "966": 47, "967": 55, "96861483": 9, "96895546e": 3, "969": 9, "96913808e": 39, "97": [9, 14, 15, 18, 20, 29, 36, 54], "972": 54, "97503410e": 26, "97776252e": 5, "97964062": 9, "97994501e": 6, "98": [7, 9, 18, 19, 36], "98154300e": 23, "98213665e": 3, "98242729e": 6, "98247367e": 39, "98298183e": 5, "98357211e": 32, "98391244e": 39, "98463685": 9, "98558904e": 39, "986": 53, "987": 47, "98869944e": 32, "99": [9, 15, 19, 29], "991": [47, 53], "99284245e": 39, "995": 55, "995810799947282": [18, 20], "996": [9, 16, 171], "99610901e": 4, "99620661e": 39, "99627408e": 39, "9983657": 9, "999": [9, 53], "999999999999993": [8, 23, 29], "9_data_prepar": [48, 171], "A": [2, 3, 4, 5, 11, 12, 14, 29, 40, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 163, 173, 174, 176, 178, 181, 183, 184, 185, 186, 187], "And": [18, 19, 30, 117, 132, 183], "As": [2, 12, 13, 18, 19, 23], "At": [135, 136, 137], "But": 6, "By": [4, 6, 11, 12, 13, 14, 15, 32, 40, 54, 55, 175, 178, 187], "For": [2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 51, 62, 98, 99, 100, 102, 104, 105, 106, 108, 110, 111, 112, 113, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 137, 141, 146, 170, 174, 178, 181, 182, 183, 184, 185, 187], "IN": 134, "If": [11, 12, 13, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 163, 170, 174, 175], "In": [2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 29, 30, 31, 32, 33, 39, 40, 44, 52, 62, 65, 66, 67, 68, 69, 96, 99, 112, 115, 118, 130, 133, 148, 178, 181, 182, 184, 185], "It": [3, 4, 5, 7, 8, 11, 15, 26, 29, 30, 32, 40, 44, 75, 78, 80, 83, 86, 88, 89, 102, 104, 105, 106, 108, 111, 113, 114, 120, 121, 122, 124, 125, 127, 128, 129, 132, 135, 136, 137, 144, 146, 161, 163, 170, 172, 173, 174, 176, 177, 178, 183, 185, 186, 187, 188], "Its": [14, 15, 129], "No": [2, 14, 15, 165], "Not": [51, 58, 59, 60, 61, 62, 63, 64, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 144, 145], "On": [141, 166, 170], "One": [112, 129, 182], "That": [14, 121], "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 83, 86, 88, 89, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 172, 175, 178, 182, 183, 185, 187, 188], "Then": [2, 12, 13, 14, 31, 32, 39, 40, 44, 129, 145, 163, 181, 183], "There": [117, 174], "These": [14, 15, 174, 187], "To": [5, 7, 8, 10, 12, 18, 19, 20, 23, 26, 29, 30, 32, 36, 40, 44, 98, 129, 133, 137, 138, 182, 183, 187], "With": [44, 52, 65, 66, 67, 68, 69, 113, 118, 121, 122, 127, 128, 130, 132, 141, 144, 170, 183], "_": [121, 174], "_2": 52, "__": [51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 178], "__getitem__": [52, 65, 66, 67, 68, 69, 118, 130], "__init__": [41, 58, 102, 103, 142, 143, 149, 150, 183], "_asset": [151, 152, 153, 154], "_avers": 110, "_coef": [14, 121, 127, 128], "_cost": [12, 120, 121, 124, 125, 127, 128, 132, 137], "_cvx_cach": 121, "_deviat": [135, 136, 137], "_factor": [135, 136, 137], "_fee": [13, 120, 121, 124, 125, 127, 128, 132, 137], "_get_support_mask": 41, "_prev_": [12, 120, 121, 124, 125, 127, 128, 132, 137], "_ratio": [135, 136, 137], "_return": [12, 13, 120, 121, 124, 125, 127, 128, 132, 137, 183], "_risk": 121, "_risk_": [128, 183], "_set_covari": 183, "_test_scor": 112, "_validate_data": [41, 183], "_varianc": [135, 136, 137], "aal": [54, 55], "aaoi": 55, "aaon": 55, "aapl": [4, 6, 7, 8, 11, 12, 13, 19, 41, 44, 47, 55, 56, 170, 187], "ab": [52, 65, 66, 67, 68, 69, 118, 130, 137], "abf": 54, "abl": [4, 6, 14, 15, 33], "about": [3, 4, 5, 6, 26, 29, 43, 46, 49, 121, 122, 127, 128, 132, 144, 179, 183, 187], "abov": [6, 11, 12, 13, 14, 15, 32, 44, 51, 101, 102, 104, 105, 106, 108, 111, 113, 114, 120, 121, 122, 124, 125, 127, 128, 132, 138, 141, 163, 170, 174, 178], "absolut": [4, 6, 7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 29, 30, 32, 36, 40, 59, 61, 63, 64, 68, 69, 83, 86, 121, 122, 127, 128, 132, 135, 136, 137, 138, 144, 170, 183], "abstract": [58, 97, 135], "accept": [78, 80, 86, 88, 89, 121, 128, 132, 134, 135, 136, 137], "accept_spars": 41, "access": [5, 26, 133], "accord": [12, 40, 100, 129, 133, 134, 138, 139, 140, 182, 183], "account": [12, 18], "accur": [4, 6, 146], "accuraci": [112, 121, 122, 127, 128, 132], "achiev": [2, 12, 14, 15, 31, 44, 174], "across": [0, 112, 141, 174], "activ": 179, "ad": [51, 112, 113, 114, 115, 116, 128, 132, 138, 139, 140, 146, 170, 178, 182, 184], "add": [9, 11, 12, 13, 31, 33, 36, 39, 40, 44, 120, 121, 122, 124, 125, 127, 128, 132], "add_constraint": [121, 122, 127, 128, 132], "add_object": [121, 122, 127, 128, 132], "add_vlin": [14, 15, 40], "addit": [44, 96, 100, 128, 132, 133, 134, 138, 139, 140, 170, 172, 174, 181, 182, 185], "addition": 178, "adher": [53, 54, 55, 56, 57, 175], "adjust": [53, 54, 55, 56, 57, 113, 137, 175], "advanc": [7, 8, 11, 49, 98, 121, 122, 127, 128, 132], "advantag": [14, 15, 178], "advis": [26, 179], "af": [12, 13, 113, 120, 121, 124, 125, 127, 128, 132, 137], "affect": [29, 30, 32, 105, 114, 115], "after": [52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 98, 99, 118, 129, 130, 175, 178], "again": [112, 133], "against": [5, 117, 138, 146, 187], "aggreg": [141, 174], "aht": 54, "ai": 170, "al": 111, "alejandro": 174, "algorithm": [29, 30, 32, 51, 52, 102, 104, 105, 106, 108, 111, 113, 114, 115, 124, 125, 129, 138, 140, 146, 151, 152, 163, 183], "alia": [112, 113, 114, 115, 116], "align": [128, 132, 161, 183], "all": [0, 5, 8, 11, 12, 14, 15, 26, 29, 32, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 170, 171, 174, 175, 178, 182, 183, 185], "allevi": 170, "alloc": [4, 12, 14, 15, 26, 29, 30, 31, 41, 117, 122, 124, 125, 132, 170, 174], "allow": [11, 36, 105, 112, 113, 114, 115, 116, 120, 124, 125, 133, 178, 183], "almost": [112, 114, 115, 116], "along": 14, "alpha": [44, 52, 65, 66, 67, 68, 69, 106, 107, 112, 113, 117, 118, 130, 170, 178], "alpha_": [112, 117], "alphabet": [52, 65, 66, 67, 68, 69, 118, 130], "alreadi": [30, 133, 175], "also": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 29, 30, 31, 32, 40, 41, 44, 52, 65, 66, 67, 68, 69, 118, 121, 122, 127, 128, 129, 130, 132, 133, 138, 140, 141, 146, 170, 174, 181, 182, 183, 185, 187], "alter": 111, "altern": [10, 113, 175], "alwai": [99, 163, 178], "amd": [7, 8, 41, 44, 47, 56], "among": [14, 15, 121, 128, 129, 132, 133, 183], "amount": 13, "amplitud": 111, "an": [4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 23, 26, 29, 30, 31, 32, 33, 36, 39, 41, 44, 52, 54, 55, 65, 66, 67, 68, 69, 74, 77, 98, 99, 100, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 154, 155, 157, 158, 159, 168, 177, 182, 183, 185, 188], "analys": 44, "analysi": [12, 13, 15, 39, 40, 44, 114, 117, 163, 184, 185], "analyst": [144, 183, 187], "analyst_view": [4, 187], "analyz": [10, 14, 15, 18, 19, 23, 29, 30, 31, 32, 36], "andersen": 113, "angular": [59, 61, 63, 64], "ani": [32, 44, 51, 52, 65, 66, 67, 68, 69, 113, 118, 120, 121, 122, 124, 125, 127, 128, 130, 132, 133, 134, 141, 170, 173, 176, 177, 178, 183, 185, 186, 187, 188], "ann": 33, "annual": [4, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 44, 67, 68, 69, 99, 113, 135, 136, 137, 174], "annualized_factor": [39, 113, 135, 136, 137], "annualized_mean": [9, 10, 14, 15, 47, 67, 135, 136, 137, 184], "annualized_semi_devi": [69, 135, 136, 137], "annualized_semi_vari": [69, 135, 136, 137], "annualized_sharpe_ratio": [7, 9, 10, 14, 15, 31, 33, 36, 39, 40, 44, 68, 135, 136, 137, 170, 182, 183, 185, 186], "annualized_sortino_ratio": [9, 10, 14, 15, 31, 68, 135, 136, 137], "annualized_standard_devi": [14, 69, 135, 136, 137], "annualized_vari": [9, 10, 18, 47, 69, 135, 136, 137, 184], "annum": 13, "anoth": [13, 14, 54, 55, 120, 121, 124, 125, 127, 128, 132, 137, 174, 178, 185, 187], "anthoni": [75, 137], "anto": 54, "anymor": 12, "api": [5, 6, 8, 33, 44, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 144, 145, 170, 173, 175, 176, 177, 178, 183, 186, 187, 188], "append": [12, 29, 30, 32, 134, 136, 184], "appl": [4, 11, 12, 13, 19], "appli": [6, 11, 12, 13, 59, 61, 63, 64, 99, 113, 120, 121, 122, 124, 125, 127, 128, 129, 132, 134, 137, 148, 161, 165, 174, 178], "applic": [51, 53, 54, 55, 56, 57, 105, 124, 161, 175, 178], "appreci": 170, "approach": [13, 14, 15, 120, 121, 124, 125, 127, 128, 132, 138, 144, 170, 178, 183, 187], "appropri": [30, 53, 54, 55, 56, 57, 138, 139, 140, 175], "approxim": [115, 170, 174], "ar": [0, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 29, 30, 31, 32, 33, 36, 41, 44, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 163, 170, 173, 174, 175, 176, 177, 178, 182, 183, 185, 186, 187], "arang": [41, 44], "arg": [52, 58, 65, 66, 67, 68, 69, 102, 103, 118, 130, 142, 143, 149, 150], "argpartit": 41, "argsort": [14, 15, 41], "argument": [51, 52, 58, 65, 66, 67, 68, 69, 96, 102, 103, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 142, 143, 149, 150, 178], "aris": [15, 121, 128, 183, 188], "arma": [98, 182], "around": [14, 31, 33, 36, 39, 112], "arrai": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 39, 41, 51, 58, 59, 60, 61, 62, 63, 64, 96, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 151, 152, 153, 154, 166, 167, 173, 176, 177, 183, 185, 186, 187, 188], "articl": 115, "asarrai": [7, 8, 14, 15, 96, 182, 185], "ascend": 134, "ascii": [52, 65, 66, 67, 68, 69, 118, 130], "assembl": 40, "asset": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 38, 40, 41, 42, 44, 47, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 75, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 151, 152, 153, 154, 163, 170, 171, 173, 174, 175, 176, 177, 181, 183, 185, 186, 187, 188], "asset_i": 144, "asset_j": 144, "asset_nam": 19, "assets_covari": 137, "assets_expected_return": 137, "assets_view": 6, "assign": [11, 52, 98, 101, 120, 121, 122, 124, 125, 127, 128, 132, 140], "associ": [77, 104, 112, 114, 115, 116], "assum": [4, 6, 10, 12, 13, 52, 65, 66, 67, 68, 69, 112, 114, 115, 116, 118, 130, 133], "assume_cent": [112, 114, 115, 116], "assumpt": [154, 174], "astyp": [14, 15, 44], "attent": 170, "attilio": [117, 141, 145], "attribut": [51, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 98, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 173, 176, 177, 183, 187, 188], "author": 170, "auto": [32, 44, 113, 183], "auto_exampl": [16, 21, 24, 27, 34, 37, 42, 45, 48, 50], "auto_examples_jupyt": 49, "auto_examples_python": 49, "automat": [151, 152, 175], "auxiliari": [132, 183], "avail": [44, 54, 55, 104, 105, 110, 112, 113, 114, 115, 116, 117, 121, 122, 124, 126, 127, 128, 129, 132, 133, 144, 145, 146, 147, 151, 152, 153, 154, 173, 175, 176, 177, 180, 181, 183, 185, 186, 188], "averag": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 39, 40, 41, 44, 52, 68, 69, 70, 101, 108, 128, 132, 135, 136, 137, 138, 141, 170, 182, 183], "average_drawdown": [69, 120, 121, 124, 125, 128, 132, 135, 136, 137], "average_drawdown_ratio": [68, 135, 136, 137], "avers": [12, 13, 76, 77, 110, 122, 128, 135, 136, 137, 183], "avg": [14, 15, 36, 40], "avoid": [7, 8, 32, 36, 44, 98, 100, 113, 121, 129, 133, 138, 182, 183], "axi": [29, 30, 32, 41, 134, 135, 136, 137], "b": [11, 12, 111, 121, 122, 127, 128, 132, 140, 144, 183, 185], "bac": [7, 8, 41, 44, 47, 56], "back": 163, "ball": [26, 122, 183], "bank": [75, 137], "bar": [44, 117], "barmod": 44, "barrier": [132, 183], "base": [28, 29, 36, 40, 41, 49, 51, 58, 65, 97, 98, 102, 103, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 140, 142, 143, 149, 150, 153, 154, 161, 167, 170], "basecombinatorialcv": [129, 133], "basecovari": [59, 104, 105, 110, 113, 117, 145, 183], "basecovarianceuncertaintyset": [121, 128], "basecrossvalid": [129, 133], "basedist": [120, 124, 125, 129], "baseestim": [41, 113, 129, 147], "baseloadingmatrix": [5, 146], "basemu": 145, "basemuuncertaintyset": [121, 128], "baseoptim": [100, 129, 133], "baseportfolio": [134, 136, 137, 185], "baseprior": [120, 121, 122, 124, 125, 126, 127, 128, 132, 144, 146, 151, 152, 153, 154], "basic": 20, "bay": [117, 118], "bayes_stein": [117, 118], "bayesian": [144, 170, 187], "bby": [41, 44, 47, 170, 187], "becaus": [4, 6, 12, 18, 30, 44, 115, 140, 174, 182], "becom": [12, 129, 133, 185], "been": [29, 30, 52, 65, 66, 67, 68, 69, 111, 118, 130, 133, 138, 139, 140, 161, 170], "befor": [39, 40, 49, 52, 65, 66, 67, 68, 69, 98, 99, 112, 114, 115, 116, 118, 130, 134, 140, 185], "begin": [52, 65, 66, 67, 68, 69, 118, 128, 130, 132, 141, 161, 183], "behav": 174, "behind": 170, "being": [98, 115, 178], "belief": [3, 4, 5, 29, 183, 187], "bellow": 29, "belong": [9, 10, 184], "below": [4, 6, 9, 11, 12, 13, 14, 15, 29, 30, 32, 33, 36, 44, 51, 78, 80, 89, 99, 101, 111, 112, 120, 121, 122, 124, 125, 127, 128, 132, 135, 136, 137, 138, 140, 170, 174, 178, 183], "bench": [3, 18, 19, 20, 23, 26, 29, 30, 32], "benchmark": [7, 8, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 40, 44, 126, 127, 128, 129, 133, 183], "benefit": 178, "best": [38, 42, 49, 112, 139, 170, 171, 178], "best_estimator_": [14, 15, 31, 33, 36, 40, 44, 170, 178], "best_model": [14, 15, 170, 178], "best_model_r": 15, "best_model_rd": 14, "best_params_": [14, 15, 40], "beta": [5, 71, 72, 73, 74, 76, 77, 93, 117, 135, 136, 137, 146, 151, 152, 153, 154, 187], "beta_": [44, 113, 117], "better": [14, 15, 29, 30, 31, 32, 41, 44, 113, 121, 122, 124, 125, 127, 128, 132, 135, 136, 137, 183], "between": [2, 12, 14, 15, 29, 30, 32, 41, 47, 51, 52, 62, 65, 66, 67, 68, 69, 83, 112, 113, 114, 115, 116, 118, 125, 127, 128, 130, 135, 136, 137, 141, 144, 161, 178, 183], "bia": [13, 117, 120, 121, 124, 125, 127, 128, 132, 137], "bibtex": 170, "big": 11, "biggl": [141, 174], "biggr": [141, 174], "bigl": 161, "bigr": 161, "bin": [62, 134, 156, 166, 167], "binary_train_test_set": 98, "binder": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47], "binom": 51, "bisect": [29, 30, 124, 125, 183], "bi\u0144kowski": [124, 125], "bj\u00f6rkman": 113, "black": [1, 16, 49, 144, 171, 183], "blacklitterman": [4, 6, 170, 183, 187], "block": [114, 151, 152], "block_siz": [114, 151, 152], "blue": [29, 30, 32, 51], "bodnar": [117, 118], "bodnar_okhrin": [117, 118], "bollerslev": 113, "bond": [121, 122, 127, 128, 132, 144, 170, 174], "bool": [51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 163, 165], "boolean": [138, 139, 140], "bootstrap": [151, 152, 170], "bootstrapcovarianceuncertaintyset": 188, "bootstrapmuuncertaintyset": [15, 170, 183, 188], "both": [2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 31, 33, 36, 39, 44, 98, 115, 134, 137, 155, 163, 174, 183, 184, 188], "bound": [9, 14, 74, 77, 120, 121, 122, 124, 125, 127, 128, 132, 135, 136, 137], "boundari": [52, 65, 66, 67, 68, 69, 118, 130], "brace": [52, 65, 66, 67, 68, 69, 118, 130], "break": [52, 65, 66, 67, 68, 69, 118, 130, 179], "bring": 26, "browser": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47], "bsd": 170, "budget": [21, 121, 122, 127, 128, 132, 170, 171, 178], "bui": 12, "build": [3, 4, 5, 6, 19, 59, 61, 63, 64, 125, 129, 170, 179, 184, 188], "built": 170, "bunch": 133, "busi": [12, 14, 15, 31, 33, 36, 40, 44, 174], "c": [41, 115, 132, 161, 183, 185], "c_": [12, 52, 120, 121, 124, 125, 127, 128, 132, 137, 161], "c_t": 52, "cach": [54, 55, 121, 175, 185], "calcul": [51, 52, 112], "call": [7, 8, 14, 29, 30, 32, 52, 62, 65, 66, 67, 68, 69, 100, 118, 121, 128, 129, 130, 141, 178, 184, 185], "callabl": [96, 121, 122, 127, 128, 132], "calmar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 135, 136, 137], "calmar_ratio": [36, 68, 135, 136, 137, 170], "cambridg": [125, 129], "can": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 52, 58, 62, 65, 66, 67, 68, 69, 74, 77, 83, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 163, 165, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188], "candid": 178, "cannot": [12, 83, 135, 136, 137, 174], "cap": [11, 110], "capit": [11, 52, 65, 66, 67, 68, 69, 118, 130], "captur": 60, "cardin": [14, 52, 121, 127, 128, 161], "carlo": [170, 174], "carri": 113, "case": [11, 15, 26, 52, 65, 66, 67, 68, 69, 96, 100, 118, 121, 122, 127, 128, 130, 132, 148, 161, 174, 185, 188], "casefold": [52, 65, 66, 67, 68, 69, 118, 130], "caseless": [52, 65, 66, 67, 68, 69, 118, 130], "caus": [44, 113], "cd": 112, "cdar": [1, 7, 8, 9, 14, 15, 16, 18, 19, 20, 23, 28, 29, 34, 36, 40, 49, 69, 74, 120, 121, 124, 125, 128, 132, 135, 136, 137, 170, 171, 183, 185], "cdar_beta": [121, 128, 132, 135, 136, 137], "cdar_ratio": [36, 68, 135, 136, 137, 183], "cdot": [11, 12, 13, 110, 120, 121, 122, 124, 125, 127, 128, 132, 137, 185], "center": [26, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 112, 114, 115, 116, 118, 122, 130, 175, 183], "central": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 66, 79, 91, 135, 136, 137, 170], "centroid": 52, "certain": [111, 183], "chain": [29, 30, 32], "challeng": 112, "chanc": 33, "chang": [5, 7, 8, 12, 13, 14, 29, 30, 32, 40, 44, 112, 113, 114, 115, 116, 174, 179], "char": [52, 65, 66, 67, 68, 69, 118, 130], "charact": [52, 65, 66, 67, 68, 69, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "characterist": 174, "check": [7, 8, 41, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 163, 165, 183], "check_arrai": 41, "check_is_fit": 41, "check_observations_ord": 136, "chen": 115, "chernoff": [74, 77, 135, 136, 137], "chi": [151, 152, 153, 154], "choic": [29, 30, 32, 112, 117, 174, 178], "choleski": [3, 4, 5, 102, 104, 105, 106, 108, 111, 113, 114, 121, 122, 126, 127, 128, 132, 144, 148, 163, 165, 183, 187], "choos": [31, 33, 36, 39, 101, 121, 122, 127, 128, 132, 182], "chose": 19, "chosen": [29, 31, 33, 36, 40, 59, 129, 133, 178, 183], "christensen": 113, "christoffersen": 113, "chronolog": 136, "circ": 174, "circular": [151, 152, 170], "clarabel": [26, 121, 122, 127, 128, 132], "class": [7, 8, 41, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 178, 183, 184, 185, 188], "classifi": 104, "classmethod": [52, 65, 66, 67, 68, 69, 118, 130], "claus": 170, "clear": [14, 134, 135, 136, 137], "clearli": 14, "clip": [102, 104, 105, 106, 108, 111, 113, 114, 146, 163], "clone": [2, 14, 15], "close": [29, 53, 54, 55, 56, 57, 112, 153, 174, 175], "closer": [26, 44, 113], "cluster": [29, 30, 31, 33, 34, 105, 120, 124, 125, 129, 133, 161, 171], "clustering_estim": [32, 33, 129, 183], "clustering_estimator_": [32, 129], "clustering_estimator__linkage_method": 33, "co": 111, "code": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 49, 52, 65, 66, 67, 68, 69, 118, 130, 170], "codec": [52, 65, 66, 67, 68, 69, 118, 130], "codepend": [58, 59, 60, 61, 62, 63, 64, 120, 124, 125, 129, 176, 183], "codependence_": [58, 59, 60, 61, 62, 63, 64, 176], "coef": [14, 44], "coeffici": [14, 44, 113, 114, 115, 116, 121, 127, 128], "coefs_": [44, 113], "coher": [51, 74, 77, 135, 136, 137, 170, 185], "collect": [100, 129, 133, 182, 183], "color": [14, 15, 29, 30, 32, 40, 44, 51, 134], "color_scal": [9, 10, 14, 15, 134], "column": [7, 8, 11, 12, 13, 19, 41, 44, 100, 112, 113, 120, 121, 122, 124, 125, 127, 128, 132, 136, 137, 138, 139, 140, 144, 185], "column_indic": 100, "com": [7, 8, 170], "combin": [31, 33, 36, 39, 98, 101, 114, 115, 116, 133, 144, 178, 182], "combinatori": [28, 34, 49, 97, 98, 100, 101, 171, 183], "combinatorialcv": [129, 133], "combinatorialpurgecv": 182, "combinatorialpurgedcv": [31, 33, 36, 39, 100, 129, 133, 170, 182, 183], "come": [53, 54, 55, 56, 57, 112, 175], "common": [5, 6, 29, 53, 99, 141, 144, 145, 146, 174, 183, 187], "commonli": 183, "commut": [153, 160], "comp_cov": [112, 114, 115, 116], "compar": [2, 7, 8, 10, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 44, 52, 65, 66, 67, 68, 69, 98, 99, 112, 114, 115, 116, 118, 127, 128, 130, 136, 140, 144, 148, 182, 183, 185], "comparison": [2, 3, 4, 5, 6, 31, 52, 65, 66, 67, 68, 69, 118, 130], "compat": [5, 7, 8, 99, 170, 182, 185, 186, 187], "complement": 172, "complet": [31, 52, 181], "complex": [134, 183], "compon": [5, 51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 174, 187], "compos": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 47, 51, 53, 54, 55, 56, 57, 120, 121, 124, 125, 127, 128, 132, 134, 136, 137, 170, 175, 185], "composit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 31, 33, 36, 39, 40, 41, 44, 47, 54, 55, 56, 134, 135, 136, 137, 175, 184, 185], "compound": [81, 82, 134, 135, 136, 137, 141, 145, 174, 184], "comput": [4, 14, 15, 29, 30, 32, 44, 51, 52, 59, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 120, 121, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 140, 144, 151, 152, 153, 154, 160, 161, 163, 165, 166, 167, 174, 178, 183, 185, 187], "concaten": [9, 52, 65, 66, 67, 68, 69, 118, 130], "concentr": [30, 75, 137, 170], "concept": [7, 8, 74, 77, 135, 136, 137], "concern": [17, 22, 25, 28, 35, 49, 179], "conclud": 30, "condens": 51, "condensed_distance_": 51, "condit": [2, 8, 10, 68, 69, 71, 72, 83, 104, 112, 114, 121, 122, 128, 132, 135, 136, 137, 170, 183], "confid": [15, 71, 72, 73, 74, 76, 77, 93, 121, 122, 128, 132, 135, 136, 137, 144, 151, 152, 153, 154, 155], "confidence_level": [15, 151, 152, 153, 154, 183, 188], "configur": [138, 139, 140], "confirm": 30, "consecut": 178, "consid": [14, 15, 31, 52, 65, 66, 67, 68, 69, 118, 130, 137, 140, 153, 178], "consider": 170, "consist": [5, 8, 36, 51, 52, 58, 59, 60, 61, 62, 63, 64, 98, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 144, 145, 178, 182, 183, 187], "constant": [104, 117], "constrain": [14, 15, 183], "constraint": [1, 2, 9, 10, 14, 15, 16, 26, 49, 121, 122, 127, 128, 132, 171, 183], "construct": [26, 111, 113, 122, 178, 183], "constructor": [133, 178], "consum": 181, "consumpt": 100, "contain": [2, 3, 4, 5, 7, 8, 29, 30, 32, 41, 51, 52, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 178, 183, 184, 185, 187], "context": [100, 112, 129, 133, 147], "conting": 62, "continu": [14, 15, 36, 141, 174, 178], "contribut": [28, 34, 36, 49, 51, 124, 132, 134, 135, 136, 137, 140, 170, 171, 185], "contributor": 170, "control": [11, 26, 99, 100, 112, 127, 128, 144, 185], "convent": [51, 58, 59, 60, 61, 62, 63, 64, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 144, 145], "converg": [26, 112, 121, 148], "convers": 174, "convert": [4, 6, 12, 13, 41, 52, 65, 66, 67, 68, 69, 96, 118, 130, 144, 145, 162, 163, 164, 174], "convex": [26, 66, 114, 115, 116, 121, 122, 132, 137, 170, 183, 185], "cookbook": 174, "coordin": 112, "cophenet": [29, 30, 32, 51], "copi": [41, 52, 65, 66, 67, 68, 69, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "core": 178, "corr": [44, 59, 61, 63, 64, 113, 138, 162, 164], "correct": [151, 152], "correl": [12, 18, 29, 30, 32, 38, 42, 44, 49, 59, 60, 61, 63, 64, 98, 111, 113, 124, 125, 138, 140, 162, 163, 164, 170, 171, 182], "correspond": [10, 51, 80, 100, 105, 112, 113, 129, 133, 134, 135, 136, 137, 138, 139, 140, 182, 185], "cost": [1, 16, 49, 101, 120, 121, 122, 124, 125, 127, 128, 132, 137, 171, 183, 185], "coul": 2, "could": [41, 174], "count": [52, 65, 66, 67, 68, 69, 111, 118, 130, 134], "coupl": [6, 141], "cov": [44, 114, 115, 116, 153, 162, 163, 164, 174, 183], "cov_nearest": [40, 102, 104, 105, 106, 108, 111, 113, 114, 146], "covari": [3, 4, 5, 6, 17, 21, 40, 49, 59, 102, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 125, 126, 127, 128, 132, 137, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 162, 163, 164, 171, 174, 183, 187, 188], "covariance_": [44, 102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 173], "covariance_estim": [3, 5, 20, 36, 44, 59, 104, 105, 110, 117, 145, 170, 181, 183, 187], "covariance_estimator_": [59, 104, 105, 110, 117, 145], "covariance_uncertainty_set_estim": [121, 128, 188], "covariance_uncertainty_set_estimator_": [121, 128], "covariancedist": [176, 183], "covert": 113, "cp": [121, 122, 127, 128, 132], "cpu": 100, "creat": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 100, 175, 184, 187], "criterion": 137, "cross": [14, 32, 40, 97, 98, 99, 100, 112, 129, 133, 178, 183], "cross_val_predict": [12, 13, 14, 15, 31, 33, 36, 39, 40, 41, 44, 133, 170, 182, 185], "cross_val_scor": 96, "crsp": [53, 54, 55, 56, 57, 175], "crucial": 12, "ct": [134, 135, 136, 137], "cumul": [7, 8, 12, 13, 18, 19, 20, 26, 31, 33, 36, 39, 40, 44, 81, 82, 134, 135, 136, 137, 151, 152, 153, 154], "cumulative_return": [135, 136, 137, 185], "cumulative_returns_df": [135, 136, 137, 185], "current": [112, 114, 115, 116, 135, 136, 137, 140, 178], "custom": [38, 40, 42, 49, 96, 121, 122, 127, 128, 132, 171, 174, 178], "custom_scor": 178, "cv": [12, 13, 14, 15, 28, 31, 34, 36, 39, 40, 41, 44, 49, 98, 99, 100, 112, 129, 133, 170, 171, 178, 182, 183], "cv_result": [14, 15, 40, 44], "cv_results_": [14, 15, 40, 44, 112, 178], "cvar": [1, 2, 7, 9, 14, 15, 16, 17, 18, 20, 21, 23, 27, 28, 30, 31, 32, 33, 34, 36, 40, 69, 77, 120, 121, 122, 124, 125, 128, 129, 132, 135, 136, 137, 171, 178, 185], "cvar_beta": [15, 121, 122, 128, 132, 135, 136, 137], "cvar_ratio": [2, 15, 31, 33, 68, 135, 136, 137], "cvpxy": [121, 122, 127, 128, 132], "cvx": [41, 44, 47, 121, 170, 187], "cvxpy": [121, 122, 127, 128, 132, 170], "d": [44, 51, 52, 62, 111, 113, 154, 161], "d_": 161, "dai": [12, 13, 14, 15, 31, 33, 36, 39, 40, 41, 44, 99, 174], "daili": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 53, 54, 55, 56, 57, 113, 120, 121, 124, 125, 127, 128, 132, 137, 144, 174, 175], "dar": [73, 74, 135, 136, 137], "dash": [14, 15, 40], "data": [44, 47, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 98, 99, 100, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 122, 129, 130, 133, 138, 139, 140, 141, 145, 146, 167, 170, 175, 178, 179, 181, 182, 183, 185, 187], "data_hom": [54, 55], "dataclass": [3, 4, 5, 148, 155, 187], "datafram": [11, 12, 13, 44, 53, 54, 55, 56, 57, 99, 113, 120, 121, 122, 124, 125, 127, 128, 132, 134, 135, 136, 137, 138, 139, 140, 141, 144, 173, 176, 177, 183, 185, 186, 187, 188], "dataset": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 47, 98, 102, 104, 105, 106, 108, 111, 113, 114, 163, 172, 173, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188], "date": [7, 8, 44, 47, 53, 54, 55, 57, 99, 141, 185], "dateoffset": 99, "datetim": [99, 185], "datetimeindex": 99, "ddof": [108, 183], "de": [29, 32, 59, 61, 63, 64, 98, 104, 105, 125, 129, 183], "decad": [124, 125], "decim": [52, 65, 66, 67, 68, 69, 118, 130], "declar": 112, "decomposit": [5, 102, 104, 105, 106, 108, 111, 113, 114, 121, 122, 126, 127, 128, 132, 144, 146, 148, 163, 165, 183, 187], "deconstruct": 111, "decreas": [40, 178], "dedic": 178, "deep": [51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 170, 178], "def": [41, 52, 65, 66, 67, 68, 69, 118, 130, 178, 183], "defaul": 99, "default": [3, 4, 5, 7, 8, 11, 12, 13, 14, 26, 29, 30, 32, 40, 44, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 86, 88, 89, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 163, 168, 174, 175, 178, 182, 183, 185, 187], "defin": [2, 11, 12, 51, 59, 60, 61, 62, 63, 64, 75, 76, 97, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 125, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 155, 161, 174, 188], "definit": [40, 102, 104, 105, 106, 108, 111, 113, 114, 146, 163, 165], "deform": 10, "degre": [83, 135, 136, 137, 144, 151, 152, 153, 154], "delai": 100, "delatt": 170, "delet": [52, 65, 66, 67, 68, 69, 118, 130], "delimit": [52, 65, 66, 67, 68, 69, 118, 130], "demand": 100, "demiguel": 170, "demonstr": [36, 40, 41, 174, 183], "dendrogram": [51, 124, 125, 183], "denois": [3, 104, 183, 187], "denoisecovari": [3, 170, 173, 183, 187], "denomin": [111, 115, 140], "denot": [153, 174], "densiti": [161, 166], "depend": [12, 33, 60, 62, 76, 96, 111, 121, 122, 127, 128, 132, 135, 136, 137, 138, 151, 152, 170, 174, 182], "deriv": [113, 126, 174], "descend": [134, 137], "descent": 112, "describ": [114, 144, 178], "descript": [51, 52, 128, 132], "design": [6, 170, 183], "detail": [0, 40, 44, 102, 104, 105, 106, 108, 110, 111, 112, 113, 114, 117, 121, 122, 124, 126, 127, 128, 129, 132, 133, 144, 145, 146, 147, 151, 152, 153, 154, 170, 178], "determin": [33, 100, 112, 117, 129, 133, 136, 161, 174], "determinist": [13, 120, 121, 124, 125, 127, 128, 132], "deton": 105, "detonecovari": [170, 173], "develop": [29, 30, 32, 124, 125, 129, 161, 170, 179, 183], "deviat": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 40, 44, 68, 69, 80, 86, 88, 90, 112, 121, 128, 132, 134, 135, 136, 137, 162, 163, 164, 170, 183], "df": [44, 53, 54, 55, 56, 57, 134], "diaconi": 166, "diag": 174, "diagon": [144, 146, 151, 152, 153, 154], "dict": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 51, 58, 59, 60, 61, 62, 63, 64, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154], "dictionari": [11, 12, 13, 52, 65, 66, 67, 68, 69, 113, 118, 120, 121, 122, 124, 125, 127, 128, 130, 132, 133, 137, 144, 178], "diebol": 113, "differ": [2, 7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 33, 36, 39, 40, 47, 51, 68, 69, 83, 87, 115, 124, 127, 128, 132, 134, 135, 136, 137, 141, 161, 170, 174, 183], "differenti": 104, "digit": [52, 65, 66, 67, 68, 69, 118, 130], "dimens": [41, 148], "dimension": [5, 40, 102, 104, 105, 106, 108, 111, 113, 114, 117, 146, 163, 187], "direcli": 13, "direct": [112, 170], "directli": [2, 11, 62, 120, 121, 124, 125, 127, 128, 132, 133, 148, 174, 178, 185], "directori": 175, "dirichlet": [131, 169, 170], "dirk": 137, "discard": [52, 65, 66, 67, 68, 69, 118, 130], "discret": [26, 122, 178, 183], "dispatch": 100, "dispers": 161, "displai": [7, 8, 29, 30, 32, 36, 40, 41, 51, 134, 135, 136, 137], "display_sub_ptf_nam": [31, 33, 36, 40, 44, 134], "dist": [52, 112, 114, 115, 116], "distanc": [31, 33, 51, 52, 101, 112, 114, 115, 116, 120, 124, 125, 129, 157, 161, 170, 172, 183], "distance_": [58, 59, 60, 61, 62, 63, 64, 172, 176], "distance_estim": [29, 30, 31, 32, 33, 51, 120, 124, 125, 129, 172, 183], "distance_estimator_": [120, 124, 125, 129], "distancecorrel": [176, 183], "distinct": [29, 30, 32, 51], "distinguish": [78, 80, 86, 88, 89, 121, 128, 132, 135, 136, 137], "distribut": [3, 4, 5, 14, 15, 26, 29, 44, 53, 54, 55, 56, 57, 83, 112, 113, 114, 115, 116, 122, 131, 134, 135, 136, 137, 151, 152, 153, 154, 161, 168, 169, 170, 174, 175, 178, 183, 187, 188], "distribution": [27, 122, 170, 171], "distributionallyrobustcvar": [25, 26, 49, 183], "diverg": 47, "diversif": [14, 24, 36, 121, 127, 128, 137, 170, 171], "diversifi": [59, 61, 63, 64, 75, 125, 129, 137], "divid": [12, 68, 112, 114, 115, 116, 135, 136, 137], "dividend": [53, 54, 55, 56, 57, 175], "divis": [30, 124, 183], "do": [31, 178], "docstr": [44, 112], "document": [7, 8, 44, 121, 122, 127, 128, 132, 181], "doe": [14, 113, 114, 175, 178], "doesn": [29, 115], "domin": [83, 134, 135, 136, 137, 140, 170, 185], "don": 11, "done": [52, 65, 66, 67, 68, 69, 112, 118, 130, 178], "donnat": [124, 125], "dot": [0, 32, 36, 129, 133, 137, 183, 185], "doubl": 15, "down": [14, 29, 30, 32, 124, 125, 183], "download": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 49, 54, 55, 175], "download_if_miss": [54, 55], "downsid": [69, 78, 80, 86, 88, 89, 121, 128, 132, 135, 136, 137, 183], "drawdown": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 36, 40, 66, 68, 69, 70, 71, 73, 74, 82, 84, 92, 121, 128, 132, 135, 136, 137, 170, 183, 185], "drawdown_at_risk": [66, 120, 124, 125, 135, 136, 137], "drawdown_at_risk_beta": [135, 136, 137], "drawdown_at_risk_ratio": [68, 135, 136, 137], "drawn": [112, 114, 115, 116, 131], "drift": 185, "driven": 122, "drop": [38, 42, 49, 133, 138, 141, 170, 171], "drop_inceptions_nan": 141, "dropcorrel": [39, 186], "dt": [99, 185], "dtype": [29, 31, 33, 36, 39, 41, 51, 112], "dual": 112, "dualiti": 112, "due": [12, 33, 40, 100, 102, 104, 105, 106, 108, 111, 113, 114, 147, 163, 185], "duplic": 121, "durat": [12, 99], "dure": [13, 30, 41, 51, 59, 60, 61, 62, 63, 64, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 125, 127, 128, 129, 132, 133, 138, 139, 140, 144, 145, 146, 183], "dynam": 121, "e": [5, 99, 112, 113, 114, 115, 116, 133, 134, 146, 174, 187], "each": [5, 7, 8, 11, 12, 13, 14, 18, 19, 20, 23, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 178, 182, 183, 185, 187], "earlier": 29, "easi": 174, "easier": 44, "eco": [121, 122, 127, 128, 132], "edar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 69, 120, 121, 124, 125, 128, 132, 135, 136, 137, 170, 183], "edar_beta": [121, 128, 132, 135, 136, 137], "edar_ratio": [68, 135, 136, 137], "eff": [75, 137], "effect": [7, 8, 9, 18, 19, 20, 23, 29, 30, 32, 75, 111, 112, 113, 114, 115, 116, 137, 138], "effective_number_asset": 137, "effici": [1, 10, 16, 41, 47, 49, 125, 129, 171, 174, 178, 184], "efficient_frontier_s": [9, 14, 15, 47, 128, 184], "egber": 113, "eigenvalu": [102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 163], "eigenvector": [104, 105], "either": [138, 178], "elast": 112, "eldar": 115, "electr": [4, 11, 12, 13, 19], "electron": [125, 129], "element": [104, 105, 121, 122, 125, 127, 128, 129, 132, 133, 134, 138, 139, 140, 151, 152, 153, 154, 174], "ellipsoid": [15, 121, 128, 151, 152, 153, 154, 155, 183, 188], "elsewher": 112, "embargo": [31, 33, 36, 39, 98, 182], "embargo_s": 98, "embed": 15, "emit": 163, "empir": [1, 6, 16, 49, 104, 108, 109, 145, 153, 154, 170, 171], "empiricalcovari": [36, 44, 104, 105, 110, 113, 117, 145, 173], "empiricalcovarianceuncertaintyset": [151, 188], "empiricalmu": [145, 177], "empiricalmuuncertaintyset": [15, 188], "empiricalprior": [3, 5, 20, 29, 36, 44, 47, 120, 121, 122, 124, 125, 126, 127, 128, 132, 144, 146, 151, 152, 153, 154, 170, 174, 178, 181, 183, 187], "emploi": [29, 31, 125, 183], "empti": [52, 65, 66, 67, 68, 69, 118, 130, 134, 136], "enabl": [41, 44, 181], "enable_metadata_rout": [41, 44, 104, 105, 110, 112, 113, 114, 115, 116, 117, 122, 124, 126, 127, 129, 133, 144, 145, 146, 147, 151, 152, 153, 154, 181], "encapsul": [51, 58, 59, 60, 61, 62, 63, 64, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154], "encod": [52, 65, 66, 67, 68, 69, 118, 130], "end": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 52, 65, 66, 67, 68, 69, 98, 99, 118, 128, 130, 132, 134, 140, 161, 183], "endswith": [52, 65, 66, 67, 68, 69, 118, 130], "enet_tol": 112, "enhanc": [96, 104, 111, 182, 185], "enough": [0, 31, 33, 36, 39, 185], "ensembl": [9, 10, 36, 119, 133, 170, 183], "ensur": [111, 132, 141, 182, 183], "ensure_2d": 41, "entir": [9, 14, 112], "entri": [52, 170], "entrop": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 66, 68, 69, 74, 76, 77, 121, 128, 132, 135, 136, 137, 170, 183], "entropi": [62, 74, 77, 135, 136, 137], "entropic_risk_measur": [66, 120, 124, 125, 135, 136, 137], "entropic_risk_measure_beta": [135, 136, 137], "entropic_risk_measure_ratio": [68, 135, 136, 137], "entropic_risk_measure_theta": [135, 136, 137], "enum": [52, 65, 66, 67, 68, 69, 118, 130], "enumer": [66, 67, 68, 69, 98, 99, 130, 156], "environ": 175, "epsilon": [44, 113], "eq": 115, "equal": [8, 12, 14, 18, 23, 26, 28, 29, 31, 32, 33, 34, 36, 41, 49, 51, 52, 65, 66, 67, 68, 69, 110, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 134, 170, 171], "equalweight": [2, 8, 14, 23, 26, 29, 30, 32, 33, 36, 41, 131, 183], "equalweighted_1": 41, "equalweighted_10": 41, "equalweighted_100": 41, "equalweighted_101": 41, "equalweighted_102": 41, "equalweighted_103": 41, "equalweighted_104": 41, "equalweighted_105": 41, "equalweighted_106": 41, "equalweighted_107": 41, "equalweighted_108": 41, "equalweighted_109": 41, "equalweighted_11": 41, "equalweighted_110": 41, "equalweighted_111": 41, "equalweighted_112": 41, "equalweighted_113": 41, "equalweighted_114": 41, "equalweighted_115": 41, "equalweighted_116": 41, "equalweighted_117": 41, "equalweighted_118": 41, "equalweighted_119": 41, "equalweighted_12": 41, "equalweighted_120": 41, "equalweighted_121": 41, "equalweighted_122": 41, "equalweighted_123": 41, "equalweighted_124": 41, "equalweighted_125": 41, "equalweighted_126": 41, "equalweighted_127": 41, "equalweighted_128": 41, "equalweighted_13": 41, "equalweighted_14": 41, "equalweighted_15": 41, "equalweighted_16": 41, "equalweighted_17": 41, "equalweighted_18": 41, "equalweighted_19": 41, "equalweighted_2": 41, "equalweighted_20": 41, "equalweighted_21": 41, "equalweighted_22": 41, "equalweighted_23": 41, "equalweighted_24": 41, "equalweighted_25": 41, "equalweighted_26": 41, "equalweighted_27": 41, "equalweighted_28": 41, "equalweighted_29": 41, "equalweighted_3": 41, "equalweighted_30": 41, "equalweighted_31": 41, "equalweighted_32": 41, "equalweighted_33": 41, "equalweighted_34": 41, "equalweighted_35": 41, "equalweighted_36": 41, "equalweighted_37": 41, "equalweighted_38": 41, "equalweighted_39": 41, "equalweighted_4": 41, "equalweighted_5": 41, "equalweighted_6": 41, "equalweighted_7": 41, "equalweighted_8": 41, "equalweighted_89": 41, "equalweighted_9": 41, "equalweighted_90": 41, "equalweighted_91": 41, "equalweighted_92": 41, "equalweighted_93": 41, "equalweighted_94": 41, "equalweighted_95": 41, "equalweighted_96": 41, "equalweighted_97": 41, "equalweighted_98": 41, "equalweighted_99": 41, "equat": 14, "equilibrium": [110, 144, 170, 183], "equilibriummu": [144, 177, 183], "equiti": [121, 122, 127, 128, 132, 144, 170], "equival": [11, 14, 29, 120, 121, 122, 124, 125, 127, 128, 132, 178], "error": [1, 5, 15, 16, 44, 49, 52, 65, 66, 67, 68, 69, 112, 113, 114, 115, 116, 117, 118, 121, 122, 127, 128, 130, 132, 136, 137, 146, 157, 158, 159, 163, 170, 171, 183, 187, 188], "error_i": 44, "error_norm": [112, 114, 115, 116], "esfahani": [26, 122, 183], "estim": [3, 4, 5, 6, 7, 13, 14, 15, 18, 19, 20, 23, 26, 31, 33, 36, 40, 51, 58, 59, 60, 61, 62, 63, 64, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 166, 170, 174, 181, 182, 186], "estimators_": [36, 133], "et": 111, "etc": [32, 129, 170, 173, 174, 176, 177, 183, 185, 186, 187, 188], "etf": [5, 6, 29, 53], "europ": [121, 122, 127, 128, 132, 144, 170], "european": 144, "evalu": [7, 8, 9, 14, 18, 19, 20, 23, 31, 33, 36, 40, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 178], "evar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 69, 120, 121, 124, 125, 128, 132, 135, 136, 137, 170, 183], "evar_beta": [121, 128, 132, 135, 136, 137], "evar_ratio": [68, 135, 136, 137], "even": [5, 8, 99, 174, 187], "everi": [7, 8, 11, 12, 13, 41, 44, 99, 182, 183], "evid": 113, "evolutionari": 140, "ewcovari": 173, "ewm": 107, "ewmu": [170, 177, 178], "exacerb": 14, "exact": 100, "exactli": [112, 114, 115, 116], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 98, 99, 100, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 137, 138, 139, 140, 144, 148, 170, 171, 172, 173, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188], "exce": 111, "except": [8, 134, 135, 136, 137], "excess": [68, 135, 136, 137], "exclud": [12, 98, 99], "execut": [16, 21, 24, 27, 34, 37, 42, 45, 48, 50, 100, 171], "exhibit": [98, 182], "exist": [51, 99, 112, 113, 114, 115, 116, 121, 122, 127, 128, 132, 175], "exp": 174, "expand": [52, 65, 66, 67, 68, 69, 118, 130], "expandtab": [52, 65, 66, 67, 68, 69, 118, 130], "expect": [2, 3, 4, 5, 6, 9, 12, 13, 15, 18, 19, 23, 69, 71, 72, 83, 103, 107, 109, 110, 117, 120, 121, 122, 124, 125, 126, 127, 128, 130, 132, 135, 136, 137, 144, 145, 146, 148, 152, 154, 155, 174, 183, 187, 188], "expected_returns_from_asset": 137, "expend_train": 99, "explain": [5, 12, 13, 29, 47, 105, 146, 187], "explan": 181, "explicit": [58, 102, 103, 112, 142, 143, 149, 150], "explicitli": 181, "exploit": [30, 33, 124, 183], "explor": [47, 112, 178, 183, 184], "explos": 100, "expon": [59, 61, 63, 64, 178], "exponenti": [76, 106, 107, 135, 136, 137, 170], "expos": 129, "express": [12, 13, 44, 52, 65, 66, 67, 68, 69, 100, 113, 118, 120, 121, 122, 124, 125, 127, 128, 130, 132, 137, 144], "extend": [36, 47, 111, 134, 182, 184], "extrariskmeasur": [96, 120, 124, 125, 129, 133, 135, 136, 137], "extrem": [80, 111, 135, 136, 137, 170], "ey": 10, "f": [2, 14, 23, 31, 33, 36, 39, 41, 44, 47, 52, 65, 66, 67, 68, 69, 98, 99, 101, 118, 128, 130, 183, 185], "f_": [13, 101, 120, 121, 124, 125, 127, 128, 132, 137], "face": [112, 170], "fact": 170, "factor": [1, 3, 4, 16, 29, 49, 53, 100, 106, 107, 110, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 141, 146, 147, 148, 151, 152, 153, 154, 171, 183], "factor_pric": [5, 6, 29, 170, 183, 187], "factor_prior_estim": [5, 6, 146, 170, 183, 187], "factor_prior_estimator_": 146, "factor_view": [6, 170, 183], "factori": 96, "factormodel": [5, 6, 29, 170, 183, 187], "fail": [112, 121, 122, 127, 128, 132, 163], "failur": [52, 65, 66, 67, 68, 69, 118, 130], "fall": [15, 183], "fals": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 52, 54, 55, 59, 61, 63, 64, 65, 66, 67, 68, 69, 81, 82, 96, 99, 102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 127, 128, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 163, 165, 170, 178, 182, 183, 184, 186], "farthest": 52, "fast": [100, 134, 147], "faster": 163, "fat": [80, 135, 136, 137], "favor": 178, "feasibl": [10, 11], "featur": [62, 98, 106, 112, 114, 115, 116, 138, 139, 140, 144, 145, 146, 170, 182], "feature_names_in_": [51, 59, 60, 61, 62, 63, 64, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 125, 127, 128, 129, 132, 133, 138, 139, 140, 144, 145, 146], "feature_names_out": [138, 139, 140], "feature_select": 41, "februari": 114, "fee": [1, 16, 49, 120, 121, 124, 125, 127, 128, 132, 137, 170, 171, 183, 185], "few": 181, "fewer": 99, "field": [52, 65, 66, 67, 68, 69, 118, 130], "fig": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 51], "figur": [7, 8, 14, 15, 40, 51, 134, 135, 136, 137], "file": [16, 21, 24, 27, 34, 37, 42, 45, 48, 50, 171], "fill": [14, 40, 52, 65, 66, 67, 68, 69, 118, 130], "fillchar": [52, 65, 66, 67, 68, 69, 118, 130], "fillcolor": [14, 40], "filter": [14, 134], "final": [2, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 23, 29, 30, 31, 32, 36, 44, 111, 113, 124, 125, 129, 133, 140, 183, 185], "final_estim": [36, 133, 183], "final_estimator_": [36, 133], "financ": [104, 105, 125, 129, 163], "financi": [5, 11, 75, 98, 105, 124, 125, 137, 144, 146, 182, 187], "find": [7, 8, 9, 10, 18, 23, 26, 31, 33, 36, 40, 44, 51, 52, 65, 66, 67, 68, 69, 101, 102, 104, 105, 106, 108, 111, 113, 114, 117, 118, 122, 130, 146, 163, 174, 178, 183, 184], "fine": 170, "finer": 178, "finit": [26, 44, 113, 122, 134, 135, 136, 137, 183], "first": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 29, 36, 39, 40, 44, 47, 52, 65, 66, 67, 68, 69, 78, 99, 105, 112, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 163, 170, 174, 179, 181, 183], "first_front_onli": 134, "first_lower_partial_mo": [69, 120, 121, 124, 125, 128, 132, 135, 136, 137], "first_lower_partial_moment_ratio": [68, 135, 136, 137], "fischer": 144, "fit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 51, 58, 59, 60, 61, 62, 63, 64, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188], "fit_intercept": [5, 147], "fit_param": [59, 104, 105, 110, 112, 113, 117, 122, 124, 125, 126, 127, 128, 129, 132, 133, 138, 139, 140, 144, 145, 146, 147, 151, 152, 153, 154], "fit_predict": [9, 10, 33, 47, 51, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "fit_transform": [138, 139, 140, 186], "fitness_measur": [135, 136, 137, 140, 185], "fitting_period": [12, 13], "fix": [12, 112, 144], "flag": 134, "flat": 51, "flint": 111, "flip": 96, "float": [11, 12, 13, 14, 15, 40, 41, 59, 60, 61, 63, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 144, 145, 151, 152, 153, 154, 155, 163], "float32": 41, "float64": [14, 41], "fluctuat": 111, "fold": [12, 31, 33, 36, 39, 98, 99, 100, 101, 112, 129, 133, 178, 182, 185], "folder": [54, 55, 175], "follow": [11, 19, 40, 41, 52, 65, 66, 67, 68, 69, 98, 118, 121, 122, 127, 128, 130, 132, 138, 139, 140, 144, 170, 172, 173, 174, 176, 177, 178, 182, 183, 186, 187, 188], "font": 9, "foral": [128, 183], "forc": [151, 152, 154], "forecast": [113, 144], "forest": 52, "form": [32, 51, 52, 58, 59, 60, 61, 62, 63, 64, 83, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 172], "format": [52, 65, 66, 67, 68, 69, 118, 130, 134, 135, 136, 137, 138, 139, 140], "format_map": [52, 65, 66, 67, 68, 69, 118, 130], "formul": [115, 121, 185], "formula": [12, 110, 114, 115, 117, 120, 121, 124, 125, 127, 128, 132], "forward": [12, 13, 15, 41, 99, 170], "found": [52, 65, 66, 67, 68, 69, 112, 118, 130], "four": 26, "fourth": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 66, 79, 80, 135, 136, 137, 170], "fourth_central_mo": [66, 120, 124, 125, 135, 136, 137], "fourth_lower_partial_mo": [66, 120, 124, 125, 135, 136, 137], "frac": [15, 52, 62, 75, 101, 113, 121, 128, 130, 134, 135, 136, 137, 141, 153, 154, 161, 174, 183], "framework": [170, 179], "frank": [124, 125], "free": [121, 122, 127, 128, 132, 135, 136, 137, 144], "freedman": [62, 156, 166], "freedom": [151, 152, 153, 154], "freq": [41, 99], "freq_offset": 99, "frequenc": [99, 113, 144, 174], "frequent": [174, 185], "fridai": [41, 99], "frobeniu": [112, 114, 115, 116], "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 74, 77, 81, 82, 96, 98, 99, 101, 104, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188], "front": [52, 65, 66, 67, 68, 69, 118, 130, 134, 140, 184], "frontier": [1, 10, 16, 47, 49, 125, 129, 171, 174, 184], "ftse": [14, 15, 31, 36, 39, 40, 54], "full": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 51, 52, 133, 178, 181, 185], "fulli": [11, 121, 122, 127, 128, 186, 187], "function": [12, 14, 15, 26, 40, 44, 76, 96, 100, 101, 112, 121, 122, 127, 128, 130, 132, 134, 135, 136, 137, 151, 152, 153, 154, 170, 174, 178, 182, 183, 184], "fund": 170, "further": [0, 33], "futur": [4, 6, 113, 121, 122, 127, 128, 132, 174], "g": [44, 101, 112, 113, 114, 115, 116, 133, 170], "g_": 101, "galleri": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 49, 171], "gamma": 178, "gap": [51, 112, 124, 161], "garp": [141, 145, 174], "gaussian": [112, 114, 115, 116], "gautier": [124, 125, 170], "ge": [4, 6, 11, 12, 13, 19, 41, 44, 47, 128, 132, 161, 183], "ge0": 183, "gener": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 49, 98, 99, 100, 112, 125, 129, 133, 138, 139, 140, 151, 152, 174, 178, 182, 183], "gerber": [5, 111], "gerbercovari": [5, 44, 59, 170, 173], "get": [4, 6, 26, 51, 58, 59, 60, 61, 62, 63, 64, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 174, 187], "get_feature_names_out": [138, 139, 140], "get_measur": [135, 136, 137], "get_metadata_rout": [51, 58, 59, 60, 61, 62, 63, 64, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154], "get_n_split": 99, "get_param": [51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 170, 178], "get_path_id": [97, 98], "get_precis": [112, 114, 115, 116], "get_summari": 170, "get_support": [138, 139, 140], "get_weight": [137, 185], "getter": [112, 114, 115, 116], "gini": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 68, 69, 83, 87, 128, 132, 135, 136, 137, 170, 183], "gini_mean_differ": [36, 69, 135, 136, 137], "gini_mean_difference_ratio": [68, 120, 121, 124, 125, 128, 132, 135, 136, 137], "github": [170, 175], "give": [0, 7, 8, 44, 100, 112, 174], "given": [40, 52, 65, 66, 67, 68, 69, 73, 76, 93, 112, 113, 114, 115, 116, 118, 129, 130, 133, 134, 135, 136, 137, 139, 144, 154, 162, 174, 178], "gmd": [83, 87, 135, 136, 137], "go": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 174], "goal": 104, "goe": [112, 183], "good": [96, 140], "grand": 117, "graph": [112, 134], "graph_obj": 40, "graph_object": [14, 15], "graphic": 170, "graphicallasso": 112, "graphicallassocv": 173, "greater": [30, 80, 105, 112, 121, 122, 127, 128, 132, 135, 136, 137], "greater_is_bett": 96, "greatli": [29, 30, 32], "green": [14, 15, 40], "grid": [14, 15, 44, 112], "grid_search": [14, 15, 36, 40, 44, 178], "grid_search_herc": 31, "grid_search_hrp": [31, 33], "gridsearch": 33, "gridsearchcv": [14, 15, 31, 33, 36, 40, 44, 96, 170, 178], "group": [44, 98, 99, 121, 122, 127, 128, 132, 135, 136, 137, 144, 170, 183], "groups_": 144, "gs_model": 44, "guarante": 122, "guid": [0, 7, 8, 44, 51, 58, 59, 60, 61, 62, 63, 64, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 170, 174], "guidelin": 0, "g\u00e1bor": 60, "h": [62, 111, 134, 135, 136, 137], "ha": [8, 12, 14, 18, 19, 23, 29, 30, 31, 32, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 138, 139, 140, 144, 145, 146, 161, 170, 178, 183], "hadamard": 174, "hand": 141, "handl": [12, 26, 52, 65, 66, 67, 68, 69, 118, 119, 122, 130, 183], "hansen": 113, "hat": [15, 117, 121, 128, 151, 152, 153, 154, 155, 188], "have": [2, 4, 6, 10, 11, 12, 14, 30, 36, 41, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 170, 174, 178], "hd": [29, 30, 32, 41, 44, 47], "head": [7, 8, 44, 47, 53, 54, 55, 56, 57, 175], "heatmap": [29, 30, 32, 51], "heavi": [80, 135, 136, 137], "hee": 52, "height": [29, 30, 32], "help": [5, 146, 187], "herc": [28, 30, 34, 49, 171, 182, 183], "here": [7, 8, 29, 32, 41, 99, 112, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 174, 178, 181, 183], "herfindahl": [75, 137], "hermitian": 165, "hero": 115, "hierarch": [32, 34, 36, 51, 120, 124, 125, 129, 170, 171, 172], "hierarchi": [51, 52, 124, 125], "hierarchical_clustering_estim": [29, 30, 31, 120, 124, 125], "hierarchical_clustering_estimator_": [29, 30, 120, 124, 125], "hierarchical_clustering_estimator__linkage_method": 31, "hierarchicalclust": [29, 30, 31, 32, 33, 120, 124, 125, 129, 172], "hierarchicalequalriskcontribut": [30, 31, 36, 172, 183], "hierarchicalriskpar": [29, 31, 172, 183], "high": [26, 40, 96, 102, 104, 105, 106, 108, 111, 113, 114, 117, 122, 129, 133, 140, 144, 163, 170, 183], "higham": [102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 146, 163], "higham_max_iter": [102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 163], "higher": [2, 12, 13, 14, 31, 75, 80, 99, 135, 136, 137, 139, 170], "highest": [14, 15, 23, 31, 41, 44, 52, 65, 66, 67, 68, 69, 118, 130, 138, 139, 170, 178], "highli": [30, 38, 42, 49, 138, 170, 171, 174], "highlight": 134, "histogram": [166, 167], "histor": [31, 33, 36, 39, 71, 72, 93, 106, 109, 135, 136, 137], "holding_period": [12, 13], "home": 175, "homogen": [0, 4, 6, 12, 120, 121, 124, 125, 127, 128, 132, 137, 185], "horizon": [46, 48, 49, 145, 171, 174], "horizont": [29, 30, 32], "hous": 183, "hover": 134, "hover_measur": [9, 10, 14, 15, 134], "how": [2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 20, 36, 40, 41, 44, 51, 58, 59, 60, 61, 62, 63, 64, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 178, 181, 183], "howev": [12, 13, 14, 29, 33, 120, 121, 124, 125, 127, 128, 132, 174], "hrp": [28, 29, 30, 32, 34, 49, 129, 171, 182, 183], "html": [121, 122, 127, 128, 132], "http": [7, 8, 121, 122, 127, 128, 132, 170], "hugo": 170, "hyper": 170, "hyperparamet": 33, "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 77, 78, 80, 81, 82, 83, 86, 88, 89, 93, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 157, 158, 159, 161, 163, 165, 170, 172, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188], "i_": 153, "id": [97, 98, 135, 136, 137], "idea": 10, "ident": [114, 115, 116, 132, 141, 174], "identifi": [52, 65, 66, 67, 68, 69, 98, 118, 130], "idx": [134, 135, 136, 137], "idzorek": 144, "ieee": 115, "iff": [138, 139, 140], "ignor": [51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 144, 145], "ij": 52, "ill": [104, 174], "ima": 163, "immedi": [98, 100, 182], "impact": [8, 12, 13, 14, 30, 120, 121, 124, 125, 127, 128, 132, 137], "implement": [41, 52, 65, 66, 67, 68, 69, 97, 111, 115, 118, 130, 137, 138, 174, 178, 182, 183, 185], "impli": [43, 45, 49, 113, 170, 171, 181], "implied_vol": [44, 113, 181], "implied_vol_test": 44, "implied_vol_train": 44, "impliedcovari": [44, 181], "import": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 53, 54, 55, 56, 57, 98, 99, 172, 173, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188], "impos": [5, 132, 146, 183, 187], "improv": [7, 8, 9, 18, 19, 20, 23, 31, 33, 36, 39, 40, 121, 148, 161, 184, 185], "inaccuraci": [40, 102, 104, 105, 106, 108, 111, 113, 114, 163], "inappropri": 99, "incept": 141, "includ": [0, 7, 52, 65, 66, 67, 68, 69, 98, 112, 114, 115, 116, 118, 130, 132, 134, 138, 140, 170, 172, 182, 185], "incom": 144, "incorpor": [2, 6, 11, 12, 13, 14, 15, 20, 98, 105, 144, 182, 183, 187], "incorrect": 174, "increas": [14, 26, 39, 40, 121, 122, 127, 128, 132, 178], "increment": 52, "incur": 12, "independ": [36, 60, 174, 178], "index": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 52, 54, 55, 56, 57, 65, 66, 67, 68, 69, 75, 92, 98, 99, 113, 118, 121, 122, 127, 128, 130, 132, 134, 135, 136, 137, 138, 139, 140, 170, 183, 185], "index_train_test_": 98, "indexerror": 134, "indic": [29, 30, 32, 75, 98, 99, 100, 112, 135, 136, 137, 138, 139, 140], "indict": 14, "individu": [36, 133, 140, 147, 151, 152, 183], "induc": [12, 13], "industri": 11, "inequ": [74, 77, 121, 122, 127, 128, 132, 135, 136, 137], "inf": [11, 112, 120, 121, 122, 124, 125, 127, 128, 132], "influenc": 178, "inform": [33, 44, 51, 58, 59, 60, 61, 62, 63, 64, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 170, 183], "inherit": [184, 185], "initi": [136, 138, 151, 152, 163, 186], "inner": [32, 129, 133, 183], "inner_estim": [32, 33, 129, 170, 183], "inner_estimator__risk_measur": 33, "inner_estimators_": 129, "input": [4, 6, 11, 12, 13, 36, 51, 52, 65, 66, 67, 68, 69, 100, 112, 113, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 166, 167, 170, 174, 183, 185, 187], "input_featur": [138, 139, 140], "input_nam": 41, "insert": [52, 65, 66, 67, 68, 69, 118, 130, 134, 138, 139, 140], "insid": [44, 112, 113, 114, 115, 116, 129, 174, 181], "inspir": 170, "instabl": [15, 39, 121, 128, 183, 188], "instanc": [51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 178], "instead": [6, 9, 10, 14, 30, 52, 54, 55, 62, 65, 66, 67, 68, 69, 99, 100, 112, 113, 114, 115, 116, 118, 124, 129, 130, 133, 141, 144, 178, 182, 183], "institut": [75, 137], "insuffici": 140, "int": [41, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 87, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 151, 152, 161, 163, 166, 167, 168, 169], "int64": [31, 33, 36, 39, 44, 51], "integ": [52, 65, 66, 67, 68, 69, 99, 112, 118, 129, 130, 133, 138, 139, 140], "integr": [41, 182], "intend": [183, 185], "intention": [52, 65, 66, 67, 68, 69, 118, 130], "inter": [32, 129], "intercept": [5, 44, 113, 147], "intercepts_": [44, 113, 147], "interchang": 174, "interest": [121, 122, 127, 128, 132], "interfac": 170, "interpret": [52, 65, 66, 67, 68, 69, 118, 130], "intersect": 134, "intra": [32, 129], "introduc": [6, 26, 29, 30, 32, 33, 36, 39, 40, 44, 60, 170], "invari": 174, "invers": [7, 18, 19, 29, 30, 36, 75, 112, 114, 115, 116, 124, 125, 126, 137, 144, 151, 152, 153, 154, 163, 170, 183], "inverse_transform": [138, 139, 140], "inversevolatil": [7, 18, 19, 36, 44, 183], "invest": [11, 12, 46, 48, 49, 121, 122, 127, 128, 137, 145, 171, 174], "investment_horizon": [47, 145, 174], "investor": [3, 4, 5, 29, 76, 135, 136, 137, 144, 183, 185, 187], "invok": 100, "io": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47], "ipynb": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47], "is_log_norm": [47, 145, 174], "isalnum": [52, 65, 66, 67, 68, 69, 118, 130], "isalpha": [52, 65, 66, 67, 68, 69, 118, 130], "isascii": [52, 65, 66, 67, 68, 69, 118, 130], "isdecim": [52, 65, 66, 67, 68, 69, 118, 130], "isdigit": [52, 65, 66, 67, 68, 69, 118, 130], "isidentifi": [52, 65, 66, 67, 68, 69, 118, 130], "isin": 41, "iskeyword": [52, 65, 66, 67, 68, 69, 118, 130], "islow": [52, 65, 66, 67, 68, 69, 118, 130], "isnumer": [52, 65, 66, 67, 68, 69, 118, 130], "isprint": [52, 65, 66, 67, 68, 69, 118, 130], "isspac": [52, 65, 66, 67, 68, 69, 118, 130], "issu": 114, "istitl": [52, 65, 66, 67, 68, 69, 118, 130], "isupp": [52, 65, 66, 67, 68, 69, 118, 130], "item": [44, 134], "iter": [52, 65, 66, 67, 68, 69, 99, 100, 102, 104, 105, 106, 108, 111, 112, 113, 114, 118, 129, 130, 133, 134, 146, 163, 178], "its": [11, 12, 13, 14, 15, 40, 44, 52, 62, 65, 66, 67, 68, 69, 77, 112, 113, 114, 115, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 132, 135, 136, 137, 138, 139, 140, 144, 155, 161, 162, 173, 174, 176, 177, 181, 183, 185, 187, 188], "itself": [2, 52, 65, 66, 67, 68, 69, 118, 130, 134], "iv": [44, 113], "iv_": [44, 113], "j": [52, 60, 98, 128, 174, 183], "jame": [3, 5, 117, 118, 187], "james_stein": [117, 118], "japan": 170, "javid": 111, "jnj": [41, 44, 47], "job": [100, 112, 129, 133, 147], "joblib": [100, 112, 129, 133, 147], "join": [52, 65, 66, 67, 68, 69, 118, 130, 141], "joint": [62, 174], "jorion": 117, "journal": [59, 61, 63, 64, 111, 114, 124, 125, 129, 144, 151, 152, 153, 154, 163], "jpm": [4, 6, 11, 12, 13, 19, 41, 44, 47, 170], "jpmorgan": [4, 11, 12, 13, 19], "julia": 113, "jupyt": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 49], "justifi": [52, 65, 66, 67, 68, 69, 118, 130], "k": [40, 44, 98, 100, 101, 112, 139, 141, 151, 153, 155, 160, 161, 174, 178, 182, 188], "k_": 153, "kappa": [15, 121, 128, 151, 152, 153, 154, 155, 188], "kappa_": [15, 121, 128], "keep": [138, 139, 141], "keepend": [52, 65, 66, 67, 68, 69, 118, 130], "kei": [11, 12, 13, 52, 65, 66, 67, 68, 69, 112, 113, 118, 120, 121, 122, 124, 125, 127, 128, 130, 132, 133, 134, 137, 144], "kendal": [29, 30, 32, 61, 64, 111, 170, 183], "kendalldist": [29, 30, 31, 32, 33, 176, 183], "keyword": [52, 58, 65, 66, 67, 68, 69, 102, 103, 118, 130, 133, 142, 143, 149, 150, 178], "kfold": [32, 98, 100, 112, 129, 133, 170, 178, 182, 183], "kmean": [32, 129, 183], "know": 11, "known": [15, 52, 62, 170, 183], "knuth": [62, 156, 167], "ko": [41, 44, 47, 170, 187], "kroneck": 153, "kuhn": [26, 122, 183], "kurtosi": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 66, 120, 124, 125, 135, 136, 137, 170, 174], "kwarg": [51, 52, 58, 65, 66, 67, 68, 69, 96, 102, 103, 118, 130, 134, 142, 143, 149, 150], "l": 54, "l1": [1, 16, 36, 49, 112, 121, 127, 128, 170, 171, 183], "l1_coef": [14, 36, 121, 127, 128, 178], "l2": [1, 16, 49, 121, 127, 128, 166, 171, 183], "l2_coef": [14, 121, 127, 128, 170, 178], "label": [51, 98, 182], "labels_": [51, 129], "lambda": [40, 128, 130, 174, 183], "lar": 112, "larg": [14, 102, 104, 105, 106, 108, 111, 113, 114, 115, 140, 141, 163, 170, 185], "larger": 175, "lasso": [112, 170], "lassocv": [5, 146, 147, 187], "last": [99, 106, 107, 108, 109, 111, 134, 136], "later": 182, "latest": [12, 13], "latter": [51, 58, 59, 60, 61, 62, 63, 64, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154], "law": [75, 137], "le": [128, 183], "lead": [13, 52, 65, 66, 67, 68, 69, 118, 120, 121, 124, 125, 127, 128, 129, 130, 132, 133, 174, 178, 182], "leaf": [29, 125, 183], "leakag": [7, 8, 32, 36, 98, 129, 133, 170, 179, 182, 183], "learn": [5, 7, 8, 96, 98, 104, 105, 112, 113, 114, 115, 116, 125, 129, 170, 173, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188], "learnt": 178, "least": [52, 65, 66, 67, 68, 69, 98, 118, 130, 135, 136, 137], "ledoit": [114, 170], "ledoitwolf": [36, 44, 173], "left": [52, 65, 66, 67, 68, 69, 102, 104, 105, 106, 108, 111, 112, 113, 114, 118, 121, 122, 127, 128, 130, 132, 151, 152, 153, 154, 155, 163, 170, 174, 185, 188], "left_inequ": [11, 121, 122, 127, 128, 132], "len": [14, 52, 65, 66, 67, 68, 69, 118, 130], "length": [52, 65, 66, 67, 68, 69, 99, 118, 130, 151, 152], "leptokurt": [44, 113], "leq": [11, 106, 107, 121, 122, 127, 128, 132, 151, 152, 153, 154, 155, 188], "less": [11, 19, 31, 44, 113, 121, 122, 127, 128, 132, 144, 148, 174], "let": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 138, 181, 184], "level": [15, 58, 71, 72, 73, 74, 76, 77, 93, 100, 102, 103, 121, 122, 128, 129, 132, 133, 134, 135, 136, 137, 142, 143, 149, 150, 151, 152, 153, 154], "level_0": 44, "level_1": 44, "leverag": 11, "le\u00f3n": 174, "lib": 170, "librari": 170, "licens": 170, "lightweight": 100, "like": [11, 12, 13, 26, 29, 51, 52, 58, 59, 60, 61, 62, 63, 64, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 151, 152, 153, 154, 170, 173, 174, 176, 177, 182, 183, 186, 187, 188], "likelihood": [112, 114, 115, 116], "limit": [6, 52, 65, 66, 67, 68, 69, 111, 118, 130, 132, 183], "lin": 174, "line": [14, 15, 29, 30, 32, 40, 44, 51, 52, 65, 66, 67, 68, 69, 118, 130], "line_color": [14, 15, 40], "line_dash": [14, 15, 40], "line_width": [14, 15, 40], "linear": [7, 8, 12, 13, 26, 60, 113, 120, 121, 122, 124, 125, 127, 128, 132, 137, 141, 145, 147, 183], "linear_constraint": [11, 121, 122, 127, 128, 132, 170], "linear_model": [5, 187], "linear_regressor": [5, 113, 147], "linear_regressors_": 113, "linearregress": 113, "link": [29, 30, 32], "linkag": [51, 52, 120, 124, 125, 129, 161, 183], "linkage_matrix": 161, "linkage_matrix_": [51, 172], "linkage_method": [29, 30, 31, 32, 51], "linkagemethod": [29, 30, 31, 32, 33, 51], "linspac": 10, "list": [0, 11, 40, 52, 65, 66, 67, 68, 69, 99, 112, 113, 118, 121, 122, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 144, 178, 184, 185], "literatur": [44, 144], "litterman": [1, 16, 49, 144, 171, 183], "ljust": [52, 65, 66, 67, 68, 69, 118, 130], "lly": [41, 44, 47], "ln": [44, 113, 141, 174], "load": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 53, 54, 55, 56, 57, 142, 146, 147, 175, 187], "load_factors_dataset": [5, 6, 29, 170, 175, 183, 187], "load_ftse100_dataset": [14, 15, 31, 36, 39, 40, 175], "load_nasdaq_dataset": 175, "load_sp500_dataset": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 33, 41, 44, 47, 170, 172, 173, 175, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188], "load_sp500_implied_vol_dataset": [44, 181], "load_sp500_index": [2, 175], "loading_matrix": 5, "loading_matrix_": [5, 147], "loading_matrix_estim": [5, 146, 187], "loading_matrix_estimator_": [5, 146], "loadingmatrixestim": 146, "loadingmatrixregress": [5, 146, 187], "loc": [15, 29, 44, 181], "local": [54, 55, 175], "locat": [98, 112, 114, 115, 116], "location_": [112, 114, 115, 116], "log": [14, 41, 44, 112, 113, 114, 115, 116, 132, 174, 178, 183], "log_return": 141, "log_scal": [134, 135, 136, 137], "logarithm": [44, 113, 134, 135, 136, 137, 141, 145], "logic": [99, 178], "loguniform": [14, 170, 178], "long": [2, 14, 15, 120, 121, 122, 124, 125, 127, 128, 132, 174, 183], "longer": [47, 135, 136, 137], "lookup": [52, 65, 66, 67, 68, 69, 118, 121, 130], "lookuperror": [52, 65, 66, 67, 68, 69, 118, 130], "lopez": [29, 32, 125, 129, 183], "lopsided": [135, 136, 137], "loss": [15, 93, 96, 135, 136, 137], "lost": 33, "loud": 105, "lovett": [75, 137], "low": [53, 96, 140, 144], "lower": [2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 52, 65, 66, 67, 68, 69, 78, 80, 88, 89, 118, 120, 121, 122, 124, 125, 127, 128, 130, 132, 135, 136, 137, 148, 170, 183, 187], "lowercas": [5, 52, 65, 66, 67, 68, 69, 118, 130, 187], "lowest": [14, 15, 52, 65, 66, 67, 68, 69, 118, 130, 138, 139], "lstrip": [52, 65, 66, 67, 68, 69, 118, 130], "lvert": [15, 101, 121, 128], "l\u00f2pez": [59, 61, 63, 64, 104, 105], "l\u00f3pez": [98, 125, 129], "m": [99, 114, 134, 159, 160, 165], "machin": [98, 104, 105, 125, 129, 170], "mad": [86, 135, 136, 137], "made": 14, "mahalanobi": [112, 114, 115, 116], "mai": [0, 7, 8, 14, 31, 33, 36, 39, 52, 65, 66, 67, 68, 69, 112, 118, 130, 178, 182, 183], "main": 178, "mainli": [52, 65, 66, 67, 68, 69, 118, 130], "maintain": 134, "make": [5, 6, 7, 8, 11, 12, 13, 52, 65, 66, 67, 68, 69, 96, 99, 118, 130, 146, 183, 185, 187], "make_scor": [14, 15, 31, 36, 40, 44, 178], "maketran": [52, 65, 66, 67, 68, 69, 118, 130], "manag": [1, 16, 49, 59, 61, 63, 64, 104, 105, 111, 119, 120, 121, 124, 125, 127, 128, 129, 132, 137, 141, 145, 170, 171, 174, 183, 185], "management_fe": [13, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 137], "mani": 178, "manipul": [135, 136, 137, 184], "manner": [29, 125, 178, 183], "map": [10, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 174], "marco": [29, 32, 98, 125, 129, 183], "margin": 62, "market": [4, 11, 105, 110, 121, 122, 124, 125, 127, 128, 144, 174, 183], "markowitz": [111, 170], "marti": [124, 125, 170], "mar\u010denko": 104, "mask": [138, 139, 140], "match": [121, 122, 127, 128, 132, 138, 139, 140, 144], "math": [52, 134], "mathbb": 174, "mathemat": [151, 152, 153, 154], "matric": [105, 111, 114], "matrix": [3, 4, 5, 11, 29, 30, 32, 40, 44, 51, 52, 58, 59, 60, 61, 62, 63, 64, 102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 137, 142, 144, 145, 146, 147, 148, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 172, 173, 174, 176, 182, 183, 185, 187, 188], "matur": 174, "max": [3, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 41, 52, 112, 114, 115, 116, 128, 161, 183], "max_": [128, 161, 174, 183], "max_average_drawdown": 128, "max_budget": [11, 121, 122, 127, 128], "max_cdar": [10, 128], "max_clust": 51, "max_cvar": [15, 128], "max_drawdown": [9, 10, 14, 15, 69, 120, 121, 124, 125, 128, 132, 135, 136, 137, 184, 185], "max_edar": 128, "max_evar": 128, "max_first_lower_partial_mo": 128, "max_gini_mean_differ": 128, "max_it": 112, "max_iter": 146, "max_long": [11, 121, 122, 127, 128], "max_max_drawdown": 128, "max_mean_absolute_devi": 128, "max_measur": [10, 134], "max_semi_devi": 128, "max_semi_vari": 128, "max_short": [11, 121, 122, 127, 128], "max_standard_devi": 128, "max_tracking_error": [2, 127, 128], "max_turnov": [127, 128], "max_ulcer_index": 128, "max_vari": [10, 14, 128], "max_weight": [11, 120, 121, 122, 124, 125, 127, 128, 132, 170], "max_worst_r": 128, "maxim": [10, 14, 15, 23, 31, 32, 33, 36, 40, 44, 51, 127, 128, 130, 170, 183], "maximize_ratio": [3, 4, 5, 6, 7, 10, 32, 39, 128, 130, 170, 178, 183, 188], "maximize_return": [10, 14, 15, 128, 130], "maximize_util": [12, 13, 36, 128, 130], "maximum": [1, 3, 4, 5, 6, 10, 11, 12, 13, 16, 24, 36, 39, 40, 51, 52, 65, 66, 67, 68, 69, 73, 84, 93, 102, 104, 105, 106, 108, 111, 112, 113, 114, 118, 120, 121, 122, 124, 125, 127, 128, 130, 132, 134, 135, 136, 137, 146, 163, 171], "maximumdiversif": [22, 23, 36, 49, 183], "maxsiz": 134, "maxsplit": [52, 65, 66, 67, 68, 69, 118, 130], "mb": [16, 21, 24, 27, 34, 37, 42, 45, 48, 50, 171], "mean": [0, 2, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 29, 31, 32, 36, 39, 40, 41, 44, 47, 52, 65, 66, 67, 68, 69, 72, 78, 80, 83, 86, 87, 88, 89, 96, 99, 100, 107, 109, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 144, 147, 148, 151, 152, 153, 154, 170, 171, 174, 178, 185], "mean_absolute_devi": [69, 120, 121, 124, 125, 128, 132, 135, 136, 137], "mean_absolute_deviation_ratio": [68, 135, 136, 137], "mean_risk": 186, "mean_test_scor": [14, 15, 40, 44, 112], "mean_train_scor": [14, 40], "mean_volum": 41, "meanrisk": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33, 36, 39, 40, 44, 47, 49, 127, 129, 133, 170, 178, 181, 182, 183, 184, 186, 188], "meantim": 174, "measur": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 30, 31, 32, 33, 36, 39, 40, 60, 62, 96, 111, 121, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 170, 178, 182, 183, 184, 185], "measure_list": [31, 33, 36, 39, 134, 170, 184], "measures_df": [135, 136, 137], "measures_mean": [10, 14, 31, 33, 36, 39, 134], "measures_std": [10, 31, 33, 36, 39, 134], "mechan": [51, 58, 59, 60, 61, 62, 63, 64, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 181], "median": [52, 129, 133], "mega": 11, "mem": [16, 21, 24, 27, 34, 37, 42, 45, 48, 50, 171], "memori": [100, 114], "merg": [6, 31, 39], "meshgrid": 10, "meta": [44, 112, 113, 114, 115, 116, 183], "metadata": [41, 45, 51, 58, 59, 60, 61, 62, 63, 64, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 171], "metadata_rout": [112, 113, 114, 115, 116], "metadatarequest": [51, 58, 59, 60, 61, 62, 63, 64, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154], "metadatarout": 112, "method": [0, 5, 7, 8, 9, 11, 12, 13, 14, 18, 36, 44, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 163, 170, 173, 174, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188], "methodologi": 174, "metric": [14, 15, 29, 30, 31, 32, 36, 40, 44, 62, 122], "meucci": [117, 141, 145, 174], "mf": 13, "michaud": 174, "micropredict": 170, "mid": 179, "miko\u0142aj": [124, 125], "min": [8, 52, 128, 132, 183], "min_": [128, 132, 183], "min_acceptable_return": [78, 80, 86, 88, 89, 121, 128, 132, 135, 136, 137], "min_budget": [11, 121, 122, 127, 128], "min_measur": 134, "min_n_asset": 140, "min_return": [9, 127, 128, 132], "min_weight": [2, 11, 14, 15, 36, 120, 121, 122, 124, 125, 127, 128, 132, 170, 178], "minim": [2, 9, 26, 29, 30, 31, 32, 51, 52, 101, 122, 124, 125, 128, 130, 170, 183], "minimize_risk": [2, 8, 128, 130], "minimum": [1, 2, 9, 10, 11, 16, 29, 32, 40, 44, 49, 51, 78, 80, 86, 88, 89, 120, 121, 122, 124, 125, 127, 128, 129, 132, 134, 135, 136, 137, 140, 171, 183], "minium": [120, 121, 122, 124, 125, 127, 128, 132], "minu": 185, "minut": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47], "mirror": [14, 178], "misc": 170, "miskolczi": 174, "miss": [112, 141], "mitig": 183, "mix": [11, 13, 120, 121, 122, 124, 125, 127, 128, 132], "mmp": 170, "mmse": 115, "mn": 134, "mode": [14, 15, 40, 112], "model": [1, 14, 15, 16, 41, 44, 49, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 144, 146, 148, 171, 172, 173, 176, 177, 178, 179, 181, 183, 184, 185, 186, 188], "model1": [26, 29, 30, 32, 36, 39, 183], "model2": [26, 29, 30, 32, 36, 39, 183], "model2__prior_estimator__covariance_estim": 36, "model3": [26, 29, 30, 32, 36], "model3__l1_coef": 36, "model4": [26, 29, 32, 36], "model4__risk_measur": 36, "model_bl": 4, "model_bl_factor": 6, "model_empir": [4, 5], "model_factor": 6, "model_factor_1": 5, "model_factor_2": 5, "model_factor_3": 5, "model_herc": 31, "model_hrp": 31, "model_l1": 14, "model_l2": 14, "model_mf": 13, "model_nam": 36, "model_nco": 33, "model_no_track": 2, "model_no_uncertainti": 15, "model_select": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 96, 129, 170, 178, 182, 183, 184, 185, 186], "model_spx": 2, "model_stack": 36, "model_tc": 12, "model_tc2": 12, "model_track": 2, "model_uncertainti": 15, "model_valid": 98, "modern": [111, 170], "modifi": [96, 134], "modul": [0, 52, 65, 66, 67, 68, 69, 118, 130, 156, 172, 178, 182, 183], "mohajerin": 26, "moment": [3, 5, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 44, 66, 68, 69, 78, 79, 80, 88, 89, 90, 91, 94, 120, 121, 124, 125, 128, 132, 135, 136, 137, 145, 170, 173, 174, 177, 178, 181, 183, 187, 188], "momentum": [6, 53], "month": [12, 14, 15, 31, 33, 36, 40, 41, 99], "montli": 99, "more": [4, 5, 7, 8, 11, 12, 13, 14, 19, 29, 30, 31, 32, 33, 36, 39, 40, 44, 49, 51, 52, 65, 66, 67, 68, 69, 75, 99, 100, 102, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 137, 138, 144, 145, 146, 147, 151, 152, 153, 154, 170, 178, 183, 185, 187], "mosek": [26, 122, 174, 183], "most": [174, 178], "move": [49, 185], "movement": 111, "mrk": [41, 44, 47], "msft": [41, 44, 47, 170, 187], "mtum": [6, 53, 170, 183, 187], "mu": [3, 4, 5, 12, 13, 15, 107, 109, 110, 114, 115, 116, 117, 120, 121, 122, 124, 125, 127, 128, 130, 132, 148, 150, 152, 154, 155, 174, 177, 183, 187, 188], "mu_": [107, 109, 110, 117, 174, 177], "mu_estim": [3, 5, 144, 145, 170, 178, 183, 187], "mu_estimator_": 145, "mu_target_": 117, "mu_uncertainty_set_estim": [15, 121, 128, 170, 183, 188], "mu_uncertainty_set_estimator_": [121, 128], "mu_uncertainty_set_estimator__confidence_level": 15, "multi": [14, 15, 98, 111, 134, 136, 140, 184], "multi_output_regressor_": 147, "multicollinear": [40, 102, 104, 105, 106, 108, 111, 113, 114, 163], "multioutput": 147, "multioutputregressor": 147, "multiperiodportfolio": [0, 12, 13, 14, 15, 31, 33, 36, 39, 40, 100, 134, 170, 182, 184, 185], "multipl": [29, 31, 33, 36, 39, 98, 100, 121, 125, 129, 133, 182, 183, 185], "multipli": [53, 54, 55, 56, 57, 115, 175], "multivari": [26, 114, 122, 174, 183], "must": [11, 12, 13, 41, 44, 52, 65, 66, 67, 68, 69, 96, 97, 98, 99, 110, 113, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 144, 145, 165, 174, 181], "mutli": 136, "mutual": [62, 183], "mutualinform": [176, 183], "mvo": 170, "my_param": 183, "my_portfolio": 185, "mycustomcovari": 183, "n": [2, 12, 13, 14, 31, 33, 36, 41, 50, 52, 65, 66, 67, 68, 69, 101, 110, 118, 120, 121, 124, 125, 127, 128, 130, 132, 134, 137, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 174, 184], "n_": [75, 137], "n_alpha": 112, "n_asset": [12, 13, 39, 41, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 75, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 184], "n_bin": [31, 36, 39, 62, 134, 166, 167], "n_bins_method": 62, "n_bootstrap_sampl": [151, 152], "n_clusters_": 51, "n_constraint": [121, 122, 127, 128, 132], "n_factor": [122, 132, 146, 147, 151, 152, 153, 154], "n_featur": [51, 98, 112, 114, 115, 116, 138, 139, 140], "n_features_in_": [51, 59, 60, 61, 62, 63, 64, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 125, 127, 128, 129, 132, 133, 138, 139, 140, 144, 145, 146], "n_features_new": [138, 139, 140], "n_fold": [31, 33, 36, 39, 98, 99, 101, 170, 182], "n_group": [121, 122, 127, 128, 132, 144], "n_init": [32, 183], "n_iter": [14, 15, 178], "n_iter_": 112, "n_job": [5, 12, 13, 14, 15, 31, 32, 33, 36, 39, 40, 44, 100, 112, 129, 133, 147, 170, 178, 183], "n_market": 105, "n_observ": [31, 33, 36, 39, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 151, 152, 153, 154, 166, 167, 182], "n_optim": [121, 122, 123, 126, 127, 128, 131, 132], "n_original_featur": [138, 139, 140], "n_output": [138, 139, 140], "n_refin": 112, "n_sampl": [51, 98, 112, 114, 115, 116, 138, 139, 140], "n_selected_featur": [138, 139, 140], "n_split": [98, 170], "n_target": [99, 100, 126, 127, 128, 129, 133], "n_test_fold": [31, 33, 36, 39, 98, 101, 170, 182], "n_test_path": 98, "n_to_keep": 41, "n_view": 144, "naiv": [30, 44, 124, 138, 170], "name": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 47, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 175, 178, 183, 184, 185], "named_estim": 133, "named_estimators_": 133, "named_step": 39, "nan": [54, 141], "nan_threshold": 141, "nasdaq": 55, "nativ": 175, "natur": [52, 65, 66, 67, 68, 69, 118, 130], "nb": [14, 15, 36, 40], "nbinsmethod": 62, "nco": [32, 34, 129, 171, 183], "ndarrai": [41, 51, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 138, 139, 140, 144, 145, 146, 147, 148, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "ne": [128, 183], "nearest": [40, 52, 102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 146, 163], "necessari": [83, 135, 136, 137, 138], "necessarili": 14, "need": [0, 7, 8, 12, 13, 15, 44, 120, 121, 122, 124, 125, 127, 128, 129, 132, 137, 163, 170, 174, 181], "neg": [11, 120, 121, 122, 124, 125, 127, 128, 138, 140], "neglig": [12, 185], "nest": [6, 28, 34, 49, 51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 171, 178], "nestedclustersoptim": [32, 33, 170, 172, 183], "net": [13, 112, 120, 121, 124, 125, 127, 128, 132], "network": [111, 124, 125], "neutral": [11, 121, 122, 127, 128], "never": [52, 65, 66, 67, 68, 69, 118, 130], "new": [29, 32, 52, 65, 66, 67, 68, 69, 112, 113, 118, 130, 134, 184, 186, 187], "new_portfolio": 12, "new_valu": 133, "new_x": 186, "newli": 52, "next": 99, "nick": [102, 104, 105, 106, 108, 111, 113, 114, 146, 163], "nicolini": 170, "nielsen": [124, 125], "nn": 153, "nois": [5, 104, 137, 146, 187], "non": [12, 14, 18, 26, 33, 36, 44, 52, 60, 65, 66, 67, 68, 69, 81, 83, 100, 111, 113, 118, 121, 122, 127, 128, 130, 134, 135, 136, 137, 140, 151, 152, 153, 154, 163, 168, 170, 182, 183], "non_denominated_sort": [134, 184], "none": [11, 12, 41, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78, 80, 86, 88, 89, 96, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 183], "nonzero_asset": [14, 137], "nonzero_assets_index": 137, "nor": 174, "norm": [14, 112, 114, 115, 116, 121, 127, 128], "normal": [44, 62, 83, 108, 113, 135, 136, 137, 174], "notat": [52, 65, 66, 67, 68, 69, 118, 130, 153], "note": [2, 5, 11, 12, 13, 14, 15, 40, 52, 58, 65, 66, 67, 68, 69, 96, 102, 103, 108, 112, 113, 114, 115, 116, 118, 121, 122, 127, 128, 129, 130, 132, 133, 142, 143, 149, 150, 174, 185, 187], "notebook": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 49], "notic": [12, 13, 29, 30], "notion": [12, 174], "now": [2, 10, 12, 14, 15, 36, 40], "np": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 41, 44, 51, 96, 98, 99, 114, 115, 116, 120, 121, 122, 124, 125, 127, 128, 132, 182, 183, 185], "nugget": 174, "null": 161, "num": 10, "number": [5, 7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 31, 33, 36, 39, 40, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 87, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 151, 152, 156, 161, 163, 168, 169, 170, 178, 182, 183, 187], "numer": [52, 65, 66, 67, 68, 69, 112, 115, 118, 121, 122, 127, 128, 130, 132, 163, 170], "numpi": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 41, 44, 96, 98, 99, 136, 137, 173, 176, 177, 182, 183, 185, 186, 187, 188], "nutshel": [75, 137], "o": [41, 114, 115, 134], "oa": 173, "object": [0, 7, 8, 14, 18, 26, 29, 31, 33, 36, 39, 40, 51, 58, 59, 60, 61, 62, 63, 64, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 170, 182, 183], "objective_funct": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 32, 36, 39, 128, 170, 178, 183, 188], "objectivefunct": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 32, 36, 39, 128, 170, 178, 183, 188], "observ": [31, 33, 36, 39, 40, 44, 51, 53, 54, 55, 56, 57, 71, 72, 73, 87, 93, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 134, 135, 136, 137, 141, 144, 163, 182, 185], "obtain": [31, 33, 36, 39, 74, 77, 135, 136, 137, 145, 148], "occur": [40, 102, 104, 105, 106, 108, 111, 113, 114, 163], "occurr": [52, 65, 66, 67, 68, 69, 118, 130, 134], "offer": 170, "offset": 99, "often": [40, 98, 102, 104, 105, 106, 108, 111, 113, 114, 163, 182], "okhrin": [117, 118], "ol": [44, 113], "old": [52, 65, 66, 67, 68, 69, 118, 130], "omega": 144, "omit": [7, 8, 115], "omxs30": 113, "onc": [112, 134], "one": [5, 11, 12, 13, 29, 30, 31, 32, 33, 36, 39, 44, 47, 51, 52, 65, 66, 67, 68, 69, 98, 99, 100, 118, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 147, 148, 168, 169, 174, 178, 182, 183, 187], "ones": [12, 14, 15, 52, 65, 66, 67, 68, 69, 99, 118, 130], "onli": [7, 8, 11, 12, 13, 14, 26, 29, 31, 33, 36, 39, 47, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 144, 145, 146, 147, 151, 152, 153, 154, 174, 181, 183, 185, 186], "open": [26, 170], "oper": [52, 65, 66, 67, 68, 69, 115, 118, 130, 138, 139, 140, 151, 152, 153, 154], "oppos": [30, 145], "optim": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 37, 39, 40, 41, 44, 47, 66, 100, 101, 111, 112, 114, 117, 137, 140, 141, 146, 148, 151, 152, 153, 154, 161, 166, 167, 171, 172, 179, 181, 182, 184, 185, 186, 187, 188], "optimal_folds_numb": [31, 33, 36, 39, 182], "optimization__risk_measur": 178, "optimum": 112, "option": [3, 4, 5, 51, 52, 54, 55, 59, 62, 65, 66, 67, 68, 69, 78, 80, 86, 88, 89, 96, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 151, 152, 153, 154, 174, 187], "oracl": [115, 170], "order": [12, 13, 29, 41, 51, 120, 121, 124, 125, 127, 128, 132, 134, 136, 137, 138, 161, 181], "ordin": [52, 65, 66, 67, 68, 69, 118, 130], "org": [121, 122, 127, 128, 132], "origin": [29, 32, 51, 52, 65, 66, 67, 68, 69, 112, 113, 114, 115, 116, 118, 125, 129, 130, 183], "oserror": [54, 55], "other": [7, 8, 11, 15, 19, 29, 31, 52, 65, 66, 67, 68, 69, 112, 113, 114, 115, 116, 118, 130, 134, 135, 136, 137, 138, 141, 144, 178], "other_portfolio": 185, "otherwis": [51, 52, 65, 66, 67, 68, 69, 81, 82, 96, 99, 102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 127, 128, 130, 132, 134, 135, 136, 137, 139, 141, 163, 165], "otim": 153, "our": [4, 6, 7, 8, 12, 13, 36, 41, 44, 170, 182], "out": [14, 15, 31, 32, 33, 36, 39, 40, 41, 44, 59, 61, 63, 64, 112, 121, 125, 127, 128, 129, 133, 134, 170, 183], "outcom": 96, "outer": [32, 36, 129, 133, 141, 183], "outer_estim": [32, 33, 129, 170, 183], "outer_estimator_": 129, "outlin": [29, 30, 32, 51], "outperform": [4, 6, 7, 8, 12, 13, 31, 33, 36, 59, 61, 63, 64, 125, 129, 144, 170], "output": [36, 100, 129, 133, 138, 139, 140, 182, 183, 184], "over": [15, 23, 26, 112, 122, 127, 134, 135, 136, 137, 141, 168, 169, 174, 178, 183], "overal": 112, "overcom": [5, 146, 187], "overfit": [14, 15, 129, 133, 170, 179], "overhead": 147, "overlap": [44, 52, 65, 66, 67, 68, 69, 98, 113, 118, 130, 182], "overwrit": [121, 122, 128, 132], "overwrite_expected_return": [121, 122, 128, 132], "owa": 87, "own": [174, 178, 182], "oxford": 174, "p": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 23, 26, 29, 30, 32, 33, 41, 44, 47, 56, 57, 98, 111, 113, 115, 175], "packag": [0, 179], "pad": [52, 65, 66, 67, 68, 69, 118, 130], "page": 114, "pair": [11, 12, 13, 100, 113, 120, 121, 122, 124, 125, 127, 128, 132, 137, 138, 140, 144, 182], "panda": [39, 40, 41, 44, 99, 134, 135, 136, 137, 138, 139, 140, 170, 173, 176, 177, 183, 185, 186, 187, 188], "panna": 174, "paper": [29, 32, 111, 125, 129, 183], "parallel": [5, 12, 100, 112, 129, 133, 147, 183], "parallel_backend": [100, 112, 129, 133, 147], "param": [41, 44, 51, 58, 59, 60, 61, 62, 63, 64, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154], "param_dist": 178, "param_distribut": [14, 15, 170, 178], "param_grid": [14, 15, 31, 33, 36, 40, 44, 170, 178], "param_l2_coef": 14, "param_mu_uncertainty_set_estimator__confidence_level": 15, "param_pre_selection__k": 40, "param_prior_estimator__covariance_estimator__prior_covariance_estim": 44, "param_prior_estimator__covariance_estimator__window_s": 44, "paramet": [5, 7, 8, 9, 11, 12, 13, 26, 41, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 179, 182, 183, 184, 187], "parameter_nam": 133, "parametr": 174, "pareto": [9, 134, 140], "pariti": [17, 21, 28, 30, 32, 34, 49, 124, 125, 132, 171], "parolya": [117, 118], "part": [52, 65, 66, 67, 68, 69, 118, 130, 178], "partial": [7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 29, 36, 40, 68, 69, 78, 80, 88, 89, 99, 121, 128, 132, 135, 136, 137, 170, 183], "particular": 114, "partit": [52, 65, 66, 67, 68, 69, 118, 130], "pass": [7, 8, 13, 44, 51, 96, 100, 104, 105, 110, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 144, 145, 146, 147, 151, 152, 153, 154, 178, 181], "past": 99, "pastur": 104, "path": [31, 33, 36, 39, 41, 97, 98, 100, 101, 129, 133, 182, 183], "pattern": [11, 121, 122, 127, 128, 132, 144], "patton": [151, 152], "paulsen": 137, "pct_to_keep": 41, "pd": [40, 44, 99, 102, 104, 105, 106, 108, 111, 113, 114, 185], "pearson": [29, 30, 32, 63, 170], "pearsondist": [31, 33, 120, 124, 125, 129, 172, 176, 183], "penal": [14, 112, 121, 127, 128], "penalti": 112, "pep": [41, 44, 47], "per": [13, 14, 15, 36, 40, 41, 44, 129, 134, 136, 137, 147, 170], "percentag": 141, "perfectli": 185, "perfmeasur": [9, 10, 14, 15, 47, 96, 129, 133, 135, 136, 137, 140, 184, 185], "perform": [14, 15, 31, 33, 36, 38, 41, 42, 49, 51, 67, 98, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 141, 147, 148, 161, 165, 170, 171, 174, 178, 179, 182, 185, 186], "period": [14, 15, 41, 99, 120, 121, 124, 125, 127, 128, 132, 134, 136, 137, 141, 174], "permit": 122, "pfe": [41, 44, 47], "pg": [41, 44, 47], "philipp": [117, 124, 125], "pick": 144, "picking_matrix_": 144, "piecewis": [26, 122, 183], "pin": 179, "pip": [170, 180], "pipe": 186, "pipelin": [11, 38, 49, 51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 178, 186], "pipeplin": [39, 40], "pitfal": [141, 145], "place": 134, "plan": 179, "pleas": [0, 51, 58, 59, 60, 61, 62, 63, 64, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154], "plot": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 51, 98, 134, 135, 136, 137, 185], "plot_10_tracking_error": [2, 16, 171], "plot_11_empirical_prior": [3, 16, 171], "plot_12_black_and_litterman": [4, 16, 171], "plot_13_factor_model": [5, 16, 171], "plot_14_black_litterman_factor_model": [6, 16, 171], "plot_1_distributionally_robust_cvar": [26, 27, 171], "plot_1_drop_correl": [39, 42, 171], "plot_1_hrp_cvar": [29, 34, 171], "plot_1_implied_volatil": [44, 45, 171], "plot_1_investment_horizon": [47, 48, 171], "plot_1_maximum_divesif": [23, 24, 171], "plot_1_maximum_sharpe_ratio": [7, 16, 171], "plot_1_risk_parity_vari": [18, 21, 171], "plot_1_stack": [36, 37, 171], "plot_2_herc_cdar": [30, 34, 171], "plot_2_minimum_cvar": [8, 16, 171], "plot_2_risk_budgeting_cvar": [19, 21, 171], "plot_2_select_best_perform": [40, 42, 171], "plot_3_custom_pre_selection_volum": [41, 42, 171], "plot_3_efficient_fronti": [9, 16, 171], "plot_3_hrp_vs_herc": [31, 34, 171], "plot_3_risk_parity_ledoit_wolf": [20, 21, 171], "plot_4_mean_variance_cdar": [10, 16, 171], "plot_4_nco": [32, 34, 171], "plot_5_nco_grid_search": [33, 34, 171], "plot_5_weight_constraint": [11, 16, 171], "plot_6_transaction_cost": [12, 16, 171], "plot_7_management_fe": [13, 16, 171], "plot_8_regular": [14, 16, 171], "plot_9_uncertainty_set": [15, 16, 171], "plot_composit": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 23, 26, 29, 30, 31, 32, 33, 36, 40, 41, 44, 47, 134, 135, 136, 137, 184, 185], "plot_contribut": [18, 19, 29, 30, 134, 135, 136, 137, 185], "plot_cumulative_return": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 134, 135, 136, 137, 170, 184, 185], "plot_dendrogram": [29, 30, 32, 51], "plot_distribut": [31, 33, 36, 39, 134, 170, 184], "plot_measur": [9, 10, 14, 15, 47, 134, 184], "plot_return": [135, 136, 137], "plot_rolling_measur": [134, 135, 136, 137, 185], "plot_train_test_fold": 98, "plot_train_test_index": 98, "plotli": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 134, 135, 136, 137], "pmb": 174, "point": [40, 52, 65, 66, 67, 68, 69, 102, 104, 105, 106, 108, 111, 112, 113, 114, 118, 130, 134, 163], "polakow": 111, "polar": [138, 139, 140], "politi": [151, 152], "poor": 170, "poorli": [14, 15], "pop": 134, "popul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 47, 100, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 170, 182], "population_test": [9, 10, 14, 29, 30, 32], "population_train": [2, 9, 10, 14, 15], "portfolio": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 59, 61, 63, 64, 75, 96, 99, 100, 111, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 140, 141, 145, 146, 151, 152, 153, 154, 170, 172, 178, 179, 182, 183, 184, 186, 187], "portfolio optim": 170, "portfolio_param": [2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 100, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133], "portfolio_test": 183, "portfolio_train": 183, "portion": 105, "pose": 174, "posit": [12, 36, 40, 52, 65, 66, 67, 68, 69, 102, 104, 105, 106, 108, 111, 113, 114, 118, 120, 121, 122, 124, 125, 127, 128, 130, 132, 146, 163, 165], "possibl": [6, 19, 20, 23, 44, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 178, 183, 187], "posterior": [4, 144, 187], "potenti": 140, "power": [59, 61, 63, 64], "pq": [52, 65, 66, 67, 68, 69, 118, 130], "prabhala": 113, "practic": [174, 178, 185], "prado": [29, 32, 59, 61, 63, 64, 98, 104, 105, 125, 129, 183], "pre": [11, 39, 40, 42, 140, 141, 171], "pre_dispatch": 100, "pre_select": [39, 40, 41, 170, 178, 186], "pre_selection__k": 40, "preced": [14, 15, 31, 41], "precis": [112, 114, 115, 116], "precision_": [112, 114, 115, 116], "pred": [31, 36, 40, 41, 96, 178, 182], "pred1": [12, 13], "pred2": [12, 13], "pred3": 12, "pred_1": 39, "pred_2": 39, "pred_bench": [3, 7, 8, 14, 33, 36, 40, 44], "pred_bl": 4, "pred_empir": 4, "pred_gs_model": 44, "pred_herc": 31, "pred_hrp": 31, "pred_model": [3, 7, 8, 40, 44], "pred_nco": 33, "pred_no_reg": 14, "pred_no_uncertainti": 15, "pred_realised_vols_": 113, "pred_reg": 14, "pred_stack": 36, "pred_uncertainti": 15, "pred_uncertainty_r": 15, "predict": [0, 10, 11, 12, 13, 15, 44, 96, 100, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 137, 147, 178, 183, 184, 185, 186], "prefer": [112, 122, 183], "prefit": 133, "prefix": [52, 65, 66, 67, 68, 69, 118, 130], "premium": 113, "prepar": [7, 8, 47, 141, 145], "preprocess": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 170, 172, 173, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188], "preselect": 140, "present": [33, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 144, 145], "press": [125, 129, 174], "prev": 185, "previou": [6, 12, 31, 33, 36, 40, 44, 99, 120, 121, 124, 125, 127, 128, 132, 137, 185], "previous_weight": [12, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 137], "price": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 96, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 137, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 153, 154, 170, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188], "prices_to_return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 170, 172, 173, 176, 177, 178, 181, 182, 183, 184, 186, 187, 188], "principl": 178, "print": [2, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 39, 40, 44, 98, 99, 112, 170, 172, 173, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188], "printabl": [52, 65, 66, 67, 68, 69, 118, 130], "prior": [1, 4, 5, 6, 16, 20, 36, 44, 47, 49, 105, 113, 120, 121, 122, 124, 125, 126, 127, 128, 132, 151, 152, 153, 154, 170, 171, 174, 178, 181], "prior_covariance_estim": [44, 113], "prior_covariance_estimator_": 113, "prior_estim": [3, 4, 5, 6, 20, 29, 36, 44, 47, 120, 121, 122, 124, 125, 126, 127, 128, 132, 144, 149, 150, 151, 152, 153, 154, 170, 178, 181, 183], "prior_estimator_": [5, 120, 121, 122, 126, 127, 128, 132, 144, 151, 152, 153, 154], "prior_estimator__covariance_estimator__prior_covariance_estim": 44, "prior_estimator__covariance_estimator__window_s": 44, "prior_estimator__mu_estimator__alpha": [170, 178], "prior_model": 5, "prior_model_": [5, 6, 144, 145, 146, 187], "priormodel": [3, 4, 5, 29, 120, 121, 122, 124, 125, 126, 127, 128, 132, 144, 145, 146, 183, 187], "probabl": [26, 122, 183], "problem": [0, 5, 12, 13, 26, 40, 101, 102, 104, 105, 106, 108, 111, 113, 114, 120, 121, 122, 124, 125, 127, 128, 132, 137, 146, 163, 183, 185, 187], "problem_": [121, 122, 127, 128, 132], "problem_values_": [121, 122, 127, 128, 132], "procedur": [44, 47, 174], "process": [11, 98, 100, 115, 140, 182], "processor": [100, 112, 129, 133, 147], "produc": [111, 168, 169], "product": [0, 32, 36, 129, 133, 137, 153, 174, 178, 183, 185], "profession": [141, 145, 174], "program": [26, 122, 151, 152, 153, 154, 183], "project": [145, 174], "properli": 174, "properti": [7, 8, 29, 30, 32, 44, 98, 113, 124, 125, 133, 135, 136, 137, 151, 152, 153, 154, 174, 178, 183], "proport": [111, 144], "propos": 115, "prove": [11, 26, 117, 122, 183], "provid": [5, 9, 11, 12, 13, 98, 99, 110, 112, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 141, 144, 145, 146, 148, 174, 178, 187], "psd": 111, "psd_variant": 111, "pseudo": [112, 114, 115, 116, 151, 152], "ptf": [14, 31, 33, 36, 137], "ptf0": 9, "ptf1": [9, 29, 30, 39, 185], "ptf10": 9, "ptf11": 9, "ptf12": 9, "ptf13": 9, "ptf14": 9, "ptf15": 9, "ptf16": 9, "ptf17": 9, "ptf18": 9, "ptf19": 9, "ptf2": [9, 30, 39, 185], "ptf20": 9, "ptf21": 9, "ptf22": 9, "ptf23": 9, "ptf24": 9, "ptf25": 9, "ptf26": 9, "ptf27": 9, "ptf28": 9, "ptf29": 9, "ptf3": [9, 185], "ptf4": 9, "ptf5": 9, "ptf6": 9, "ptf7": 9, "ptf8": 9, "ptf9": 9, "ptf_bench_test": [18, 19, 20, 23, 26], "ptf_bench_train": [18, 19, 23], "ptf_bl_factor_test": 6, "ptf_empirical_test": 5, "ptf_factor_1_test": 5, "ptf_factor_2_test": 5, "ptf_factor_3_test": 5, "ptf_factor_test": 6, "ptf_model1_test": 26, "ptf_model2_test": 26, "ptf_model3_test": 26, "ptf_model4_test": 26, "ptf_model_test": [18, 19, 20, 23], "ptf_model_train": [18, 19, 23], "ptf_no_tracking_test": 2, "ptf_no_tracking_train": 2, "ptf_tracking_test": 2, "ptf_tracking_train": 2, "public": [53, 54, 55, 56, 57, 170, 175], "publish": 111, "pujara": 111, "punctuat": [52, 65, 66, 67, 68, 69, 118, 130], "pure": 114, "purg": [28, 34, 49, 98, 171], "purged_s": [98, 99], "purpos": [5, 146, 183, 187], "put": 144, "px": 44, "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 138, 139, 140, 171], "pypi": [170, 180], "pyportfolioopt": 170, "python": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 49, 52, 65, 66, 67, 68, 69, 118, 130, 170], "q": [99, 134, 140, 182, 184], "qu": 140, "quad": [128, 183], "qual": [6, 53, 170, 183, 187], "qualiti": [6, 53], "qualnam": 156, "quant": 174, "quantifi": [75, 137], "quantil": [129, 133, 134, 182, 183, 184], "quantile_measur": [129, 133, 183], "quantit": [104, 105, 125, 129, 170], "quarter": 99, "quarterli": 99, "quick": 44, "quickli": 170, "r": [51, 52, 65, 66, 67, 68, 69, 118, 130, 137, 174, 185], "r2": 44, "r2_scores_": 44, "r_": [128, 130, 154, 183], "r_p": 185, "rac": 134, "radiu": [26, 122], "raffinot": [30, 124, 183], "rais": [41, 52, 54, 55, 65, 66, 67, 68, 69, 112, 113, 114, 115, 116, 118, 121, 122, 127, 128, 130, 132, 134, 135, 136, 137, 157, 158, 159], "raise_on_failur": [10, 121, 122, 127, 128, 132], "ran": 14, "rand": 41, "rand_weight": 184, "randint": 178, "randn": [98, 99], "random": [14, 15, 41, 62, 98, 99, 104, 138, 151, 152, 153, 168, 169, 181, 183, 184], "randomized_search": [14, 15, 170], "randomizedsearchcv": [14, 15, 170, 178], "randomli": 168, "rang": [10, 40, 52, 65, 66, 67, 68, 69, 112, 114, 115, 116, 118, 130, 134, 178, 184], "rank": 140, "rate": [121, 122, 127, 128, 132, 135, 136, 137, 144], "rather": [138, 139, 140], "ratio": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 18, 19, 20, 23, 29, 31, 32, 33, 36, 39, 40, 44, 49, 68, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 171, 178, 183], "ratiomeasur": [9, 10, 14, 15, 31, 33, 36, 39, 40, 44, 129, 133, 134, 135, 136, 137, 139, 170, 178, 182, 184, 185], "ration": [7, 185], "rationmeasur": 96, "ravel": 10, "raw": 0, "rd_search": 178, "re": [6, 12, 13, 44, 112, 114, 115, 116, 179], "reach": 140, "read": [112, 114, 115, 116], "readabl": [11, 12, 13, 44], "real": 165, "realis": [44, 83, 113], "realiz": [4, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 68, 69, 95, 113, 128, 132, 135, 136, 137, 170, 183], "rearrang": [29, 125, 183], "reason": [29, 141], "rebal": [12, 13, 41, 44], "rebalanc": [12, 41, 99, 174, 185], "rebas": [134, 135, 136, 137], "receiv": 170, "recombin": [33, 36, 98], "recombined_path": 98, "recommend": [49, 174, 178], "reconstruct": [44, 98, 101, 113], "recurs": [29, 30, 124, 125, 183], "reduc": [5, 14, 15, 100, 101, 104, 117, 121, 127, 128, 132, 138, 139, 140, 146, 170, 179, 187, 188], "reduce_test": 99, "reduct": 14, "ref1": [11, 121, 122, 127, 128, 132], "ref2": [11, 121, 122, 127, 128, 132], "ref3": [11, 121, 122, 127, 128, 132], "ref_model": 14, "refer": [11, 14, 44, 51, 59, 60, 61, 63, 64, 75, 98, 104, 105, 111, 113, 114, 115, 117, 122, 124, 125, 129, 137, 140, 141, 144, 145, 151, 152, 153, 154, 161, 163, 166, 167, 170, 174, 181, 183], "referenc": [121, 122, 127, 128, 132, 144], "refin": 112, "reform": 174, "reformul": [26, 122, 183], "regard": 185, "regardless": 29, "region": [15, 121, 128, 151, 152, 153, 154, 155], "regist": [52, 65, 66, 67, 68, 69, 118, 130], "register_error": [52, 65, 66, 67, 68, 69, 118, 130], "regress": [44, 113, 147], "regressor": 147, "regular": [1, 15, 16, 36, 49, 52, 65, 66, 67, 68, 69, 116, 118, 121, 122, 127, 128, 130, 170, 171, 183], "regularis": [114, 115], "rel": [4, 6, 29, 74, 77, 101, 135, 136, 137, 144], "relat": [62, 105, 113, 185], "releas": [121, 122, 127, 128, 132, 174, 179], "relev": [112, 113, 114, 115, 116], "reli": 30, "remain": [19, 29, 30, 32, 51, 52, 65, 66, 67, 68, 69, 118, 130, 138, 139, 140, 183], "remov": [39, 52, 65, 66, 67, 68, 69, 98, 105, 118, 130, 133, 134, 136, 137, 138, 139, 140, 182], "removeprefix": [52, 65, 66, 67, 68, 69, 118, 130], "removesuffix": [52, 65, 66, 67, 68, 69, 118, 130], "renam": 44, "render": [7, 8], "reorder": [29, 30, 32, 51], "replac": [32, 40, 52, 65, 66, 67, 68, 69, 102, 104, 105, 106, 108, 111, 113, 114, 118, 121, 122, 127, 128, 130, 132, 161, 163], "replic": 185, "repo": 175, "repr": [52, 65, 66, 67, 68, 69, 118, 130], "repres": [3, 4, 5, 6, 15, 29, 30, 31, 32, 33, 36, 39, 40, 51, 53, 72, 74, 77, 99, 112, 114, 115, 116, 135, 136, 137, 153, 182, 183, 187], "request": [112, 113, 114, 115, 116, 185], "requir": 2, "rerun": [183, 187], "rescal": [81, 112, 114, 115, 116, 126, 134, 135, 136, 137], "research": [53, 54, 55, 56, 57, 111, 151, 152, 153, 154, 175], "reserv": [52, 65, 66, 67, 68, 69, 118, 130], "reset_index": 44, "residu": 146, "residual_vari": 146, "resourc": 170, "respect": [11, 52, 112, 114, 115, 116], "rest": [52, 65, 66, 67, 68, 69, 118, 130, 181], "result": [12, 13, 52, 65, 66, 67, 68, 69, 100, 112, 114, 115, 116, 118, 130, 147, 174], "retain": [41, 112, 113, 114, 115, 116, 138, 139, 140, 178], "retent": [138, 139, 140], "retriev": [12, 121, 122, 127, 128, 132], "return": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 26, 29, 31, 33, 36, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188], "return_train_scor": [14, 40, 44], "returns_df": [135, 136, 137, 185], "reveiz": 174, "revers": [134, 138, 139, 140], "review": [124, 125], "rfind": [52, 65, 66, 67, 68, 69, 118, 130], "rgb": [14, 15, 40], "rgba": [14, 40], "richard": 174, "ridgecv": 5, "right": [52, 65, 66, 67, 68, 69, 118, 121, 122, 127, 128, 130, 132, 135, 136, 137, 151, 152, 153, 154, 155, 188], "right_inequ": [11, 121, 122, 127, 128, 132], "rindex": [52, 65, 66, 67, 68, 69, 118, 130], "risk": [2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 21, 23, 28, 32, 34, 36, 40, 51, 66, 68, 69, 71, 72, 73, 74, 76, 77, 93, 110, 113, 117, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 135, 136, 137, 140, 141, 144, 145, 146, 171, 174, 178, 179, 187], "risk_": [128, 132, 183], "risk_avers": [110, 122, 128, 183], "risk_budget": [19, 132], "risk_free_r": [120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 135, 136, 137, 144], "risk_measur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 29, 30, 31, 32, 33, 36, 47, 120, 121, 124, 125, 128, 132, 170, 178, 183, 184], "riskbudget": [17, 18, 19, 20, 32, 33, 49, 170, 183], "riskfolio": 170, "riskmeasur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 29, 30, 31, 32, 33, 36, 47, 96, 120, 121, 124, 125, 128, 129, 132, 133, 135, 136, 137, 140, 170, 178, 183, 184, 185], "rjust": [52, 65, 66, 67, 68, 69, 118, 130], "rmse": [2, 127, 128], "robert": [144, 174], "robust": [5, 14, 15, 27, 31, 33, 36, 39, 111, 121, 122, 125, 127, 128, 129, 146, 151, 152, 153, 154, 170, 171, 187, 188], "rockafellar": [26, 122], "roll": [14, 15, 31, 33, 36, 39, 40, 134, 135, 136, 137], "rolling_measur": [134, 135, 136, 137, 185], "root": [2, 88, 90, 127, 128, 135, 136, 137, 174], "round": [41, 134, 135, 136, 137], "rout": [41, 45, 51, 58, 59, 60, 61, 62, 63, 64, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 171], "row": [7, 8, 41, 141], "rpartit": [52, 65, 66, 67, 68, 69, 118, 130], "rrc": [41, 44, 47, 170], "rsome": 170, "rsplit": [52, 65, 66, 67, 68, 69, 118, 130], "rstrip": [52, 65, 66, 67, 68, 69, 118, 130], "rule": [135, 136, 137, 166, 167, 174], "run": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 100, 112, 129, 133, 138, 139, 140, 147, 174, 178, 183], "rust": [121, 122, 127, 128, 132], "rv": [44, 113, 178], "rv_": [44, 113], "rvert": 101, "rvert_": [15, 121, 128], "s_": [15, 121, 128, 141, 174], "same": [7, 8, 11, 12, 13, 18, 31, 33, 36, 40, 41, 51, 52, 65, 66, 67, 68, 69, 112, 113, 114, 115, 116, 118, 120, 121, 122, 124, 125, 127, 128, 130, 132, 133, 140, 144, 170, 173, 176, 177, 178, 183, 186, 187, 188], "sampl": [14, 15, 26, 31, 32, 33, 36, 39, 40, 41, 44, 59, 61, 63, 64, 98, 99, 112, 113, 114, 115, 116, 117, 121, 122, 125, 127, 128, 129, 133, 138, 139, 140, 151, 152, 154, 161, 170, 178, 183], "sara": 113, "sargen": 111, "satisfi": 10, "save": [5, 44, 121, 122, 127, 128, 132, 187], "save_problem": [121, 122, 127, 128, 132], "sc": [121, 122, 127, 128, 132], "scalar": 96, "scale": [15, 112, 114, 115, 116, 121, 122, 127, 128, 132, 134, 135, 136, 137, 140, 174], "scale_constraint": [121, 122, 127, 128, 132], "scale_object": [121, 122, 127, 128, 132], "scatter": [14, 15, 40, 134], "scene_camera": 10, "scheme": [52, 65, 66, 67, 68, 69, 118, 130, 178], "sch\u00f6ttle": [151, 152, 153, 154], "scienc": 111, "scientif": 170, "scikit": [5, 7, 8, 96, 112, 113, 114, 115, 116, 170, 173, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188], "scikit-learn": 170, "scipi": [14, 15, 51, 52, 170, 178], "score": [14, 15, 31, 36, 40, 44, 96, 112, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 178], "score_func": 96, "scorer": [40, 96], "script": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 181], "search": [14, 15, 33, 44, 52, 65, 66, 67, 68, 69, 101, 112, 118, 130], "second": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 69, 83, 88, 89, 90, 94, 99, 128, 135, 136, 137, 138, 178], "secondli": 174, "section": [14, 15, 44, 51, 52], "sector": 11, "secur": [5, 53, 54, 55, 56, 57, 105, 141, 146, 174, 175, 187], "see": [4, 7, 8, 14, 15, 26, 29, 30, 31, 40, 44, 47, 51, 52, 99, 102, 104, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 138, 139, 140, 144, 145, 146, 147, 151, 152, 153, 154, 170, 178], "seed": [151, 152], "seen": [51, 59, 60, 61, 62, 63, 64, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 125, 127, 128, 129, 132, 133, 138, 139, 140, 144, 145, 146, 174], "select": [11, 12, 13, 14, 15, 31, 39, 42, 112, 129, 133, 138, 139, 140, 141, 151, 152, 171, 179, 183, 185], "selected_idx": 41, "selectkextrem": [40, 170, 178, 186], "selectnondomin": 186, "selectormixin": 41, "self": [41, 51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 183], "sell": [11, 12, 120, 121, 122, 124, 125, 127, 128, 132], "semi": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 68, 69, 88, 89, 99, 111, 121, 128, 132, 135, 136, 137, 146, 170, 178, 183], "semi_devi": [69, 121, 128, 132, 135, 136, 137, 183], "semi_vari": [69, 120, 121, 124, 125, 128, 132, 135, 136, 137, 170, 178, 183], "semimonthend": 99, "sens": [112, 114, 115, 116], "sensit": 170, "sep": [52, 65, 66, 67, 68, 69, 118, 130], "separ": [5, 6, 52, 65, 66, 67, 68, 69, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 145, 146, 147, 187], "sequenti": 138, "seri": [44, 82, 98, 99, 111, 113, 135, 136, 137, 181, 182], "serial": [98, 182], "seriat": [29, 125, 183], "set": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 49, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 163, 168, 171, 174, 175, 178, 182, 183, 184, 185], "set_config": [39, 40, 41, 44, 104, 105, 110, 112, 113, 114, 115, 116, 117, 122, 124, 126, 127, 129, 133, 144, 145, 146, 147, 151, 152, 153, 154, 170, 181, 186], "set_fit_request": [41, 44, 113, 181], "set_output": [138, 139, 140], "set_param": [2, 12, 13, 14, 15, 31, 51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154], "set_portfolio_param": [9, 10, 134, 184], "set_score_request": [112, 114, 115, 116], "shallow": 134, "shape": [6, 9, 10, 12, 13, 14, 15, 29, 30, 31, 32, 33, 36, 39, 41, 44, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 182, 183, 184, 186, 188], "share": 121, "sharp": [1, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 18, 19, 20, 23, 29, 32, 33, 36, 39, 40, 44, 49, 68, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 171, 178, 183, 185], "sharpe_ratio": [39, 68, 129, 133, 134, 135, 136, 137, 139, 170, 182, 183, 184, 185], "short": [2, 14, 15, 36, 120, 121, 122, 124, 125, 127, 128, 132, 174], "shortcom": [138, 170], "shortfal": [7, 8, 69, 72, 128, 135, 136, 137], "should": [12, 33, 58, 102, 103, 112, 113, 114, 115, 116, 141, 142, 143, 149, 150, 174, 178, 185], "show": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 134, 181], "show_front": [134, 184], "showlegend": [14, 40], "shown": [44, 182], "shrink": 117, "shrinkag": [3, 5, 13, 17, 21, 49, 114, 115, 116, 117, 118, 120, 121, 124, 125, 127, 128, 132, 170, 171, 187], "shrinkage_": [114, 115], "shrunk": [114, 115, 116], "shrunkcovari": [20, 173], "shrunkmu": [3, 5, 118, 170, 177, 187], "shrunkmumethod": 117, "shuffl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 99, 170, 178, 182, 183, 184, 186], "sigma": [44, 110, 113, 151, 153, 154, 155, 174, 188], "sigma_": 174, "sign": 96, "signal": [104, 115], "signatur": [96, 178], "significantli": [14, 163], "sim": [153, 154], "similar": [174, 178], "simpl": [6, 51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 174, 183], "simplex": [168, 169], "simpli": [3, 12, 138], "simplic": 41, "simplifi": [47, 174], "simul": [31, 33, 36, 40], "simultan": 111, "sinc": [12, 29, 41, 98, 170, 182], "singl": [2, 29, 30, 31, 32, 33, 51, 52, 98, 100, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 140, 141, 174, 182, 183], "site": [54, 55], "six": 14, "size": [6, 15, 31, 33, 36, 39, 44, 52, 53, 65, 66, 67, 68, 69, 101, 106, 107, 108, 109, 111, 113, 114, 118, 121, 122, 127, 128, 130, 132, 134, 135, 136, 137, 151, 152, 153, 154, 155, 161, 166, 167, 170, 182, 183, 187, 188], "skb": 41, "skew": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 44, 66, 113, 120, 124, 125, 135, 136, 137, 170, 174], "skf": 41, "skfolio": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "skfolio_data": [54, 55, 175], "skip": [101, 133], "sklean": 187, "sklearn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 96, 98, 99, 104, 105, 110, 112, 113, 114, 115, 116, 117, 122, 124, 126, 127, 129, 133, 144, 145, 146, 147, 151, 152, 153, 154, 170, 172, 178, 181, 182, 183, 184, 185, 186], "skv": 41, "slice": [52, 65, 66, 67, 68, 69, 118, 130, 134, 135, 136, 137], "slightli": [31, 33], "slot": [135, 136, 137, 185], "slow": [102, 104, 105, 106, 108, 111, 113, 114, 163], "slower": [146, 147], "small": [5, 115, 117, 146, 187], "smaller": [40, 102, 104, 105, 106, 108, 111, 113, 114, 163], "smooth": [106, 107], "snippet": 170, "so": [12, 13, 26, 51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 170, 185], "social": 111, "solut": 153, "solv": [132, 183, 188], "solver": [26, 112, 121, 122, 127, 128, 132, 183], "solver_param": [121, 122, 127, 128, 132], "some": [59, 61, 63, 64, 99, 105, 112, 113, 114, 115, 116, 132, 148, 181, 184], "sometim": 174, "sort": [134, 136, 137, 138, 139, 140], "sort_idx": [14, 15], "sort_measur": 134, "sortino": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 68, 135, 136, 137, 178], "sortino_ratio": [68, 135, 136, 137, 170, 178, 184, 185], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "sp500": 57, "space": [14, 26, 52, 65, 66, 67, 68, 69, 101, 118, 122, 130, 134, 135, 136, 137, 183], "span": [29, 41], "spars": 112, "spawn": 100, "spd": 163, "spearman": [64, 170], "spearmandist": [176, 183], "special": 127, "specif": [0, 5, 52, 65, 66, 67, 68, 69, 99, 105, 118, 121, 122, 127, 128, 130, 132, 133, 146, 178, 187], "specifi": [11, 14, 15, 19, 41, 44, 52, 54, 55, 58, 62, 65, 66, 67, 68, 69, 72, 99, 100, 102, 103, 112, 114, 115, 116, 118, 129, 130, 133, 135, 136, 137, 142, 143, 144, 149, 150], "spectral": [112, 114, 115, 116], "speed": 26, "sphinx": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 49], "sphx_glr_auto_examples_miscellaneous_plot_set_output": [138, 139, 140], "split": [7, 8, 12, 29, 44, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 97, 98, 99, 100, 112, 114, 118, 125, 129, 130, 133, 175, 182, 183], "splitlin": [52, 65, 66, 67, 68, 69, 118, 130], "splitter": [100, 112], "spx": [2, 3, 4, 5, 6, 29, 120, 121, 122, 124, 125, 127, 128, 132, 144, 175], "spx_price": 2, "spx_test": 2, "spx_train": 2, "sqrt": [2, 52, 59, 61, 63, 64, 112, 113, 114, 115, 116, 135, 136, 137, 161], "squar": [2, 29, 30, 32, 51, 59, 61, 63, 64, 88, 90, 112, 114, 115, 116, 127, 128, 135, 136, 137, 151, 152, 153, 154, 158, 174], "sric": 137, "ssrn": [125, 129], "stabil": [14, 31, 121, 122, 127, 128, 132, 161], "stabl": [29, 30, 31, 32, 112, 124, 125, 134, 179, 183], "stack": [35, 37, 49, 133, 170, 171], "stackingoptim": [36, 183], "stake": 36, "standard": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 40, 44, 53, 54, 55, 56, 57, 59, 61, 63, 64, 68, 69, 88, 90, 112, 128, 134, 135, 136, 137, 162, 163, 164, 175, 183], "standard_devi": [69, 121, 128, 132, 135, 136, 137], "starer": 111, "start": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 47, 49, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 81, 98, 99, 118, 125, 130, 134, 135, 136, 137, 156, 163, 170, 175, 183], "startswith": [52, 65, 66, 67, 68, 69, 118, 130], "stat": [14, 15, 170, 178, 184], "state": 115, "static": [52, 65, 66, 67, 68, 69, 118, 130], "stationari": [151, 152], "statist": [29, 51, 111, 124, 161, 174], "statsmodel": 170, "std": [31, 33, 36, 39, 44, 162, 164], "std_test_scor": [14, 40, 44, 112], "std_train_scor": [14, 40], "stein": [3, 5, 117, 118, 187], "step": [29, 30, 40, 44, 113, 124, 125, 138, 144, 174, 183], "sticker": [7, 8], "still": [8, 179], "stochast": [83, 135, 136, 137], "stock": [2, 13, 113], "stop": [10, 52, 65, 66, 67, 68, 69, 112, 118, 130, 134], "store": [54, 55, 112, 114, 115, 116, 173, 176, 177, 183, 187, 188], "store_precis": [112, 114, 115, 116], "str": [44, 52, 54, 55, 65, 66, 67, 68, 69, 99, 100, 112, 113, 114, 115, 116, 118, 120, 121, 122, 124, 125, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 156, 184], "strategi": [7, 8, 18, 19, 20, 23, 100, 112, 129, 133], "stratifi": 100, "strength": [36, 133, 183], "strict": [52, 65, 66, 67, 68, 69, 118, 130], "strictli": [135, 136, 137], "string": [11, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146], "strip": [52, 65, 66, 67, 68, 69, 118, 130], "structur": [5, 29, 30, 32, 146, 173, 176, 177, 183, 186, 187, 188], "studi": 113, "sub": [29, 36, 52, 65, 66, 67, 68, 69, 112, 113, 114, 115, 116, 118, 125, 130, 133, 134, 183], "subfold": [54, 55], "subobject": [51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154], "suboptim": [138, 174], "subsequ": 99, "subset": 105, "substitut": [52, 65, 66, 67, 68, 69, 118, 130], "substr": [52, 65, 66, 67, 68, 69, 118, 130], "succeq": [151, 153, 155, 188], "success": [12, 13, 163], "suffer": [29, 30, 32], "suffici": 11, "suffix": [52, 65, 66, 67, 68, 69, 118, 130], "suitabl": [52, 65, 66, 67, 68, 69, 99, 118, 130], "sum": [11, 121, 122, 126, 127, 128, 131, 132, 141, 144, 168, 169, 174, 185], "sum_": [12, 13, 14, 52, 120, 121, 124, 125, 127, 128, 132, 137, 161, 174], "summari": [7, 8, 9, 14, 15, 18, 19, 20, 23, 31, 33, 36, 39, 40, 44, 98, 134, 135, 136, 137, 170, 174, 182, 184, 185], "super": 183, "superior": [83, 135, 136, 137], "support": [122, 129, 138, 139, 140, 183, 184], "suppos": [13, 138, 181], "surfac": [1, 16, 49, 134, 171], "swapcas": [52, 65, 66, 67, 68, 69, 118, 130], "swinkel": 113, "sx5e": [120, 121, 122, 124, 125, 127, 128, 132, 144], "sy": 134, "symetri": 101, "symmetr": [135, 136, 137, 159, 163, 165], "syntax": 178, "systemat": [5, 129, 133, 146, 187], "szeke": 60, "t": [11, 12, 13, 15, 29, 44, 52, 65, 66, 67, 68, 69, 101, 110, 112, 113, 114, 115, 116, 118, 120, 121, 124, 125, 127, 128, 130, 132, 141, 144, 151, 152, 153, 154, 155, 161, 174, 183, 185, 188], "tab": [52, 65, 66, 67, 68, 69, 118, 130], "tabl": [52, 65, 66, 67, 68, 69, 118, 130], "tabsiz": [52, 65, 66, 67, 68, 69, 118, 130], "tag": [2, 9, 10, 14, 15, 31, 33, 36, 39, 47, 134, 135, 136, 137], "tag_list": [31, 36, 39, 134], "tail": [41, 72, 80, 135, 136, 137, 170], "tailor": 182, "take": [4, 5, 12, 14, 15, 121, 122, 127, 128, 132, 134, 138, 144, 173, 174, 176, 177, 178, 183, 185, 186, 187, 188], "taken": 18, "target": [2, 15, 78, 80, 86, 88, 89, 98, 100, 101, 117, 126, 127, 128, 129, 133, 138, 139, 140, 141, 182], "target_n_test_path": [31, 33, 36, 39, 101, 182], "target_train_s": [31, 33, 36, 39, 101, 182], "tau": [111, 144], "tc": 12, "technologi": 11, "tend": [14, 39, 111, 121, 127, 128, 170], "tenth": 44, "term": [11, 31, 33, 121, 122, 127, 128, 140, 146, 174], "test": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 52, 60, 65, 66, 67, 68, 69, 97, 98, 99, 100, 101, 112, 114, 115, 116, 118, 129, 130, 133, 163, 182, 184, 185], "test_index": [98, 99], "test_set_index": 98, "test_siz": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 99, 170, 178, 183, 184, 186], "text": [52, 65, 66, 67, 68, 69, 118, 128, 130, 132, 151, 153, 155, 161, 183, 188], "th": 112, "than": [5, 11, 14, 29, 30, 31, 32, 40, 47, 51, 83, 99, 100, 102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 121, 122, 124, 125, 127, 128, 129, 132, 135, 136, 137, 138, 139, 140, 163, 174, 183, 185, 187], "thank": 170, "thei": [0, 52, 65, 66, 67, 68, 69, 81, 82, 118, 130, 145, 170, 174, 175, 178, 183, 185], "them": [5, 6, 13, 26, 31, 33, 36, 39, 40, 133, 134, 146, 181, 185, 187], "theori": [62, 111, 166, 170], "therefor": [14, 99, 140, 163, 174], "theta": 76, "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 163, 170, 174, 178, 179, 181, 182, 183, 184, 185, 187], "third": [29, 30, 32, 52, 65, 66, 67, 68, 69, 91, 99, 118, 130], "thoma": [30, 124, 183], "those": [98, 182], "three": [14, 15, 31, 33, 36, 40, 52, 65, 66, 67, 68, 69, 111, 117, 118, 130, 138, 175], "threshold": [39, 51, 60, 102, 104, 105, 106, 108, 111, 113, 114, 138, 140, 141, 163, 186], "through": [5, 76, 112, 135, 136, 137, 146, 174, 183, 187], "tibshirani": 161, "tickformat": [14, 15, 40], "time": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 59, 61, 62, 63, 64, 96, 98, 99, 101, 110, 112, 113, 120, 121, 122, 124, 125, 127, 128, 130, 132, 135, 136, 137, 141, 174, 181, 182, 183], "timedelta": 99, "timeseriessplit": 99, "tip": 41, "titl": [14, 15, 40, 44, 52, 65, 66, 67, 68, 69, 118, 130, 134, 170], "titlecas": [52, 65, 66, 67, 68, 69, 118, 130], "tlt": [121, 122, 127, 128, 132, 144, 170], "to_df": [135, 136, 137], "to_keep_": [41, 138, 139, 140], "to_surfac": [10, 134], "togeth": [6, 36, 133, 170, 183, 185], "toi": [7, 8, 33, 44], "tol": 112, "tol_gap_ab": [121, 122, 127, 128, 132], "tol_gap_rel": [121, 122, 127, 128, 132], "toler": 112, "tone": 105, "tonexti": [14, 40], "too": [52, 65, 66, 67, 68, 69, 118, 130], "tool": [7, 8, 170, 178, 182, 185], "top": [29, 30, 40, 41, 124, 125, 170, 179, 183], "topic": 185, "topmost": [29, 125, 183], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 50, 100, 101, 117, 120, 121, 124, 125, 127, 128, 132, 137, 141, 171, 183], "toward": [12, 13, 117], "tr": [112, 114, 115, 116], "trace": [114, 115, 116], "track": [1, 16, 49, 127, 128, 170, 171, 183], "tracking_rms": 2, "tractabl": 122, "trade": [13, 113, 117, 170, 185], "tradeoff": 2, "tradit": 104, "trail": [5, 52, 65, 66, 67, 68, 69, 118, 130], "train": [2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 98, 99, 100, 101, 112, 113, 122, 129, 133, 147, 182, 183, 185], "train_index": [98, 99], "train_siz": [12, 13, 14, 15, 31, 33, 36, 40, 41, 44, 99, 170], "train_spx": 2, "train_test_split": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 170, 178, 182, 183, 184, 186], "transact": [1, 16, 49, 115, 120, 121, 122, 124, 125, 127, 128, 132, 137, 171, 183, 185], "transaction_cost": [12, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 137, 170], "transform": [7, 8, 11, 12, 13, 38, 39, 40, 44, 47, 49, 59, 61, 63, 64, 113, 138, 139, 140, 141, 145, 170, 174], "transform_output": [39, 40, 41, 170, 186], "translat": [52, 65, 66, 67, 68, 69, 118, 130], "travers": [29, 125, 183], "tree": [29, 30, 32, 124, 125, 129, 183], "triangular": [3, 4, 5, 148, 187], "true": [10, 14, 29, 30, 32, 40, 41, 44, 47, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 81, 82, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 163, 165, 170, 174, 178, 181, 184], "truncat": [52, 65, 66, 67, 68, 69, 118, 130], "try": [52, 54, 55, 65, 66, 67, 68, 69, 118, 130], "tune": [170, 179], "tupl": [52, 65, 66, 67, 68, 69, 118, 130, 133, 164], "turnov": [121, 127, 128, 132, 170, 183], "tutori": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 121, 122, 127, 128, 132], "two": [2, 6, 14, 29, 31, 33, 40, 51, 52, 62, 65, 66, 67, 68, 69, 83, 101, 111, 112, 114, 115, 116, 117, 118, 124, 125, 130, 134, 135, 136, 137, 138, 161, 174, 178, 183], "type": [99, 112, 114, 115, 116, 134, 156], "u": [29, 30, 32, 52, 65, 66, 67, 68, 69, 118, 121, 122, 127, 128, 130, 132, 144, 161, 170], "u_": [151, 152, 153, 154, 155, 188], "ulcer": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 68, 69, 92, 128, 132, 135, 136, 137, 170, 183], "ulcer_index": [69, 120, 121, 124, 125, 128, 132, 135, 136, 137], "ulcer_index_ratio": [68, 135, 136, 137], "umbrella": 15, "un": 14, "unbias": [108, 117, 137], "uncas": [52, 65, 66, 67, 68, 69, 118, 130], "uncertain": [13, 120, 121, 124, 125, 127, 128, 132], "uncertainti": [1, 16, 26, 49, 121, 128, 144, 149, 150, 151, 152, 153, 154, 155, 171, 183], "uncertainty_set": [15, 170, 183, 188], "uncertainty_set_": [151, 152, 153, 154, 188], "uncertaintyset": [151, 152, 153, 154, 188], "unchang": [102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 138, 139, 140, 163], "uncommon": 174, "uncompound": [81, 82], "under": [9, 10, 13, 14, 15, 111, 112, 114, 115, 116, 154, 170, 174, 179, 183], "underli": [100, 104, 105, 110, 112, 113, 117, 122, 124, 126, 127, 129, 133, 144, 145, 146, 147, 151, 152, 153, 154, 185], "underperform": [7, 8, 33, 144], "underscor": [5, 15], "unfortun": 170, "unh": [7, 8, 41, 44, 47, 56], "unicod": [52, 65, 66, 67, 68, 69, 118, 130], "unicodeencodeerror": [52, 65, 66, 67, 68, 69, 118, 130], "unifi": 170, "uniform": [14, 15, 26, 122, 168, 169, 178, 183], "uniformli": [14, 15, 178], "unit": [134, 135, 136, 137], "univers": [125, 129, 141, 174, 186], "unless": [52, 65, 66, 67, 68, 69, 100, 112, 118, 129, 130, 133, 147], "unrealist": 12, "unrepresent": [52, 65, 66, 67, 68, 69, 118, 130], "unstack": 44, "unsupervis": [138, 139, 140], "until": [140, 179], "untouch": [52, 65, 66, 67, 68, 69, 118, 130], "unus": 52, "unwant": [13, 120, 121, 124, 125, 127, 128, 132], "up": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 30, 31, 32, 33, 36, 39, 40, 44, 47, 53, 54, 55, 56, 57, 175], "updat": [4, 12, 29, 30, 51, 58, 59, 60, 61, 62, 63, 64, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 183, 187], "update_layout": [10, 14, 15, 40], "update_xax": 15, "update_yax": [14, 15, 40], "upgma": 52, "upgmc": 52, "upper": [14, 15, 52, 65, 66, 67, 68, 69, 74, 77, 118, 120, 121, 122, 124, 125, 127, 128, 130, 132, 135, 136, 137], "uppercas": [52, 65, 66, 67, 68, 69, 118, 130], "upsid": [29, 30, 32, 78, 80, 86, 88, 89, 121, 128, 132, 135, 136, 137], "url": 170, "uryasev": [26, 122], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 38, 39, 40, 42, 43, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 77, 78, 80, 83, 86, 87, 88, 89, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 163, 166, 167, 170, 171, 172, 174, 175, 178, 181, 182, 183, 185, 187, 188], "usabl": [52, 65, 66, 67, 68, 69, 118, 130], "user": [0, 7, 8, 44, 51, 58, 59, 60, 61, 62, 63, 64, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 163, 170, 174, 175], "usmv": [53, 183, 187], "usual": [13, 105, 178], "utf": [52, 65, 66, 67, 68, 69, 118, 130], "util": [12, 13, 29, 36, 41, 76, 112, 113, 114, 115, 116, 122, 128, 130, 135, 136, 137, 170, 183, 184], "v": [28, 34, 41, 44, 49, 52, 141, 145, 161, 171, 174, 182], "valid": [14, 32, 40, 52, 65, 66, 67, 68, 69, 97, 98, 99, 100, 112, 118, 129, 130, 133, 178, 179, 183], "valu": [2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 23, 29, 30, 32, 36, 40, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 161, 163, 165, 170, 178, 183], "value_at_risk": [66, 120, 124, 125, 135, 136, 137], "value_at_risk_beta": [135, 136, 137], "value_at_risk_ratio": [68, 135, 136, 137], "valueerror": [41, 52, 65, 66, 67, 68, 69, 118, 130, 134, 157, 158, 159], "var": [66, 72, 77, 93, 135, 136, 137], "variabl": [5, 14, 15, 62, 83, 98, 121, 122, 127, 128, 132, 135, 136, 137, 138, 146, 153, 175, 178, 183, 187], "varianc": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 29, 30, 32, 33, 36, 39, 40, 44, 47, 49, 51, 52, 69, 83, 89, 102, 104, 105, 106, 108, 111, 113, 114, 117, 120, 121, 124, 125, 128, 129, 132, 135, 136, 137, 140, 146, 148, 151, 152, 153, 154, 163, 171, 174, 178, 183, 184, 185], "variance_from_asset": 137, "variance_upp": 10, "variant": 111, "variat": [62, 170, 178], "variou": 133, "vast": [7, 8], "vec": [151, 153, 155, 188], "vector": [11, 12, 13, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 117, 120, 121, 122, 124, 125, 127, 128, 132, 134, 135, 137, 138, 139, 140, 144, 153, 162, 164, 168, 169, 174, 182, 183, 185], "verbos": [100, 112, 121, 122, 127, 128, 129, 132, 133], "veri": [30, 112, 133, 174, 178, 183], "verifi": 165, "version": [14, 51, 52, 65, 66, 67, 68, 69, 96, 112, 113, 114, 115, 116, 118, 130, 138, 139, 140, 178, 179], "versu": [2, 10], "vert": [14, 75, 121, 127, 128, 137], "vert_": [14, 75, 121, 127, 128, 137], "vertic": 40, "via": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 52, 65, 66, 67, 68, 69, 118, 130, 175], "view": [41, 144, 170, 183, 187], "view_confid": 144, "views_": 144, "vikberg": 113, "visual": [12, 13], "vlue": [6, 53, 170, 183, 187], "vod": 54, "vol": [7, 18, 19, 44, 170], "vol_weighted_target": 117, "volatil": [7, 12, 14, 18, 19, 23, 36, 43, 45, 49, 53, 113, 117, 126, 127, 137, 170, 171, 181, 183], "volatility_risk_premium_adj": 113, "volum": [38, 42, 49, 114, 171], "volumepreselect": 41, "volumes_usd": 41, "voor": 52, "vrpa": 113, "w": [11, 12, 13, 14, 15, 75, 110, 120, 121, 122, 124, 125, 127, 128, 130, 132, 137, 153, 174, 183, 185], "w_": [12, 13, 14, 101, 120, 121, 124, 125, 127, 128, 132, 137, 161, 174, 185], "wa": [7, 8, 12, 33, 44, 52, 60, 138, 139, 140], "wai": [40, 127, 128, 178], "walk": [12, 13, 15, 41, 99, 170], "walkforward": [12, 13, 14, 15, 31, 33, 36, 40, 41, 44, 170, 185], "wang": [51, 124, 161], "want": [10, 12, 13, 182, 183], "ward": [29, 30, 31, 32, 33, 51, 52, 124, 125, 183], "warn": [121, 122, 127, 128, 132, 163], "wasserstein": [26, 122, 183], "wasserstein_ball_radiu": [26, 122, 183], "we": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 49, 96, 101, 112, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 137, 138, 140, 141, 146, 153, 163, 170, 174, 178, 179, 181, 182, 183, 184, 187], "week": 99, "wei": [51, 124, 161], "weight": [0, 1, 2, 4, 8, 12, 13, 14, 16, 23, 26, 29, 30, 31, 32, 33, 36, 41, 49, 52, 75, 87, 101, 106, 107, 110, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 137, 141, 144, 168, 169, 171, 174, 183, 184, 185], "weight_n_test_path": 101, "weight_train_s": 101, "weights_": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 39, 44, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 170, 178, 181, 183, 184, 188], "weights_per_observ": [41, 136, 137], "weir": 54, "well": [51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 170, 182, 183], "were": [4, 6, 170], "werner": [151, 152, 153, 154], "when": [11, 12, 13, 14, 29, 30, 32, 40, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 163, 178, 182, 185], "where": [11, 29, 30, 44, 52, 65, 66, 67, 68, 69, 98, 100, 112, 114, 115, 116, 118, 124, 125, 127, 130, 134, 138, 139, 140, 161, 174, 178, 182, 183, 185], "whether": [52, 65, 66, 67, 68, 69, 112, 114, 115, 116, 118, 130, 165], "which": [4, 5, 6, 11, 12, 13, 14, 15, 23, 26, 29, 30, 32, 41, 44, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 74, 76, 77, 98, 100, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 151, 152, 153, 154, 163, 174, 175, 178, 182, 183, 185, 187], "while": [2, 36, 83, 98, 111, 133, 135, 136, 137, 170, 178, 179], "white": [151, 152], "whitespac": [52, 65, 66, 67, 68, 69, 118, 130], "whole": [32, 129, 183], "whose": [52, 65, 66, 67, 68, 69, 98, 112, 114, 115, 116, 118, 130, 138, 139, 140, 182], "wi": [134, 135, 136, 137], "wide": [59, 61, 63, 64, 178], "width": [14, 40, 52, 65, 66, 67, 68, 69, 118, 130], "wiesel": 115, "william": [75, 137], "window": [44, 106, 107, 108, 109, 111, 113, 134, 135, 136, 137], "window_s": [44, 106, 107, 108, 109, 111, 113], "wise": 174, "wishart": 153, "wit": 174, "within": [26, 30, 52, 65, 66, 67, 68, 69, 118, 122, 124, 130, 133, 161, 178, 183], "without": [2, 5, 6, 7, 8, 12, 13, 14, 15, 20, 39, 40, 121, 122, 127, 128, 132, 135, 136, 137], "wmt": [7, 8, 29, 30, 32, 41, 44, 47, 56], "wolf": [114, 170], "wom": [41, 99], "word": [31, 52, 65, 66, 67, 68, 69, 118, 130], "work": [36, 40, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154], "wors": [135, 136, 137], "worst": [7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 36, 40, 68, 69, 71, 72, 73, 93, 95, 121, 122, 128, 132, 135, 136, 137, 139, 170, 188], "worst_real": [69, 120, 121, 124, 125, 128, 132, 135, 136, 137], "worst_realization_ratio": [68, 135, 136, 137], "would": [11, 13, 14, 36, 120, 121, 124, 125, 127, 128, 132, 138, 139, 140, 170, 174, 183, 185], "wpgma": 52, "wpgmc": 52, "wpp": 54, "wrap": 96, "write": 178, "written": [121, 122, 127, 128, 132], "wtb": 54, "www": [121, 122, 127, 128, 132], "x": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 153, 154, 157, 158, 159, 160, 165, 166, 167, 170, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188], "x0": [137, 138, 139, 140], "x1": [137, 138, 139, 140], "x_new": [138, 139, 140], "x_r": [138, 139, 140], "x_test": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 112, 114, 115, 116, 170, 178, 182, 183, 184, 186], "x_train": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 44, 170, 178, 183, 184, 186], "xaxis_titl": [14, 15, 40], "xmlcharrefreplac": [52, 65, 66, 67, 68, 69, 118, 130], "xom": [7, 8, 41, 44, 47, 56], "y": [2, 5, 6, 9, 10, 14, 15, 29, 40, 41, 44, 47, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 151, 152, 153, 154, 170, 183, 184, 187], "y_test": [2, 5, 6, 29, 170, 183], "y_test_mean": [14, 15], "y_test_std": 14, "y_train": [2, 5, 6, 29, 170, 183], "y_train_mean": 14, "y_train_std": 14, "yahoo": [53, 54, 55, 56, 57, 175], "yaxis_titl": [14, 15, 40], "year": [12, 13, 14, 15, 26, 31, 33, 36, 40, 44, 47, 99, 170, 174], "yearli": [13, 174], "yellow": [29, 30, 32, 51], "yield": [98, 99, 112, 129, 133, 174], "you": [7, 8, 9, 11, 12, 13, 15, 29, 41, 44, 62, 96, 99, 110, 112, 113, 114, 115, 116, 121, 122, 127, 128, 132, 133, 141, 144, 170, 174, 179, 181, 182, 183], "your": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 99, 174, 178, 183], "yue": [51, 124, 161], "z": [10, 52, 65, 66, 67, 68, 69, 118, 130, 134, 138, 184], "zero": [14, 52, 65, 66, 67, 68, 69, 102, 104, 105, 106, 108, 111, 112, 113, 114, 115, 116, 118, 121, 127, 128, 130, 135, 136, 137, 138, 139, 140, 151, 152, 153, 154, 163, 168, 185], "zfill": [52, 65, 66, 67, 68, 69, 118, 130], "zhou": 140, "zip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 47, 49], "zvra": 55, "zyme": 55, "zyne": 55, "zyxi": 55, "\u00ecn": 178}, "titles": ["API Reference", "Mean-Risk", "Tracking Error", "Empirical Prior", "Black &amp; Litterman", "Factor Model", "Black &amp; Litterman Factor Model", "Maximum Sharpe Ratio", "Minimum CVaR", "Efficient Frontier", "Mean-Variance-CDaR Surface", "Weight Constraints", "Transaction Costs", "Management Fees", "L1 and L2 Regularization", "Uncertainty Set", "Computation times", "Risk Budgeting", "Risk Parity - Variance", "Risk Budgeting - CVaR", "Risk Parity - Covariance shrinkage", "Computation times", "Maximum Diversification", "Maximum Diversification", "Computation times", "Distributionally Robust CVaR", "Distributionally Robust CVaR", "Computation times", "Hierarchical Clustering and NCO", "Hierarchical Risk Parity - CVaR", "Hierarchical Equal Risk Contribution - CDaR", "HRP vs HERC", "Nested Clusters Optimization", "NCO - Combinatorial Purged CV", "Computation times", "Ensemble Optimizations", "Stacking Optimization", "Computation times", "Pre-selection", "Drop Highly Correlated Assets", "Select Best Performers", "Custom Pre-selection Using Volumes", "Computation times", "Metadata Routing", "Using Implied Volatility with Metadata Routing", "Computation times", "Data Preparation", "Investment Horizon", "Computation times", "Examples", "Computation times", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.cluster</span></code>.HierarchicalClustering", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.cluster</span></code>.LinkageMethod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_factors_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_ftse100_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_nasdaq_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_sp500_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_sp500_index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.BaseDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.CovarianceDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.DistanceCorrelation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.KendallDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.MutualInformation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.PearsonDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.SpearmanDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.BaseMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.ExtraRiskMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.PerfMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.RatioMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.RiskMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.average_drawdown", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.cdar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.cvar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.drawdown_at_risk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.edar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.effective_number_assets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.entropic_risk_measure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.evar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.first_lower_partial_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.fourth_central_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.fourth_lower_partial_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.get_cumulative_returns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.get_drawdowns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.gini_mean_difference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.max_drawdown", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.mean", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.mean_absolute_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.owa_gmd_weights", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.semi_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.semi_variance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.standard_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.third_central_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.ulcer_index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.value_at_risk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.variance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.worst_realization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.metrics</span></code>.make_scorer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.BaseCombinatorialCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.CombinatorialPurgedCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.WalkForward", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.cross_val_predict", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.optimal_folds_number", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.BaseCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.BaseMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.DenoiseCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.DetoneCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EWCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EWMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EmpiricalCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EmpiricalMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EquilibriumMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.GerberCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.GraphicalLassoCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ImpliedCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.LedoitWolf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.OAS", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkMuMethods", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.BaseComposition", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.BaseHierarchicalOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.ConvexOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.DistributionallyRobustCVaR", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.EqualWeighted", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.HierarchicalEqualRiskContribution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.HierarchicalRiskParity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.InverseVolatility", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.MaximumDiversification", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.MeanRisk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.NestedClustersOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.ObjectiveFunction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.Random", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.RiskBudgeting", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.StackingOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.population</span></code>.Population", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.BasePortfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.MultiPeriodPortfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.Portfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.DropCorrelated", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectKExtremes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectNonDominated", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.preprocessing</span></code>.prices_to_returns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BaseLoadingMatrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BasePrior", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BlackLitterman", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.EmpiricalPrior", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.FactorModel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.LoadingMatrixRegression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.PriorModel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BaseCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BaseMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BootstrapCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BootstrapMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.EmpiricalCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.EmpiricalMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.UncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.NBinsMethod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_distance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_square", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_symmetric", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.commutation_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.compute_optimal_n_clusters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.corr_to_cov", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.cov_nearest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.cov_to_corr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.is_cholesky_dec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.n_bins_freedman", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.n_bins_knuth", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.rand_weights", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.rand_weights_dirichlet", "skfolio", "Computation times", "Clustering Estimators", "Covariance Estimator", "Data Preparation", "Datasets", "Distance Estimator", "Expected Return Estimator", "Hyper-Parameters Tuning", "User Guide", "Installation", "Metadata Routing", "Model Selection", "Optimization", "Population", "Portfolio", "Pre-Selection Transformers", "Prior Estimator", "Uncertainty Set Estimator"], "titleterms": {"In": 174, "The": 174, "alloc": 183, "an": 178, "analysi": [5, 7, 8, 9, 10, 18, 19, 20, 23, 26, 31, 33, 36], "analyst": [4, 6], "api": 0, "approach": 174, "assert_is_dist": 157, "assert_is_squar": 158, "assert_is_symmetr": 159, "asset": 39, "attribut": 185, "avail": 170, "average_drawdown": 70, "base": [0, 185], "basecombinatorialcv": 97, "basecomposit": 119, "basecovari": 102, "basecovarianceuncertaintyset": 149, "basedist": 58, "basehierarchicaloptim": 120, "baseloadingmatrix": 142, "basemeasur": 65, "basemu": 103, "basemuuncertaintyset": 150, "baseportfolio": 135, "baseprior": 143, "benchmark": [3, 36], "best": 40, "black": [4, 6, 170, 187], "blacklitterman": 144, "bootstrapcovarianceuncertaintyset": 151, "bootstrapmuuncertaintyset": 152, "bound": 11, "budget": [11, 17, 19, 49, 183], "case": 183, "cdar": [10, 30, 71], "citat": 170, "class": 0, "cluster": [0, 28, 32, 49, 51, 52, 170, 172, 183], "combin": [183, 187], "combinatori": [31, 33, 36, 39, 170, 182], "combinatorialpurgedcv": 98, "commutation_matrix": 160, "composit": [29, 30, 32, 178], "comput": [16, 21, 24, 27, 34, 37, 42, 45, 48, 50, 171], "compute_optimal_n_clust": 161, "concept": 170, "conclus": [7, 8, 33, 36, 44], "constraint": [11, 170], "contribut": [18, 19, 29, 30, 183], "convex": 0, "convexoptim": 121, "corr_to_cov": 162, "correct": 174, "correl": 39, "cost": [12, 170], "cov_nearest": 163, "cov_to_corr": 164, "covari": [0, 20, 44, 170, 173], "covariancedist": 59, "cross": [31, 33, 36, 39, 41, 44, 170, 182], "cross_val_predict": 100, "custom": [41, 183], "cv": 33, "cvar": [8, 19, 25, 26, 29, 49, 72, 170, 183], "data": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 41, 46, 49, 174], "dataclass": 0, "dataset": [0, 44, 53, 54, 55, 56, 57, 170, 175], "dendrogram": [29, 30, 32], "denois": 170, "denoisecovari": 104, "deton": 170, "detonecovari": 105, "distanc": [0, 29, 30, 32, 58, 59, 60, 61, 62, 63, 64, 176], "distancecorrel": 60, "distribut": [31, 33, 36, 39], "distribution": [25, 26, 49, 183], "distributionallyrobustcvar": 122, "diversif": [22, 23, 49, 183], "drawdown_at_risk": 73, "drop": 39, "dropcorrel": 138, "edar": 74, "effective_number_asset": 75, "effici": [9, 14, 15], "embed": 170, "empir": [3, 4, 5, 187], "empiricalcovari": 108, "empiricalcovarianceuncertaintyset": 153, "empiricalmu": 109, "empiricalmuuncertaintyset": 154, "empiricalprior": 145, "ensembl": [0, 35, 49], "entropic_risk_measur": 76, "enum": 0, "equal": [30, 183], "equalweight": 123, "equilibriummu": 110, "error": 2, "estim": [0, 29, 30, 32, 44, 172, 173, 176, 177, 178, 183, 187, 188], "evar": 77, "ewcovari": 106, "ewmu": 107, "exampl": [49, 174], "exhaust": 178, "expect": [170, 177], "extrariskmeasur": 66, "factor": [0, 5, 6, 170, 187], "factormodel": 146, "fee": 13, "first_lower_partial_mo": 78, "fit": 170, "fold": 170, "fourth_central_mo": 79, "fourth_lower_partial_mo": 80, "frontier": [9, 14, 15], "function": 0, "further": [6, 183], "gerber": 170, "gerbercovari": 111, "get_cumulative_return": 81, "get_drawdown": 82, "gini_mean_differ": 83, "go": [6, 183], "graphicallassocv": 112, "grid": [170, 178], "group": 11, "guid": 179, "herc": 31, "hierarch": [28, 29, 30, 49, 183], "hierarchicalclust": 51, "hierarchicalequalriskcontribut": 124, "hierarchicalriskpar": 125, "highli": 39, "horizon": 47, "hrp": 31, "hyper": [14, 15, 44, 178], "impli": 44, "impliedcovari": 113, "import": 170, "inequ": 11, "instal": [170, 180], "invers": 44, "inversevolatil": 126, "invest": 47, "is_cholesky_dec": 165, "k": 170, "kei": 170, "kendalldist": 61, "l1": 14, "l2": [14, 170], "ledoitwolf": 114, "left": 11, "linear": [11, 47, 174], "linkag": [29, 30, 32], "linkagemethod": 52, "litterman": [4, 6, 170, 187], "load": [0, 44, 170], "load_factors_dataset": 53, "load_ftse100_dataset": 54, "load_nasdaq_dataset": 55, "load_sp500_dataset": 56, "load_sp500_index": 57, "loadingmatrixregress": 147, "logarithm": 174, "long": 11, "lower": 11, "make_scor": 96, "manag": 13, "matrix": 0, "max_drawdown": 84, "maximum": [7, 22, 23, 49, 170, 183], "maximumdiversif": 127, "mean": [1, 10, 49, 85, 183], "mean_absolute_devi": 86, "meanrisk": 128, "measur": [0, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "metadata": [43, 44, 49, 181], "method": [29, 30, 32, 185], "metric": [0, 96, 178], "minimum": [8, 170], "model": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 170, 182, 187], "model_select": [0, 97, 98, 99, 100, 101], "moment": [0, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "mu": 0, "multi": [12, 13, 185], "multiperiodportfolio": 136, "multipl": 187, "mutualinform": 62, "n_bins_freedman": 166, "n_bins_knuth": 167, "naiv": [0, 183], "nbinsmethod": 156, "nco": [28, 33, 49], "nest": [32, 170, 183], "nestedclustersoptim": 129, "norm": 170, "oa": 115, "object": 178, "objectivefunct": 130, "optim": [0, 10, 32, 35, 36, 49, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 170, 174, 178, 183], "optimal_folds_numb": 101, "owa_gmd_weight": 87, "parallel": [170, 178], "paramet": [14, 15, 31, 33, 36, 40, 44, 170, 178], "pareto": 10, "pariti": [18, 20, 29, 170, 183], "pearsondist": 63, "perfmeasur": 67, "perform": 40, "period": [12, 13, 185], "pipelin": [39, 40, 41, 170], "pitfal": 174, "popul": [0, 134, 184], "portfolio": [0, 12, 13, 135, 136, 137, 174, 185], "posit": 11, "pre": [0, 38, 41, 49, 170, 186], "pre_select": [0, 138, 139, 140], "predict": [2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 170, 182], "prepar": [46, 49, 174], "preprocess": [0, 141], "price": 47, "prices_to_return": 141, "prior": [0, 3, 29, 142, 143, 144, 145, 146, 147, 148, 183, 187], "priormodel": 148, "purg": [31, 33, 36, 39, 170, 182], "quickstart": 170, "rand_weight": 168, "rand_weights_dirichlet": 169, "random": [131, 170, 178], "ratio": [7, 170], "ratiomeasur": 68, "recognit": 170, "refer": 0, "regular": 14, "return": [47, 170, 174, 177], "right": 11, "risk": [1, 17, 18, 19, 20, 29, 30, 49, 170, 183], "riskbudget": 132, "riskmeasur": 69, "robust": [25, 26, 49, 183], "rout": [43, 44, 49, 181], "search": [170, 178], "select": [0, 38, 40, 41, 49, 170, 182, 186], "selectkextrem": 139, "selectnondomin": 140, "semi_devi": 88, "semi_vari": 89, "set": [0, 15, 170, 188], "sharp": 7, "short": 11, "shrinkag": 20, "shrunk": 170, "shrunkcovari": 116, "shrunkmu": 117, "shrunkmumethod": 118, "skfolio": [0, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174], "sortino": 170, "space": 178, "spearmandist": 64, "specifi": 178, "split": 170, "stack": [36, 183], "stackingoptim": 133, "standard_devi": 90, "stat": [0, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "stock": 174, "summari": 29, "surfac": 10, "test": 170, "third_central_mo": 91, "time": [16, 21, 24, 27, 34, 37, 42, 45, 48, 50, 171], "tip": 178, "track": 2, "train": 170, "transact": [12, 170], "transform": [0, 41, 186], "tune": [14, 15, 31, 33, 36, 40, 44, 178], "ulcer_index": 92, "uncertainti": [0, 15, 170, 188], "uncertainty_set": [0, 149, 150, 151, 152, 153, 154, 155], "uncertaintyset": 155, "upper": 11, "us": [41, 44], "user": 179, "util": [0, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "v": 31, "valid": [31, 33, 36, 39, 41, 44, 170, 182], "value_at_risk": 93, "varianc": [10, 18, 94, 170], "view": [4, 6], "volatil": 44, "volum": 41, "walkforward": 99, "weight": [11, 170], "worst": 183, "worst_real": 95}})