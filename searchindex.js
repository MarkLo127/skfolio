Search.setIndex({"alltitles": {"API Reference": [[0, "api-reference"]], "Analysis": [[7, "analysis"], [8, "analysis"], [9, "analysis"], [10, "analysis"], [18, "analysis"], [19, "analysis"], [20, "analysis"], [23, "analysis"], [26, "analysis"], [31, "analysis"], [33, "analysis"], [36, "analysis"]], "Analyst views": [[4, "analyst-views"], [6, "analyst-views"]], "Attributes and Methods": [[179, "attributes-and-methods"], [179, "id3"]], "Available models": [[165, "available-models"]], "Base Class": [[0, "base-class"], [0, "id10"], [0, "id12"], [0, "id15"]], "Base Classe": [[0, "base-classe"], [0, "id2"]], "Base Classes": [[0, "base-classes"], [0, "id21"]], "Base Portfolio": [[179, "base-portfolio"]], "Benchmark": [[3, "benchmark"], [36, "benchmark"]], "Black & Litterman": [[4, "black-litterman"], [181, "black-litterman"]], "Black & Litterman Factor Model": [[6, "black-litterman-factor-model"], [6, "id1"], [165, "black-litterman-factor-model"]], "Black & Litterman Model": [[4, "black-litterman-model"], [165, "black-litterman-model"]], "Budget": [[11, "budget"]], "Citation": [[165, "citation"]], "Classes": [[0, "classes"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "id6"], [0, "id7"], [0, "id8"], [0, "id9"], [0, "id11"], [0, "id13"], [0, "id16"], [0, "id17"], [0, "id19"], [0, "id20"], [0, "id22"]], "Clustering Estimator": [[32, "clustering-estimator"]], "Clustering Estimators": [[167, "clustering-estimators"]], "Combinatorial Purged Cross-Validation": [[31, "combinatorial-purged-cross-validation"], [33, "combinatorial-purged-cross-validation"], [36, "combinatorial-purged-cross-validation"], [39, "combinatorial-purged-cross-validation"], [165, "combinatorial-purged-cross-validation"], [176, "combinatorial-purged-cross-validation"]], "Combining Multiple Prior Estimators": [[181, "combining-multiple-prior-estimators"]], "Combining Prior Estimators": [[177, "combining-prior-estimators"]], "Composite Estimators and Parameter Spaces": [[173, "composite-estimators-and-parameter-spaces"]], "Composition": [[29, "composition"], [30, "composition"], [32, "composition"]], "Computation times": [[16, "computation-times"], [21, "computation-times"], [24, "computation-times"], [27, "computation-times"], [34, "computation-times"], [37, "computation-times"], [41, "computation-times"], [44, "computation-times"], [46, "computation-times"], [166, "computation-times"]], "Conclusion": [[7, "conclusion"], [8, "conclusion"], [33, "conclusion"], [36, "conclusion"]], "Covariance Estimator": [[168, "covariance-estimator"]], "Cross-Validation Prediction": [[176, "cross-validation-prediction"]], "Custom Estimator": [[177, "custom-estimator"]], "Data": [[2, "data"], [3, "data"], [4, "data"], [5, "data"], [6, "data"], [7, "data"], [8, "data"], [9, "data"], [10, "data"], [11, "data"], [12, "data"], [13, "data"], [14, "data"], [15, "data"], [18, "data"], [19, "data"], [20, "data"], [23, "data"], [26, "data"], [29, "data"], [30, "data"], [31, "data"], [32, "data"], [33, "data"], [36, "data"], [39, "data"], [40, "data"]], "Data Preparation": [[42, "data-preparation"], [45, "data-preparation"], [169, "data-preparation"]], "Datasets": [[170, "datasets"]], "Dendrogram": [[29, "dendrogram"], [30, "dendrogram"], [32, "dendrogram"]], "Denoised Covariance & Shrunk Expected Returns": [[165, "denoised-covariance-shrunk-expected-returns"]], "Distance Estimator": [[29, "distance-estimator"], [30, "distance-estimator"], [32, "distance-estimator"], [171, "distance-estimator"]], "Distribution": [[31, "distribution"], [33, "distribution"], [36, "distribution"], [39, "distribution"]], "Distributionally Robust CVaR": [[25, "distributionally-robust-cvar"], [26, "distributionally-robust-cvar"], [45, "distributionally-robust-cvar"], [177, "distributionally-robust-cvar"]], "Diversification Analysis": [[23, "diversification-analysis"]], "Drop Highly Correlated Assets": [[39, "drop-highly-correlated-assets"]], "Efficient Frontier": [[9, "efficient-frontier"], [14, "efficient-frontier"], [15, "efficient-frontier"]], "Empirical Model": [[4, "empirical-model"], [5, "empirical-model"]], "Empirical Prior": [[3, "empirical-prior"], [181, "empirical-prior"]], "Ensemble Optimizations": [[35, "ensemble-optimizations"], [45, "ensemble-optimizations"]], "Enum": [[0, "enum"]], "Example for stocks": [[169, "example-for-stocks"]], "Examples": [[45, "examples"]], "Exhaustive Grid Search": [[173, "exhaustive-grid-search"]], "Expected Return Estimator": [[172, "expected-return-estimator"]], "Factor Analysis": [[5, "factor-analysis"]], "Factor Model": [[5, "factor-model"], [5, "id1"], [165, "factor-model"], [181, "factor-model"]], "Factor Model & Covariance Detoning": [[165, "factor-model-covariance-detoning"]], "Fit on training set": [[165, "fit-on-training-set"]], "Functions": [[0, "functions"], [0, "id23"], [0, "id24"], [0, "id25"], [0, "id26"], [0, "id27"]], "Going Further": [[6, "going-further"], [177, "going-further"]], "Grid Search on embedded parameters": [[165, "grid-search-on-embedded-parameters"]], "Group and Linear Constraints": [[11, "group-and-linear-constraints"]], "HRP vs HERC": [[31, "hrp-vs-herc"]], "Hierarchical Clustering and NCO": [[28, "hierarchical-clustering-and-nco"], [45, "hierarchical-clustering-and-nco"]], "Hierarchical Equal Risk Contribution": [[177, "hierarchical-equal-risk-contribution"]], "Hierarchical Equal Risk Contribution - CDaR": [[30, "hierarchical-equal-risk-contribution-cdar"]], "Hierarchical Risk Parity": [[177, "hierarchical-risk-parity"]], "Hierarchical Risk Parity - CVaR": [[29, "hierarchical-risk-parity-cvar"]], "Hyper-Parameter Tuning": [[15, "hyper-parameter-tuning"]], "Hyper-Parameters Tuning": [[173, "hyper-parameters-tuning"]], "Hyper-parameter Tuning": [[14, "hyper-parameter-tuning"]], "Imports": [[165, "imports"]], "In skfolio": [[169, "in-skfolio"]], "Installation": [[165, "installation"], [175, "installation"]], "Investment Horizon": [[43, "investment-horizon"]], "K-fold Cross-Validation": [[165, "k-fold-cross-validation"]], "Key Concepts": [[165, "key-concepts"]], "L1 and L2 Regularization": [[14, "l1-and-l2-regularization"]], "Left and Right Inequalities": [[11, "left-and-right-inequalities"]], "Linear Returns": [[43, "linear-returns"]], "Linear return": [[169, "linear-return"]], "Linkage Methods": [[29, "linkage-methods"], [30, "linkage-methods"], [32, "linkage-methods"]], "Load Dataset": [[165, "load-dataset"]], "Loading Matrix Classes for Factor Models": [[0, "loading-matrix-classes-for-factor-models"]], "Logarithmic return": [[169, "logarithmic-return"]], "Lower and Upper Bounds on Weights": [[11, "lower-and-upper-bounds-on-weights"]], "Management Fees": [[13, "management-fees"], [13, "id1"]], "Maximum Diversification": [[22, "maximum-diversification"], [23, "maximum-diversification"], [45, "maximum-diversification"], [177, "maximum-diversification"]], "Maximum Sharpe Ratio": [[7, "maximum-sharpe-ratio"]], "Maximum Sortino Ratio": [[165, "maximum-sortino-ratio"]], "Mean-Risk": [[1, "mean-risk"], [45, "mean-risk"]], "Mean-Risk Optimization": [[177, "mean-risk-optimization"]], "Mean-Variance-CDaR Surface": [[10, "mean-variance-cdar-surface"]], "Minimum CVaR": [[8, "minimum-cvar"]], "Minimum Variance": [[165, "minimum-variance"]], "Model": [[2, "model"], [3, "model"], [7, "model"], [8, "model"], [9, "model"], [10, "model"], [11, "model"], [12, "model"], [13, "model"], [18, "model"], [19, "model"], [20, "model"], [23, "model"], [26, "model"], [29, "model"], [30, "model"], [31, "model"], [32, "model"], [33, "model"], [39, "model"], [40, "model"], [43, "model"]], "Model Dataclass": [[0, "model-dataclass"], [0, "id18"]], "Model Selection": [[176, "model-selection"]], "Multi Period Portfolio": [[179, "multi-period-portfolio"]], "Multi-period portfolio": [[12, "multi-period-portfolio"], [13, "multi-period-portfolio"]], "NCO - Combinatorial Purged CV": [[33, "nco-combinatorial-purged-cv"]], "Naive Allocation": [[177, "naive-allocation"]], "Nested Cluster Optimization with cross-validation and parallelization": [[165, "nested-cluster-optimization-with-cross-validation-and-parallelization"]], "Nested Clusters Optimization": [[32, "nested-clusters-optimization"], [177, "nested-clusters-optimization"]], "Optimization": [[177, "optimization"]], "Parallelism": [[173, "parallelism"]], "Parameter Tuning": [[31, "parameter-tuning"], [33, "parameter-tuning"], [36, "parameter-tuning"], [40, "parameter-tuning"]], "Pareto Optimal Surface": [[10, "pareto-optimal-surface"]], "Pipeline": [[39, "pipeline"], [40, "pipeline"]], "Pitfall in Portfolio Optimization": [[169, "pitfall-in-portfolio-optimization"]], "Population": [[178, "population"]], "Portfolio": [[179, "portfolio"], [179, "id2"]], "Pre-Selection Pipeline": [[165, "pre-selection-pipeline"]], "Pre-Selection Transformers": [[180, "pre-selection-transformers"]], "Pre-selection": [[38, "pre-selection"], [45, "pre-selection"]], "Predict on test set": [[165, "predict-on-test-set"]], "Prediction": [[2, "prediction"], [3, "prediction"], [4, "prediction"], [5, "prediction"], [6, "prediction"], [7, "prediction"], [8, "prediction"], [9, "prediction"], [14, "prediction"], [18, "prediction"], [19, "prediction"], [20, "prediction"], [23, "prediction"], [26, "prediction"], [29, "prediction"], [30, "prediction"], [31, "prediction"], [32, "prediction"], [33, "prediction"], [36, "prediction"], [39, "prediction"], [40, "prediction"]], "Prices": [[43, "prices"]], "Prior Estimator": [[29, "prior-estimator"], [177, "prior-estimator"], [181, "prior-estimator"]], "Quickstart": [[165, "quickstart"]], "Randomized Parameter Optimization": [[173, "randomized-parameter-optimization"]], "Randomized Search of the L2 Norm": [[165, "randomized-search-of-the-l2-norm"]], "Recognition": [[165, "recognition"]], "Risk Budget": [[19, "risk-budget"]], "Risk Budgeting": [[17, "risk-budgeting"], [45, "risk-budgeting"], [177, "risk-budgeting"]], "Risk Budgeting - CVaR": [[19, "risk-budgeting-cvar"]], "Risk Contribution": [[29, "risk-contribution"], [30, "risk-contribution"]], "Risk Contribution Analysis": [[18, "risk-contribution-analysis"], [19, "risk-contribution-analysis"]], "Risk Parity & Gerber Covariance": [[165, "risk-parity-gerber-covariance"]], "Risk Parity - Covariance shrinkage": [[20, "risk-parity-covariance-shrinkage"]], "Risk Parity - Variance": [[18, "risk-parity-variance"]], "Risk Parity on CVaR": [[165, "risk-parity-on-cvar"]], "Select Best Performers": [[40, "select-best-performers"]], "Short and Long Position Constraints": [[11, "short-and-long-position-constraints"]], "Specifying an Objective Metric": [[173, "specifying-an-objective-metric"]], "Stacking Model": [[36, "stacking-model"]], "Stacking Optimization": [[36, "stacking-optimization"], [177, "stacking-optimization"]], "Summary": [[29, "summary"]], "The correct approach": [[169, "the-correct-approach"]], "Tips for Parameter Search": [[173, "tips-for-parameter-search"]], "Tracking Error": [[2, "tracking-error"]], "Train/Test split": [[165, "train-test-split"]], "Transaction Cost": [[12, "transaction-cost"]], "Transaction Costs": [[12, "transaction-costs"]], "Uncertainty Set": [[15, "uncertainty-set"]], "Uncertainty Set Estimator": [[182, "uncertainty-set-estimator"]], "Uncertainty Set on Expected Returns": [[165, "uncertainty-set-on-expected-returns"]], "User Guide": [[174, "user-guide"]], "Weight Constraints": [[11, "weight-constraints"]], "Weight Constraints & Transaction Costs": [[165, "weight-constraints-transaction-costs"]], "Worst-Case Optimization": [[177, "worst-case-optimization"]], "skfolio": [[165, "skfolio"]], "skfolio.cluster.HierarchicalClustering": [[47, "skfolio-cluster-hierarchicalclustering"]], "skfolio.cluster.LinkageMethod": [[48, "skfolio-cluster-linkagemethod"]], "skfolio.cluster: Cluster Estimators": [[0, "module-3"]], "skfolio.datasets.load_factors_dataset": [[49, "skfolio-datasets-load-factors-dataset"]], "skfolio.datasets.load_ftse100_dataset": [[50, "skfolio-datasets-load-ftse100-dataset"]], "skfolio.datasets.load_nasdaq_dataset": [[51, "skfolio-datasets-load-nasdaq-dataset"]], "skfolio.datasets.load_sp500_dataset": [[52, "skfolio-datasets-load-sp500-dataset"]], "skfolio.datasets.load_sp500_index": [[53, "skfolio-datasets-load-sp500-index"]], "skfolio.datasets: Datasets": [[0, "skfolio-datasets-datasets"]], "skfolio.distance.BaseDistance": [[54, "skfolio-distance-basedistance"]], "skfolio.distance.CovarianceDistance": [[55, "skfolio-distance-covariancedistance"]], "skfolio.distance.DistanceCorrelation": [[56, "skfolio-distance-distancecorrelation"]], "skfolio.distance.KendallDistance": [[57, "skfolio-distance-kendalldistance"]], "skfolio.distance.MutualInformation": [[58, "skfolio-distance-mutualinformation"]], "skfolio.distance.PearsonDistance": [[59, "skfolio-distance-pearsondistance"]], "skfolio.distance.SpearmanDistance": [[60, "skfolio-distance-spearmandistance"]], "skfolio.distance: Distance Estimators": [[0, "module-2"]], "skfolio.measures.BaseMeasure": [[61, "skfolio-measures-basemeasure"]], "skfolio.measures.ExtraRiskMeasure": [[62, "skfolio-measures-extrariskmeasure"]], "skfolio.measures.PerfMeasure": [[63, "skfolio-measures-perfmeasure"]], "skfolio.measures.RatioMeasure": [[64, "skfolio-measures-ratiomeasure"]], "skfolio.measures.RiskMeasure": [[65, "skfolio-measures-riskmeasure"]], "skfolio.measures.average_drawdown": [[66, "skfolio-measures-average-drawdown"]], "skfolio.measures.cdar": [[67, "skfolio-measures-cdar"]], "skfolio.measures.cvar": [[68, "skfolio-measures-cvar"]], "skfolio.measures.drawdown_at_risk": [[69, "skfolio-measures-drawdown-at-risk"]], "skfolio.measures.edar": [[70, "skfolio-measures-edar"]], "skfolio.measures.effective_number_assets": [[71, "skfolio-measures-effective-number-assets"]], "skfolio.measures.entropic_risk_measure": [[72, "skfolio-measures-entropic-risk-measure"]], "skfolio.measures.evar": [[73, "skfolio-measures-evar"]], "skfolio.measures.first_lower_partial_moment": [[74, "skfolio-measures-first-lower-partial-moment"]], "skfolio.measures.fourth_central_moment": [[75, "skfolio-measures-fourth-central-moment"]], "skfolio.measures.fourth_lower_partial_moment": [[76, "skfolio-measures-fourth-lower-partial-moment"]], "skfolio.measures.get_cumulative_returns": [[77, "skfolio-measures-get-cumulative-returns"]], "skfolio.measures.get_drawdowns": [[78, "skfolio-measures-get-drawdowns"]], "skfolio.measures.gini_mean_difference": [[79, "skfolio-measures-gini-mean-difference"]], "skfolio.measures.max_drawdown": [[80, "skfolio-measures-max-drawdown"]], "skfolio.measures.mean": [[81, "skfolio-measures-mean"]], "skfolio.measures.mean_absolute_deviation": [[82, "skfolio-measures-mean-absolute-deviation"]], "skfolio.measures.owa_gmd_weights": [[83, "skfolio-measures-owa-gmd-weights"]], "skfolio.measures.semi_deviation": [[84, "skfolio-measures-semi-deviation"]], "skfolio.measures.semi_variance": [[85, "skfolio-measures-semi-variance"]], "skfolio.measures.standard_deviation": [[86, "skfolio-measures-standard-deviation"]], "skfolio.measures.third_central_moment": [[87, "skfolio-measures-third-central-moment"]], "skfolio.measures.ulcer_index": [[88, "skfolio-measures-ulcer-index"]], "skfolio.measures.value_at_risk": [[89, "skfolio-measures-value-at-risk"]], "skfolio.measures.variance": [[90, "skfolio-measures-variance"]], "skfolio.measures.worst_realization": [[91, "skfolio-measures-worst-realization"]], "skfolio.measures: Measures": [[0, "module-skfolio.measures"]], "skfolio.metrics.make_scorer": [[92, "skfolio-metrics-make-scorer"]], "skfolio.metrics: Metrics": [[0, "module-7"]], "skfolio.model_selection.BaseCombinatorialCV": [[93, "skfolio-model-selection-basecombinatorialcv"]], "skfolio.model_selection.CombinatorialPurgedCV": [[94, "skfolio-model-selection-combinatorialpurgedcv"]], "skfolio.model_selection.WalkForward": [[95, "skfolio-model-selection-walkforward"]], "skfolio.model_selection.cross_val_predict": [[96, "skfolio-model-selection-cross-val-predict"]], "skfolio.model_selection.optimal_folds_number": [[97, "skfolio-model-selection-optimal-folds-number"]], "skfolio.model_selection: Model Selection": [[0, "module-6"]], "skfolio.moments.BaseCovariance": [[98, "skfolio-moments-basecovariance"]], "skfolio.moments.BaseMu": [[99, "skfolio-moments-basemu"]], "skfolio.moments.DenoiseCovariance": [[100, "skfolio-moments-denoisecovariance"]], "skfolio.moments.DetoneCovariance": [[101, "skfolio-moments-detonecovariance"]], "skfolio.moments.EWCovariance": [[102, "skfolio-moments-ewcovariance"]], "skfolio.moments.EWMu": [[103, "skfolio-moments-ewmu"]], "skfolio.moments.EmpiricalCovariance": [[104, "skfolio-moments-empiricalcovariance"]], "skfolio.moments.EmpiricalMu": [[105, "skfolio-moments-empiricalmu"]], "skfolio.moments.EquilibriumMu": [[106, "skfolio-moments-equilibriummu"]], "skfolio.moments.GerberCovariance": [[107, "skfolio-moments-gerbercovariance"]], "skfolio.moments.GraphicalLassoCV": [[108, "skfolio-moments-graphicallassocv"]], "skfolio.moments.LedoitWolf": [[109, "skfolio-moments-ledoitwolf"]], "skfolio.moments.OAS": [[110, "skfolio-moments-oas"]], "skfolio.moments.ShrunkCovariance": [[111, "skfolio-moments-shrunkcovariance"]], "skfolio.moments.ShrunkMu": [[112, "skfolio-moments-shrunkmu"]], "skfolio.moments.ShrunkMuMethods": [[113, "skfolio-moments-shrunkmumethods"]], "skfolio.moments.covariance: Covariance Estimators": [[0, "module-1"]], "skfolio.moments.mu: Mu Estimators": [[0, "module-0"]], "skfolio.optimization.BaseComposition": [[114, "skfolio-optimization-basecomposition"]], "skfolio.optimization.BaseHierarchicalOptimization": [[115, "skfolio-optimization-basehierarchicaloptimization"]], "skfolio.optimization.ConvexOptimization": [[116, "skfolio-optimization-convexoptimization"]], "skfolio.optimization.DistributionallyRobustCVaR": [[117, "skfolio-optimization-distributionallyrobustcvar"]], "skfolio.optimization.EqualWeighted": [[118, "skfolio-optimization-equalweighted"]], "skfolio.optimization.HierarchicalEqualRiskContribution": [[119, "skfolio-optimization-hierarchicalequalriskcontribution"]], "skfolio.optimization.HierarchicalRiskParity": [[120, "skfolio-optimization-hierarchicalriskparity"]], "skfolio.optimization.InverseVolatility": [[121, "skfolio-optimization-inversevolatility"]], "skfolio.optimization.MaximumDiversification": [[122, "skfolio-optimization-maximumdiversification"]], "skfolio.optimization.MeanRisk": [[123, "skfolio-optimization-meanrisk"]], "skfolio.optimization.NestedClustersOptimization": [[124, "skfolio-optimization-nestedclustersoptimization"]], "skfolio.optimization.ObjectiveFunction": [[125, "skfolio-optimization-objectivefunction"]], "skfolio.optimization.Random": [[126, "skfolio-optimization-random"]], "skfolio.optimization.RiskBudgeting": [[127, "skfolio-optimization-riskbudgeting"]], "skfolio.optimization.StackingOptimization": [[128, "skfolio-optimization-stackingoptimization"]], "skfolio.optimization.cluster: Clustering Optimization Estimators": [[0, "module-skfolio.optimization.cluster"]], "skfolio.optimization.convex: Convex Optimization Estimators": [[0, "module-skfolio.optimization.convex"]], "skfolio.optimization.ensemble: Ensemble Optimization Estimators": [[0, "module-skfolio.optimization.ensemble"]], "skfolio.optimization.naive: Naive Optimization Estimators": [[0, "module-skfolio.optimization.naive"]], "skfolio.population.Population": [[129, "skfolio-population-population"]], "skfolio.population: Population": [[0, "module-skfolio.population"]], "skfolio.portfolio.BasePortfolio": [[130, "skfolio-portfolio-baseportfolio"]], "skfolio.portfolio.MultiPeriodPortfolio": [[131, "skfolio-portfolio-multiperiodportfolio"]], "skfolio.portfolio.Portfolio": [[132, "skfolio-portfolio-portfolio"]], "skfolio.portfolio: Portfolio": [[0, "module-skfolio.portfolio"]], "skfolio.pre_selection.DropCorrelated": [[133, "skfolio-pre-selection-dropcorrelated"]], "skfolio.pre_selection.SelectKExtremes": [[134, "skfolio-pre-selection-selectkextremes"]], "skfolio.pre_selection.SelectNonDominated": [[135, "skfolio-pre-selection-selectnondominated"]], "skfolio.pre_selection: Pre-selection Transformers": [[0, "module-5"]], "skfolio.preprocessing.prices_to_returns": [[136, "skfolio-preprocessing-prices-to-returns"]], "skfolio.preprocessing: Preprocessing": [[0, "skfolio-preprocessing-preprocessing"]], "skfolio.prior.BaseLoadingMatrix": [[137, "skfolio-prior-baseloadingmatrix"]], "skfolio.prior.BasePrior": [[138, "skfolio-prior-baseprior"]], "skfolio.prior.BlackLitterman": [[139, "skfolio-prior-blacklitterman"]], "skfolio.prior.EmpiricalPrior": [[140, "skfolio-prior-empiricalprior"]], "skfolio.prior.FactorModel": [[141, "skfolio-prior-factormodel"]], "skfolio.prior.LoadingMatrixRegression": [[142, "skfolio-prior-loadingmatrixregression"]], "skfolio.prior.PriorModel": [[143, "skfolio-prior-priormodel"]], "skfolio.prior: Prior Estimators": [[0, "module-skfolio"]], "skfolio.uncertainty_set.BaseCovarianceUncertaintySet": [[144, "skfolio-uncertainty-set-basecovarianceuncertaintyset"]], "skfolio.uncertainty_set.BaseMuUncertaintySet": [[145, "skfolio-uncertainty-set-basemuuncertaintyset"]], "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet": [[146, "skfolio-uncertainty-set-bootstrapcovarianceuncertaintyset"]], "skfolio.uncertainty_set.BootstrapMuUncertaintySet": [[147, "skfolio-uncertainty-set-bootstrapmuuncertaintyset"]], "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet": [[148, "skfolio-uncertainty-set-empiricalcovarianceuncertaintyset"]], "skfolio.uncertainty_set.EmpiricalMuUncertaintySet": [[149, "skfolio-uncertainty-set-empiricalmuuncertaintyset"]], "skfolio.uncertainty_set.UncertaintySet": [[150, "skfolio-uncertainty-set-uncertaintyset"]], "skfolio.uncertainty_set: Uncertainty set Estimators": [[0, "module-4"]], "skfolio.utils.stats.NBinsMethod": [[151, "skfolio-utils-stats-nbinsmethod"]], "skfolio.utils.stats.assert_is_distance": [[152, "skfolio-utils-stats-assert-is-distance"]], "skfolio.utils.stats.assert_is_square": [[153, "skfolio-utils-stats-assert-is-square"]], "skfolio.utils.stats.assert_is_symmetric": [[154, "skfolio-utils-stats-assert-is-symmetric"]], "skfolio.utils.stats.commutation_matrix": [[155, "skfolio-utils-stats-commutation-matrix"]], "skfolio.utils.stats.compute_optimal_n_clusters": [[156, "skfolio-utils-stats-compute-optimal-n-clusters"]], "skfolio.utils.stats.corr_to_cov": [[157, "skfolio-utils-stats-corr-to-cov"]], "skfolio.utils.stats.cov_nearest": [[158, "skfolio-utils-stats-cov-nearest"]], "skfolio.utils.stats.cov_to_corr": [[159, "skfolio-utils-stats-cov-to-corr"]], "skfolio.utils.stats.is_cholesky_dec": [[160, "skfolio-utils-stats-is-cholesky-dec"]], "skfolio.utils.stats.n_bins_freedman": [[161, "skfolio-utils-stats-n-bins-freedman"]], "skfolio.utils.stats.n_bins_knuth": [[162, "skfolio-utils-stats-n-bins-knuth"]], "skfolio.utils.stats.rand_weights": [[163, "skfolio-utils-stats-rand-weights"]], "skfolio.utils.stats.rand_weights_dirichlet": [[164, "skfolio-utils-stats-rand-weights-dirichlet"]], "skfolio.utils.stats: Stats": [[0, "skfolio-utils-stats-stats"]]}, "docnames": ["api", "auto_examples/1_mean_risk/index", "auto_examples/1_mean_risk/plot_10_tracking_error", "auto_examples/1_mean_risk/plot_11_empirical_prior", "auto_examples/1_mean_risk/plot_12_black_and_litterman", "auto_examples/1_mean_risk/plot_13_factor_model", "auto_examples/1_mean_risk/plot_14_black_litterman_factor_model", "auto_examples/1_mean_risk/plot_1_maximum_sharpe_ratio", "auto_examples/1_mean_risk/plot_2_minimum_CVaR", "auto_examples/1_mean_risk/plot_3_efficient_frontier", "auto_examples/1_mean_risk/plot_4_mean_variance_cdar", "auto_examples/1_mean_risk/plot_5_weight_constraints", "auto_examples/1_mean_risk/plot_6_transaction_costs", "auto_examples/1_mean_risk/plot_7_management_fees", "auto_examples/1_mean_risk/plot_8_regularization", "auto_examples/1_mean_risk/plot_9_uncertainty_set", "auto_examples/1_mean_risk/sg_execution_times", "auto_examples/2_risk_budgeting/index", "auto_examples/2_risk_budgeting/plot_1_risk_parity_variance", "auto_examples/2_risk_budgeting/plot_2_risk_busgeting_CVaR", "auto_examples/2_risk_budgeting/plot_3_risk_parity_ledoit_wolf", "auto_examples/2_risk_budgeting/sg_execution_times", "auto_examples/3_maxiumum_diversification/index", "auto_examples/3_maxiumum_diversification/plot_1_maximum_divesification", "auto_examples/3_maxiumum_diversification/sg_execution_times", "auto_examples/4_distributionally_robust_cvar/index", "auto_examples/4_distributionally_robust_cvar/plot_1_distributionally_robust_cvar", "auto_examples/4_distributionally_robust_cvar/sg_execution_times", "auto_examples/5_clustering/index", "auto_examples/5_clustering/plot_1_hrp_cvar", "auto_examples/5_clustering/plot_2_herc_cdar", "auto_examples/5_clustering/plot_3_hrp_vs_herc", "auto_examples/5_clustering/plot_4_nco", "auto_examples/5_clustering/plot_5_nco_grid_search", "auto_examples/5_clustering/sg_execution_times", "auto_examples/6_ensemble/index", "auto_examples/6_ensemble/plot_1_stacking", "auto_examples/6_ensemble/sg_execution_times", "auto_examples/7_pre_selection/index", "auto_examples/7_pre_selection/plot_1_drop_correlated", "auto_examples/7_pre_selection/plot_2_select_best_performers", "auto_examples/7_pre_selection/sg_execution_times", "auto_examples/8_data_preparation/index", "auto_examples/8_data_preparation/plot_1_investment_horizon", "auto_examples/8_data_preparation/sg_execution_times", "auto_examples/index", "auto_examples/sg_execution_times", "generated/skfolio.cluster.HierarchicalClustering", "generated/skfolio.cluster.LinkageMethod", "generated/skfolio.datasets.load_factors_dataset", "generated/skfolio.datasets.load_ftse100_dataset", "generated/skfolio.datasets.load_nasdaq_dataset", "generated/skfolio.datasets.load_sp500_dataset", "generated/skfolio.datasets.load_sp500_index", "generated/skfolio.distance.BaseDistance", "generated/skfolio.distance.CovarianceDistance", "generated/skfolio.distance.DistanceCorrelation", "generated/skfolio.distance.KendallDistance", "generated/skfolio.distance.MutualInformation", "generated/skfolio.distance.PearsonDistance", "generated/skfolio.distance.SpearmanDistance", "generated/skfolio.measures.BaseMeasure", "generated/skfolio.measures.ExtraRiskMeasure", "generated/skfolio.measures.PerfMeasure", "generated/skfolio.measures.RatioMeasure", "generated/skfolio.measures.RiskMeasure", "generated/skfolio.measures.average_drawdown", "generated/skfolio.measures.cdar", "generated/skfolio.measures.cvar", "generated/skfolio.measures.drawdown_at_risk", "generated/skfolio.measures.edar", "generated/skfolio.measures.effective_number_assets", "generated/skfolio.measures.entropic_risk_measure", "generated/skfolio.measures.evar", "generated/skfolio.measures.first_lower_partial_moment", "generated/skfolio.measures.fourth_central_moment", "generated/skfolio.measures.fourth_lower_partial_moment", "generated/skfolio.measures.get_cumulative_returns", "generated/skfolio.measures.get_drawdowns", "generated/skfolio.measures.gini_mean_difference", "generated/skfolio.measures.max_drawdown", "generated/skfolio.measures.mean", "generated/skfolio.measures.mean_absolute_deviation", "generated/skfolio.measures.owa_gmd_weights", "generated/skfolio.measures.semi_deviation", "generated/skfolio.measures.semi_variance", "generated/skfolio.measures.standard_deviation", "generated/skfolio.measures.third_central_moment", "generated/skfolio.measures.ulcer_index", "generated/skfolio.measures.value_at_risk", "generated/skfolio.measures.variance", "generated/skfolio.measures.worst_realization", "generated/skfolio.metrics.make_scorer", "generated/skfolio.model_selection.BaseCombinatorialCV", "generated/skfolio.model_selection.CombinatorialPurgedCV", "generated/skfolio.model_selection.WalkForward", "generated/skfolio.model_selection.cross_val_predict", "generated/skfolio.model_selection.optimal_folds_number", "generated/skfolio.moments.BaseCovariance", "generated/skfolio.moments.BaseMu", "generated/skfolio.moments.DenoiseCovariance", "generated/skfolio.moments.DetoneCovariance", "generated/skfolio.moments.EWCovariance", "generated/skfolio.moments.EWMu", "generated/skfolio.moments.EmpiricalCovariance", "generated/skfolio.moments.EmpiricalMu", "generated/skfolio.moments.EquilibriumMu", "generated/skfolio.moments.GerberCovariance", "generated/skfolio.moments.GraphicalLassoCV", "generated/skfolio.moments.LedoitWolf", "generated/skfolio.moments.OAS", "generated/skfolio.moments.ShrunkCovariance", "generated/skfolio.moments.ShrunkMu", "generated/skfolio.moments.ShrunkMuMethods", "generated/skfolio.optimization.BaseComposition", "generated/skfolio.optimization.BaseHierarchicalOptimization", "generated/skfolio.optimization.ConvexOptimization", "generated/skfolio.optimization.DistributionallyRobustCVaR", "generated/skfolio.optimization.EqualWeighted", "generated/skfolio.optimization.HierarchicalEqualRiskContribution", "generated/skfolio.optimization.HierarchicalRiskParity", "generated/skfolio.optimization.InverseVolatility", "generated/skfolio.optimization.MaximumDiversification", "generated/skfolio.optimization.MeanRisk", "generated/skfolio.optimization.NestedClustersOptimization", "generated/skfolio.optimization.ObjectiveFunction", "generated/skfolio.optimization.Random", "generated/skfolio.optimization.RiskBudgeting", "generated/skfolio.optimization.StackingOptimization", "generated/skfolio.population.Population", "generated/skfolio.portfolio.BasePortfolio", "generated/skfolio.portfolio.MultiPeriodPortfolio", "generated/skfolio.portfolio.Portfolio", "generated/skfolio.pre_selection.DropCorrelated", "generated/skfolio.pre_selection.SelectKExtremes", "generated/skfolio.pre_selection.SelectNonDominated", "generated/skfolio.preprocessing.prices_to_returns", "generated/skfolio.prior.BaseLoadingMatrix", "generated/skfolio.prior.BasePrior", "generated/skfolio.prior.BlackLitterman", "generated/skfolio.prior.EmpiricalPrior", "generated/skfolio.prior.FactorModel", "generated/skfolio.prior.LoadingMatrixRegression", "generated/skfolio.prior.PriorModel", "generated/skfolio.uncertainty_set.BaseCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.BaseMuUncertaintySet", "generated/skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.BootstrapMuUncertaintySet", "generated/skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.EmpiricalMuUncertaintySet", "generated/skfolio.uncertainty_set.UncertaintySet", "generated/skfolio.utils.stats.NBinsMethod", "generated/skfolio.utils.stats.assert_is_distance", "generated/skfolio.utils.stats.assert_is_square", "generated/skfolio.utils.stats.assert_is_symmetric", "generated/skfolio.utils.stats.commutation_matrix", "generated/skfolio.utils.stats.compute_optimal_n_clusters", "generated/skfolio.utils.stats.corr_to_cov", "generated/skfolio.utils.stats.cov_nearest", "generated/skfolio.utils.stats.cov_to_corr", "generated/skfolio.utils.stats.is_cholesky_dec", "generated/skfolio.utils.stats.n_bins_freedman", "generated/skfolio.utils.stats.n_bins_knuth", "generated/skfolio.utils.stats.rand_weights", "generated/skfolio.utils.stats.rand_weights_dirichlet", "index", "sg_execution_times", "user_guide/cluster", "user_guide/covariance", "user_guide/data_preparation", "user_guide/datasets", "user_guide/distance", "user_guide/expected_returns", "user_guide/hyper_parameters_tuning", "user_guide/index", "user_guide/install", "user_guide/model_selection", "user_guide/optimization", "user_guide/population", "user_guide/portfolio", "user_guide/pre_selection", "user_guide/prior", "user_guide/uncertainty_set"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "auto_examples/1_mean_risk/index.rst", "auto_examples/1_mean_risk/plot_10_tracking_error.rst", "auto_examples/1_mean_risk/plot_11_empirical_prior.rst", "auto_examples/1_mean_risk/plot_12_black_and_litterman.rst", "auto_examples/1_mean_risk/plot_13_factor_model.rst", "auto_examples/1_mean_risk/plot_14_black_litterman_factor_model.rst", "auto_examples/1_mean_risk/plot_1_maximum_sharpe_ratio.rst", "auto_examples/1_mean_risk/plot_2_minimum_CVaR.rst", "auto_examples/1_mean_risk/plot_3_efficient_frontier.rst", "auto_examples/1_mean_risk/plot_4_mean_variance_cdar.rst", "auto_examples/1_mean_risk/plot_5_weight_constraints.rst", "auto_examples/1_mean_risk/plot_6_transaction_costs.rst", "auto_examples/1_mean_risk/plot_7_management_fees.rst", "auto_examples/1_mean_risk/plot_8_regularization.rst", "auto_examples/1_mean_risk/plot_9_uncertainty_set.rst", "auto_examples/1_mean_risk/sg_execution_times.rst", "auto_examples/2_risk_budgeting/index.rst", "auto_examples/2_risk_budgeting/plot_1_risk_parity_variance.rst", "auto_examples/2_risk_budgeting/plot_2_risk_busgeting_CVaR.rst", "auto_examples/2_risk_budgeting/plot_3_risk_parity_ledoit_wolf.rst", "auto_examples/2_risk_budgeting/sg_execution_times.rst", "auto_examples/3_maxiumum_diversification/index.rst", "auto_examples/3_maxiumum_diversification/plot_1_maximum_divesification.rst", "auto_examples/3_maxiumum_diversification/sg_execution_times.rst", "auto_examples/4_distributionally_robust_cvar/index.rst", "auto_examples/4_distributionally_robust_cvar/plot_1_distributionally_robust_cvar.rst", "auto_examples/4_distributionally_robust_cvar/sg_execution_times.rst", "auto_examples/5_clustering/index.rst", "auto_examples/5_clustering/plot_1_hrp_cvar.rst", "auto_examples/5_clustering/plot_2_herc_cdar.rst", "auto_examples/5_clustering/plot_3_hrp_vs_herc.rst", "auto_examples/5_clustering/plot_4_nco.rst", "auto_examples/5_clustering/plot_5_nco_grid_search.rst", "auto_examples/5_clustering/sg_execution_times.rst", "auto_examples/6_ensemble/index.rst", "auto_examples/6_ensemble/plot_1_stacking.rst", "auto_examples/6_ensemble/sg_execution_times.rst", "auto_examples/7_pre_selection/index.rst", "auto_examples/7_pre_selection/plot_1_drop_correlated.rst", "auto_examples/7_pre_selection/plot_2_select_best_performers.rst", "auto_examples/7_pre_selection/sg_execution_times.rst", "auto_examples/8_data_preparation/index.rst", "auto_examples/8_data_preparation/plot_1_investment_horizon.rst", "auto_examples/8_data_preparation/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/sg_execution_times.rst", "generated/skfolio.cluster.HierarchicalClustering.rst", "generated/skfolio.cluster.LinkageMethod.rst", "generated/skfolio.datasets.load_factors_dataset.rst", "generated/skfolio.datasets.load_ftse100_dataset.rst", "generated/skfolio.datasets.load_nasdaq_dataset.rst", "generated/skfolio.datasets.load_sp500_dataset.rst", "generated/skfolio.datasets.load_sp500_index.rst", "generated/skfolio.distance.BaseDistance.rst", "generated/skfolio.distance.CovarianceDistance.rst", "generated/skfolio.distance.DistanceCorrelation.rst", "generated/skfolio.distance.KendallDistance.rst", "generated/skfolio.distance.MutualInformation.rst", "generated/skfolio.distance.PearsonDistance.rst", "generated/skfolio.distance.SpearmanDistance.rst", "generated/skfolio.measures.BaseMeasure.rst", "generated/skfolio.measures.ExtraRiskMeasure.rst", "generated/skfolio.measures.PerfMeasure.rst", "generated/skfolio.measures.RatioMeasure.rst", "generated/skfolio.measures.RiskMeasure.rst", "generated/skfolio.measures.average_drawdown.rst", "generated/skfolio.measures.cdar.rst", "generated/skfolio.measures.cvar.rst", "generated/skfolio.measures.drawdown_at_risk.rst", "generated/skfolio.measures.edar.rst", "generated/skfolio.measures.effective_number_assets.rst", "generated/skfolio.measures.entropic_risk_measure.rst", "generated/skfolio.measures.evar.rst", "generated/skfolio.measures.first_lower_partial_moment.rst", "generated/skfolio.measures.fourth_central_moment.rst", "generated/skfolio.measures.fourth_lower_partial_moment.rst", "generated/skfolio.measures.get_cumulative_returns.rst", "generated/skfolio.measures.get_drawdowns.rst", "generated/skfolio.measures.gini_mean_difference.rst", "generated/skfolio.measures.max_drawdown.rst", "generated/skfolio.measures.mean.rst", "generated/skfolio.measures.mean_absolute_deviation.rst", "generated/skfolio.measures.owa_gmd_weights.rst", "generated/skfolio.measures.semi_deviation.rst", "generated/skfolio.measures.semi_variance.rst", "generated/skfolio.measures.standard_deviation.rst", "generated/skfolio.measures.third_central_moment.rst", "generated/skfolio.measures.ulcer_index.rst", "generated/skfolio.measures.value_at_risk.rst", "generated/skfolio.measures.variance.rst", "generated/skfolio.measures.worst_realization.rst", "generated/skfolio.metrics.make_scorer.rst", "generated/skfolio.model_selection.BaseCombinatorialCV.rst", "generated/skfolio.model_selection.CombinatorialPurgedCV.rst", "generated/skfolio.model_selection.WalkForward.rst", "generated/skfolio.model_selection.cross_val_predict.rst", "generated/skfolio.model_selection.optimal_folds_number.rst", "generated/skfolio.moments.BaseCovariance.rst", "generated/skfolio.moments.BaseMu.rst", "generated/skfolio.moments.DenoiseCovariance.rst", "generated/skfolio.moments.DetoneCovariance.rst", "generated/skfolio.moments.EWCovariance.rst", "generated/skfolio.moments.EWMu.rst", "generated/skfolio.moments.EmpiricalCovariance.rst", "generated/skfolio.moments.EmpiricalMu.rst", "generated/skfolio.moments.EquilibriumMu.rst", "generated/skfolio.moments.GerberCovariance.rst", "generated/skfolio.moments.GraphicalLassoCV.rst", "generated/skfolio.moments.LedoitWolf.rst", "generated/skfolio.moments.OAS.rst", "generated/skfolio.moments.ShrunkCovariance.rst", "generated/skfolio.moments.ShrunkMu.rst", "generated/skfolio.moments.ShrunkMuMethods.rst", "generated/skfolio.optimization.BaseComposition.rst", "generated/skfolio.optimization.BaseHierarchicalOptimization.rst", "generated/skfolio.optimization.ConvexOptimization.rst", "generated/skfolio.optimization.DistributionallyRobustCVaR.rst", "generated/skfolio.optimization.EqualWeighted.rst", "generated/skfolio.optimization.HierarchicalEqualRiskContribution.rst", "generated/skfolio.optimization.HierarchicalRiskParity.rst", "generated/skfolio.optimization.InverseVolatility.rst", "generated/skfolio.optimization.MaximumDiversification.rst", "generated/skfolio.optimization.MeanRisk.rst", "generated/skfolio.optimization.NestedClustersOptimization.rst", "generated/skfolio.optimization.ObjectiveFunction.rst", "generated/skfolio.optimization.Random.rst", "generated/skfolio.optimization.RiskBudgeting.rst", "generated/skfolio.optimization.StackingOptimization.rst", "generated/skfolio.population.Population.rst", "generated/skfolio.portfolio.BasePortfolio.rst", "generated/skfolio.portfolio.MultiPeriodPortfolio.rst", "generated/skfolio.portfolio.Portfolio.rst", "generated/skfolio.pre_selection.DropCorrelated.rst", "generated/skfolio.pre_selection.SelectKExtremes.rst", "generated/skfolio.pre_selection.SelectNonDominated.rst", "generated/skfolio.preprocessing.prices_to_returns.rst", "generated/skfolio.prior.BaseLoadingMatrix.rst", "generated/skfolio.prior.BasePrior.rst", "generated/skfolio.prior.BlackLitterman.rst", "generated/skfolio.prior.EmpiricalPrior.rst", "generated/skfolio.prior.FactorModel.rst", "generated/skfolio.prior.LoadingMatrixRegression.rst", "generated/skfolio.prior.PriorModel.rst", "generated/skfolio.uncertainty_set.BaseCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.BaseMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.BootstrapMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.EmpiricalMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.UncertaintySet.rst", "generated/skfolio.utils.stats.NBinsMethod.rst", "generated/skfolio.utils.stats.assert_is_distance.rst", "generated/skfolio.utils.stats.assert_is_square.rst", "generated/skfolio.utils.stats.assert_is_symmetric.rst", "generated/skfolio.utils.stats.commutation_matrix.rst", "generated/skfolio.utils.stats.compute_optimal_n_clusters.rst", "generated/skfolio.utils.stats.corr_to_cov.rst", "generated/skfolio.utils.stats.cov_nearest.rst", "generated/skfolio.utils.stats.cov_to_corr.rst", "generated/skfolio.utils.stats.is_cholesky_dec.rst", "generated/skfolio.utils.stats.n_bins_freedman.rst", "generated/skfolio.utils.stats.n_bins_knuth.rst", "generated/skfolio.utils.stats.rand_weights.rst", "generated/skfolio.utils.stats.rand_weights_dirichlet.rst", "index.rst", "sg_execution_times.rst", "user_guide/cluster.rst", "user_guide/covariance.rst", "user_guide/data_preparation.rst", "user_guide/datasets.rst", "user_guide/distance.rst", "user_guide/expected_returns.rst", "user_guide/hyper_parameters_tuning.rst", "user_guide/index.rst", "user_guide/install.rst", "user_guide/model_selection.rst", "user_guide/optimization.rst", "user_guide/population.rst", "user_guide/portfolio.rst", "user_guide/pre_selection.rst", "user_guide/prior.rst", "user_guide/uncertainty_set.rst"], "indexentries": {"annualized_factor (skfolio.portfolio.baseportfolio property)": [[130, "skfolio.portfolio.BasePortfolio.annualized_factor", false]], "annualized_factor (skfolio.portfolio.multiperiodportfolio property)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.annualized_factor", false]], "annualized_factor (skfolio.portfolio.portfolio property)": [[132, "skfolio.portfolio.Portfolio.annualized_factor", false]], "append() (skfolio.population.population method)": [[129, "skfolio.population.Population.append", false]], "append() (skfolio.portfolio.multiperiodportfolio method)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.append", false]], "assert_is_distance() (in module skfolio.utils.stats)": [[152, "skfolio.utils.stats.assert_is_distance", false]], "assert_is_square() (in module skfolio.utils.stats)": [[153, "skfolio.utils.stats.assert_is_square", false]], "assert_is_symmetric() (in module skfolio.utils.stats)": [[154, "skfolio.utils.stats.assert_is_symmetric", false]], "assets (skfolio.portfolio.multiperiodportfolio property)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.assets", false]], "average_drawdown() (in module skfolio.measures)": [[66, "skfolio.measures.average_drawdown", false]], "basecombinatorialcv (class in skfolio.model_selection)": [[93, "skfolio.model_selection.BaseCombinatorialCV", false]], "basecomposition (class in skfolio.optimization)": [[114, "skfolio.optimization.BaseComposition", false]], "basecovariance (class in skfolio.moments)": [[98, "skfolio.moments.BaseCovariance", false]], "basecovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[144, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet", false]], "basedistance (class in skfolio.distance)": [[54, "skfolio.distance.BaseDistance", false]], "basehierarchicaloptimization (class in skfolio.optimization)": [[115, "skfolio.optimization.BaseHierarchicalOptimization", false]], "baseloadingmatrix (class in skfolio.prior)": [[137, "skfolio.prior.BaseLoadingMatrix", false]], "basemeasure (class in skfolio.measures)": [[61, "skfolio.measures.BaseMeasure", false]], "basemu (class in skfolio.moments)": [[99, "skfolio.moments.BaseMu", false]], "basemuuncertaintyset (class in skfolio.uncertainty_set)": [[145, "skfolio.uncertainty_set.BaseMuUncertaintySet", false]], "baseportfolio (class in skfolio.portfolio)": [[130, "skfolio.portfolio.BasePortfolio", false]], "baseprior (class in skfolio.prior)": [[138, "skfolio.prior.BasePrior", false]], "binary_train_test_sets (skfolio.model_selection.combinatorialpurgedcv property)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.binary_train_test_sets", false]], "blacklitterman (class in skfolio.prior)": [[139, "skfolio.prior.BlackLitterman", false]], "bootstrapcovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[146, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet", false]], "bootstrapmuuncertaintyset (class in skfolio.uncertainty_set)": [[147, "skfolio.uncertainty_set.BootstrapMuUncertaintySet", false]], "capitalize() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.capitalize", false]], "capitalize() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.capitalize", false]], "capitalize() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.capitalize", false]], "capitalize() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.capitalize", false]], "capitalize() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.capitalize", false]], "capitalize() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.capitalize", false]], "capitalize() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.capitalize", false]], "capitalize() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.capitalize", false]], "casefold() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.casefold", false]], "casefold() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.casefold", false]], "casefold() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.casefold", false]], "casefold() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.casefold", false]], "casefold() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.casefold", false]], "casefold() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.casefold", false]], "casefold() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.casefold", false]], "casefold() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.casefold", false]], "cdar() (in module skfolio.measures)": [[67, "skfolio.measures.cdar", false]], "center() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.center", false]], "center() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.center", false]], "center() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.center", false]], "center() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.center", false]], "center() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.center", false]], "center() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.center", false]], "center() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.center", false]], "center() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.center", false]], "clear() (skfolio.population.population method)": [[129, "skfolio.population.Population.clear", false]], "clear() (skfolio.portfolio.baseportfolio method)": [[130, "skfolio.portfolio.BasePortfolio.clear", false]], "clear() (skfolio.portfolio.multiperiodportfolio method)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.clear", false]], "clear() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.clear", false]], "combinatorialpurgedcv (class in skfolio.model_selection)": [[94, "skfolio.model_selection.CombinatorialPurgedCV", false]], "commutation_matrix() (in module skfolio.utils.stats)": [[155, "skfolio.utils.stats.commutation_matrix", false]], "composition (skfolio.portfolio.baseportfolio property)": [[130, "skfolio.portfolio.BasePortfolio.composition", false]], "composition (skfolio.portfolio.multiperiodportfolio property)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.composition", false]], "composition (skfolio.portfolio.portfolio property)": [[132, "skfolio.portfolio.Portfolio.composition", false]], "composition() (skfolio.population.population method)": [[129, "skfolio.population.Population.composition", false]], "compute_optimal_n_clusters() (in module skfolio.utils.stats)": [[156, "skfolio.utils.stats.compute_optimal_n_clusters", false]], "contribution() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.contribution", false]], "convexoptimization (class in skfolio.optimization)": [[116, "skfolio.optimization.ConvexOptimization", false]], "copy() (skfolio.population.population method)": [[129, "skfolio.population.Population.copy", false]], "copy() (skfolio.portfolio.baseportfolio method)": [[130, "skfolio.portfolio.BasePortfolio.copy", false]], "copy() (skfolio.portfolio.multiperiodportfolio method)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.copy", false]], "copy() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.copy", false]], "corr_to_cov() (in module skfolio.utils.stats)": [[157, "skfolio.utils.stats.corr_to_cov", false]], "count() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.count", false]], "count() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.count", false]], "count() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.count", false]], "count() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.count", false]], "count() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.count", false]], "count() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.count", false]], "count() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.count", false]], "count() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.count", false]], "count() (skfolio.population.population method)": [[129, "skfolio.population.Population.count", false]], "cov_nearest() (in module skfolio.utils.stats)": [[158, "skfolio.utils.stats.cov_nearest", false]], "cov_to_corr() (in module skfolio.utils.stats)": [[159, "skfolio.utils.stats.cov_to_corr", false]], "covariancedistance (class in skfolio.distance)": [[55, "skfolio.distance.CovarianceDistance", false]], "cross_val_predict() (in module skfolio.model_selection)": [[96, "skfolio.model_selection.cross_val_predict", false]], "cumulative_returns (skfolio.portfolio.baseportfolio attribute)": [[130, "skfolio.portfolio.BasePortfolio.cumulative_returns", false]], "cumulative_returns (skfolio.portfolio.multiperiodportfolio attribute)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.cumulative_returns", false]], "cumulative_returns (skfolio.portfolio.portfolio attribute)": [[132, "skfolio.portfolio.Portfolio.cumulative_returns", false]], "cumulative_returns_df (skfolio.portfolio.baseportfolio property)": [[130, "skfolio.portfolio.BasePortfolio.cumulative_returns_df", false]], "cumulative_returns_df (skfolio.portfolio.multiperiodportfolio property)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.cumulative_returns_df", false]], "cumulative_returns_df (skfolio.portfolio.portfolio property)": [[132, "skfolio.portfolio.Portfolio.cumulative_returns_df", false]], "cvar() (in module skfolio.measures)": [[68, "skfolio.measures.cvar", false]], "denoisecovariance (class in skfolio.moments)": [[100, "skfolio.moments.DenoiseCovariance", false]], "detonecovariance (class in skfolio.moments)": [[101, "skfolio.moments.DetoneCovariance", false]], "distancecorrelation (class in skfolio.distance)": [[56, "skfolio.distance.DistanceCorrelation", false]], "distributionallyrobustcvar (class in skfolio.optimization)": [[117, "skfolio.optimization.DistributionallyRobustCVaR", false]], "diversification (skfolio.portfolio.portfolio property)": [[132, "skfolio.portfolio.Portfolio.diversification", false]], "dominates() (skfolio.portfolio.baseportfolio method)": [[130, "skfolio.portfolio.BasePortfolio.dominates", false]], "dominates() (skfolio.portfolio.multiperiodportfolio method)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.dominates", false]], "dominates() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.dominates", false]], "drawdown_at_risk() (in module skfolio.measures)": [[69, "skfolio.measures.drawdown_at_risk", false]], "drawdowns (skfolio.portfolio.baseportfolio attribute)": [[130, "skfolio.portfolio.BasePortfolio.drawdowns", false]], "drawdowns (skfolio.portfolio.multiperiodportfolio attribute)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.drawdowns", false]], "drawdowns (skfolio.portfolio.portfolio attribute)": [[132, "skfolio.portfolio.Portfolio.drawdowns", false]], "dropcorrelated (class in skfolio.pre_selection)": [[133, "skfolio.pre_selection.DropCorrelated", false]], "edar() (in module skfolio.measures)": [[70, "skfolio.measures.edar", false]], "effective_number_assets (skfolio.portfolio.portfolio property)": [[132, "skfolio.portfolio.Portfolio.effective_number_assets", false]], "effective_number_assets() (in module skfolio.measures)": [[71, "skfolio.measures.effective_number_assets", false]], "empiricalcovariance (class in skfolio.moments)": [[104, "skfolio.moments.EmpiricalCovariance", false]], "empiricalcovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[148, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet", false]], "empiricalmu (class in skfolio.moments)": [[105, "skfolio.moments.EmpiricalMu", false]], "empiricalmuuncertaintyset (class in skfolio.uncertainty_set)": [[149, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet", false]], "empiricalprior (class in skfolio.prior)": [[140, "skfolio.prior.EmpiricalPrior", false]], "encode() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.encode", false]], "encode() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.encode", false]], "encode() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.encode", false]], "encode() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.encode", false]], "encode() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.encode", false]], "encode() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.encode", false]], "encode() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.encode", false]], "encode() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.encode", false]], "endswith() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.endswith", false]], "endswith() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.endswith", false]], "endswith() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.endswith", false]], "endswith() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.endswith", false]], "endswith() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.endswith", false]], "endswith() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.endswith", false]], "endswith() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.endswith", false]], "endswith() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.endswith", false]], "entropic_risk_measure() (in module skfolio.measures)": [[72, "skfolio.measures.entropic_risk_measure", false]], "equalweighted (class in skfolio.optimization)": [[118, "skfolio.optimization.EqualWeighted", false]], "equilibriummu (class in skfolio.moments)": [[106, "skfolio.moments.EquilibriumMu", false]], "error_norm() (skfolio.moments.graphicallassocv method)": [[108, "skfolio.moments.GraphicalLassoCV.error_norm", false]], "error_norm() (skfolio.moments.ledoitwolf method)": [[109, "skfolio.moments.LedoitWolf.error_norm", false]], "error_norm() (skfolio.moments.oas method)": [[110, "skfolio.moments.OAS.error_norm", false]], "error_norm() (skfolio.moments.shrunkcovariance method)": [[111, "skfolio.moments.ShrunkCovariance.error_norm", false]], "evar() (in module skfolio.measures)": [[73, "skfolio.measures.evar", false]], "ewcovariance (class in skfolio.moments)": [[102, "skfolio.moments.EWCovariance", false]], "ewmu (class in skfolio.moments)": [[103, "skfolio.moments.EWMu", false]], "expandtabs() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.expandtabs", false]], "expandtabs() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.expandtabs", false]], "expandtabs() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.expandtabs", false]], "expandtabs() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.expandtabs", false]], "expected_returns_from_assets() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.expected_returns_from_assets", false]], "extend() (skfolio.population.population method)": [[129, "skfolio.population.Population.extend", false]], "extrariskmeasure (class in skfolio.measures)": [[62, "skfolio.measures.ExtraRiskMeasure", false]], "factormodel (class in skfolio.prior)": [[141, "skfolio.prior.FactorModel", false]], "filter() (skfolio.population.population method)": [[129, "skfolio.population.Population.filter", false]], "find() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.find", false]], "find() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.find", false]], "find() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.find", false]], "find() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.find", false]], "find() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.find", false]], "find() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.find", false]], "find() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.find", false]], "find() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.find", false]], "first_lower_partial_moment() (in module skfolio.measures)": [[74, "skfolio.measures.first_lower_partial_moment", false]], "fit() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.fit", false]], "fit() (skfolio.distance.basedistance method)": [[54, "skfolio.distance.BaseDistance.fit", false]], "fit() (skfolio.distance.covariancedistance method)": [[55, "skfolio.distance.CovarianceDistance.fit", false]], "fit() (skfolio.distance.distancecorrelation method)": [[56, "skfolio.distance.DistanceCorrelation.fit", false]], "fit() (skfolio.distance.kendalldistance method)": [[57, "skfolio.distance.KendallDistance.fit", false]], "fit() (skfolio.distance.mutualinformation method)": [[58, "skfolio.distance.MutualInformation.fit", false]], "fit() (skfolio.distance.pearsondistance method)": [[59, "skfolio.distance.PearsonDistance.fit", false]], "fit() (skfolio.distance.spearmandistance method)": [[60, "skfolio.distance.SpearmanDistance.fit", false]], "fit() (skfolio.moments.denoisecovariance method)": [[100, "skfolio.moments.DenoiseCovariance.fit", false]], "fit() (skfolio.moments.detonecovariance method)": [[101, "skfolio.moments.DetoneCovariance.fit", false]], "fit() (skfolio.moments.empiricalcovariance method)": [[104, "skfolio.moments.EmpiricalCovariance.fit", false]], "fit() (skfolio.moments.empiricalmu method)": [[105, "skfolio.moments.EmpiricalMu.fit", false]], "fit() (skfolio.moments.equilibriummu method)": [[106, "skfolio.moments.EquilibriumMu.fit", false]], "fit() (skfolio.moments.ewcovariance method)": [[102, "skfolio.moments.EWCovariance.fit", false]], "fit() (skfolio.moments.ewmu method)": [[103, "skfolio.moments.EWMu.fit", false]], "fit() (skfolio.moments.gerbercovariance method)": [[107, "skfolio.moments.GerberCovariance.fit", false]], "fit() (skfolio.moments.graphicallassocv method)": [[108, "skfolio.moments.GraphicalLassoCV.fit", false]], "fit() (skfolio.moments.ledoitwolf method)": [[109, "skfolio.moments.LedoitWolf.fit", false]], "fit() (skfolio.moments.oas method)": [[110, "skfolio.moments.OAS.fit", false]], "fit() (skfolio.moments.shrunkcovariance method)": [[111, "skfolio.moments.ShrunkCovariance.fit", false]], "fit() (skfolio.moments.shrunkmu method)": [[112, "skfolio.moments.ShrunkMu.fit", false]], "fit() (skfolio.optimization.distributionallyrobustcvar method)": [[117, "skfolio.optimization.DistributionallyRobustCVaR.fit", false]], "fit() (skfolio.optimization.equalweighted method)": [[118, "skfolio.optimization.EqualWeighted.fit", false]], "fit() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[119, "skfolio.optimization.HierarchicalEqualRiskContribution.fit", false]], "fit() (skfolio.optimization.hierarchicalriskparity method)": [[120, "skfolio.optimization.HierarchicalRiskParity.fit", false]], "fit() (skfolio.optimization.inversevolatility method)": [[121, "skfolio.optimization.InverseVolatility.fit", false]], "fit() (skfolio.optimization.maximumdiversification method)": [[122, "skfolio.optimization.MaximumDiversification.fit", false]], "fit() (skfolio.optimization.meanrisk method)": [[123, "skfolio.optimization.MeanRisk.fit", false]], "fit() (skfolio.optimization.nestedclustersoptimization method)": [[124, "skfolio.optimization.NestedClustersOptimization.fit", false]], "fit() (skfolio.optimization.random method)": [[126, "skfolio.optimization.Random.fit", false]], "fit() (skfolio.optimization.riskbudgeting method)": [[127, "skfolio.optimization.RiskBudgeting.fit", false]], "fit() (skfolio.optimization.stackingoptimization method)": [[128, "skfolio.optimization.StackingOptimization.fit", false]], "fit() (skfolio.pre_selection.dropcorrelated method)": [[133, "skfolio.pre_selection.DropCorrelated.fit", false]], "fit() (skfolio.pre_selection.selectkextremes method)": [[134, "skfolio.pre_selection.SelectKExtremes.fit", false]], "fit() (skfolio.pre_selection.selectnondominated method)": [[135, "skfolio.pre_selection.SelectNonDominated.fit", false]], "fit() (skfolio.prior.blacklitterman method)": [[139, "skfolio.prior.BlackLitterman.fit", false]], "fit() (skfolio.prior.empiricalprior method)": [[140, "skfolio.prior.EmpiricalPrior.fit", false]], "fit() (skfolio.prior.factormodel method)": [[141, "skfolio.prior.FactorModel.fit", false]], "fit() (skfolio.prior.loadingmatrixregression method)": [[142, "skfolio.prior.LoadingMatrixRegression.fit", false]], "fit() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[146, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[147, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[148, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[149, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.fit", false]], "fit_predict() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.fit_predict", false]], "fit_predict() (skfolio.optimization.basehierarchicaloptimization method)": [[115, "skfolio.optimization.BaseHierarchicalOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.convexoptimization method)": [[116, "skfolio.optimization.ConvexOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.distributionallyrobustcvar method)": [[117, "skfolio.optimization.DistributionallyRobustCVaR.fit_predict", false]], "fit_predict() (skfolio.optimization.equalweighted method)": [[118, "skfolio.optimization.EqualWeighted.fit_predict", false]], "fit_predict() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[119, "skfolio.optimization.HierarchicalEqualRiskContribution.fit_predict", false]], "fit_predict() (skfolio.optimization.hierarchicalriskparity method)": [[120, "skfolio.optimization.HierarchicalRiskParity.fit_predict", false]], "fit_predict() (skfolio.optimization.inversevolatility method)": [[121, "skfolio.optimization.InverseVolatility.fit_predict", false]], "fit_predict() (skfolio.optimization.maximumdiversification method)": [[122, "skfolio.optimization.MaximumDiversification.fit_predict", false]], "fit_predict() (skfolio.optimization.meanrisk method)": [[123, "skfolio.optimization.MeanRisk.fit_predict", false]], "fit_predict() (skfolio.optimization.nestedclustersoptimization method)": [[124, "skfolio.optimization.NestedClustersOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.random method)": [[126, "skfolio.optimization.Random.fit_predict", false]], "fit_predict() (skfolio.optimization.riskbudgeting method)": [[127, "skfolio.optimization.RiskBudgeting.fit_predict", false]], "fit_predict() (skfolio.optimization.stackingoptimization method)": [[128, "skfolio.optimization.StackingOptimization.fit_predict", false]], "fit_transform() (skfolio.pre_selection.dropcorrelated method)": [[133, "skfolio.pre_selection.DropCorrelated.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectkextremes method)": [[134, "skfolio.pre_selection.SelectKExtremes.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectnondominated method)": [[135, "skfolio.pre_selection.SelectNonDominated.fit_transform", false]], "fitness (skfolio.portfolio.baseportfolio attribute)": [[130, "skfolio.portfolio.BasePortfolio.fitness", false]], "fitness (skfolio.portfolio.multiperiodportfolio attribute)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.fitness", false]], "fitness (skfolio.portfolio.portfolio attribute)": [[132, "skfolio.portfolio.Portfolio.fitness", false]], "fitness_measures (skfolio.portfolio.baseportfolio property)": [[130, "skfolio.portfolio.BasePortfolio.fitness_measures", false]], "fitness_measures (skfolio.portfolio.multiperiodportfolio property)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.fitness_measures", false]], "fitness_measures (skfolio.portfolio.portfolio property)": [[132, "skfolio.portfolio.Portfolio.fitness_measures", false]], "format() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.format", false]], "format() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.format", false]], "format() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.format", false]], "format() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.format", false]], "format() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.format", false]], "format() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.format", false]], "format() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.format", false]], "format() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.format", false]], "format_map() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.format_map", false]], "format_map() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.format_map", false]], "format_map() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.format_map", false]], "format_map() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.format_map", false]], "format_map() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.format_map", false]], "format_map() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.format_map", false]], "format_map() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.format_map", false]], "format_map() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.format_map", false]], "fourth_central_moment() (in module skfolio.measures)": [[75, "skfolio.measures.fourth_central_moment", false]], "fourth_lower_partial_moment() (in module skfolio.measures)": [[76, "skfolio.measures.fourth_lower_partial_moment", false]], "gerbercovariance (class in skfolio.moments)": [[107, "skfolio.moments.GerberCovariance", false]], "get_cumulative_returns() (in module skfolio.measures)": [[77, "skfolio.measures.get_cumulative_returns", false]], "get_drawdowns() (in module skfolio.measures)": [[78, "skfolio.measures.get_drawdowns", false]], "get_feature_names_out() (skfolio.pre_selection.dropcorrelated method)": [[133, "skfolio.pre_selection.DropCorrelated.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectkextremes method)": [[134, "skfolio.pre_selection.SelectKExtremes.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectnondominated method)": [[135, "skfolio.pre_selection.SelectNonDominated.get_feature_names_out", false]], "get_measure() (skfolio.portfolio.baseportfolio method)": [[130, "skfolio.portfolio.BasePortfolio.get_measure", false]], "get_measure() (skfolio.portfolio.multiperiodportfolio method)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.get_measure", false]], "get_measure() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.get_measure", false]], "get_metadata_routing() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.basedistance method)": [[54, "skfolio.distance.BaseDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.covariancedistance method)": [[55, "skfolio.distance.CovarianceDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.distancecorrelation method)": [[56, "skfolio.distance.DistanceCorrelation.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.kendalldistance method)": [[57, "skfolio.distance.KendallDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.mutualinformation method)": [[58, "skfolio.distance.MutualInformation.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.pearsondistance method)": [[59, "skfolio.distance.PearsonDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.spearmandistance method)": [[60, "skfolio.distance.SpearmanDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.model_selection.walkforward method)": [[95, "skfolio.model_selection.WalkForward.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.basecovariance method)": [[98, "skfolio.moments.BaseCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.basemu method)": [[99, "skfolio.moments.BaseMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.denoisecovariance method)": [[100, "skfolio.moments.DenoiseCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.detonecovariance method)": [[101, "skfolio.moments.DetoneCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.empiricalcovariance method)": [[104, "skfolio.moments.EmpiricalCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.empiricalmu method)": [[105, "skfolio.moments.EmpiricalMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.equilibriummu method)": [[106, "skfolio.moments.EquilibriumMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ewcovariance method)": [[102, "skfolio.moments.EWCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ewmu method)": [[103, "skfolio.moments.EWMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.gerbercovariance method)": [[107, "skfolio.moments.GerberCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.graphicallassocv method)": [[108, "skfolio.moments.GraphicalLassoCV.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ledoitwolf method)": [[109, "skfolio.moments.LedoitWolf.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.oas method)": [[110, "skfolio.moments.OAS.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.shrunkcovariance method)": [[111, "skfolio.moments.ShrunkCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.shrunkmu method)": [[112, "skfolio.moments.ShrunkMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.basecomposition method)": [[114, "skfolio.optimization.BaseComposition.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.basehierarchicaloptimization method)": [[115, "skfolio.optimization.BaseHierarchicalOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.convexoptimization method)": [[116, "skfolio.optimization.ConvexOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.distributionallyrobustcvar method)": [[117, "skfolio.optimization.DistributionallyRobustCVaR.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.equalweighted method)": [[118, "skfolio.optimization.EqualWeighted.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[119, "skfolio.optimization.HierarchicalEqualRiskContribution.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.hierarchicalriskparity method)": [[120, "skfolio.optimization.HierarchicalRiskParity.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.inversevolatility method)": [[121, "skfolio.optimization.InverseVolatility.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.maximumdiversification method)": [[122, "skfolio.optimization.MaximumDiversification.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.meanrisk method)": [[123, "skfolio.optimization.MeanRisk.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.nestedclustersoptimization method)": [[124, "skfolio.optimization.NestedClustersOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.random method)": [[126, "skfolio.optimization.Random.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.riskbudgeting method)": [[127, "skfolio.optimization.RiskBudgeting.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.stackingoptimization method)": [[128, "skfolio.optimization.StackingOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.dropcorrelated method)": [[133, "skfolio.pre_selection.DropCorrelated.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectkextremes method)": [[134, "skfolio.pre_selection.SelectKExtremes.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectnondominated method)": [[135, "skfolio.pre_selection.SelectNonDominated.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.baseloadingmatrix method)": [[137, "skfolio.prior.BaseLoadingMatrix.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.baseprior method)": [[138, "skfolio.prior.BasePrior.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.blacklitterman method)": [[139, "skfolio.prior.BlackLitterman.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.empiricalprior method)": [[140, "skfolio.prior.EmpiricalPrior.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.factormodel method)": [[141, "skfolio.prior.FactorModel.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.loadingmatrixregression method)": [[142, "skfolio.prior.LoadingMatrixRegression.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[144, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[145, "skfolio.uncertainty_set.BaseMuUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[146, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[147, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[148, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[149, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.get_metadata_routing", false]], "get_n_splits() (skfolio.model_selection.walkforward method)": [[95, "skfolio.model_selection.WalkForward.get_n_splits", false]], "get_params() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.get_params", false]], "get_params() (skfolio.distance.basedistance method)": [[54, "skfolio.distance.BaseDistance.get_params", false]], "get_params() (skfolio.distance.covariancedistance method)": [[55, "skfolio.distance.CovarianceDistance.get_params", false]], "get_params() (skfolio.distance.distancecorrelation method)": [[56, "skfolio.distance.DistanceCorrelation.get_params", false]], "get_params() (skfolio.distance.kendalldistance method)": [[57, "skfolio.distance.KendallDistance.get_params", false]], "get_params() (skfolio.distance.mutualinformation method)": [[58, "skfolio.distance.MutualInformation.get_params", false]], "get_params() (skfolio.distance.pearsondistance method)": [[59, "skfolio.distance.PearsonDistance.get_params", false]], "get_params() (skfolio.distance.spearmandistance method)": [[60, "skfolio.distance.SpearmanDistance.get_params", false]], "get_params() (skfolio.moments.basecovariance method)": [[98, "skfolio.moments.BaseCovariance.get_params", false]], "get_params() (skfolio.moments.basemu method)": [[99, "skfolio.moments.BaseMu.get_params", false]], "get_params() (skfolio.moments.denoisecovariance method)": [[100, "skfolio.moments.DenoiseCovariance.get_params", false]], "get_params() (skfolio.moments.detonecovariance method)": [[101, "skfolio.moments.DetoneCovariance.get_params", false]], "get_params() (skfolio.moments.empiricalcovariance method)": [[104, "skfolio.moments.EmpiricalCovariance.get_params", false]], "get_params() (skfolio.moments.empiricalmu method)": [[105, "skfolio.moments.EmpiricalMu.get_params", false]], "get_params() (skfolio.moments.equilibriummu method)": [[106, "skfolio.moments.EquilibriumMu.get_params", false]], "get_params() (skfolio.moments.ewcovariance method)": [[102, "skfolio.moments.EWCovariance.get_params", false]], "get_params() (skfolio.moments.ewmu method)": [[103, "skfolio.moments.EWMu.get_params", false]], "get_params() (skfolio.moments.gerbercovariance method)": [[107, "skfolio.moments.GerberCovariance.get_params", false]], "get_params() (skfolio.moments.graphicallassocv method)": [[108, "skfolio.moments.GraphicalLassoCV.get_params", false]], "get_params() (skfolio.moments.ledoitwolf method)": [[109, "skfolio.moments.LedoitWolf.get_params", false]], "get_params() (skfolio.moments.oas method)": [[110, "skfolio.moments.OAS.get_params", false]], "get_params() (skfolio.moments.shrunkcovariance method)": [[111, "skfolio.moments.ShrunkCovariance.get_params", false]], "get_params() (skfolio.moments.shrunkmu method)": [[112, "skfolio.moments.ShrunkMu.get_params", false]], "get_params() (skfolio.optimization.basecomposition method)": [[114, "skfolio.optimization.BaseComposition.get_params", false]], "get_params() (skfolio.optimization.basehierarchicaloptimization method)": [[115, "skfolio.optimization.BaseHierarchicalOptimization.get_params", false]], "get_params() (skfolio.optimization.convexoptimization method)": [[116, "skfolio.optimization.ConvexOptimization.get_params", false]], "get_params() (skfolio.optimization.distributionallyrobustcvar method)": [[117, "skfolio.optimization.DistributionallyRobustCVaR.get_params", false]], "get_params() (skfolio.optimization.equalweighted method)": [[118, "skfolio.optimization.EqualWeighted.get_params", false]], "get_params() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[119, "skfolio.optimization.HierarchicalEqualRiskContribution.get_params", false]], "get_params() (skfolio.optimization.hierarchicalriskparity method)": [[120, "skfolio.optimization.HierarchicalRiskParity.get_params", false]], "get_params() (skfolio.optimization.inversevolatility method)": [[121, "skfolio.optimization.InverseVolatility.get_params", false]], "get_params() (skfolio.optimization.maximumdiversification method)": [[122, "skfolio.optimization.MaximumDiversification.get_params", false]], "get_params() (skfolio.optimization.meanrisk method)": [[123, "skfolio.optimization.MeanRisk.get_params", false]], "get_params() (skfolio.optimization.nestedclustersoptimization method)": [[124, "skfolio.optimization.NestedClustersOptimization.get_params", false]], "get_params() (skfolio.optimization.random method)": [[126, "skfolio.optimization.Random.get_params", false]], "get_params() (skfolio.optimization.riskbudgeting method)": [[127, "skfolio.optimization.RiskBudgeting.get_params", false]], "get_params() (skfolio.optimization.stackingoptimization method)": [[128, "skfolio.optimization.StackingOptimization.get_params", false]], "get_params() (skfolio.pre_selection.dropcorrelated method)": [[133, "skfolio.pre_selection.DropCorrelated.get_params", false]], "get_params() (skfolio.pre_selection.selectkextremes method)": [[134, "skfolio.pre_selection.SelectKExtremes.get_params", false]], "get_params() (skfolio.pre_selection.selectnondominated method)": [[135, "skfolio.pre_selection.SelectNonDominated.get_params", false]], "get_params() (skfolio.prior.baseloadingmatrix method)": [[137, "skfolio.prior.BaseLoadingMatrix.get_params", false]], "get_params() (skfolio.prior.baseprior method)": [[138, "skfolio.prior.BasePrior.get_params", false]], "get_params() (skfolio.prior.blacklitterman method)": [[139, "skfolio.prior.BlackLitterman.get_params", false]], "get_params() (skfolio.prior.empiricalprior method)": [[140, "skfolio.prior.EmpiricalPrior.get_params", false]], "get_params() (skfolio.prior.factormodel method)": [[141, "skfolio.prior.FactorModel.get_params", false]], "get_params() (skfolio.prior.loadingmatrixregression method)": [[142, "skfolio.prior.LoadingMatrixRegression.get_params", false]], "get_params() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[144, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[145, "skfolio.uncertainty_set.BaseMuUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[146, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[147, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[148, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[149, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.get_params", false]], "get_path_ids() (skfolio.model_selection.basecombinatorialcv method)": [[93, "skfolio.model_selection.BaseCombinatorialCV.get_path_ids", false]], "get_path_ids() (skfolio.model_selection.combinatorialpurgedcv method)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.get_path_ids", false]], "get_precision() (skfolio.moments.graphicallassocv method)": [[108, "skfolio.moments.GraphicalLassoCV.get_precision", false]], "get_precision() (skfolio.moments.ledoitwolf method)": [[109, "skfolio.moments.LedoitWolf.get_precision", false]], "get_precision() (skfolio.moments.oas method)": [[110, "skfolio.moments.OAS.get_precision", false]], "get_precision() (skfolio.moments.shrunkcovariance method)": [[111, "skfolio.moments.ShrunkCovariance.get_precision", false]], "get_support() (skfolio.pre_selection.dropcorrelated method)": [[133, "skfolio.pre_selection.DropCorrelated.get_support", false]], "get_support() (skfolio.pre_selection.selectkextremes method)": [[134, "skfolio.pre_selection.SelectKExtremes.get_support", false]], "get_support() (skfolio.pre_selection.selectnondominated method)": [[135, "skfolio.pre_selection.SelectNonDominated.get_support", false]], "get_weight() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.get_weight", false]], "gini_mean_difference() (in module skfolio.measures)": [[79, "skfolio.measures.gini_mean_difference", false]], "graphicallassocv (class in skfolio.moments)": [[108, "skfolio.moments.GraphicalLassoCV", false]], "has() (skfolio.cluster.linkagemethod class method)": [[48, "skfolio.cluster.LinkageMethod.has", false]], "has() (skfolio.measures.basemeasure class method)": [[61, "skfolio.measures.BaseMeasure.has", false]], "has() (skfolio.measures.extrariskmeasure class method)": [[62, "skfolio.measures.ExtraRiskMeasure.has", false]], "has() (skfolio.measures.perfmeasure class method)": [[63, "skfolio.measures.PerfMeasure.has", false]], "has() (skfolio.measures.ratiomeasure class method)": [[64, "skfolio.measures.RatioMeasure.has", false]], "has() (skfolio.measures.riskmeasure class method)": [[65, "skfolio.measures.RiskMeasure.has", false]], "has() (skfolio.moments.shrunkmumethods class method)": [[113, "skfolio.moments.ShrunkMuMethods.has", false]], "has() (skfolio.optimization.objectivefunction class method)": [[125, "skfolio.optimization.ObjectiveFunction.has", false]], "hierarchicalclustering (class in skfolio.cluster)": [[47, "skfolio.cluster.HierarchicalClustering", false]], "hierarchicalequalriskcontribution (class in skfolio.optimization)": [[119, "skfolio.optimization.HierarchicalEqualRiskContribution", false]], "hierarchicalriskparity (class in skfolio.optimization)": [[120, "skfolio.optimization.HierarchicalRiskParity", false]], "index() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.index", false]], "index() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.index", false]], "index() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.index", false]], "index() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.index", false]], "index() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.index", false]], "index() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.index", false]], "index() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.index", false]], "index() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.index", false]], "index() (skfolio.population.population method)": [[129, "skfolio.population.Population.index", false]], "insert() (skfolio.population.population method)": [[129, "skfolio.population.Population.insert", false]], "inverse_transform() (skfolio.pre_selection.dropcorrelated method)": [[133, "skfolio.pre_selection.DropCorrelated.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectkextremes method)": [[134, "skfolio.pre_selection.SelectKExtremes.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectnondominated method)": [[135, "skfolio.pre_selection.SelectNonDominated.inverse_transform", false]], "inversevolatility (class in skfolio.optimization)": [[121, "skfolio.optimization.InverseVolatility", false]], "is_cholesky_dec() (in module skfolio.utils.stats)": [[160, "skfolio.utils.stats.is_cholesky_dec", false]], "isalnum() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isalnum", false]], "isalnum() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isalnum", false]], "isalnum() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isalnum", false]], "isalnum() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isalnum", false]], "isalnum() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isalnum", false]], "isalnum() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isalnum", false]], "isalnum() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.isalnum", false]], "isalnum() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.isalnum", false]], "isalpha() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isalpha", false]], "isalpha() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isalpha", false]], "isalpha() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isalpha", false]], "isalpha() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isalpha", false]], "isalpha() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isalpha", false]], "isalpha() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isalpha", false]], "isalpha() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.isalpha", false]], "isalpha() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.isalpha", false]], "isascii() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isascii", false]], "isascii() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isascii", false]], "isascii() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isascii", false]], "isascii() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isascii", false]], "isascii() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isascii", false]], "isascii() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isascii", false]], "isascii() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.isascii", false]], "isascii() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.isascii", false]], "isdecimal() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isdecimal", false]], "isdecimal() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isdecimal", false]], "isdecimal() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.isdecimal", false]], "isdecimal() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.isdecimal", false]], "isdigit() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isdigit", false]], "isdigit() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isdigit", false]], "isdigit() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isdigit", false]], "isdigit() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isdigit", false]], "isdigit() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isdigit", false]], "isdigit() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isdigit", false]], "isdigit() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.isdigit", false]], "isdigit() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.isdigit", false]], "isidentifier() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isidentifier", false]], "isidentifier() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isidentifier", false]], "isidentifier() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.isidentifier", false]], "isidentifier() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.isidentifier", false]], "islower() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.islower", false]], "islower() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.islower", false]], "islower() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.islower", false]], "islower() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.islower", false]], "islower() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.islower", false]], "islower() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.islower", false]], "islower() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.islower", false]], "islower() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.islower", false]], "isnumeric() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isnumeric", false]], "isnumeric() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isnumeric", false]], "isnumeric() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.isnumeric", false]], "isnumeric() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.isnumeric", false]], "isprintable() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isprintable", false]], "isprintable() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isprintable", false]], "isprintable() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isprintable", false]], "isprintable() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isprintable", false]], "isprintable() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isprintable", false]], "isprintable() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isprintable", false]], "isprintable() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.isprintable", false]], "isprintable() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.isprintable", false]], "isspace() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isspace", false]], "isspace() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isspace", false]], "isspace() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isspace", false]], "isspace() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isspace", false]], "isspace() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isspace", false]], "isspace() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isspace", false]], "isspace() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.isspace", false]], "isspace() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.isspace", false]], "istitle() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.istitle", false]], "istitle() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.istitle", false]], "istitle() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.istitle", false]], "istitle() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.istitle", false]], "istitle() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.istitle", false]], "istitle() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.istitle", false]], "istitle() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.istitle", false]], "istitle() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.istitle", false]], "isupper() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isupper", false]], "isupper() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isupper", false]], "isupper() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isupper", false]], "isupper() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isupper", false]], "isupper() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isupper", false]], "isupper() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isupper", false]], "isupper() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.isupper", false]], "isupper() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.isupper", false]], "join() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.join", false]], "join() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.join", false]], "join() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.join", false]], "join() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.join", false]], "join() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.join", false]], "join() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.join", false]], "join() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.join", false]], "join() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.join", false]], "kendalldistance (class in skfolio.distance)": [[57, "skfolio.distance.KendallDistance", false]], "ledoitwolf (class in skfolio.moments)": [[109, "skfolio.moments.LedoitWolf", false]], "linkagemethod (class in skfolio.cluster)": [[48, "skfolio.cluster.LinkageMethod", false]], "ljust() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.ljust", false]], "ljust() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.ljust", false]], "ljust() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.ljust", false]], "ljust() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.ljust", false]], "ljust() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.ljust", false]], "ljust() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.ljust", false]], "ljust() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.ljust", false]], "ljust() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.ljust", false]], "load_factors_dataset() (in module skfolio.datasets)": [[49, "skfolio.datasets.load_factors_dataset", false]], "load_ftse100_dataset() (in module skfolio.datasets)": [[50, "skfolio.datasets.load_ftse100_dataset", false]], "load_nasdaq_dataset() (in module skfolio.datasets)": [[51, "skfolio.datasets.load_nasdaq_dataset", false]], "load_sp500_dataset() (in module skfolio.datasets)": [[52, "skfolio.datasets.load_sp500_dataset", false]], "load_sp500_index() (in module skfolio.datasets)": [[53, "skfolio.datasets.load_sp500_index", false]], "loadingmatrixregression (class in skfolio.prior)": [[142, "skfolio.prior.LoadingMatrixRegression", false]], "lower() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.lower", false]], "lower() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.lower", false]], "lower() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.lower", false]], "lower() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.lower", false]], "lower() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.lower", false]], "lower() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.lower", false]], "lower() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.lower", false]], "lower() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.lower", false]], "lstrip() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.lstrip", false]], "lstrip() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.lstrip", false]], "lstrip() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.lstrip", false]], "lstrip() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.lstrip", false]], "lstrip() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.lstrip", false]], "lstrip() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.lstrip", false]], "lstrip() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.lstrip", false]], "lstrip() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.lstrip", false]], "mahalanobis() (skfolio.moments.graphicallassocv method)": [[108, "skfolio.moments.GraphicalLassoCV.mahalanobis", false]], "mahalanobis() (skfolio.moments.ledoitwolf method)": [[109, "skfolio.moments.LedoitWolf.mahalanobis", false]], "mahalanobis() (skfolio.moments.oas method)": [[110, "skfolio.moments.OAS.mahalanobis", false]], "mahalanobis() (skfolio.moments.shrunkcovariance method)": [[111, "skfolio.moments.ShrunkCovariance.mahalanobis", false]], "make_scorer() (in module skfolio.metrics)": [[92, "skfolio.metrics.make_scorer", false]], "maketrans() (skfolio.cluster.linkagemethod static method)": [[48, "skfolio.cluster.LinkageMethod.maketrans", false]], "maketrans() (skfolio.measures.basemeasure static method)": [[61, "skfolio.measures.BaseMeasure.maketrans", false]], "maketrans() (skfolio.measures.extrariskmeasure static method)": [[62, "skfolio.measures.ExtraRiskMeasure.maketrans", false]], "maketrans() (skfolio.measures.perfmeasure static method)": [[63, "skfolio.measures.PerfMeasure.maketrans", false]], "maketrans() (skfolio.measures.ratiomeasure static method)": [[64, "skfolio.measures.RatioMeasure.maketrans", false]], "maketrans() (skfolio.measures.riskmeasure static method)": [[65, "skfolio.measures.RiskMeasure.maketrans", false]], "maketrans() (skfolio.moments.shrunkmumethods static method)": [[113, "skfolio.moments.ShrunkMuMethods.maketrans", false]], "maketrans() (skfolio.optimization.objectivefunction static method)": [[125, "skfolio.optimization.ObjectiveFunction.maketrans", false]], "max_drawdown() (in module skfolio.measures)": [[80, "skfolio.measures.max_drawdown", false]], "max_measure() (skfolio.population.population method)": [[129, "skfolio.population.Population.max_measure", false]], "maximumdiversification (class in skfolio.optimization)": [[122, "skfolio.optimization.MaximumDiversification", false]], "mean() (in module skfolio.measures)": [[81, "skfolio.measures.mean", false]], "mean_absolute_deviation() (in module skfolio.measures)": [[82, "skfolio.measures.mean_absolute_deviation", false]], "meanrisk (class in skfolio.optimization)": [[123, "skfolio.optimization.MeanRisk", false]], "measures() (skfolio.population.population method)": [[129, "skfolio.population.Population.measures", false]], "measures_df (skfolio.portfolio.baseportfolio property)": [[130, "skfolio.portfolio.BasePortfolio.measures_df", false]], "measures_df (skfolio.portfolio.multiperiodportfolio property)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.measures_df", false]], "measures_df (skfolio.portfolio.portfolio property)": [[132, "skfolio.portfolio.Portfolio.measures_df", false]], "measures_mean() (skfolio.population.population method)": [[129, "skfolio.population.Population.measures_mean", false]], "measures_std() (skfolio.population.population method)": [[129, "skfolio.population.Population.measures_std", false]], "min_measure() (skfolio.population.population method)": [[129, "skfolio.population.Population.min_measure", false]], "module": [[0, "module-0", false], [0, "module-1", false], [0, "module-2", false], [0, "module-3", false], [0, "module-4", false], [0, "module-5", false], [0, "module-6", false], [0, "module-7", false], [0, "module-skfolio", false], [0, "module-skfolio.measures", false], [0, "module-skfolio.optimization.cluster", false], [0, "module-skfolio.optimization.convex", false], [0, "module-skfolio.optimization.ensemble", false], [0, "module-skfolio.optimization.naive", false], [0, "module-skfolio.population", false], [0, "module-skfolio.portfolio", false]], "multiperiodportfolio (class in skfolio.portfolio)": [[131, "skfolio.portfolio.MultiPeriodPortfolio", false]], "mutualinformation (class in skfolio.distance)": [[58, "skfolio.distance.MutualInformation", false]], "n_bins_freedman() (in module skfolio.utils.stats)": [[161, "skfolio.utils.stats.n_bins_freedman", false]], "n_bins_knuth() (in module skfolio.utils.stats)": [[162, "skfolio.utils.stats.n_bins_knuth", false]], "n_observations (skfolio.portfolio.baseportfolio property)": [[130, "skfolio.portfolio.BasePortfolio.n_observations", false]], "n_observations (skfolio.portfolio.multiperiodportfolio property)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.n_observations", false]], "n_observations (skfolio.portfolio.portfolio property)": [[132, "skfolio.portfolio.Portfolio.n_observations", false]], "n_splits (skfolio.model_selection.combinatorialpurgedcv property)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.n_splits", false]], "n_test_paths (skfolio.model_selection.combinatorialpurgedcv property)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.n_test_paths", false]], "named_estimators (skfolio.optimization.stackingoptimization property)": [[128, "skfolio.optimization.StackingOptimization.named_estimators", false]], "nbinsmethod() (in module skfolio.utils.stats)": [[151, "skfolio.utils.stats.NBinsMethod", false]], "nestedclustersoptimization (class in skfolio.optimization)": [[124, "skfolio.optimization.NestedClustersOptimization", false]], "non_denominated_sort() (skfolio.population.population method)": [[129, "skfolio.population.Population.non_denominated_sort", false]], "nonzero_assets (skfolio.portfolio.portfolio attribute)": [[132, "skfolio.portfolio.Portfolio.nonzero_assets", false]], "nonzero_assets_index (skfolio.portfolio.portfolio attribute)": [[132, "skfolio.portfolio.Portfolio.nonzero_assets_index", false]], "oas (class in skfolio.moments)": [[110, "skfolio.moments.OAS", false]], "objectivefunction (class in skfolio.optimization)": [[125, "skfolio.optimization.ObjectiveFunction", false]], "optimal_folds_number() (in module skfolio.model_selection)": [[97, "skfolio.model_selection.optimal_folds_number", false]], "owa_gmd_weights() (in module skfolio.measures)": [[83, "skfolio.measures.owa_gmd_weights", false]], "partition() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.partition", false]], "partition() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.partition", false]], "partition() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.partition", false]], "partition() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.partition", false]], "partition() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.partition", false]], "partition() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.partition", false]], "partition() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.partition", false]], "partition() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.partition", false]], "pearsondistance (class in skfolio.distance)": [[59, "skfolio.distance.PearsonDistance", false]], "perfmeasure (class in skfolio.measures)": [[63, "skfolio.measures.PerfMeasure", false]], "plot_composition() (skfolio.population.population method)": [[129, "skfolio.population.Population.plot_composition", false]], "plot_composition() (skfolio.portfolio.baseportfolio method)": [[130, "skfolio.portfolio.BasePortfolio.plot_composition", false]], "plot_composition() (skfolio.portfolio.multiperiodportfolio method)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.plot_composition", false]], "plot_composition() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.plot_composition", false]], "plot_contribution() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.plot_contribution", false]], "plot_cumulative_returns() (skfolio.population.population method)": [[129, "skfolio.population.Population.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.baseportfolio method)": [[130, "skfolio.portfolio.BasePortfolio.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.multiperiodportfolio method)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.plot_cumulative_returns", false]], "plot_dendrogram() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.plot_dendrogram", false]], "plot_distribution() (skfolio.population.population method)": [[129, "skfolio.population.Population.plot_distribution", false]], "plot_measures() (skfolio.population.population method)": [[129, "skfolio.population.Population.plot_measures", false]], "plot_returns() (skfolio.portfolio.baseportfolio method)": [[130, "skfolio.portfolio.BasePortfolio.plot_returns", false]], "plot_returns() (skfolio.portfolio.multiperiodportfolio method)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.plot_returns", false]], "plot_returns() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.plot_returns", false]], "plot_rolling_measure() (skfolio.portfolio.baseportfolio method)": [[130, "skfolio.portfolio.BasePortfolio.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.multiperiodportfolio method)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.plot_rolling_measure", false]], "plot_train_test_folds() (skfolio.model_selection.combinatorialpurgedcv method)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.plot_train_test_folds", false]], "plot_train_test_index() (skfolio.model_selection.combinatorialpurgedcv method)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.plot_train_test_index", false]], "pop() (skfolio.population.population method)": [[129, "skfolio.population.Population.pop", false]], "population (class in skfolio.population)": [[129, "skfolio.population.Population", false]], "portfolio (class in skfolio.portfolio)": [[132, "skfolio.portfolio.Portfolio", false]], "portfolios (skfolio.portfolio.multiperiodportfolio property)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.portfolios", false]], "predict() (skfolio.optimization.basehierarchicaloptimization method)": [[115, "skfolio.optimization.BaseHierarchicalOptimization.predict", false]], "predict() (skfolio.optimization.convexoptimization method)": [[116, "skfolio.optimization.ConvexOptimization.predict", false]], "predict() (skfolio.optimization.distributionallyrobustcvar method)": [[117, "skfolio.optimization.DistributionallyRobustCVaR.predict", false]], "predict() (skfolio.optimization.equalweighted method)": [[118, "skfolio.optimization.EqualWeighted.predict", false]], "predict() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[119, "skfolio.optimization.HierarchicalEqualRiskContribution.predict", false]], "predict() (skfolio.optimization.hierarchicalriskparity method)": [[120, "skfolio.optimization.HierarchicalRiskParity.predict", false]], "predict() (skfolio.optimization.inversevolatility method)": [[121, "skfolio.optimization.InverseVolatility.predict", false]], "predict() (skfolio.optimization.maximumdiversification method)": [[122, "skfolio.optimization.MaximumDiversification.predict", false]], "predict() (skfolio.optimization.meanrisk method)": [[123, "skfolio.optimization.MeanRisk.predict", false]], "predict() (skfolio.optimization.nestedclustersoptimization method)": [[124, "skfolio.optimization.NestedClustersOptimization.predict", false]], "predict() (skfolio.optimization.random method)": [[126, "skfolio.optimization.Random.predict", false]], "predict() (skfolio.optimization.riskbudgeting method)": [[127, "skfolio.optimization.RiskBudgeting.predict", false]], "predict() (skfolio.optimization.stackingoptimization method)": [[128, "skfolio.optimization.StackingOptimization.predict", false]], "prices_to_returns() (in module skfolio.preprocessing)": [[136, "skfolio.preprocessing.prices_to_returns", false]], "priormodel (class in skfolio.prior)": [[143, "skfolio.prior.PriorModel", false]], "quantile() (skfolio.population.population method)": [[129, "skfolio.population.Population.quantile", false]], "rand_weights() (in module skfolio.utils.stats)": [[163, "skfolio.utils.stats.rand_weights", false]], "rand_weights_dirichlet() (in module skfolio.utils.stats)": [[164, "skfolio.utils.stats.rand_weights_dirichlet", false]], "random (class in skfolio.optimization)": [[126, "skfolio.optimization.Random", false]], "ratiomeasure (class in skfolio.measures)": [[64, "skfolio.measures.RatioMeasure", false]], "recombined_paths (skfolio.model_selection.combinatorialpurgedcv property)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.recombined_paths", false]], "remove() (skfolio.population.population method)": [[129, "skfolio.population.Population.remove", false]], "removeprefix() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.removeprefix", false]], "removeprefix() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.removeprefix", false]], "removeprefix() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.removeprefix", false]], "removeprefix() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.removeprefix", false]], "removesuffix() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.removesuffix", false]], "removesuffix() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.removesuffix", false]], "removesuffix() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.removesuffix", false]], "removesuffix() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.removesuffix", false]], "replace() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.replace", false]], "replace() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.replace", false]], "replace() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.replace", false]], "replace() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.replace", false]], "replace() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.replace", false]], "replace() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.replace", false]], "replace() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.replace", false]], "replace() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.replace", false]], "returns_df (skfolio.portfolio.baseportfolio property)": [[130, "skfolio.portfolio.BasePortfolio.returns_df", false]], "returns_df (skfolio.portfolio.multiperiodportfolio property)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.returns_df", false]], "returns_df (skfolio.portfolio.portfolio property)": [[132, "skfolio.portfolio.Portfolio.returns_df", false]], "reverse() (skfolio.population.population method)": [[129, "skfolio.population.Population.reverse", false]], "rfind() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rfind", false]], "rfind() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rfind", false]], "rfind() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rfind", false]], "rfind() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rfind", false]], "rfind() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rfind", false]], "rfind() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rfind", false]], "rfind() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.rfind", false]], "rfind() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.rfind", false]], "rindex() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rindex", false]], "rindex() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rindex", false]], "rindex() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rindex", false]], "rindex() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rindex", false]], "rindex() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rindex", false]], "rindex() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rindex", false]], "rindex() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.rindex", false]], "rindex() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.rindex", false]], "riskbudgeting (class in skfolio.optimization)": [[127, "skfolio.optimization.RiskBudgeting", false]], "riskmeasure (class in skfolio.measures)": [[65, "skfolio.measures.RiskMeasure", false]], "rjust() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rjust", false]], "rjust() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rjust", false]], "rjust() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rjust", false]], "rjust() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rjust", false]], "rjust() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rjust", false]], "rjust() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rjust", false]], "rjust() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.rjust", false]], "rjust() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.rjust", false]], "rolling_measure() (skfolio.portfolio.baseportfolio method)": [[130, "skfolio.portfolio.BasePortfolio.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.multiperiodportfolio method)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.rolling_measure", false]], "rpartition() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rpartition", false]], "rpartition() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rpartition", false]], "rpartition() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rpartition", false]], "rpartition() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rpartition", false]], "rpartition() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rpartition", false]], "rpartition() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rpartition", false]], "rpartition() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.rpartition", false]], "rpartition() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.rpartition", false]], "rsplit() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rsplit", false]], "rsplit() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rsplit", false]], "rsplit() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rsplit", false]], "rsplit() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rsplit", false]], "rsplit() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rsplit", false]], "rsplit() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rsplit", false]], "rsplit() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.rsplit", false]], "rsplit() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.rsplit", false]], "rstrip() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rstrip", false]], "rstrip() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rstrip", false]], "rstrip() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rstrip", false]], "rstrip() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rstrip", false]], "rstrip() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rstrip", false]], "rstrip() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rstrip", false]], "rstrip() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.rstrip", false]], "rstrip() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.rstrip", false]], "score() (skfolio.moments.graphicallassocv method)": [[108, "skfolio.moments.GraphicalLassoCV.score", false]], "score() (skfolio.moments.ledoitwolf method)": [[109, "skfolio.moments.LedoitWolf.score", false]], "score() (skfolio.moments.oas method)": [[110, "skfolio.moments.OAS.score", false]], "score() (skfolio.moments.shrunkcovariance method)": [[111, "skfolio.moments.ShrunkCovariance.score", false]], "score() (skfolio.optimization.basehierarchicaloptimization method)": [[115, "skfolio.optimization.BaseHierarchicalOptimization.score", false]], "score() (skfolio.optimization.convexoptimization method)": [[116, "skfolio.optimization.ConvexOptimization.score", false]], "score() (skfolio.optimization.distributionallyrobustcvar method)": [[117, "skfolio.optimization.DistributionallyRobustCVaR.score", false]], "score() (skfolio.optimization.equalweighted method)": [[118, "skfolio.optimization.EqualWeighted.score", false]], "score() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[119, "skfolio.optimization.HierarchicalEqualRiskContribution.score", false]], "score() (skfolio.optimization.hierarchicalriskparity method)": [[120, "skfolio.optimization.HierarchicalRiskParity.score", false]], "score() (skfolio.optimization.inversevolatility method)": [[121, "skfolio.optimization.InverseVolatility.score", false]], "score() (skfolio.optimization.maximumdiversification method)": [[122, "skfolio.optimization.MaximumDiversification.score", false]], "score() (skfolio.optimization.meanrisk method)": [[123, "skfolio.optimization.MeanRisk.score", false]], "score() (skfolio.optimization.nestedclustersoptimization method)": [[124, "skfolio.optimization.NestedClustersOptimization.score", false]], "score() (skfolio.optimization.random method)": [[126, "skfolio.optimization.Random.score", false]], "score() (skfolio.optimization.riskbudgeting method)": [[127, "skfolio.optimization.RiskBudgeting.score", false]], "score() (skfolio.optimization.stackingoptimization method)": [[128, "skfolio.optimization.StackingOptimization.score", false]], "selectkextremes (class in skfolio.pre_selection)": [[134, "skfolio.pre_selection.SelectKExtremes", false]], "selectnondominated (class in skfolio.pre_selection)": [[135, "skfolio.pre_selection.SelectNonDominated", false]], "semi_deviation() (in module skfolio.measures)": [[84, "skfolio.measures.semi_deviation", false]], "semi_variance() (in module skfolio.measures)": [[85, "skfolio.measures.semi_variance", false]], "set_output() (skfolio.pre_selection.dropcorrelated method)": [[133, "skfolio.pre_selection.DropCorrelated.set_output", false]], "set_output() (skfolio.pre_selection.selectkextremes method)": [[134, "skfolio.pre_selection.SelectKExtremes.set_output", false]], "set_output() (skfolio.pre_selection.selectnondominated method)": [[135, "skfolio.pre_selection.SelectNonDominated.set_output", false]], "set_params() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.set_params", false]], "set_params() (skfolio.distance.basedistance method)": [[54, "skfolio.distance.BaseDistance.set_params", false]], "set_params() (skfolio.distance.covariancedistance method)": [[55, "skfolio.distance.CovarianceDistance.set_params", false]], "set_params() (skfolio.distance.distancecorrelation method)": [[56, "skfolio.distance.DistanceCorrelation.set_params", false]], "set_params() (skfolio.distance.kendalldistance method)": [[57, "skfolio.distance.KendallDistance.set_params", false]], "set_params() (skfolio.distance.mutualinformation method)": [[58, "skfolio.distance.MutualInformation.set_params", false]], "set_params() (skfolio.distance.pearsondistance method)": [[59, "skfolio.distance.PearsonDistance.set_params", false]], "set_params() (skfolio.distance.spearmandistance method)": [[60, "skfolio.distance.SpearmanDistance.set_params", false]], "set_params() (skfolio.moments.basecovariance method)": [[98, "skfolio.moments.BaseCovariance.set_params", false]], "set_params() (skfolio.moments.basemu method)": [[99, "skfolio.moments.BaseMu.set_params", false]], "set_params() (skfolio.moments.denoisecovariance method)": [[100, "skfolio.moments.DenoiseCovariance.set_params", false]], "set_params() (skfolio.moments.detonecovariance method)": [[101, "skfolio.moments.DetoneCovariance.set_params", false]], "set_params() (skfolio.moments.empiricalcovariance method)": [[104, "skfolio.moments.EmpiricalCovariance.set_params", false]], "set_params() (skfolio.moments.empiricalmu method)": [[105, "skfolio.moments.EmpiricalMu.set_params", false]], "set_params() (skfolio.moments.equilibriummu method)": [[106, "skfolio.moments.EquilibriumMu.set_params", false]], "set_params() (skfolio.moments.ewcovariance method)": [[102, "skfolio.moments.EWCovariance.set_params", false]], "set_params() (skfolio.moments.ewmu method)": [[103, "skfolio.moments.EWMu.set_params", false]], "set_params() (skfolio.moments.gerbercovariance method)": [[107, "skfolio.moments.GerberCovariance.set_params", false]], "set_params() (skfolio.moments.graphicallassocv method)": [[108, "skfolio.moments.GraphicalLassoCV.set_params", false]], "set_params() (skfolio.moments.ledoitwolf method)": [[109, "skfolio.moments.LedoitWolf.set_params", false]], "set_params() (skfolio.moments.oas method)": [[110, "skfolio.moments.OAS.set_params", false]], "set_params() (skfolio.moments.shrunkcovariance method)": [[111, "skfolio.moments.ShrunkCovariance.set_params", false]], "set_params() (skfolio.moments.shrunkmu method)": [[112, "skfolio.moments.ShrunkMu.set_params", false]], "set_params() (skfolio.optimization.basecomposition method)": [[114, "skfolio.optimization.BaseComposition.set_params", false]], "set_params() (skfolio.optimization.basehierarchicaloptimization method)": [[115, "skfolio.optimization.BaseHierarchicalOptimization.set_params", false]], "set_params() (skfolio.optimization.convexoptimization method)": [[116, "skfolio.optimization.ConvexOptimization.set_params", false]], "set_params() (skfolio.optimization.distributionallyrobustcvar method)": [[117, "skfolio.optimization.DistributionallyRobustCVaR.set_params", false]], "set_params() (skfolio.optimization.equalweighted method)": [[118, "skfolio.optimization.EqualWeighted.set_params", false]], "set_params() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[119, "skfolio.optimization.HierarchicalEqualRiskContribution.set_params", false]], "set_params() (skfolio.optimization.hierarchicalriskparity method)": [[120, "skfolio.optimization.HierarchicalRiskParity.set_params", false]], "set_params() (skfolio.optimization.inversevolatility method)": [[121, "skfolio.optimization.InverseVolatility.set_params", false]], "set_params() (skfolio.optimization.maximumdiversification method)": [[122, "skfolio.optimization.MaximumDiversification.set_params", false]], "set_params() (skfolio.optimization.meanrisk method)": [[123, "skfolio.optimization.MeanRisk.set_params", false]], "set_params() (skfolio.optimization.nestedclustersoptimization method)": [[124, "skfolio.optimization.NestedClustersOptimization.set_params", false]], "set_params() (skfolio.optimization.random method)": [[126, "skfolio.optimization.Random.set_params", false]], "set_params() (skfolio.optimization.riskbudgeting method)": [[127, "skfolio.optimization.RiskBudgeting.set_params", false]], "set_params() (skfolio.optimization.stackingoptimization method)": [[128, "skfolio.optimization.StackingOptimization.set_params", false]], "set_params() (skfolio.pre_selection.dropcorrelated method)": [[133, "skfolio.pre_selection.DropCorrelated.set_params", false]], "set_params() (skfolio.pre_selection.selectkextremes method)": [[134, "skfolio.pre_selection.SelectKExtremes.set_params", false]], "set_params() (skfolio.pre_selection.selectnondominated method)": [[135, "skfolio.pre_selection.SelectNonDominated.set_params", false]], "set_params() (skfolio.prior.baseloadingmatrix method)": [[137, "skfolio.prior.BaseLoadingMatrix.set_params", false]], "set_params() (skfolio.prior.baseprior method)": [[138, "skfolio.prior.BasePrior.set_params", false]], "set_params() (skfolio.prior.blacklitterman method)": [[139, "skfolio.prior.BlackLitterman.set_params", false]], "set_params() (skfolio.prior.empiricalprior method)": [[140, "skfolio.prior.EmpiricalPrior.set_params", false]], "set_params() (skfolio.prior.factormodel method)": [[141, "skfolio.prior.FactorModel.set_params", false]], "set_params() (skfolio.prior.loadingmatrixregression method)": [[142, "skfolio.prior.LoadingMatrixRegression.set_params", false]], "set_params() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[144, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[145, "skfolio.uncertainty_set.BaseMuUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[146, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[147, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[148, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[149, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.set_params", false]], "set_portfolio_params() (skfolio.population.population method)": [[129, "skfolio.population.Population.set_portfolio_params", false]], "set_score_request() (skfolio.moments.graphicallassocv method)": [[108, "skfolio.moments.GraphicalLassoCV.set_score_request", false]], "set_score_request() (skfolio.moments.ledoitwolf method)": [[109, "skfolio.moments.LedoitWolf.set_score_request", false]], "set_score_request() (skfolio.moments.oas method)": [[110, "skfolio.moments.OAS.set_score_request", false]], "set_score_request() (skfolio.moments.shrunkcovariance method)": [[111, "skfolio.moments.ShrunkCovariance.set_score_request", false]], "shrunkcovariance (class in skfolio.moments)": [[111, "skfolio.moments.ShrunkCovariance", false]], "shrunkmu (class in skfolio.moments)": [[112, "skfolio.moments.ShrunkMu", false]], "shrunkmumethods (class in skfolio.moments)": [[113, "skfolio.moments.ShrunkMuMethods", false]], "skfolio": [[0, "module-0", false], [0, "module-1", false], [0, "module-2", false], [0, "module-3", false], [0, "module-4", false], [0, "module-5", false], [0, "module-6", false], [0, "module-7", false], [0, "module-skfolio", false]], "skfolio.measures": [[0, "module-skfolio.measures", false]], "skfolio.optimization.cluster": [[0, "module-skfolio.optimization.cluster", false]], "skfolio.optimization.convex": [[0, "module-skfolio.optimization.convex", false]], "skfolio.optimization.ensemble": [[0, "module-skfolio.optimization.ensemble", false]], "skfolio.optimization.naive": [[0, "module-skfolio.optimization.naive", false]], "skfolio.population": [[0, "module-skfolio.population", false]], "skfolio.portfolio": [[0, "module-skfolio.portfolio", false]], "sort() (skfolio.population.population method)": [[129, "skfolio.population.Population.sort", false]], "sort_measure() (skfolio.population.population method)": [[129, "skfolio.population.Population.sort_measure", false]], "spearmandistance (class in skfolio.distance)": [[60, "skfolio.distance.SpearmanDistance", false]], "split() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.split", false]], "split() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.split", false]], "split() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.split", false]], "split() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.split", false]], "split() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.split", false]], "split() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.split", false]], "split() (skfolio.model_selection.combinatorialpurgedcv method)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.split", false]], "split() (skfolio.model_selection.walkforward method)": [[95, "skfolio.model_selection.WalkForward.split", false]], "split() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.split", false]], "split() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.split", false]], "splitlines() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.splitlines", false]], "splitlines() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.splitlines", false]], "splitlines() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.splitlines", false]], "splitlines() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.splitlines", false]], "splitlines() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.splitlines", false]], "splitlines() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.splitlines", false]], "splitlines() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.splitlines", false]], "splitlines() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.splitlines", false]], "sric (skfolio.portfolio.portfolio property)": [[132, "skfolio.portfolio.Portfolio.sric", false]], "stackingoptimization (class in skfolio.optimization)": [[128, "skfolio.optimization.StackingOptimization", false]], "standard_deviation() (in module skfolio.measures)": [[86, "skfolio.measures.standard_deviation", false]], "startswith() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.startswith", false]], "startswith() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.startswith", false]], "startswith() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.startswith", false]], "startswith() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.startswith", false]], "startswith() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.startswith", false]], "startswith() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.startswith", false]], "startswith() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.startswith", false]], "startswith() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.startswith", false]], "strip() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.strip", false]], "strip() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.strip", false]], "strip() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.strip", false]], "strip() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.strip", false]], "strip() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.strip", false]], "strip() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.strip", false]], "strip() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.strip", false]], "strip() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.strip", false]], "summary() (skfolio.population.population method)": [[129, "skfolio.population.Population.summary", false]], "summary() (skfolio.portfolio.baseportfolio method)": [[130, "skfolio.portfolio.BasePortfolio.summary", false]], "summary() (skfolio.portfolio.multiperiodportfolio method)": [[131, "skfolio.portfolio.MultiPeriodPortfolio.summary", false]], "summary() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.summary", false]], "swapcase() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.swapcase", false]], "swapcase() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.swapcase", false]], "swapcase() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.swapcase", false]], "swapcase() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.swapcase", false]], "swapcase() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.swapcase", false]], "swapcase() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.swapcase", false]], "swapcase() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.swapcase", false]], "swapcase() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.swapcase", false]], "test_set_index (skfolio.model_selection.combinatorialpurgedcv property)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.test_set_index", false]], "third_central_moment() (in module skfolio.measures)": [[87, "skfolio.measures.third_central_moment", false]], "title() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.title", false]], "title() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.title", false]], "title() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.title", false]], "title() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.title", false]], "title() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.title", false]], "title() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.title", false]], "title() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.title", false]], "title() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.title", false]], "transform() (skfolio.pre_selection.dropcorrelated method)": [[133, "skfolio.pre_selection.DropCorrelated.transform", false]], "transform() (skfolio.pre_selection.selectkextremes method)": [[134, "skfolio.pre_selection.SelectKExtremes.transform", false]], "transform() (skfolio.pre_selection.selectnondominated method)": [[135, "skfolio.pre_selection.SelectNonDominated.transform", false]], "translate() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.translate", false]], "translate() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.translate", false]], "translate() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.translate", false]], "translate() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.translate", false]], "translate() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.translate", false]], "translate() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.translate", false]], "translate() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.translate", false]], "translate() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.translate", false]], "ulcer_index() (in module skfolio.measures)": [[88, "skfolio.measures.ulcer_index", false]], "uncertaintyset (class in skfolio.uncertainty_set)": [[150, "skfolio.uncertainty_set.UncertaintySet", false]], "upper() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.upper", false]], "upper() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.upper", false]], "upper() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.upper", false]], "upper() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.upper", false]], "upper() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.upper", false]], "upper() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.upper", false]], "upper() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.upper", false]], "upper() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.upper", false]], "value_at_risk() (in module skfolio.measures)": [[89, "skfolio.measures.value_at_risk", false]], "variance() (in module skfolio.measures)": [[90, "skfolio.measures.variance", false]], "variance_from_assets() (skfolio.portfolio.portfolio method)": [[132, "skfolio.portfolio.Portfolio.variance_from_assets", false]], "walkforward (class in skfolio.model_selection)": [[95, "skfolio.model_selection.WalkForward", false]], "worst_realization() (in module skfolio.measures)": [[91, "skfolio.measures.worst_realization", false]], "zfill() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.zfill", false]], "zfill() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.zfill", false]], "zfill() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.zfill", false]], "zfill() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.zfill", false]], "zfill() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.zfill", false]], "zfill() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.zfill", false]], "zfill() (skfolio.moments.shrunkmumethods method)": [[113, "skfolio.moments.ShrunkMuMethods.zfill", false]], "zfill() (skfolio.optimization.objectivefunction method)": [[125, "skfolio.optimization.ObjectiveFunction.zfill", false]]}, "objects": {"": [[0, 0, 0, "module-7", "skfolio"]], "skfolio": [[0, 0, 0, "-", "measures"], [0, 0, 0, "-", "population"], [0, 0, 0, "-", "portfolio"]], "skfolio.cluster": [[47, 1, 1, "", "HierarchicalClustering"], [48, 1, 1, "", "LinkageMethod"]], "skfolio.cluster.HierarchicalClustering": [[47, 2, 1, "", "fit"], [47, 2, 1, "", "fit_predict"], [47, 2, 1, "", "get_metadata_routing"], [47, 2, 1, "", "get_params"], [47, 2, 1, "", "plot_dendrogram"], [47, 2, 1, "", "set_params"]], "skfolio.cluster.LinkageMethod": [[48, 2, 1, "", "capitalize"], [48, 2, 1, "", "casefold"], [48, 2, 1, "", "center"], [48, 2, 1, "", "count"], [48, 2, 1, "", "encode"], [48, 2, 1, "", "endswith"], [48, 2, 1, "", "expandtabs"], [48, 2, 1, "", "find"], [48, 2, 1, "", "format"], [48, 2, 1, "", "format_map"], [48, 2, 1, "", "has"], [48, 2, 1, "", "index"], [48, 2, 1, "", "isalnum"], [48, 2, 1, "", "isalpha"], [48, 2, 1, "", "isascii"], [48, 2, 1, "", "isdecimal"], [48, 2, 1, "", "isdigit"], [48, 2, 1, "", "isidentifier"], [48, 2, 1, "", "islower"], [48, 2, 1, "", "isnumeric"], [48, 2, 1, "", "isprintable"], [48, 2, 1, "", "isspace"], [48, 2, 1, "", "istitle"], [48, 2, 1, "", "isupper"], [48, 2, 1, "", "join"], [48, 2, 1, "", "ljust"], [48, 2, 1, "", "lower"], [48, 2, 1, "", "lstrip"], [48, 2, 1, "", "maketrans"], [48, 2, 1, "", "partition"], [48, 2, 1, "", "removeprefix"], [48, 2, 1, "", "removesuffix"], [48, 2, 1, "", "replace"], [48, 2, 1, "", "rfind"], [48, 2, 1, "", "rindex"], [48, 2, 1, "", "rjust"], [48, 2, 1, "", "rpartition"], [48, 2, 1, "", "rsplit"], [48, 2, 1, "", "rstrip"], [48, 2, 1, "", "split"], [48, 2, 1, "", "splitlines"], [48, 2, 1, "", "startswith"], [48, 2, 1, "", "strip"], [48, 2, 1, "", "swapcase"], [48, 2, 1, "", "title"], [48, 2, 1, "", "translate"], [48, 2, 1, "", "upper"], [48, 2, 1, "", "zfill"]], "skfolio.datasets": [[49, 3, 1, "", "load_factors_dataset"], [50, 3, 1, "", "load_ftse100_dataset"], [51, 3, 1, "", "load_nasdaq_dataset"], [52, 3, 1, "", "load_sp500_dataset"], [53, 3, 1, "", "load_sp500_index"]], "skfolio.distance": [[54, 1, 1, "", "BaseDistance"], [55, 1, 1, "", "CovarianceDistance"], [56, 1, 1, "", "DistanceCorrelation"], [57, 1, 1, "", "KendallDistance"], [58, 1, 1, "", "MutualInformation"], [59, 1, 1, "", "PearsonDistance"], [60, 1, 1, "", "SpearmanDistance"]], "skfolio.distance.BaseDistance": [[54, 2, 1, "", "fit"], [54, 2, 1, "", "get_metadata_routing"], [54, 2, 1, "", "get_params"], [54, 2, 1, "", "set_params"]], "skfolio.distance.CovarianceDistance": [[55, 2, 1, "", "fit"], [55, 2, 1, "", "get_metadata_routing"], [55, 2, 1, "", "get_params"], [55, 2, 1, "", "set_params"]], "skfolio.distance.DistanceCorrelation": [[56, 2, 1, "", "fit"], [56, 2, 1, "", "get_metadata_routing"], [56, 2, 1, "", "get_params"], [56, 2, 1, "", "set_params"]], "skfolio.distance.KendallDistance": [[57, 2, 1, "", "fit"], [57, 2, 1, "", "get_metadata_routing"], [57, 2, 1, "", "get_params"], [57, 2, 1, "", "set_params"]], "skfolio.distance.MutualInformation": [[58, 2, 1, "", "fit"], [58, 2, 1, "", "get_metadata_routing"], [58, 2, 1, "", "get_params"], [58, 2, 1, "", "set_params"]], "skfolio.distance.PearsonDistance": [[59, 2, 1, "", "fit"], [59, 2, 1, "", "get_metadata_routing"], [59, 2, 1, "", "get_params"], [59, 2, 1, "", "set_params"]], "skfolio.distance.SpearmanDistance": [[60, 2, 1, "", "fit"], [60, 2, 1, "", "get_metadata_routing"], [60, 2, 1, "", "get_params"], [60, 2, 1, "", "set_params"]], "skfolio.measures": [[61, 1, 1, "", "BaseMeasure"], [62, 1, 1, "", "ExtraRiskMeasure"], [63, 1, 1, "", "PerfMeasure"], [64, 1, 1, "", "RatioMeasure"], [65, 1, 1, "", "RiskMeasure"], [66, 3, 1, "", "average_drawdown"], [67, 3, 1, "", "cdar"], [68, 3, 1, "", "cvar"], [69, 3, 1, "", "drawdown_at_risk"], [70, 3, 1, "", "edar"], [71, 3, 1, "", "effective_number_assets"], [72, 3, 1, "", "entropic_risk_measure"], [73, 3, 1, "", "evar"], [74, 3, 1, "", "first_lower_partial_moment"], [75, 3, 1, "", "fourth_central_moment"], [76, 3, 1, "", "fourth_lower_partial_moment"], [77, 3, 1, "", "get_cumulative_returns"], [78, 3, 1, "", "get_drawdowns"], [79, 3, 1, "", "gini_mean_difference"], [80, 3, 1, "", "max_drawdown"], [81, 3, 1, "", "mean"], [82, 3, 1, "", "mean_absolute_deviation"], [83, 3, 1, "", "owa_gmd_weights"], [84, 3, 1, "", "semi_deviation"], [85, 3, 1, "", "semi_variance"], [86, 3, 1, "", "standard_deviation"], [87, 3, 1, "", "third_central_moment"], [88, 3, 1, "", "ulcer_index"], [89, 3, 1, "", "value_at_risk"], [90, 3, 1, "", "variance"], [91, 3, 1, "", "worst_realization"]], "skfolio.measures.BaseMeasure": [[61, 2, 1, "", "capitalize"], [61, 2, 1, "", "casefold"], [61, 2, 1, "", "center"], [61, 2, 1, "", "count"], [61, 2, 1, "", "encode"], [61, 2, 1, "", "endswith"], [61, 2, 1, "", "expandtabs"], [61, 2, 1, "", "find"], [61, 2, 1, "", "format"], [61, 2, 1, "", "format_map"], [61, 2, 1, "", "has"], [61, 2, 1, "", "index"], [61, 2, 1, "", "isalnum"], [61, 2, 1, "", "isalpha"], [61, 2, 1, "", "isascii"], [61, 2, 1, "", "isdecimal"], [61, 2, 1, "", "isdigit"], [61, 2, 1, "", "isidentifier"], [61, 2, 1, "", "islower"], [61, 2, 1, "", "isnumeric"], [61, 2, 1, "", "isprintable"], [61, 2, 1, "", "isspace"], [61, 2, 1, "", "istitle"], [61, 2, 1, "", "isupper"], [61, 2, 1, "", "join"], [61, 2, 1, "", "ljust"], [61, 2, 1, "", "lower"], [61, 2, 1, "", "lstrip"], [61, 2, 1, "", "maketrans"], [61, 2, 1, "", "partition"], [61, 2, 1, "", "removeprefix"], [61, 2, 1, "", "removesuffix"], [61, 2, 1, "", "replace"], [61, 2, 1, "", "rfind"], [61, 2, 1, "", "rindex"], [61, 2, 1, "", "rjust"], [61, 2, 1, "", "rpartition"], [61, 2, 1, "", "rsplit"], [61, 2, 1, "", "rstrip"], [61, 2, 1, "", "split"], [61, 2, 1, "", "splitlines"], [61, 2, 1, "", "startswith"], [61, 2, 1, "", "strip"], [61, 2, 1, "", "swapcase"], [61, 2, 1, "", "title"], [61, 2, 1, "", "translate"], [61, 2, 1, "", "upper"], [61, 2, 1, "", "zfill"]], "skfolio.measures.ExtraRiskMeasure": [[62, 2, 1, "", "capitalize"], [62, 2, 1, "", "casefold"], [62, 2, 1, "", "center"], [62, 2, 1, "", "count"], [62, 2, 1, "", "encode"], [62, 2, 1, "", "endswith"], [62, 2, 1, "", "expandtabs"], [62, 2, 1, "", "find"], [62, 2, 1, "", "format"], [62, 2, 1, "", "format_map"], [62, 2, 1, "", "has"], [62, 2, 1, "", "index"], [62, 2, 1, "", "isalnum"], [62, 2, 1, "", "isalpha"], [62, 2, 1, "", "isascii"], [62, 2, 1, "", "isdecimal"], [62, 2, 1, "", "isdigit"], [62, 2, 1, "", "isidentifier"], [62, 2, 1, "", "islower"], [62, 2, 1, "", "isnumeric"], [62, 2, 1, "", "isprintable"], [62, 2, 1, "", "isspace"], [62, 2, 1, "", "istitle"], [62, 2, 1, "", "isupper"], [62, 2, 1, "", "join"], [62, 2, 1, "", "ljust"], [62, 2, 1, "", "lower"], [62, 2, 1, "", "lstrip"], [62, 2, 1, "", "maketrans"], [62, 2, 1, "", "partition"], [62, 2, 1, "", "removeprefix"], [62, 2, 1, "", "removesuffix"], [62, 2, 1, "", "replace"], [62, 2, 1, "", "rfind"], [62, 2, 1, "", "rindex"], [62, 2, 1, "", "rjust"], [62, 2, 1, "", "rpartition"], [62, 2, 1, "", "rsplit"], [62, 2, 1, "", "rstrip"], [62, 2, 1, "", "split"], [62, 2, 1, "", "splitlines"], [62, 2, 1, "", "startswith"], [62, 2, 1, "", "strip"], [62, 2, 1, "", "swapcase"], [62, 2, 1, "", "title"], [62, 2, 1, "", "translate"], [62, 2, 1, "", "upper"], [62, 2, 1, "", "zfill"]], "skfolio.measures.PerfMeasure": [[63, 2, 1, "", "capitalize"], [63, 2, 1, "", "casefold"], [63, 2, 1, "", "center"], [63, 2, 1, "", "count"], [63, 2, 1, "", "encode"], [63, 2, 1, "", "endswith"], [63, 2, 1, "", "expandtabs"], [63, 2, 1, "", "find"], [63, 2, 1, "", "format"], [63, 2, 1, "", "format_map"], [63, 2, 1, "", "has"], [63, 2, 1, "", "index"], [63, 2, 1, "", "isalnum"], [63, 2, 1, "", "isalpha"], [63, 2, 1, "", "isascii"], [63, 2, 1, "", "isdecimal"], [63, 2, 1, "", "isdigit"], [63, 2, 1, "", "isidentifier"], [63, 2, 1, "", "islower"], [63, 2, 1, "", "isnumeric"], [63, 2, 1, "", "isprintable"], [63, 2, 1, "", "isspace"], [63, 2, 1, "", "istitle"], [63, 2, 1, "", "isupper"], [63, 2, 1, "", "join"], [63, 2, 1, "", "ljust"], [63, 2, 1, "", "lower"], [63, 2, 1, "", "lstrip"], [63, 2, 1, "", "maketrans"], [63, 2, 1, "", "partition"], [63, 2, 1, "", "removeprefix"], [63, 2, 1, "", "removesuffix"], [63, 2, 1, "", "replace"], [63, 2, 1, "", "rfind"], [63, 2, 1, "", "rindex"], [63, 2, 1, "", "rjust"], [63, 2, 1, "", "rpartition"], [63, 2, 1, "", "rsplit"], [63, 2, 1, "", "rstrip"], [63, 2, 1, "", "split"], [63, 2, 1, "", "splitlines"], [63, 2, 1, "", "startswith"], [63, 2, 1, "", "strip"], [63, 2, 1, "", "swapcase"], [63, 2, 1, "", "title"], [63, 2, 1, "", "translate"], [63, 2, 1, "", "upper"], [63, 2, 1, "", "zfill"]], "skfolio.measures.RatioMeasure": [[64, 2, 1, "", "capitalize"], [64, 2, 1, "", "casefold"], [64, 2, 1, "", "center"], [64, 2, 1, "", "count"], [64, 2, 1, "", "encode"], [64, 2, 1, "", "endswith"], [64, 2, 1, "", "expandtabs"], [64, 2, 1, "", "find"], [64, 2, 1, "", "format"], [64, 2, 1, "", "format_map"], [64, 2, 1, "", "has"], [64, 2, 1, "", "index"], [64, 2, 1, "", "isalnum"], [64, 2, 1, "", "isalpha"], [64, 2, 1, "", "isascii"], [64, 2, 1, "", "isdecimal"], [64, 2, 1, "", "isdigit"], [64, 2, 1, "", "isidentifier"], [64, 2, 1, "", "islower"], [64, 2, 1, "", "isnumeric"], [64, 2, 1, "", "isprintable"], [64, 2, 1, "", "isspace"], [64, 2, 1, "", "istitle"], [64, 2, 1, "", "isupper"], [64, 2, 1, "", "join"], [64, 2, 1, "", "ljust"], [64, 2, 1, "", "lower"], [64, 2, 1, "", "lstrip"], [64, 2, 1, "", "maketrans"], [64, 2, 1, "", "partition"], [64, 2, 1, "", "removeprefix"], [64, 2, 1, "", "removesuffix"], [64, 2, 1, "", "replace"], [64, 2, 1, "", "rfind"], [64, 2, 1, "", "rindex"], [64, 2, 1, "", "rjust"], [64, 2, 1, "", "rpartition"], [64, 2, 1, "", "rsplit"], [64, 2, 1, "", "rstrip"], [64, 2, 1, "", "split"], [64, 2, 1, "", "splitlines"], [64, 2, 1, "", "startswith"], [64, 2, 1, "", "strip"], [64, 2, 1, "", "swapcase"], [64, 2, 1, "", "title"], [64, 2, 1, "", "translate"], [64, 2, 1, "", "upper"], [64, 2, 1, "", "zfill"]], "skfolio.measures.RiskMeasure": [[65, 2, 1, "", "capitalize"], [65, 2, 1, "", "casefold"], [65, 2, 1, "", "center"], [65, 2, 1, "", "count"], [65, 2, 1, "", "encode"], [65, 2, 1, "", "endswith"], [65, 2, 1, "", "expandtabs"], [65, 2, 1, "", "find"], [65, 2, 1, "", "format"], [65, 2, 1, "", "format_map"], [65, 2, 1, "", "has"], [65, 2, 1, "", "index"], [65, 2, 1, "", "isalnum"], [65, 2, 1, "", "isalpha"], [65, 2, 1, "", "isascii"], [65, 2, 1, "", "isdecimal"], [65, 2, 1, "", "isdigit"], [65, 2, 1, "", "isidentifier"], [65, 2, 1, "", "islower"], [65, 2, 1, "", "isnumeric"], [65, 2, 1, "", "isprintable"], [65, 2, 1, "", "isspace"], [65, 2, 1, "", "istitle"], [65, 2, 1, "", "isupper"], [65, 2, 1, "", "join"], [65, 2, 1, "", "ljust"], [65, 2, 1, "", "lower"], [65, 2, 1, "", "lstrip"], [65, 2, 1, "", "maketrans"], [65, 2, 1, "", "partition"], [65, 2, 1, "", "removeprefix"], [65, 2, 1, "", "removesuffix"], [65, 2, 1, "", "replace"], [65, 2, 1, "", "rfind"], [65, 2, 1, "", "rindex"], [65, 2, 1, "", "rjust"], [65, 2, 1, "", "rpartition"], [65, 2, 1, "", "rsplit"], [65, 2, 1, "", "rstrip"], [65, 2, 1, "", "split"], [65, 2, 1, "", "splitlines"], [65, 2, 1, "", "startswith"], [65, 2, 1, "", "strip"], [65, 2, 1, "", "swapcase"], [65, 2, 1, "", "title"], [65, 2, 1, "", "translate"], [65, 2, 1, "", "upper"], [65, 2, 1, "", "zfill"]], "skfolio.metrics": [[92, 3, 1, "", "make_scorer"]], "skfolio.model_selection": [[93, 1, 1, "", "BaseCombinatorialCV"], [94, 1, 1, "", "CombinatorialPurgedCV"], [95, 1, 1, "", "WalkForward"], [96, 3, 1, "", "cross_val_predict"], [97, 3, 1, "", "optimal_folds_number"]], "skfolio.model_selection.BaseCombinatorialCV": [[93, 2, 1, "", "get_path_ids"]], "skfolio.model_selection.CombinatorialPurgedCV": [[94, 4, 1, "", "binary_train_test_sets"], [94, 2, 1, "", "get_path_ids"], [94, 4, 1, "", "n_splits"], [94, 4, 1, "", "n_test_paths"], [94, 2, 1, "", "plot_train_test_folds"], [94, 2, 1, "", "plot_train_test_index"], [94, 4, 1, "", "recombined_paths"], [94, 2, 1, "", "split"], [94, 4, 1, "", "test_set_index"]], "skfolio.model_selection.WalkForward": [[95, 2, 1, "", "get_metadata_routing"], [95, 2, 1, "", "get_n_splits"], [95, 2, 1, "", "split"]], "skfolio.moments": [[98, 1, 1, "", "BaseCovariance"], [99, 1, 1, "", "BaseMu"], [100, 1, 1, "", "DenoiseCovariance"], [101, 1, 1, "", "DetoneCovariance"], [102, 1, 1, "", "EWCovariance"], [103, 1, 1, "", "EWMu"], [104, 1, 1, "", "EmpiricalCovariance"], [105, 1, 1, "", "EmpiricalMu"], [106, 1, 1, "", "EquilibriumMu"], [107, 1, 1, "", "GerberCovariance"], [108, 1, 1, "", "GraphicalLassoCV"], [109, 1, 1, "", "LedoitWolf"], [110, 1, 1, "", "OAS"], [111, 1, 1, "", "ShrunkCovariance"], [112, 1, 1, "", "ShrunkMu"], [113, 1, 1, "", "ShrunkMuMethods"]], "skfolio.moments.BaseCovariance": [[98, 2, 1, "", "get_metadata_routing"], [98, 2, 1, "", "get_params"], [98, 2, 1, "", "set_params"]], "skfolio.moments.BaseMu": [[99, 2, 1, "", "get_metadata_routing"], [99, 2, 1, "", "get_params"], [99, 2, 1, "", "set_params"]], "skfolio.moments.DenoiseCovariance": [[100, 2, 1, "", "fit"], [100, 2, 1, "", "get_metadata_routing"], [100, 2, 1, "", "get_params"], [100, 2, 1, "", "set_params"]], "skfolio.moments.DetoneCovariance": [[101, 2, 1, "", "fit"], [101, 2, 1, "", "get_metadata_routing"], [101, 2, 1, "", "get_params"], [101, 2, 1, "", "set_params"]], "skfolio.moments.EWCovariance": [[102, 2, 1, "", "fit"], [102, 2, 1, "", "get_metadata_routing"], [102, 2, 1, "", "get_params"], [102, 2, 1, "", "set_params"]], "skfolio.moments.EWMu": [[103, 2, 1, "", "fit"], [103, 2, 1, "", "get_metadata_routing"], [103, 2, 1, "", "get_params"], [103, 2, 1, "", "set_params"]], "skfolio.moments.EmpiricalCovariance": [[104, 2, 1, "", "fit"], [104, 2, 1, "", "get_metadata_routing"], [104, 2, 1, "", "get_params"], [104, 2, 1, "", "set_params"]], "skfolio.moments.EmpiricalMu": [[105, 2, 1, "", "fit"], [105, 2, 1, "", "get_metadata_routing"], [105, 2, 1, "", "get_params"], [105, 2, 1, "", "set_params"]], "skfolio.moments.EquilibriumMu": [[106, 2, 1, "", "fit"], [106, 2, 1, "", "get_metadata_routing"], [106, 2, 1, "", "get_params"], [106, 2, 1, "", "set_params"]], "skfolio.moments.GerberCovariance": [[107, 2, 1, "", "fit"], [107, 2, 1, "", "get_metadata_routing"], [107, 2, 1, "", "get_params"], [107, 2, 1, "", "set_params"]], "skfolio.moments.GraphicalLassoCV": [[108, 2, 1, "", "error_norm"], [108, 2, 1, "", "fit"], [108, 2, 1, "", "get_metadata_routing"], [108, 2, 1, "", "get_params"], [108, 2, 1, "", "get_precision"], [108, 2, 1, "", "mahalanobis"], [108, 2, 1, "", "score"], [108, 2, 1, "", "set_params"], [108, 2, 1, "", "set_score_request"]], "skfolio.moments.LedoitWolf": [[109, 2, 1, "", "error_norm"], [109, 2, 1, "", "fit"], [109, 2, 1, "", "get_metadata_routing"], [109, 2, 1, "", "get_params"], [109, 2, 1, "", "get_precision"], [109, 2, 1, "", "mahalanobis"], [109, 2, 1, "", "score"], [109, 2, 1, "", "set_params"], [109, 2, 1, "", "set_score_request"]], "skfolio.moments.OAS": [[110, 2, 1, "", "error_norm"], [110, 2, 1, "", "fit"], [110, 2, 1, "", "get_metadata_routing"], [110, 2, 1, "", "get_params"], [110, 2, 1, "", "get_precision"], [110, 2, 1, "", "mahalanobis"], [110, 2, 1, "", "score"], [110, 2, 1, "", "set_params"], [110, 2, 1, "", "set_score_request"]], "skfolio.moments.ShrunkCovariance": [[111, 2, 1, "", "error_norm"], [111, 2, 1, "", "fit"], [111, 2, 1, "", "get_metadata_routing"], [111, 2, 1, "", "get_params"], [111, 2, 1, "", "get_precision"], [111, 2, 1, "", "mahalanobis"], [111, 2, 1, "", "score"], [111, 2, 1, "", "set_params"], [111, 2, 1, "", "set_score_request"]], "skfolio.moments.ShrunkMu": [[112, 2, 1, "", "fit"], [112, 2, 1, "", "get_metadata_routing"], [112, 2, 1, "", "get_params"], [112, 2, 1, "", "set_params"]], "skfolio.moments.ShrunkMuMethods": [[113, 2, 1, "", "capitalize"], [113, 2, 1, "", "casefold"], [113, 2, 1, "", "center"], [113, 2, 1, "", "count"], [113, 2, 1, "", "encode"], [113, 2, 1, "", "endswith"], [113, 2, 1, "", "expandtabs"], [113, 2, 1, "", "find"], [113, 2, 1, "", "format"], [113, 2, 1, "", "format_map"], [113, 2, 1, "", "has"], [113, 2, 1, "", "index"], [113, 2, 1, "", "isalnum"], [113, 2, 1, "", "isalpha"], [113, 2, 1, "", "isascii"], [113, 2, 1, "", "isdecimal"], [113, 2, 1, "", "isdigit"], [113, 2, 1, "", "isidentifier"], [113, 2, 1, "", "islower"], [113, 2, 1, "", "isnumeric"], [113, 2, 1, "", "isprintable"], [113, 2, 1, "", "isspace"], [113, 2, 1, "", "istitle"], [113, 2, 1, "", "isupper"], [113, 2, 1, "", "join"], [113, 2, 1, "", "ljust"], [113, 2, 1, "", "lower"], [113, 2, 1, "", "lstrip"], [113, 2, 1, "", "maketrans"], [113, 2, 1, "", "partition"], [113, 2, 1, "", "removeprefix"], [113, 2, 1, "", "removesuffix"], [113, 2, 1, "", "replace"], [113, 2, 1, "", "rfind"], [113, 2, 1, "", "rindex"], [113, 2, 1, "", "rjust"], [113, 2, 1, "", "rpartition"], [113, 2, 1, "", "rsplit"], [113, 2, 1, "", "rstrip"], [113, 2, 1, "", "split"], [113, 2, 1, "", "splitlines"], [113, 2, 1, "", "startswith"], [113, 2, 1, "", "strip"], [113, 2, 1, "", "swapcase"], [113, 2, 1, "", "title"], [113, 2, 1, "", "translate"], [113, 2, 1, "", "upper"], [113, 2, 1, "", "zfill"]], "skfolio.optimization": [[114, 1, 1, "", "BaseComposition"], [115, 1, 1, "", "BaseHierarchicalOptimization"], [116, 1, 1, "", "ConvexOptimization"], [117, 1, 1, "", "DistributionallyRobustCVaR"], [118, 1, 1, "", "EqualWeighted"], [119, 1, 1, "", "HierarchicalEqualRiskContribution"], [120, 1, 1, "", "HierarchicalRiskParity"], [121, 1, 1, "", "InverseVolatility"], [122, 1, 1, "", "MaximumDiversification"], [123, 1, 1, "", "MeanRisk"], [124, 1, 1, "", "NestedClustersOptimization"], [125, 1, 1, "", "ObjectiveFunction"], [126, 1, 1, "", "Random"], [127, 1, 1, "", "RiskBudgeting"], [128, 1, 1, "", "StackingOptimization"], [0, 0, 0, "-", "cluster"], [0, 0, 0, "-", "convex"], [0, 0, 0, "-", "ensemble"], [0, 0, 0, "-", "naive"]], "skfolio.optimization.BaseComposition": [[114, 2, 1, "", "get_metadata_routing"], [114, 2, 1, "", "get_params"], [114, 2, 1, "", "set_params"]], "skfolio.optimization.BaseHierarchicalOptimization": [[115, 2, 1, "", "fit_predict"], [115, 2, 1, "", "get_metadata_routing"], [115, 2, 1, "", "get_params"], [115, 2, 1, "", "predict"], [115, 2, 1, "", "score"], [115, 2, 1, "", "set_params"]], "skfolio.optimization.ConvexOptimization": [[116, 2, 1, "", "fit_predict"], [116, 2, 1, "", "get_metadata_routing"], [116, 2, 1, "", "get_params"], [116, 2, 1, "", "predict"], [116, 2, 1, "", "score"], [116, 2, 1, "", "set_params"]], "skfolio.optimization.DistributionallyRobustCVaR": [[117, 2, 1, "", "fit"], [117, 2, 1, "", "fit_predict"], [117, 2, 1, "", "get_metadata_routing"], [117, 2, 1, "", "get_params"], [117, 2, 1, "", "predict"], [117, 2, 1, "", "score"], [117, 2, 1, "", "set_params"]], "skfolio.optimization.EqualWeighted": [[118, 2, 1, "", "fit"], [118, 2, 1, "", "fit_predict"], [118, 2, 1, "", "get_metadata_routing"], [118, 2, 1, "", "get_params"], [118, 2, 1, "", "predict"], [118, 2, 1, "", "score"], [118, 2, 1, "", "set_params"]], "skfolio.optimization.HierarchicalEqualRiskContribution": [[119, 2, 1, "", "fit"], [119, 2, 1, "", "fit_predict"], [119, 2, 1, "", "get_metadata_routing"], [119, 2, 1, "", "get_params"], [119, 2, 1, "", "predict"], [119, 2, 1, "", "score"], [119, 2, 1, "", "set_params"]], "skfolio.optimization.HierarchicalRiskParity": [[120, 2, 1, "", "fit"], [120, 2, 1, "", "fit_predict"], [120, 2, 1, "", "get_metadata_routing"], [120, 2, 1, "", "get_params"], [120, 2, 1, "", "predict"], [120, 2, 1, "", "score"], [120, 2, 1, "", "set_params"]], "skfolio.optimization.InverseVolatility": [[121, 2, 1, "", "fit"], [121, 2, 1, "", "fit_predict"], [121, 2, 1, "", "get_metadata_routing"], [121, 2, 1, "", "get_params"], [121, 2, 1, "", "predict"], [121, 2, 1, "", "score"], [121, 2, 1, "", "set_params"]], "skfolio.optimization.MaximumDiversification": [[122, 2, 1, "", "fit"], [122, 2, 1, "", "fit_predict"], [122, 2, 1, "", "get_metadata_routing"], [122, 2, 1, "", "get_params"], [122, 2, 1, "", "predict"], [122, 2, 1, "", "score"], [122, 2, 1, "", "set_params"]], "skfolio.optimization.MeanRisk": [[123, 2, 1, "", "fit"], [123, 2, 1, "", "fit_predict"], [123, 2, 1, "", "get_metadata_routing"], [123, 2, 1, "", "get_params"], [123, 2, 1, "", "predict"], [123, 2, 1, "", "score"], [123, 2, 1, "", "set_params"]], "skfolio.optimization.NestedClustersOptimization": [[124, 2, 1, "", "fit"], [124, 2, 1, "", "fit_predict"], [124, 2, 1, "", "get_metadata_routing"], [124, 2, 1, "", "get_params"], [124, 2, 1, "", "predict"], [124, 2, 1, "", "score"], [124, 2, 1, "", "set_params"]], "skfolio.optimization.ObjectiveFunction": [[125, 2, 1, "", "capitalize"], [125, 2, 1, "", "casefold"], [125, 2, 1, "", "center"], [125, 2, 1, "", "count"], [125, 2, 1, "", "encode"], [125, 2, 1, "", "endswith"], [125, 2, 1, "", "expandtabs"], [125, 2, 1, "", "find"], [125, 2, 1, "", "format"], [125, 2, 1, "", "format_map"], [125, 2, 1, "", "has"], [125, 2, 1, "", "index"], [125, 2, 1, "", "isalnum"], [125, 2, 1, "", "isalpha"], [125, 2, 1, "", "isascii"], [125, 2, 1, "", "isdecimal"], [125, 2, 1, "", "isdigit"], [125, 2, 1, "", "isidentifier"], [125, 2, 1, "", "islower"], [125, 2, 1, "", "isnumeric"], [125, 2, 1, "", "isprintable"], [125, 2, 1, "", "isspace"], [125, 2, 1, "", "istitle"], [125, 2, 1, "", "isupper"], [125, 2, 1, "", "join"], [125, 2, 1, "", "ljust"], [125, 2, 1, "", "lower"], [125, 2, 1, "", "lstrip"], [125, 2, 1, "", "maketrans"], [125, 2, 1, "", "partition"], [125, 2, 1, "", "removeprefix"], [125, 2, 1, "", "removesuffix"], [125, 2, 1, "", "replace"], [125, 2, 1, "", "rfind"], [125, 2, 1, "", "rindex"], [125, 2, 1, "", "rjust"], [125, 2, 1, "", "rpartition"], [125, 2, 1, "", "rsplit"], [125, 2, 1, "", "rstrip"], [125, 2, 1, "", "split"], [125, 2, 1, "", "splitlines"], [125, 2, 1, "", "startswith"], [125, 2, 1, "", "strip"], [125, 2, 1, "", "swapcase"], [125, 2, 1, "", "title"], [125, 2, 1, "", "translate"], [125, 2, 1, "", "upper"], [125, 2, 1, "", "zfill"]], "skfolio.optimization.Random": [[126, 2, 1, "", "fit"], [126, 2, 1, "", "fit_predict"], [126, 2, 1, "", "get_metadata_routing"], [126, 2, 1, "", "get_params"], [126, 2, 1, "", "predict"], [126, 2, 1, "", "score"], [126, 2, 1, "", "set_params"]], "skfolio.optimization.RiskBudgeting": [[127, 2, 1, "", "fit"], [127, 2, 1, "", "fit_predict"], [127, 2, 1, "", "get_metadata_routing"], [127, 2, 1, "", "get_params"], [127, 2, 1, "", "predict"], [127, 2, 1, "", "score"], [127, 2, 1, "", "set_params"]], "skfolio.optimization.StackingOptimization": [[128, 2, 1, "", "fit"], [128, 2, 1, "", "fit_predict"], [128, 2, 1, "", "get_metadata_routing"], [128, 2, 1, "", "get_params"], [128, 4, 1, "", "named_estimators"], [128, 2, 1, "", "predict"], [128, 2, 1, "", "score"], [128, 2, 1, "", "set_params"]], "skfolio.population": [[129, 1, 1, "", "Population"]], "skfolio.population.Population": [[129, 2, 1, "", "append"], [129, 2, 1, "", "clear"], [129, 2, 1, "", "composition"], [129, 2, 1, "", "copy"], [129, 2, 1, "", "count"], [129, 2, 1, "", "extend"], [129, 2, 1, "", "filter"], [129, 2, 1, "", "index"], [129, 2, 1, "", "insert"], [129, 2, 1, "", "max_measure"], [129, 2, 1, "", "measures"], [129, 2, 1, "", "measures_mean"], [129, 2, 1, "", "measures_std"], [129, 2, 1, "", "min_measure"], [129, 2, 1, "", "non_denominated_sort"], [129, 2, 1, "", "plot_composition"], [129, 2, 1, "", "plot_cumulative_returns"], [129, 2, 1, "", "plot_distribution"], [129, 2, 1, "", "plot_measures"], [129, 2, 1, "", "pop"], [129, 2, 1, "", "quantile"], [129, 2, 1, "", "remove"], [129, 2, 1, "", "reverse"], [129, 2, 1, "", "set_portfolio_params"], [129, 2, 1, "", "sort"], [129, 2, 1, "", "sort_measure"], [129, 2, 1, "", "summary"]], "skfolio.portfolio": [[130, 1, 1, "", "BasePortfolio"], [131, 1, 1, "", "MultiPeriodPortfolio"], [132, 1, 1, "", "Portfolio"]], "skfolio.portfolio.BasePortfolio": [[130, 4, 1, "", "annualized_factor"], [130, 2, 1, "", "clear"], [130, 4, 1, "", "composition"], [130, 2, 1, "", "copy"], [130, 5, 1, "", "cumulative_returns"], [130, 4, 1, "", "cumulative_returns_df"], [130, 2, 1, "", "dominates"], [130, 5, 1, "", "drawdowns"], [130, 5, 1, "", "fitness"], [130, 4, 1, "", "fitness_measures"], [130, 2, 1, "", "get_measure"], [130, 4, 1, "", "measures_df"], [130, 4, 1, "", "n_observations"], [130, 2, 1, "", "plot_composition"], [130, 2, 1, "", "plot_cumulative_returns"], [130, 2, 1, "", "plot_returns"], [130, 2, 1, "", "plot_rolling_measure"], [130, 4, 1, "", "returns_df"], [130, 2, 1, "", "rolling_measure"], [130, 2, 1, "", "summary"]], "skfolio.portfolio.MultiPeriodPortfolio": [[131, 4, 1, "", "annualized_factor"], [131, 2, 1, "", "append"], [131, 4, 1, "", "assets"], [131, 2, 1, "", "clear"], [131, 4, 1, "", "composition"], [131, 2, 1, "", "copy"], [131, 5, 1, "", "cumulative_returns"], [131, 4, 1, "", "cumulative_returns_df"], [131, 2, 1, "", "dominates"], [131, 5, 1, "", "drawdowns"], [131, 5, 1, "", "fitness"], [131, 4, 1, "", "fitness_measures"], [131, 2, 1, "", "get_measure"], [131, 4, 1, "", "measures_df"], [131, 4, 1, "", "n_observations"], [131, 2, 1, "", "plot_composition"], [131, 2, 1, "", "plot_cumulative_returns"], [131, 2, 1, "", "plot_returns"], [131, 2, 1, "", "plot_rolling_measure"], [131, 4, 1, "", "portfolios"], [131, 4, 1, "", "returns_df"], [131, 2, 1, "", "rolling_measure"], [131, 2, 1, "", "summary"]], "skfolio.portfolio.Portfolio": [[132, 4, 1, "", "annualized_factor"], [132, 2, 1, "", "clear"], [132, 4, 1, "", "composition"], [132, 2, 1, "", "contribution"], [132, 2, 1, "", "copy"], [132, 5, 1, "", "cumulative_returns"], [132, 4, 1, "", "cumulative_returns_df"], [132, 4, 1, "", "diversification"], [132, 2, 1, "", "dominates"], [132, 5, 1, "", "drawdowns"], [132, 4, 1, "", "effective_number_assets"], [132, 2, 1, "", "expected_returns_from_assets"], [132, 5, 1, "", "fitness"], [132, 4, 1, "", "fitness_measures"], [132, 2, 1, "", "get_measure"], [132, 2, 1, "", "get_weight"], [132, 4, 1, "", "measures_df"], [132, 4, 1, "", "n_observations"], [132, 5, 1, "", "nonzero_assets"], [132, 5, 1, "", "nonzero_assets_index"], [132, 2, 1, "", "plot_composition"], [132, 2, 1, "", "plot_contribution"], [132, 2, 1, "", "plot_cumulative_returns"], [132, 2, 1, "", "plot_returns"], [132, 2, 1, "", "plot_rolling_measure"], [132, 4, 1, "", "returns_df"], [132, 2, 1, "", "rolling_measure"], [132, 4, 1, "", "sric"], [132, 2, 1, "", "summary"], [132, 2, 1, "", "variance_from_assets"]], "skfolio.pre_selection": [[133, 1, 1, "", "DropCorrelated"], [134, 1, 1, "", "SelectKExtremes"], [135, 1, 1, "", "SelectNonDominated"]], "skfolio.pre_selection.DropCorrelated": [[133, 2, 1, "", "fit"], [133, 2, 1, "", "fit_transform"], [133, 2, 1, "", "get_feature_names_out"], [133, 2, 1, "", "get_metadata_routing"], [133, 2, 1, "", "get_params"], [133, 2, 1, "", "get_support"], [133, 2, 1, "", "inverse_transform"], [133, 2, 1, "", "set_output"], [133, 2, 1, "", "set_params"], [133, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectKExtremes": [[134, 2, 1, "", "fit"], [134, 2, 1, "", "fit_transform"], [134, 2, 1, "", "get_feature_names_out"], [134, 2, 1, "", "get_metadata_routing"], [134, 2, 1, "", "get_params"], [134, 2, 1, "", "get_support"], [134, 2, 1, "", "inverse_transform"], [134, 2, 1, "", "set_output"], [134, 2, 1, "", "set_params"], [134, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectNonDominated": [[135, 2, 1, "", "fit"], [135, 2, 1, "", "fit_transform"], [135, 2, 1, "", "get_feature_names_out"], [135, 2, 1, "", "get_metadata_routing"], [135, 2, 1, "", "get_params"], [135, 2, 1, "", "get_support"], [135, 2, 1, "", "inverse_transform"], [135, 2, 1, "", "set_output"], [135, 2, 1, "", "set_params"], [135, 2, 1, "", "transform"]], "skfolio.preprocessing": [[136, 3, 1, "", "prices_to_returns"]], "skfolio.prior": [[137, 1, 1, "", "BaseLoadingMatrix"], [138, 1, 1, "", "BasePrior"], [139, 1, 1, "", "BlackLitterman"], [140, 1, 1, "", "EmpiricalPrior"], [141, 1, 1, "", "FactorModel"], [142, 1, 1, "", "LoadingMatrixRegression"], [143, 1, 1, "", "PriorModel"]], "skfolio.prior.BaseLoadingMatrix": [[137, 2, 1, "", "get_metadata_routing"], [137, 2, 1, "", "get_params"], [137, 2, 1, "", "set_params"]], "skfolio.prior.BasePrior": [[138, 2, 1, "", "get_metadata_routing"], [138, 2, 1, "", "get_params"], [138, 2, 1, "", "set_params"]], "skfolio.prior.BlackLitterman": [[139, 2, 1, "", "fit"], [139, 2, 1, "", "get_metadata_routing"], [139, 2, 1, "", "get_params"], [139, 2, 1, "", "set_params"]], "skfolio.prior.EmpiricalPrior": [[140, 2, 1, "", "fit"], [140, 2, 1, "", "get_metadata_routing"], [140, 2, 1, "", "get_params"], [140, 2, 1, "", "set_params"]], "skfolio.prior.FactorModel": [[141, 2, 1, "", "fit"], [141, 2, 1, "", "get_metadata_routing"], [141, 2, 1, "", "get_params"], [141, 2, 1, "", "set_params"]], "skfolio.prior.LoadingMatrixRegression": [[142, 2, 1, "", "fit"], [142, 2, 1, "", "get_metadata_routing"], [142, 2, 1, "", "get_params"], [142, 2, 1, "", "set_params"]], "skfolio.uncertainty_set": [[144, 1, 1, "", "BaseCovarianceUncertaintySet"], [145, 1, 1, "", "BaseMuUncertaintySet"], [146, 1, 1, "", "BootstrapCovarianceUncertaintySet"], [147, 1, 1, "", "BootstrapMuUncertaintySet"], [148, 1, 1, "", "EmpiricalCovarianceUncertaintySet"], [149, 1, 1, "", "EmpiricalMuUncertaintySet"], [150, 1, 1, "", "UncertaintySet"]], "skfolio.uncertainty_set.BaseCovarianceUncertaintySet": [[144, 2, 1, "", "get_metadata_routing"], [144, 2, 1, "", "get_params"], [144, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BaseMuUncertaintySet": [[145, 2, 1, "", "get_metadata_routing"], [145, 2, 1, "", "get_params"], [145, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet": [[146, 2, 1, "", "fit"], [146, 2, 1, "", "get_metadata_routing"], [146, 2, 1, "", "get_params"], [146, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BootstrapMuUncertaintySet": [[147, 2, 1, "", "fit"], [147, 2, 1, "", "get_metadata_routing"], [147, 2, 1, "", "get_params"], [147, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet": [[148, 2, 1, "", "fit"], [148, 2, 1, "", "get_metadata_routing"], [148, 2, 1, "", "get_params"], [148, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.EmpiricalMuUncertaintySet": [[149, 2, 1, "", "fit"], [149, 2, 1, "", "get_metadata_routing"], [149, 2, 1, "", "get_params"], [149, 2, 1, "", "set_params"]], "skfolio.utils.stats": [[151, 3, 1, "", "NBinsMethod"], [152, 3, 1, "", "assert_is_distance"], [153, 3, 1, "", "assert_is_square"], [154, 3, 1, "", "assert_is_symmetric"], [155, 3, 1, "", "commutation_matrix"], [156, 3, 1, "", "compute_optimal_n_clusters"], [157, 3, 1, "", "corr_to_cov"], [158, 3, 1, "", "cov_nearest"], [159, 3, 1, "", "cov_to_corr"], [160, 3, 1, "", "is_cholesky_dec"], [161, 3, 1, "", "n_bins_freedman"], [162, 3, 1, "", "n_bins_knuth"], [163, 3, 1, "", "rand_weights"], [164, 3, 1, "", "rand_weights_dirichlet"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "terms": {"": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 156, 162, 165, 168, 169, 170, 171, 172, 177, 178, 179, 180, 181, 182], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 46, 52, 55, 56, 57, 59, 60, 67, 68, 69, 70, 72, 73, 77, 89, 94, 95, 96, 102, 103, 104, 106, 107, 108, 109, 110, 111, 115, 116, 117, 119, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 135, 136, 139, 146, 147, 148, 149, 150, 163, 165, 166, 169, 173, 174, 176, 177, 178, 179, 180, 181, 182], "00": [7, 8, 9, 14, 15, 16, 18, 19, 20, 21, 23, 24, 27, 29, 34, 36, 40, 41, 44, 46, 166], "000": [43, 46], "0000": [48, 52, 61, 62, 63, 64, 65, 113, 125], "000000": [7, 8], "0000000000000002": 11, "000000000000002": 11, "0000001319361242": 9, "000005": 40, "000006": [9, 40], "000007": [9, 40], "000008": [8, 9], "000009": [9, 15, 23], "000010": [9, 19, 36], "000011": [7, 9, 18, 19, 20], "000012": [9, 20], "000013": [8, 9, 14, 15, 23], "000014": [9, 15, 36], "000015": [9, 36], "000016": [8, 9], "000017": 9, "000018": 9, "000019": 9, "000020": [9, 14], "000021": [9, 14, 19], "000022": [7, 9, 18, 19], "000023": [9, 18, 20], "000024": 9, "000025": 20, "000026": 9, "000027": [8, 23], "000028": [9, 23], "000029": [7, 9], "000031": 9, "000033": 9, "000034": 9, "000035": 9, "000037": [9, 29], "000038": 9, "000039": 29, "000040": [9, 29], "000041": [9, 29], "000043": [9, 29], "000045": 9, "000046": 9, "000050": 9, "000054": 9, "000055": 9, "000056": 9, "000057": 9, "000058": 9, "000062": 9, "00007": 6, "000070": 9, "000073": 29, "000074": 29, "000078": 29, "000079": [9, 29], "000082": 15, "000088": 9, "000090": 29, "000096": 40, "000097": 9, "000098": 9, "0001": [26, 108, 165, 173], "00010": [15, 139], "00011": [6, 9, 40], "00012": [9, 10], "00013": 14, "00014": 9, "00015": 139, "00016": 9, "00017": [8, 9, 36], "00018": 9, "00019": 9, "0002": [139, 165, 179], "00020": 9, "00021": [7, 9, 18, 19], "00022": [9, 18, 20], "00023": [8, 9, 14, 19, 20, 23], "00024": [7, 9, 23], "00025": [9, 15], "00026": [9, 29], "00027": [9, 29], "00028": [9, 29], "00029": 9, "0003": [177, 181], "00030": 9, "00031": 9, "00032": 9, "00033": 9, "00034": 9, "00035": 9, "00035714285714285714": 14, "00036": 9, "00037": 9, "00038": 9, "00039": [6, 9, 139], "0004": [139, 177, 181], "00040": 9, "00041": 9, "00042": 9, "00043": 9, "00044": 9, "00045": 9, "00046": 9, "00047": 9, "00048": 9, "0005": 31, "00059": [4, 6, 9], "0006": [177, 181], "00062": 15, "00068": 15, "00071": 14, "00074": 15, "00075": 15, "00077": 9, "00079": [14, 15], "00080": 15, "00081": 14, "00084": 14, "00085": 9, "00086": [4, 6, 14], "00087": 14, "00092": 15, "00094": 14, "00097": 40, "00098": [4, 6], "001": [14, 26, 36, 132, 173, 179], "0010": 179, "00105085": 8, "0011": [9, 40], "0012": [9, 14, 15, 36], "00122": 36, "00125": 36, "0013": [8, 11, 14, 15, 40, 116, 117, 122, 123, 127], "00139632": 2, "0014": [9, 179], "0015": [8, 9, 40, 179], "00152747": 7, "0016": [9, 15, 40], "0017": [9, 14, 15], "00175085e": 5, "0018": [7, 9, 14, 18, 19, 40], "0019": [9, 15, 18, 20, 36], "00199173": 7, "002": [12, 179], "0020": [8, 9, 20, 23, 40], "0021": [9, 14, 15, 19], "0022": [7, 9, 15], "0023": [9, 14, 29, 40], "0024": [9, 23, 29], "0025": [8, 9, 179], "0026": [9, 36], "00263": 36, "0027": [9, 14, 15], "0028": [9, 14], "0029": [9, 15, 31], "003": [2, 179], "0030": [9, 179], "00305": 36, "0031": [9, 36], "0032": [7, 9, 18, 19], "00322793": 2, "0033": [8, 9, 15, 18, 20, 23, 29], "00333111e": 32, "0034": [9, 15, 29, 40], "00342423": 8, "0035": [8, 9], "00354605": 8, "00356473": 9, "0036": [9, 19], "0036976120249752": 7, "0037": [7, 9, 14], "00370324": 2, "003731": [7, 8], "003745": [7, 8], "003759": [7, 8], "0038": [9, 40], "0039": [9, 23], "004": 179, "0040": [9, 15, 36, 40], "0041": [9, 14, 40], "0042": 40, "0043": [9, 15], "0044": [9, 14], "0045": [9, 15, 29], "0046": [8, 9, 29], "0047": [9, 29, 36], "0048": [9, 36, 40], "0049": [9, 23], "005": 12, "0050": 9, "0051": [8, 9, 15, 23], "0052": [7, 9, 18, 19, 20, 36], "005201": [7, 8], "005267": [7, 8], "0053": [7, 9, 14, 18, 19, 20], "0054": [9, 14, 18, 20, 36], "00542224": 8, "0055": [9, 15], "0056": [9, 19], "005633": [7, 8], "0057": [15, 36], "0058": [9, 20], "0059": 9, "006": 15, "0060": [8, 9, 23], "0061": [7, 8, 9, 18, 19], "0062": [9, 23], "0063": [7, 9, 14, 15, 18, 20, 40], "0064": [8, 9, 15, 23], "0065": 9, "00652106e": 32, "0066": [9, 40], "0067": [9, 19], "0068": 9, "0069": [9, 15], "0070": [9, 29, 40], "0071": [7, 9, 14], "0072": [8, 9, 14, 23, 29], "0073": [7, 9, 18, 19, 20, 29, 40], "0074": [9, 29, 40], "007435": [7, 8], "0075": [9, 40], "007576": [7, 8], "0076": [9, 14, 29], "00765335": 19, "0077": [9, 19, 29], "0078": [9, 14, 29], "0079": [9, 23], "007f": [48, 61, 62, 63, 64, 65, 113, 125], "0080": [9, 29], "008045": [7, 8], "00805152": 7, "0081": [9, 36], "0082": 9, "00827991": 30, "0083": 9, "0084": 9, "0085": [9, 14], "0086": 9, "0087": 9, "0088": [9, 14], "0089": 9, "0090": [8, 9], "0091": 9, "0092": 9, "0093": 9, "0093012": 19, "00932275": 7, "0094": 9, "0095": [9, 36], "00959883e": 39, "0096": [9, 36], "0097": [9, 15], "0098": [9, 15, 36], "009868": [7, 8], "0099": [9, 15], "00992555": 9, "009933": [7, 8], "01": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 26, 30, 31, 32, 33, 34, 36, 39, 40, 43, 49, 50, 51, 52, 53, 139, 166, 170, 173, 177, 179], "010": [7, 8, 9, 15, 18, 19, 20], "0100": 9, "010079": [7, 8], "01024013e": 8, "01028137": 2, "01069377": 8, "010732": [7, 8], "01084089": 7, "011": [8, 9, 20, 29, 36], "01100645": 2, "01140416": 30, "012": [7, 8, 9, 14, 18, 19, 20, 23, 29], "01217676": 8, "01241175": 9, "013": [8, 9, 14, 15, 19, 20, 23, 29, 36], "013630": [7, 8], "014": [7, 9, 14, 23, 29, 40, 51], "0141": 31, "0149": 31, "015": [7, 8, 9, 14, 15, 23, 29, 139], "015381": [7, 8], "015500": [7, 8], "01562655e": 5, "0157": 31, "0159": 31, "016": [7, 9, 15, 18, 19, 20, 36, 40], "016527": [7, 8], "017": [8, 9, 19], "01757816": 30, "01787286": 7, "018": 9, "019": [9, 14], "01910610e": 26, "019355": [7, 8], "01943433": 9, "02": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 37, 39, 40, 43, 49, 51, 52, 53, 117, 139, 166, 170, 179], "020": [9, 14], "020114": [7, 8], "020193584925389": 9, "020833": [7, 8], "02092595": 9, "021": [9, 15, 36, 43], "02117437": 2, "021355": [7, 8], "02155918": 2, "02170548": 30, "021741551637176403": 8, "021821": [7, 8], "022": [9, 15, 23, 29, 36], "022087577333468": 9, "022306937393167334": 14, "02231082e": 4, "023": [9, 14, 29, 40, 43], "02313728e": 6, "02335296e": 39, "0235": 33, "02374444": 2, "024": [7, 8, 9, 14, 15, 29, 43], "02409012": 30, "02428936": 30, "024823": [7, 8], "02483767": 29, "025": [9, 15, 19, 29], "025061083134673378": 8, "02548697": [7, 18, 19], "02564642": [7, 18, 19], "02575021": 30, "02596219": 29, "026": [8, 9, 14, 20, 23, 29, 40], "026619": [7, 8], "027": [7, 8, 9, 14, 18, 19, 20, 23, 29, 43], "02702131": 9, "02730592": 30, "02737024e": 23, "02773558": 29, "028": [8, 9, 23], "029": [7, 9, 19, 23, 40], "02943678": 9, "0296872": [7, 18, 19], "0298146": 2, "02983878": 30, "03": [2, 4, 5, 6, 7, 8, 9, 13, 15, 16, 19, 23, 29, 32, 36, 39, 40, 43, 49, 51, 52, 53, 165, 166, 179], "030": 9, "030303": [7, 8], "031": [9, 15], "03133290e": [5, 6], "03144452": 29, "031996": [7, 8], "032": [9, 15, 40, 43], "03210848": [18, 20], "03257461": 19, "032813": 9, "033": [9, 40], "03306735": [7, 18, 19], "03319698": 30, "03336015": 19, "03372647": [18, 20], "034": [9, 14, 40], "03431023e": 39, "03451801": [18, 20], "03497807": 29, "035": [9, 14, 15, 36], "03551377": [7, 18, 19], "03632272": 29, "03676195": 2, "03687840e": 32, "037": [9, 14, 20, 36, 40], "03704654": 9, "0373302": 2, "0376": 33, "03774863": 9, "03785094": [18, 20], "03790179": 29, "038": [9, 40], "03882539": [7, 18, 19], "039": [8, 9, 29, 50, 139], "0393462": 29, "03970752": [7, 18, 19], "03993049": 9, "03994768": 19, "0399564198202886": 7, "04": [2, 3, 4, 7, 8, 9, 14, 15, 16, 20, 21, 31, 36, 39, 40, 43, 50, 51, 52, 53, 139, 165, 166], "040": [7, 9, 14, 18, 19, 29], "04046603": [18, 20], "04094166": 29, "041": [9, 18, 20, 29, 43], "0413538": [18, 20], "04158213": 9, "04183614e": 6, "042": [9, 15, 50], "04203502": 179, "04203503": 179, "04204356": 9, "04230882": 19, "0425223": [18, 20], "04289017": 9, "042905188108048": 9, "043": [9, 20], "0430764": 9, "043189": [7, 8], "0437015": 20, "044": [7, 8, 9, 15, 18, 19, 23], "04421773": 29, "04432756": [18, 20], "045": [8, 9, 15, 18, 20, 23, 40], "04503263": 20, "04535355": [18, 20], "0453914": 20, "04579241": 19, "04585759e": 8, "046": [9, 29, 50], "04647771": 20, "04667582": [18, 20], "047": [7, 9, 14, 19], "04723274": [7, 18, 19], "04726087": 30, "04742354": [7, 18, 19], "04755329": 20, "04774432": 20, "048": [7, 9, 40, 50], "04807705": 29, "04828249": 19, "04852969": 20, "04863941e": 3, "04893332": 12, "04897392": 19, "049": [9, 26, 27, 36, 166], "04907541": 20, "04927078": 20, "04927288": 30, "04988135": 20, "05": [7, 8, 9, 10, 14, 15, 16, 18, 19, 23, 26, 29, 30, 31, 32, 36, 39, 40, 43, 50, 51, 52, 53, 116, 117, 122, 123, 127, 139, 165], "050": [8, 9, 14, 36], "05033705": 29, "0507476631082548": 33, "051": [9, 23, 36, 40], "05103838": [18, 20], "05112798": 20, "05137979": 20, "05150748e": 13, "0517859": 20, "05199345": 20, "052": [8, 9, 29, 36], "05201907e": 39, "0520937": [18, 20], "0528462": 20, "05289115": 29, "0529288": 20, "053": [9, 29], "05360544": 20, "05371274": 19, "0537393": 20, "05375933": 20, "054": [9, 29, 40, 49], "05417573": 20, "05418786": [18, 20], "05430773": 19, "05434705": [7, 18, 19], "055": [8, 9, 14, 29], "05537228": 19, "05570808": [7, 18, 19], "05576851": [7, 18, 19], "05581397": [7, 18, 19], "056": [8, 9, 29], "05627071": [18, 20], "05685439e": 5, "057": [9, 18, 20, 29], "05717669e": 3, "05726203": 30, "05744543": [7, 18, 19], "058": [9, 29], "05814153": 30, "05865087e": 12, "05865225e": 12, "059": 9, "059202": 29, "06": [7, 8, 9, 13, 18, 19, 20, 23, 29, 49, 50, 165], "060": 9, "061": 9, "06105331": [18, 20], "06119574": [18, 20], "06173016": 19, "062": 9, "06210401": 11, "06251756": 19, "063": [7, 9, 14, 18, 19, 29, 36], "06308422": 29, "06310889": 29, "06348968": 19, "06351213": [7, 18, 19], "06358463": [7, 18, 19], "064": [7, 8, 9, 18, 19, 20, 23], "06469243": [18, 20], "065": [7, 9, 18, 19, 20, 23], "06560031": 19, "06568282": [18, 20], "06593521": [18, 20], "066": [7, 9], "06610498": [7, 18, 19], "06656721": 30, "06697905": [7, 18, 19], "067": [9, 19, 40, 49], "06700177": 19, "06751700747046248": 10, "0676481": [7, 18, 19], "068": [9, 14, 19, 20, 36, 40, 43], "06832987": 11, "06858182": 2, "06880861": 19, "06892752": 19, "06894686": [18, 20], "069": [8, 9, 15, 23], "06982611e": 26, "07": [8, 9, 12, 16, 23, 29, 41, 49, 50, 166], "070": [9, 15, 36], "07033698": 19, "07049715": [7, 18, 19], "07087663e": 26, "071": 9, "07120393e": 39, "072": [9, 16, 23, 166], "073": [7, 9, 14, 36], "07317879": 2, "074": [9, 15, 29], "07464383": 29, "075": [9, 14, 29], "07596741": 29, "076": [8, 9, 29], "077": [9, 29, 36], "078": 9, "079": [9, 29], "07941073": 2, "08": [2, 4, 5, 7, 8, 9, 13, 14, 15, 19, 23, 36, 40, 43, 49, 51, 52, 53], "080": [9, 50], "08070112": 30, "08083036": 30, "08086158e": 23, "081": [9, 29], "0810491": 2, "082": 9, "08277551": 29, "083": 9, "083026522037701": 9, "084": [9, 29], "085": [8, 9, 14, 16, 29, 166], "086": [9, 15, 16, 29, 166], "08622477": 29, "087": [9, 29], "08797657e": 39, "088": [7, 8, 9, 18, 19, 23], "089": [9, 18, 20], "08919173e": 39, "09": [3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 26, 40], "090": [9, 15], "091": 9, "092": [7, 9, 23], "09226948e": [3, 4, 7], "093": [9, 19], "0933616": 30, "094": 9, "09420898": 30, "09425878e": 39, "095": 9, "09507654e": [3, 4, 7], "096": [9, 23], "09690756e": 39, "097": [8, 9, 20, 23, 40], "09718550832245014": 10, "0972": 10, "098": [7, 9, 18, 19, 20], "09849875e": [5, 6], "099": [7, 9, 13, 16, 166], "1": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 24, 26, 27, 29, 30, 31, 32, 33, 36, 37, 39, 40, 43, 44, 47, 48, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 89, 92, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 146, 147, 148, 149, 150, 151, 156, 158, 161, 162, 165, 169, 173, 174, 177, 178, 179, 182], "10": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 23, 26, 29, 31, 34, 36, 39, 40, 43, 50, 94, 110, 116, 117, 122, 123, 127, 134, 165, 166, 173, 176], "100": [9, 11, 14, 15, 31, 36, 39, 40, 50, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 115, 116, 117, 119, 120, 122, 123, 127, 141, 158, 176, 178], "1000": [77, 109, 129, 130, 131, 132, 146, 147], "1006": 33, "10083470e": 5, "102": 43, "10292071071001885": 10, "103": 51, "10319630e": 8, "10362386": 11, "105": 31, "10584830e": 5, "106": 9, "107": 15, "10752495e": 39, "10847215e": 23, "10y": 43, "11": [3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 26, 29, 36, 39, 40, 52, 94, 166], "11063721e": 32, "11093659": 2, "112": 49, "113": 43, "11391513": 11, "11421641e": 4, "11477958e": 39, "11478008e": 23, "115": 50, "117": 43, "118": 50, "11868007e": 12, "11892006e": 23, "119": [14, 40, 50], "11970704e": 39, "12": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 39, 43, 49, 51, 52, 53, 94, 165, 170], "120": 31, "12051211e": 39, "121": [43, 50], "12141020e": 39, "124": 50, "12489362e": 39, "12492676e": 5, "125": 43, "1250": 52, "12558991e": 39, "126": 39, "128": 43, "12895735e": [5, 6], "13": [5, 7, 8, 9, 14, 15, 20, 23, 29, 36, 40, 51, 98, 100, 101, 102, 104, 107, 109, 158], "13001762e": [5, 6], "132": 9, "13239659e": 39, "133": [29, 34, 166], "13346758e": [5, 6], "13607836e": 8, "1362": 51, "13696569e": [5, 6], "13808863e": 39, "14": [7, 8, 9, 14, 15, 16, 23, 29, 31, 40, 43], "140": [7, 16, 166], "14316461e": 39, "144": 43, "14410296e": 32, "1455": 51, "147": 43, "14733606e": 8, "14759387e": 6, "148": [30, 34, 43, 166], "14895433": 30, "14940375e": 39, "15": [4, 7, 8, 9, 14, 15, 16, 18, 19, 23, 26, 27, 29, 36, 40, 166], "150": 11, "154": [2, 16, 166], "159": 43, "15980287": 2, "16": [7, 8, 9, 14, 15, 18, 19, 20, 29, 31, 36, 40], "161": 43, "16112642e": 26, "16206284e": 5, "16248113e": 39, "16368341e": [3, 4, 7], "165": [14, 15, 40], "16514560e": 32, "16562529e": 8, "16890578e": 32, "16956647": 11, "17": [7, 8, 9, 10, 14, 16, 18, 19, 20, 23, 29, 40, 166], "170": 36, "1700238781664583": 10, "171": 36, "17183301e": 39, "17212380e": 39, "17341817e": 11, "17359260e": 39, "174": [3, 16, 43, 166], "17510456": 2, "176": [20, 21, 166], "17733231e": [12, 13], "17770097e": 32, "18": [7, 9, 14, 15, 18, 19, 20, 23, 29, 33, 36, 40, 41, 166], "180": [14, 40], "181": 43, "18155529e": 32, "182061194357152": 9, "18289085e": 8, "18408031e": 5, "18441126e": [3, 4, 7], "185": 50, "18538495e": 5, "1875": 52, "18803064e": 26, "18843086e": 39, "19": [7, 8, 9, 14, 18, 20, 23, 29, 36], "190": 36, "192": 43, "19328243e": 32, "1952": 165, "1955": 112, "19657594e": [5, 6], "1967": [31, 39], "19789402e": 6, "1981": 161, "1986": 112, "19871439e": [3, 4, 7], "1988": [71, 132], "1990": [3, 4, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 32, 43, 52, 53, 170], "1991": 139, "1_mean_risk": [16, 166], "1d": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128], "1e": [14, 98, 100, 101, 102, 104, 107, 108, 109, 116, 117, 122, 123, 127, 158, 165], "1e5": 97, "1y": 43, "2": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 23, 26, 29, 31, 32, 36, 39, 40, 41, 43, 47, 48, 51, 55, 57, 58, 59, 60, 71, 94, 95, 96, 97, 102, 103, 107, 109, 110, 112, 116, 117, 119, 120, 122, 123, 124, 127, 129, 132, 133, 135, 139, 146, 147, 148, 149, 150, 156, 165, 169, 173, 177, 178, 179, 182], "20": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 39, 43, 52, 53, 116, 117, 122, 123, 127, 170], "200": [11, 116, 117, 122, 123, 127], "2000": [14, 15, 31, 36, 39, 40, 50, 117], "200105310175214": 9, "2002": [98, 100, 101, 102, 104, 107, 109, 141, 158], "2004": [109, 146, 147], "2005": [56, 112], "200575932248872": 9, "2007": [139, 165], "2009": [47, 119, 146, 147, 148, 149, 156], "2010": [110, 136, 140, 169], "20106233e": 8, "2014": [2, 5, 6, 29, 49], "2015": [10, 33, 107], "2016": [55, 57, 59, 60, 120, 124], "2017": [119, 135, 169], "2018": [26, 51, 94, 117, 119], "2019": [107, 112, 120, 124, 132], "2020": [26, 30, 100, 101, 119, 120, 124, 177, 182], "202081924170507": 9, "20210608e": 39, "2022": [3, 4, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 30, 32, 33, 43, 49, 52, 53, 107, 170, 179], "20227491": 2, "2023": [14, 15, 31, 36, 39, 40, 50, 51, 107, 165], "2024": 174, "203": 43, "20495386e": 39, "205": 50, "20549958e": 39, "20563054e": 39, "20663228": 11, "20664617": 11, "20670474": 11, "20671539": 11, "20898034e": [3, 4, 7], "209": 50, "21": [7, 8, 9, 10, 12, 14, 15, 16, 18, 19, 29, 36, 37, 39, 40, 166], "210": 39, "21327461e": 5, "214": [10, 16, 166], "215": 43, "21580436": 2, "22": [4, 7, 9, 14, 15, 18, 19, 20, 29], "220": [43, 50], "22117587e": 32, "22188511e": [5, 6], "222": 50, "223": 33, "22380709e": 5, "224": 50, "2264": 49, "22729906e": 39, "22768876": 11, "22770146": 11, "22770271": 11, "22788246": 11, "229": [43, 50], "23": [7, 8, 9, 18, 20, 29, 110], "23117943e": 39, "23352411e": 3, "235": 43, "23719260e": 5, "24": [9, 14, 23, 29, 36, 40], "240": 50, "24004576e": 5, "24120028e": [3, 4, 7], "24355699e": 4, "245": 31, "24556425e": 6, "247": 51, "249": 50, "24959219e": [5, 6], "25": [4, 9, 14, 15, 31, 33, 36, 40, 115, 119, 120], "2500": 52, "25000": 52, "25073031e": 32, "252": [9, 12, 13, 14, 15, 31, 33, 36, 39, 40, 43, 130, 131, 132, 165, 169, 176], "25212125e": 13, "253": 49, "254": 50, "25426519e": 39, "255": [14, 15, 40], "256": 49, "25815785e": 32, "26": [8, 9, 15, 36, 40, 41], "26134346e": 5, "26155697e": 8, "263": 49, "264": 43, "266": 43, "267": 43, "268": 43, "269": 43, "27": [9, 15, 29, 36], "27194222e": 3, "272263586429105": 29, "27250993e": 4, "27306716e": 39, "27962284e": 4, "27967880e": [5, 6], "28": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 40, 43, 49, 52, 53, 166, 170], "28133405e": 39, "282": 43, "28246101": 11, "283": [43, 50], "28439988": 12, "28498817e": [3, 4, 7], "285": 50, "28522027e": [3, 4, 7], "288": 43, "289": 50, "29": [7, 9, 14, 18, 19, 23, 29, 40, 49], "29453598e": 13, "29453703e": 13, "296356964248307": 9, "298": 36, "2980": 36, "2_": [146, 147, 148, 149], "2_risk_budget": [21, 166], "2d": [5, 11, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 139, 181], "2f": [2, 14, 23, 33, 36, 39, 40], "2h": 132, "2x3x3": 15, "3": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 26, 29, 31, 32, 36, 39, 40, 43, 48, 52, 61, 62, 63, 64, 65, 94, 95, 97, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 122, 123, 124, 125, 127, 133, 146, 147, 165, 169, 173, 179, 180], "30": [2, 7, 8, 9, 14, 15, 18, 20, 23, 29, 33, 36, 40, 43, 130, 131, 132, 178], "30000034617916516": 11, "301": 43, "30105753780178": 29, "303": 51, "30314924e": 3, "304": 43, "30530766e": [3, 4, 7], "305664213686036": 9, "30675668e": 39, "30700985e": 32, "30767706e": 39, "31": [8, 9, 14, 15, 31, 36, 39, 40, 50, 51], "310": [43, 51], "31092783e": 5, "31250": 52, "313": 50, "31550592e": 39, "316": 51, "31737525e": [5, 6], "32": [7, 8, 9, 14, 15, 18, 19, 23, 29], "32124541e": 5, "322": 43, "32231168e": 32, "322661810340446": 9, "32493866e": 6, "32678922e": 39, "33": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 32, 36, 39, 40, 165, 173, 177, 178], "330": 49, "332589": 52, "3333332": 12, "33333333e": 11, "33333336": 12, "33333345": 12, "33456624e": 23, "334821": 52, "335938": 52, "336": 51, "337": 50, "337054": 52, "338": 49, "339286": 52, "33953561e": 5, "34": [7, 8, 9, 15, 18, 19, 20, 23, 29], "34073945e": 4, "34097308e": 6, "345087054431556": 10, "34583888e": 32, "347656": 52, "34862950e": [3, 4, 7], "34906672e": 32, "34914228e": 26, "35": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 51], "35005322e": 3, "351": 49, "352": 53, "35228602e": 5, "353": 53, "354": 50, "355": 53, "355469": 52, "35632022e": 23, "35652050e": [5, 6], "35710067e": [3, 4, 7], "358": 53, "359": 53, "35927671e": 8, "36": [9, 14, 18, 20, 29, 33, 34, 51, 166], "36085745e": 39, "361": [11, 16, 166], "36241349e": 26, "36336705e": [5, 6], "364": [6, 16, 43, 166], "36401076e": 4, "365": 109, "368335377715717": 9, "369": [18, 21, 166], "37": [7, 9, 14, 18, 20, 23, 29, 51], "371094": 52, "37192080e": 12, "3750": 52, "375000": 52, "38": [9, 15, 29, 40, 51], "38087390e": 5, "381": 50, "382": 50, "382813": 52, "384": 43, "38460704e": 26, "38469617e": 39, "38515810e": 39, "386": [43, 50], "387": 43, "38982052e": 32, "39": [2, 7, 9, 14, 15, 18, 19, 20, 29, 36, 40], "391": 43, "392": 50, "393": 43, "394": 43, "397": 43, "399360341488464": 9, "3_maxiumum_diversif": [24, 166], "3d": 129, "3f": 15, "3m": 43, "3x3": 14, "4": [3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 23, 26, 32, 36, 39, 40, 43, 47, 51, 52, 94, 95, 107, 108, 119, 120, 123, 133, 134, 135, 156, 169, 177, 179], "40": [8, 9, 14, 18, 20, 23, 29, 36, 39, 50, 179], "400": 51, "40097067e": 39, "40239485319279": 9, "40287802e": 39, "40429482e": 4, "405": 50, "40597193e": 4, "407690290599575": 9, "40812344e": 3, "40973224e": 39, "40979832e": 12, "41": [9, 14, 18, 20, 29, 51, 109], "41147667e": 23, "412": [5, 16, 166], "41661311e": 39, "41726679e": 8, "41742527e": 8, "42": [9, 14, 15, 29, 36], "422": 49, "42282444e": 5, "423": 43, "42391438e": 5, "42685508e": 6, "42766417e": 39, "42768380e": 26, "42845847e": 39, "42882219e": 26, "43": [7, 8, 9, 14, 15, 19, 23, 29, 36], "430": [49, 51], "43028265e": 13, "43231855e": [3, 4, 7], "433": 21, "43326975e": 32, "437": 49, "43758398806516": 9, "438": 43, "43855248e": [3, 4, 7], "43876113e": 5, "44": [9, 15, 29, 31, 40], "44128512e": [5, 6], "44532312e": 5, "44687699e": 5, "44938306e": 3, "45": [7, 9, 14, 15, 18, 19, 23, 31, 36], "45171911e": 23, "452": [43, 50], "455": 49, "45574521e": 5, "457": [23, 24, 166], "45780643e": 32, "458": [4, 16, 50, 166], "45803069e": 4, "459": 43, "46": [9, 14, 15, 18, 20, 23, 29, 36, 39, 40, 49], "460": 51, "460872007821077": [7, 18, 19], "461275191312059": 8, "462": 50, "463": 43, "46436338e": [5, 6], "47": [7, 9, 20, 29, 49], "47012865e": 32, "47134961e": 5, "47358386e": 8, "474123745524875": 9, "475": 50, "476": 50, "48": [8, 9, 14, 19, 23, 29, 36, 49], "481": 43, "48139841e": 39, "48213167e": 39, "48283750e": 5, "483": 50, "48339328e": 32, "48492469e": 32, "48598568e": 5, "48699105e": 23, "48850261e": 5, "49": [7, 8, 9, 15, 18, 19, 23, 29, 36, 40], "49053843e": 32, "495": 51, "49645166e": 5, "498": 50, "49938736e": [3, 4, 7], "49999867": 11, "4_distributionally_robust_cvar": [27, 166], "4f": [31, 33], "5": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 36, 39, 40, 49, 52, 55, 56, 57, 59, 60, 94, 95, 96, 107, 108, 115, 116, 117, 119, 120, 122, 123, 124, 127, 128, 135, 165, 169, 180, 182], "50": [9, 11, 12, 14, 15, 19, 29, 31, 36, 40, 51, 115, 119, 120], "500": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 33, 43, 52, 53, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 170], "5000": 52, "50000": 52, "5016": 110, "502": 49, "5029": 110, "50514320e": 5, "50727312e": 23, "508": 43, "51": [8, 9, 14, 15, 20, 23, 29, 39, 51], "512": 50, "51323607e": 23, "51376159e": 4, "51475217e": 39, "5152184941723748": 9, "51844546e": 3, "52": [8, 9, 15, 23, 49], "52171782e": 39, "522": 43, "52217700e": 39, "52708811e": 8, "53": [7, 8, 9, 14, 15, 34, 36, 40, 49], "53270264e": 39, "533289375090764": 29, "53379955e": 26, "53398775": 9, "535": 50, "536": 43, "53601183e": 39, "537": 43, "54": [7, 8, 9, 14, 18, 19, 23, 29, 40], "540": 50, "54382763e": 39, "54482537e": 39, "54697151e": 5, "548": 50, "549": 43, "55": [9, 14, 15, 23], "550": [34, 51], "55249501e": 32, "553": 50, "55455742": 9, "56": [7, 9, 15, 18, 19, 29], "56000809e": 6, "560177235001134": 29, "562": 50, "56214479e": 6, "56311233e": 39, "56548525": 11, "56558315": 11, "56559255": 11, "56566507": 11, "56967308e": 26, "57": [9, 14, 19, 23], "571": [33, 34, 166], "572": 50, "57560762e": 23, "578": 50, "57851861e": 5, "5798056188194143": 9, "58": [2, 7, 9, 14, 15, 20, 29, 110], "581": [43, 50], "58269647e": 3, "58312606e": 39, "58350612e": 8, "59": [9, 14, 15, 23, 40], "590": 50, "591675649894958": 9, "59482204e": 5, "595": 43, "596": [8, 16, 166], "5960": 50, "59687833e": 39, "59789920e": 5, "59858003": 9, "59880563e": 5, "599": 43, "5_cluster": [34, 166], "5f": 36, "6": [3, 5, 6, 8, 9, 11, 12, 13, 15, 23, 26, 29, 32, 39, 43, 51, 94, 95, 169, 179], "60": [2, 8, 9, 12, 13, 14, 15, 23, 31, 33, 36, 40, 165], "6008387080754516": 9, "60306246e": 39, "61": [8, 9, 14, 40], "61481439e": 5, "61513792e": 5, "62": [8, 9, 14, 15, 29], "62035863e": 39, "621": [43, 51], "62236661e": 32, "625": [12, 16, 166], "62545194e": 26, "62632716e": 5, "63": [9, 15, 18, 20, 29], "63365545e": 39, "634": 43, "63432134e": [5, 6], "636": 43, "63901744e": 32, "64": [9, 14, 15, 29, 31, 36, 39, 40, 50], "64005580e": 6, "64220700e": 5, "644": 43, "64582189e": 5, "646": 43, "64696218e": 39, "64772972e": [3, 4, 7], "648": 51, "64823756e": 3, "64841618e": 39, "64888981e": 8, "65": [7, 9, 14, 15, 18, 19, 29, 36, 40], "65046123e": 39, "65079997e": 39, "653": 43, "65451603e": 4, "65625": 52, "658": 43, "66": [9, 15, 18, 20, 23, 29, 40, 50, 51], "66255502e": 5, "664": 43, "66647584e": 4, "66666667e": 11, "66785730e": 5, "669076363622692": 9, "67": [8, 9, 23, 53], "67249461e": 26, "67279164e": 39, "677": 49, "67810934e": 39, "68": [8, 9, 36], "681": 51, "68197345e": 5, "685": 50, "685271602584908": 23, "68550154": 9, "68739416e": 5, "68742795e": 39, "687782011560027": 9, "69": [9, 14, 15, 20, 29, 36, 50, 53], "692": 43, "69581067e": 6, "69632764e": 6, "6_ensembl": [37, 166], "7": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 23, 26, 32, 33, 39, 40, 51, 94, 116, 117, 122, 123, 127, 169], "70": [8, 9, 15, 23, 29, 36, 47, 50, 116, 117, 122, 123, 127], "700": 51, "704": 49, "70440099e": [5, 6], "709": 43, "71": [8, 9, 14, 23, 29, 40], "711": 50, "716": 50, "71797430e": 32, "72": [7, 9, 10, 14, 15, 19, 29, 36, 40, 50, 51], "722": 49, "72248235e": 5, "72469426e": 6, "725": 50, "72770463e": 39, "72794158e": 5, "728117696106207": 19, "729": 50, "72968062e": 32, "72985253e": 4, "73": [7, 9, 14, 15, 18, 19, 20, 40], "731": 49, "73658093e": 39, "73670065e": 4, "73718908e": 4, "738": 43, "73909314e": [3, 4, 7], "74": [7, 9, 14, 15, 50], "74138185e": 23, "74197781": 11, "74253021e": [5, 6], "74284346e": 32, "74340049e": 39, "74361693e": 5, "74499181e": 39, "74507544e": 39, "74787861e": 13, "74823262e": 5, "74856659e": [3, 4, 7], "74913720e": 32, "75": [9, 11, 14, 15, 23, 29, 36, 40], "75000": 52, "75757760e": 39, "75790832e": 32, "75802352": 11, "75907600e": 39, "76": [8, 9, 15, 20, 53], "76926114e": 39, "77": [8, 9, 14, 23, 29, 51], "77006663e": 5, "773": 41, "77319466e": 39, "775": 43, "777": 43, "77784307e": 5, "77910456e": 4, "78": [2, 8, 9, 14, 19, 23, 29, 40, 51], "780": 51, "78010014e": [3, 4, 7], "78013891e": 6, "78090544": 9, "78413867e": 3, "786": 39, "78708311e": 3, "78775169e": [12, 13], "788185892520897": 9, "78965839e": 5, "79": [7, 9, 14, 18, 19, 23, 36, 53], "79050966e": 23, "79104637e": [5, 6], "792": 49, "79268380e": 32, "79313343e": 32, "795": [36, 37, 166], "79558938e": 39, "79623520e": 39, "796875": 52, "79844555e": 8, "79851683e": 4, "7_pre_select": [41, 166], "8": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 18, 19, 20, 23, 26, 31, 32, 33, 36, 39, 40, 48, 51, 61, 62, 63, 64, 65, 94, 113, 125, 156, 165, 176], "80": [9, 15, 19, 40], "800": 39, "80653860e": 39, "80823151e": 39, "809": 51, "81": [7, 8, 9, 14, 15, 19, 29, 40], "811": 51, "81108516e": 39, "81161325e": 3, "81176235e": 5, "812": 43, "8125": 52, "81629430e": 26, "81900038e": 32, "82": [9, 15, 23, 29, 36, 51], "820": 43, "82266765e": [12, 13], "825": 51, "82564384e": 39, "82592031e": 23, "82822281e": 39, "829": 50, "83": [7, 9, 15, 18, 19, 36], "8313": [52, 53], "83522508e": 6, "83697624e": 39, "84": [9, 14, 20, 29, 36], "840": 16, "84021249e": [3, 4, 7], "84053635e": 39, "843069929154527": 9, "84348572e": 26, "84365114e": 39, "84470288e": 39, "84531907e": 26, "847": [31, 34, 43, 166], "84876780e": 39, "84916828e": 39, "84980192e": 4, "85": [9, 14, 15, 40], "851": [32, 34, 166], "852": 50, "853": 43, "85394928e": 39, "85688593e": 6, "859": 166, "859375": 52, "85983398e": 26, "86": [9, 14, 18, 20, 29, 33, 40], "860": 43, "864764715990296": 9, "869": 51, "87": [8, 9, 14, 29], "875000": 52, "878": [39, 41, 166], "87866505e": 3, "87986871": 9, "88": [9, 33, 36, 40, 109], "88131852e": 12, "88142338e": [5, 6], "88210632e": 5, "885": 50, "888": [19, 21, 166], "89": [7, 9, 15, 29, 40, 51], "890625": 52, "89116954e": 5, "89240131e": 39, "89248471e": 39, "89322196e": 3, "894001701422519": 9, "895": [40, 41, 166], "89567291e": 32, "89793803e": 8, "8_data_prepar": [44, 166], "9": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 20, 23, 26, 32, 33, 36, 39, 94, 116, 117, 122, 123, 127, 177, 180], "90": [9, 15, 29], "90123331e": 26, "90340137e": 23, "9038840095066056": 10, "90548357e": 32, "907": 50, "90879685e": 3, "90887434e": 32, "91": [9, 15, 29, 40, 51], "910": 43, "91035768e": 8, "912975728797552": 7, "913": 51, "914061803583557": 9, "91471166e": 39, "91741539e": 39, "91785162": 9, "91802980e": 5, "91846109e": 39, "92": [8, 9, 15, 23, 29, 50], "921033968992518": 20, "92149669e": 39, "922": 51, "926": 50, "92817471e": 8, "92866673e": 39, "92880653e": 39, "93": [9, 14, 29], "93000375": 9, "93188830e": 6, "933": 51, "936428254316073": 9, "93749217": 9, "9375": 52, "93771054e": 3, "938": 43, "93952573e": 23, "94": [8, 9, 15, 23, 29, 36], "9401232": 9, "94502152e": 39, "94746608e": 5, "94836568e": 39, "95": [2, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 50, 67, 68, 69, 70, 72, 73, 89, 116, 117, 123, 127, 130, 131, 132, 133, 146, 147, 148, 149, 176, 178], "950": 50, "95027284": 9, "95048460e": 23, "95142106e": 5, "96": [9, 14, 50], "96049980e": 39, "962": [43, 44, 166], "965": 51, "966": 43, "967": 51, "96861483": 9, "96891040e": 39, "96895546e": 3, "97": [9, 14, 15, 18, 20, 29, 36, 50], "972": 50, "97503410e": 26, "97776252e": 5, "97964062": 9, "97994501e": 6, "98": [7, 9, 15, 18, 19, 36], "98154300e": 23, "98213665e": 3, "98242729e": 6, "98247368e": 39, "98298183e": 5, "98357211e": 32, "98391244e": 39, "98463685": 9, "98558904e": 39, "986": 49, "987": 43, "99": [9, 15, 19, 29], "991": [43, 49], "99284245e": 39, "995": 51, "99555729e": 32, "995810799947282": [18, 20], "99610901e": 4, "99620661e": 39, "99627408e": 39, "9983657": 9, "999": 49, "999999999999993": [8, 23, 29], "A": [2, 3, 4, 5, 11, 12, 14, 29, 40, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 168, 169, 171, 173, 177, 178, 179, 180, 181], "And": [18, 19, 30, 112, 127, 177], "As": [2, 12, 13, 18, 19, 23], "At": [130, 131, 132], "But": 6, "By": [4, 6, 11, 12, 13, 14, 15, 32, 40, 50, 51, 170, 173, 181], "For": [2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 58, 94, 96, 98, 100, 101, 102, 104, 106, 107, 108, 109, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 136, 141, 165, 169, 173, 176, 177, 178, 179, 181], "IN": 129, "If": [11, 12, 13, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 158, 165, 169, 170], "In": [2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 29, 30, 31, 32, 33, 39, 40, 48, 58, 61, 62, 63, 64, 65, 92, 95, 108, 110, 113, 125, 128, 143, 173, 176, 178, 179], "It": [3, 4, 5, 7, 8, 11, 15, 26, 29, 30, 32, 71, 74, 76, 79, 82, 84, 85, 100, 115, 116, 117, 119, 120, 122, 123, 124, 127, 130, 131, 132, 139, 141, 156, 165, 167, 168, 169, 171, 172, 173, 177, 179, 180, 181, 182], "Its": [14, 15, 124], "No": [2, 14, 15, 160], "Not": [47, 54, 55, 56, 57, 58, 59, 60, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 139, 140], "On": [136, 161, 165], "One": [108, 124, 176], "That": [14, 116], "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 79, 82, 84, 85, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 167, 170, 173, 176, 177, 179, 181, 182], "Then": [2, 12, 13, 14, 31, 32, 39, 40, 124, 140, 158, 177], "There": [112, 169], "These": [14, 15, 169, 181], "To": [5, 7, 8, 10, 12, 18, 19, 20, 23, 26, 29, 30, 32, 36, 40, 94, 124, 128, 132, 133, 176, 177, 181], "With": [48, 61, 62, 63, 64, 65, 113, 116, 117, 122, 123, 125, 127, 136, 139, 165, 177], "_": [116, 169], "_2": 48, "__": [47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 173], "__getitem__": [48, 61, 62, 63, 64, 65, 113, 125], "__init__": [54, 98, 99, 137, 138, 144, 145, 177], "_asset": [146, 147, 148, 149], "_avers": 106, "_coef": [14, 116, 122, 123], "_cost": [12, 115, 116, 119, 120, 122, 123, 127, 132], "_cvx_cach": 116, "_deviat": [130, 131, 132], "_factor": [130, 131, 132], "_fee": [13, 115, 116, 119, 120, 122, 123, 127, 132], "_prev_": [12, 115, 116, 119, 120, 122, 123, 127, 132], "_ratio": [130, 131, 132], "_return": [12, 13, 115, 116, 119, 120, 122, 123, 127, 132, 177], "_risk": 116, "_risk_": [123, 177], "_set_covari": 177, "_test_scor": 108, "_validate_data": 177, "_varianc": [130, 131, 132], "aal": [50, 51], "aaoi": 51, "aaon": 51, "aapl": [4, 6, 7, 8, 11, 12, 13, 19, 43, 51, 52, 165, 181], "ab": [48, 61, 62, 63, 64, 65, 113, 125, 132], "abf": 50, "abl": [4, 6, 14, 15, 33], "about": [3, 4, 5, 6, 26, 29, 42, 45, 116, 117, 122, 123, 127, 139, 174, 177, 181], "abov": [6, 11, 12, 13, 14, 15, 32, 47, 97, 98, 100, 101, 102, 104, 107, 109, 115, 116, 117, 119, 120, 122, 123, 127, 133, 136, 158, 165, 169, 173], "absolut": [4, 6, 7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 29, 30, 32, 36, 40, 55, 57, 59, 60, 64, 65, 79, 82, 116, 117, 122, 123, 127, 130, 131, 132, 133, 139, 165, 177], "abstract": [54, 93, 130], "accept": [74, 76, 82, 84, 85, 116, 123, 127, 129, 130, 131, 132], "access": [5, 26, 128], "accord": [12, 40, 96, 124, 128, 129, 133, 134, 135, 176, 177], "account": [12, 18], "accur": [4, 6, 141], "accuraci": [108, 116, 117, 122, 123, 127], "achiev": [2, 12, 14, 15, 31, 169], "across": [0, 108, 136, 169], "activ": 174, "ad": [47, 108, 109, 110, 111, 123, 127, 133, 134, 135, 141, 165, 173, 176, 178], "add": [9, 11, 12, 13, 31, 33, 36, 39, 40, 115, 116, 117, 119, 120, 122, 123, 127], "add_constraint": [116, 117, 122, 123, 127], "add_object": [116, 117, 122, 123, 127], "add_vlin": [14, 15, 40], "addit": [92, 96, 123, 127, 128, 129, 133, 134, 135, 165, 167, 169, 176, 179], "addition": 173, "adher": [49, 50, 51, 52, 53, 170], "adjust": [49, 50, 51, 52, 53, 132, 170], "advanc": [7, 8, 11, 45, 94, 116, 117, 122, 123, 127], "advantag": [14, 15, 173], "advis": [26, 174], "af": [12, 13, 115, 116, 119, 120, 122, 123, 127, 132], "affect": [29, 30, 32, 101, 109, 110], "after": [48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 94, 95, 113, 124, 125, 170, 173], "again": [108, 128], "against": [5, 112, 133, 141, 181], "aggreg": [136, 169], "aht": 50, "ai": 165, "al": 107, "alejandro": 169, "algorithm": [29, 30, 32, 47, 48, 98, 100, 101, 102, 104, 107, 109, 110, 119, 120, 124, 133, 135, 141, 146, 147, 158, 177], "alia": [108, 109, 110, 111], "align": [123, 127, 156, 177], "all": [0, 5, 8, 11, 12, 14, 15, 26, 29, 32, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 165, 166, 169, 170, 173, 176, 177, 179], "allevi": 165, "alloc": [4, 12, 14, 15, 26, 29, 30, 31, 112, 117, 119, 120, 127, 165, 169], "allow": [11, 36, 101, 108, 109, 110, 111, 115, 119, 120, 128, 173, 177], "almost": [108, 109, 110, 111], "along": 14, "alpha": [48, 61, 62, 63, 64, 65, 102, 103, 108, 112, 113, 125, 165, 173], "alpha_": [108, 112], "alphabet": [48, 61, 62, 63, 64, 65, 113, 125], "alreadi": [30, 128, 170], "also": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 29, 30, 31, 32, 40, 48, 61, 62, 63, 64, 65, 113, 116, 117, 122, 123, 124, 125, 127, 128, 133, 135, 136, 141, 165, 169, 176, 177, 179, 181], "alter": 107, "altern": [10, 170], "alwai": [95, 158, 173], "amd": [7, 8, 43, 52], "among": [14, 15, 116, 123, 124, 127, 128, 177], "amount": 13, "amplitud": 107, "an": [4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 23, 26, 29, 30, 31, 32, 33, 36, 39, 48, 50, 51, 61, 62, 63, 64, 65, 70, 73, 94, 96, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 149, 150, 152, 153, 154, 163, 172, 176, 177, 179, 182], "analysi": [12, 13, 15, 39, 40, 109, 112, 158, 178, 179], "analyst": [139, 177, 181], "analyst_view": [4, 181], "analyz": [10, 14, 15, 18, 19, 23, 29, 30, 31, 32, 36], "angular": [55, 57, 59, 60], "ani": [32, 47, 48, 61, 62, 63, 64, 65, 113, 115, 116, 117, 119, 120, 122, 123, 125, 127, 128, 129, 165, 168, 171, 172, 173, 177, 179, 180, 181, 182], "ann": 33, "annual": [4, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 63, 64, 65, 130, 131, 132, 169], "annualized_factor": [39, 130, 131, 132], "annualized_mean": [9, 10, 14, 15, 43, 63, 130, 131, 132, 178], "annualized_semi_devi": [65, 130, 131, 132], "annualized_semi_vari": [65, 130, 131, 132], "annualized_sharpe_ratio": [7, 9, 10, 14, 15, 31, 33, 36, 39, 40, 64, 130, 131, 132, 165, 176, 177, 179, 180], "annualized_sortino_ratio": [9, 10, 14, 15, 31, 64, 130, 131, 132], "annualized_standard_devi": [14, 65, 130, 131, 132], "annualized_vari": [9, 10, 18, 43, 65, 130, 131, 132, 178], "annum": 13, "anoth": [13, 14, 50, 51, 115, 116, 119, 120, 122, 123, 127, 132, 169, 173, 179, 181], "anthoni": [71, 132], "anto": 50, "anymor": 12, "api": [5, 6, 8, 33, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 139, 140, 165, 168, 170, 171, 172, 173, 177, 180, 181, 182], "append": [12, 29, 30, 32, 129, 131, 178], "appl": [4, 11, 12, 13, 19], "appli": [6, 11, 12, 13, 55, 57, 59, 60, 115, 116, 117, 119, 120, 122, 123, 124, 127, 129, 132, 143, 156, 160, 169, 173], "applic": [47, 49, 50, 51, 52, 53, 101, 119, 156, 170, 173], "appreci": 165, "approach": [13, 14, 15, 115, 116, 119, 120, 122, 123, 127, 133, 139, 165, 173, 177, 181], "appropri": [30, 49, 50, 51, 52, 53, 133, 134, 135, 170], "approxim": [110, 165, 169], "ar": [0, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 29, 30, 31, 32, 33, 36, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 158, 165, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181], "arg": [48, 54, 61, 62, 63, 64, 65, 98, 99, 113, 125, 137, 138, 144, 145], "argsort": [14, 15], "argument": [47, 48, 54, 61, 62, 63, 64, 65, 92, 98, 99, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 137, 138, 144, 145, 173], "aris": [15, 116, 123, 177, 182], "arma": [94, 176], "around": [14, 31, 33, 36, 39, 108], "arrai": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 39, 47, 54, 55, 56, 57, 58, 59, 60, 92, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 146, 147, 148, 149, 161, 162, 168, 171, 172, 177, 179, 180, 181, 182], "articl": 110, "asarrai": [7, 8, 14, 15, 92, 176, 179], "ascend": 129, "ascii": [48, 61, 62, 63, 64, 65, 113, 125], "assembl": 40, "asset": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 38, 40, 41, 43, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 165, 166, 168, 169, 170, 171, 172, 177, 179, 180, 181, 182], "asset_i": 139, "asset_j": 139, "asset_nam": 19, "assets_covari": 132, "assets_expected_return": 132, "assets_view": 6, "assign": [11, 48, 94, 97, 115, 116, 117, 119, 120, 122, 123, 127, 135], "associ": [73, 100, 108, 109, 110, 111], "assum": [4, 6, 10, 12, 13, 48, 61, 62, 63, 64, 65, 108, 109, 110, 111, 113, 125, 128], "assume_cent": [108, 109, 110, 111], "assumpt": [149, 169], "astyp": [14, 15], "attent": 165, "attilio": [112, 136, 140], "attribut": [47, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 94, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 168, 171, 172, 177, 181, 182], "author": 165, "auto": [32, 177], "auto_exampl": [16, 21, 24, 27, 34, 37, 41, 44, 46], "auto_examples_jupyt": 45, "auto_examples_python": 45, "automat": [146, 147, 170], "auxiliari": [127, 177], "avail": [50, 51, 108, 109, 110, 111, 116, 117, 122, 123, 127, 168, 170, 171, 172, 175, 177, 179, 180, 182], "averag": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 39, 40, 48, 64, 65, 66, 97, 104, 123, 127, 130, 131, 132, 133, 136, 165, 176, 177], "average_drawdown": [65, 115, 116, 119, 120, 123, 127, 130, 131, 132], "average_drawdown_ratio": [64, 130, 131, 132], "avers": [12, 13, 72, 73, 106, 117, 123, 130, 131, 132, 177], "avg": [14, 15, 36, 40], "avoid": [7, 8, 32, 36, 94, 96, 116, 124, 128, 133, 176, 177], "axi": [29, 30, 32, 129, 130, 131, 132], "b": [11, 12, 107, 116, 117, 122, 123, 127, 135, 139, 177, 179], "bac": [7, 8, 43, 52], "back": 158, "ball": [26, 117, 177], "bank": [71, 132], "bar": 112, "barrier": [127, 177], "base": [28, 29, 36, 40, 45, 47, 54, 61, 93, 94, 98, 99, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 135, 137, 138, 144, 145, 148, 149, 156, 162, 165], "basecombinatorialcv": [124, 128], "basecovari": [55, 100, 101, 106, 112, 140, 177], "basecovarianceuncertaintyset": [116, 123], "basecrossvalid": [124, 128], "basedist": [115, 119, 120, 124], "baseestim": [124, 142], "baseloadingmatrix": [5, 141], "basemu": 140, "basemuuncertaintyset": [116, 123], "baseoptim": [96, 124, 128], "baseportfolio": [129, 131, 132, 179], "baseprior": [115, 116, 117, 119, 120, 121, 122, 123, 127, 139, 141, 146, 147, 148, 149], "basic": 20, "bay": [112, 113], "bayes_stein": [112, 113], "bayesian": [139, 165, 181], "bby": [43, 165, 181], "becaus": [4, 6, 12, 18, 30, 110, 135, 169, 176], "becom": [12, 124, 128, 179], "been": [29, 30, 48, 61, 62, 63, 64, 65, 107, 113, 125, 128, 133, 134, 135, 156, 165], "befor": [39, 40, 45, 48, 61, 62, 63, 64, 65, 94, 95, 108, 109, 110, 111, 113, 125, 129, 135, 179], "begin": [48, 61, 62, 63, 64, 65, 113, 123, 125, 127, 156, 177], "behav": 169, "behind": 165, "being": [94, 110, 173], "belief": [3, 4, 5, 29, 177, 181], "bellow": 29, "belong": [9, 10, 178], "below": [4, 6, 9, 11, 12, 13, 14, 15, 29, 30, 32, 33, 36, 47, 74, 76, 85, 97, 107, 108, 115, 116, 117, 119, 120, 122, 123, 127, 130, 131, 132, 133, 135, 165, 169, 173, 177], "bench": [3, 18, 19, 20, 23, 26, 29, 30, 32], "benchmark": [7, 8, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 40, 121, 122, 123, 124, 128, 177], "benefit": 173, "best": [38, 41, 45, 108, 134, 165, 166, 173], "best_estimator_": [14, 15, 31, 33, 36, 40, 165, 173], "best_model": [14, 15, 165, 173], "best_model_r": 15, "best_model_rd": 14, "best_params_": [14, 15, 40], "beta": [5, 67, 68, 69, 70, 72, 73, 89, 112, 130, 131, 132, 141, 146, 147, 148, 149, 181], "beta_": 112, "better": [14, 15, 29, 30, 31, 32, 116, 117, 119, 120, 122, 123, 127, 130, 131, 132, 177], "between": [2, 12, 14, 15, 29, 30, 32, 43, 47, 48, 58, 61, 62, 63, 64, 65, 79, 108, 109, 110, 111, 113, 120, 122, 123, 125, 130, 131, 132, 136, 139, 156, 173, 177], "bia": [13, 112, 115, 116, 119, 120, 122, 123, 127, 132], "bibtex": 165, "big": 11, "biggl": [136, 169], "biggr": [136, 169], "bigl": 156, "bigr": 156, "bin": [58, 129, 151, 161, 162], "binary_train_test_set": 94, "binder": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "binom": 47, "bisect": [29, 30, 119, 120, 177], "bi\u0144kowski": [119, 120], "black": [1, 16, 45, 139, 166, 177], "blacklitterman": [4, 6, 165, 177, 181], "block": [109, 146, 147], "block_siz": [109, 146, 147], "blue": [29, 30, 32, 47], "bodnar": [112, 113], "bodnar_okhrin": [112, 113], "bond": [116, 117, 122, 123, 127, 139, 165, 169], "bool": [47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 158, 160], "boolean": [133, 134, 135], "bootstrap": [146, 147, 165], "bootstrapcovarianceuncertaintyset": 182, "bootstrapmuuncertaintyset": [15, 165, 177, 182], "both": [2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 31, 33, 36, 39, 94, 110, 129, 132, 150, 158, 169, 177, 178, 182], "bound": [9, 14, 70, 73, 115, 116, 117, 119, 120, 122, 123, 127, 130, 131, 132], "boundari": [48, 61, 62, 63, 64, 65, 113, 125], "brace": [48, 61, 62, 63, 64, 65, 113, 125], "break": [48, 61, 62, 63, 64, 65, 113, 125, 174], "bring": 26, "browser": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "bsd": 165, "budget": [21, 116, 117, 122, 123, 127, 165, 166, 173], "bui": 12, "build": [3, 4, 5, 6, 19, 55, 57, 59, 60, 120, 124, 165, 174, 178, 182], "built": 165, "bunch": 128, "busi": [12, 14, 15, 31, 33, 36, 40, 169], "c": [110, 127, 156, 177, 179], "c_": [12, 48, 115, 116, 119, 120, 122, 123, 127, 132, 156], "c_t": 48, "cach": [50, 51, 116, 170, 179], "calcul": [47, 48, 108], "call": [7, 8, 14, 29, 30, 32, 48, 58, 61, 62, 63, 64, 65, 96, 113, 116, 123, 124, 125, 136, 173, 178, 179], "callabl": [92, 116, 117, 122, 123, 127], "calmar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 130, 131, 132], "calmar_ratio": [36, 64, 130, 131, 132, 165], "cambridg": [120, 124], "can": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 48, 54, 58, 61, 62, 63, 64, 65, 70, 73, 79, 92, 94, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 142, 144, 145, 150, 158, 160, 165, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182], "candid": 173, "cannot": [12, 79, 130, 131, 132, 169], "cap": [11, 106], "capit": [11, 48, 61, 62, 63, 64, 65, 113, 125], "captur": 56, "cardin": [14, 48, 116, 122, 123, 156], "carlo": [165, 169], "case": [11, 15, 26, 48, 61, 62, 63, 64, 65, 92, 96, 113, 116, 117, 122, 123, 125, 127, 143, 156, 169, 179, 182], "casefold": [48, 61, 62, 63, 64, 65, 113, 125], "caseless": [48, 61, 62, 63, 64, 65, 113, 125], "cd": 108, "cdar": [1, 7, 8, 9, 14, 15, 16, 18, 19, 20, 23, 28, 29, 34, 36, 40, 45, 65, 70, 115, 116, 119, 120, 123, 127, 130, 131, 132, 165, 166, 177, 179], "cdar_beta": [116, 123, 127, 130, 131, 132], "cdar_ratio": [36, 64, 130, 131, 132, 177], "cdot": [11, 12, 13, 106, 115, 116, 117, 119, 120, 122, 123, 127, 132, 179], "center": [26, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 108, 109, 110, 111, 113, 117, 125, 170, 177], "central": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 75, 87, 130, 131, 132, 165], "centroid": 48, "certain": [107, 177], "chain": [29, 30, 32], "challeng": 108, "chanc": 33, "chang": [5, 7, 8, 12, 13, 14, 29, 30, 32, 40, 108, 109, 110, 111, 169, 174], "char": [48, 61, 62, 63, 64, 65, 113, 125], "charact": [48, 61, 62, 63, 64, 65, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "characterist": 169, "check": [7, 8, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 158, 160, 177], "check_observations_ord": 131, "chen": 110, "chernoff": [70, 73, 130, 131, 132], "chi": [146, 147, 148, 149], "choic": [29, 30, 32, 108, 112, 169, 173], "choleski": [3, 4, 5, 98, 100, 101, 102, 104, 107, 109, 116, 117, 121, 122, 123, 127, 139, 143, 158, 160, 177, 181], "choos": [31, 33, 36, 39, 97, 116, 117, 122, 123, 127, 176], "chose": 19, "chosen": [29, 31, 33, 36, 40, 55, 124, 128, 173, 177], "chronolog": 131, "circ": 169, "circular": [146, 147, 165], "clarabel": [26, 116, 117, 122, 123, 127], "class": [7, 8, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 173, 177, 178, 179, 182], "classifi": 100, "classmethod": [48, 61, 62, 63, 64, 65, 113, 125], "claus": 165, "clear": [14, 129, 130, 131, 132], "clearli": 14, "clip": [98, 100, 101, 102, 104, 107, 109, 141, 158], "clone": [2, 14, 15], "close": [29, 49, 50, 51, 52, 53, 108, 148, 169, 170], "closer": 26, "cluster": [29, 30, 31, 33, 34, 101, 115, 119, 120, 124, 128, 156, 166], "clustering_estim": [32, 33, 124, 177], "clustering_estimator_": [32, 124], "clustering_estimator__linkage_method": 33, "co": 107, "code": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 48, 61, 62, 63, 64, 65, 113, 125, 165], "codec": [48, 61, 62, 63, 64, 65, 113, 125], "codepend": [54, 55, 56, 57, 58, 59, 60, 115, 119, 120, 124, 171, 177], "codependence_": [54, 55, 56, 57, 58, 59, 60, 171], "coef": 14, "coeffici": [14, 109, 110, 111, 116, 122, 123], "coher": [47, 70, 73, 130, 131, 132, 165, 179], "collect": [96, 124, 128, 176, 177], "color": [14, 15, 29, 30, 32, 40, 47, 129], "color_scal": [9, 10, 14, 15, 129], "column": [7, 8, 11, 12, 13, 19, 96, 108, 115, 116, 117, 119, 120, 122, 123, 127, 132, 133, 134, 135, 139, 179], "column_indic": 96, "com": [7, 8, 165], "combin": [31, 33, 36, 39, 94, 97, 109, 110, 111, 128, 139, 173, 176], "combinatori": [28, 34, 45, 93, 94, 96, 97, 166, 177], "combinatorialcv": [124, 128], "combinatorialpurgecv": 176, "combinatorialpurgedcv": [31, 33, 36, 39, 96, 124, 128, 165, 176, 177], "come": [49, 50, 51, 52, 53, 108, 170], "common": [5, 6, 29, 49, 136, 139, 140, 141, 169, 177, 181], "commonli": 177, "commut": [148, 155], "comp_cov": [108, 109, 110, 111], "compar": [2, 7, 8, 10, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 48, 61, 62, 63, 64, 65, 94, 95, 108, 109, 110, 111, 113, 122, 123, 125, 131, 135, 139, 143, 176, 177, 179], "comparison": [2, 3, 4, 5, 6, 31, 48, 61, 62, 63, 64, 65, 113, 125], "compat": [5, 7, 8, 95, 165, 176, 179, 180, 181], "complement": 167, "complet": [31, 48], "complex": [129, 177], "compon": [5, 47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 169, 181], "compos": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 49, 50, 51, 52, 53, 115, 116, 119, 120, 122, 123, 127, 129, 131, 132, 165, 170, 179], "composit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 31, 33, 36, 39, 40, 43, 50, 51, 52, 129, 130, 131, 132, 170, 178, 179], "compound": [77, 78, 129, 130, 131, 132, 136, 140, 169, 178], "comput": [4, 14, 15, 29, 30, 32, 47, 48, 55, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 115, 116, 119, 120, 121, 122, 123, 124, 127, 130, 131, 132, 135, 139, 146, 147, 148, 149, 155, 156, 158, 160, 161, 162, 169, 173, 177, 179, 181], "concaten": [9, 48, 61, 62, 63, 64, 65, 113, 125], "concentr": [30, 71, 132, 165], "concept": [7, 8, 70, 73, 130, 131, 132], "concern": [17, 22, 25, 28, 35, 45, 174], "conclud": 30, "condens": 47, "condensed_distance_": 47, "condit": [2, 8, 10, 64, 65, 67, 68, 79, 100, 108, 109, 116, 117, 123, 127, 130, 131, 132, 165, 177], "confid": [15, 67, 68, 69, 70, 72, 73, 89, 116, 117, 123, 127, 130, 131, 132, 139, 146, 147, 148, 149, 150], "confidence_level": [15, 146, 147, 148, 149, 177, 182], "configur": [133, 134, 135], "confirm": 30, "conjunct": 96, "consecut": 173, "consid": [14, 15, 31, 48, 61, 62, 63, 64, 65, 113, 125, 132, 135, 148, 173], "consider": 165, "consist": [5, 8, 36, 47, 48, 54, 55, 56, 57, 58, 59, 60, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 139, 140, 173, 176, 177, 181], "constant": [100, 112], "constrain": [14, 15, 177], "constraint": [1, 2, 9, 10, 14, 15, 16, 26, 45, 116, 117, 122, 123, 127, 166, 177], "construct": [26, 107, 117, 173, 177], "constructor": [128, 173], "consumpt": 96, "contain": [2, 3, 4, 5, 7, 8, 29, 30, 32, 47, 48, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 173, 177, 178, 179, 181], "context": [96, 108, 124, 128, 142], "conting": 58, "continu": [14, 15, 36, 136, 169, 173], "contribut": [28, 34, 36, 45, 47, 119, 127, 132, 135, 165, 166, 179], "contributor": 165, "control": [11, 26, 95, 96, 108, 122, 123, 139, 179], "convent": [47, 54, 55, 56, 57, 58, 59, 60, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 139, 140], "converg": [26, 108, 116, 143], "convers": 169, "convert": [4, 6, 12, 13, 48, 61, 62, 63, 64, 65, 92, 113, 125, 139, 140, 157, 158, 159, 169], "convex": [26, 62, 109, 110, 111, 116, 117, 127, 132, 165, 177, 179], "cookbook": 169, "coordin": 108, "cophenet": [29, 30, 32, 47], "copi": [48, 61, 62, 63, 64, 65, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "core": 173, "corr": [55, 57, 59, 60, 133, 157, 159], "correct": [146, 147], "correl": [12, 18, 29, 30, 32, 38, 41, 45, 55, 56, 57, 59, 60, 94, 107, 119, 120, 133, 135, 157, 158, 159, 165, 166, 176], "correspond": [10, 47, 76, 96, 101, 108, 124, 128, 129, 130, 131, 132, 133, 134, 135, 176, 179], "cost": [1, 16, 45, 97, 115, 116, 117, 119, 120, 122, 123, 127, 132, 166, 177, 179], "coul": 2, "could": 169, "count": [48, 61, 62, 63, 64, 65, 107, 113, 125, 129], "coupl": 6, "cov": [109, 110, 111, 148, 157, 158, 159, 169, 177], "cov_nearest": [98, 100, 101, 102, 104, 107, 109, 141], "covari": [3, 4, 5, 6, 17, 21, 40, 45, 55, 98, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 127, 132, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 157, 158, 159, 166, 169, 177, 181, 182], "covariance_": [98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 168], "covariance_estim": [3, 5, 20, 36, 40, 55, 100, 101, 106, 112, 140, 165, 177, 181], "covariance_estimator_": [55, 100, 101, 106, 112, 140], "covariance_uncertainty_set_estim": [116, 123, 182], "covariance_uncertainty_set_estimator_": [116, 123], "covariancedist": [171, 177], "cp": [116, 117, 122, 123, 127], "cpu": 96, "creat": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 96, 170, 178, 181], "criterion": 132, "cross": [14, 32, 40, 93, 94, 95, 96, 108, 124, 128, 173, 177], "cross_val_predict": [12, 13, 14, 15, 31, 33, 36, 39, 40, 128, 165, 176, 179], "cross_val_scor": 92, "crsp": [49, 50, 51, 52, 53, 170], "crucial": 12, "ct": [130, 131, 132], "cumul": [7, 8, 12, 13, 18, 19, 20, 26, 31, 33, 36, 39, 40, 77, 78, 129, 130, 131, 132, 146, 147, 148, 149], "cumulative_return": [130, 131, 132, 179], "cumulative_returns_df": [130, 131, 132, 179], "current": [108, 109, 110, 111, 130, 131, 132, 135, 173], "custom": [40, 92, 116, 117, 122, 123, 127, 169, 173], "custom_scor": 173, "cv": [12, 13, 14, 15, 28, 31, 34, 36, 39, 40, 45, 94, 95, 96, 108, 124, 128, 165, 166, 173, 176, 177], "cv_result": [14, 15, 40], "cv_results_": [14, 15, 40, 108, 173], "cvar": [1, 2, 7, 9, 14, 15, 16, 17, 18, 20, 21, 23, 27, 28, 30, 31, 32, 33, 34, 36, 40, 65, 73, 115, 116, 117, 119, 120, 123, 124, 127, 130, 131, 132, 166, 173, 179], "cvar_beta": [15, 116, 117, 123, 127, 130, 131, 132], "cvar_ratio": [2, 15, 31, 33, 64, 130, 131, 132], "cvpxy": [116, 117, 122, 123, 127], "cvx": [43, 116, 165, 181], "cvxpy": [116, 117, 122, 123, 127, 165], "d": [47, 48, 58, 107, 149, 156], "d_": 156, "dai": [12, 13, 14, 15, 31, 33, 36, 39, 40, 169], "daili": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 49, 50, 51, 52, 53, 115, 116, 119, 120, 122, 123, 127, 132, 139, 169, 170], "dar": [69, 70, 130, 131, 132], "dash": [14, 15, 40], "data": [43, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 94, 95, 96, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 124, 125, 128, 133, 134, 135, 136, 140, 141, 162, 165, 170, 173, 174, 176, 177, 179, 181], "data_hom": [50, 51], "dataclass": [3, 4, 5, 143, 150, 181], "datafram": [11, 12, 13, 49, 50, 51, 52, 53, 115, 116, 117, 119, 120, 122, 123, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 168, 171, 172, 177, 179, 180, 181, 182], "dataset": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 94, 96, 98, 100, 101, 102, 104, 107, 109, 158, 167, 168, 171, 172, 173, 176, 177, 178, 180, 181, 182], "date": [7, 8, 43, 49, 50, 51, 53, 179], "datetim": 179, "ddof": [104, 177], "de": [29, 32, 55, 57, 59, 60, 94, 100, 101, 120, 124, 177], "decad": [119, 120], "decim": [48, 61, 62, 63, 64, 65, 113, 125], "declar": 108, "decomposit": [5, 98, 100, 101, 102, 104, 107, 109, 116, 117, 121, 122, 123, 127, 139, 141, 143, 158, 160, 177, 181], "deconstruct": 107, "decreas": [40, 173], "dedic": 173, "deep": [47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 165, 173], "def": [48, 61, 62, 63, 64, 65, 113, 125, 173, 177], "default": [3, 4, 5, 7, 8, 11, 12, 13, 14, 26, 29, 30, 32, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 82, 84, 85, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 163, 169, 170, 173, 176, 177, 179, 181], "defin": [2, 11, 12, 47, 55, 56, 57, 58, 59, 60, 71, 72, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 119, 120, 122, 123, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 150, 156, 169, 182], "definit": [40, 98, 100, 101, 102, 104, 107, 109, 141, 158, 160], "deform": 10, "degre": [79, 130, 131, 132, 139, 146, 147, 148, 149], "delai": 96, "delatt": 165, "delet": [48, 61, 62, 63, 64, 65, 113, 125], "delimit": [48, 61, 62, 63, 64, 65, 113, 125], "demand": 96, "demiguel": 165, "demonstr": [36, 40, 169, 177], "dendrogram": [47, 119, 120, 177], "denois": [3, 100, 177, 181], "denoisecovari": [3, 165, 168, 177, 181], "denomin": [107, 110, 135], "denot": [148, 169], "densiti": [156, 161], "depend": [12, 33, 56, 58, 72, 92, 107, 116, 117, 122, 123, 127, 130, 131, 132, 133, 146, 147, 165, 169, 176], "deriv": [121, 169], "descend": 129, "descent": 108, "describ": [109, 139, 173], "descript": [47, 48, 123, 127], "design": [6, 165, 177], "detail": [0, 98, 100, 101, 102, 104, 107, 108, 109, 116, 117, 122, 123, 127, 165, 173], "determin": [33, 96, 108, 112, 124, 128, 131, 156, 169], "determinist": [13, 115, 116, 119, 120, 122, 123, 127], "deton": 101, "detonecovari": [165, 168], "develop": [29, 30, 32, 119, 120, 124, 156, 165, 174, 177], "deviat": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 40, 64, 65, 76, 82, 84, 86, 108, 116, 123, 127, 129, 130, 131, 132, 157, 158, 159, 165, 177], "df": [49, 50, 51, 52, 53], "diaconi": 161, "diag": 169, "diagon": [139, 141, 146, 147, 148, 149], "dict": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 54, 55, 56, 57, 58, 59, 60, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "dictionari": [11, 12, 13, 48, 61, 62, 63, 64, 65, 113, 115, 116, 117, 119, 120, 122, 123, 125, 127, 128, 132, 139, 173], "differ": [2, 7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 33, 36, 39, 40, 43, 47, 64, 65, 79, 83, 110, 119, 122, 123, 127, 129, 130, 131, 132, 156, 165, 169, 177], "differenti": 100, "digit": [48, 61, 62, 63, 64, 65, 113, 125], "dimens": 143, "dimension": [5, 40, 98, 100, 101, 102, 104, 107, 109, 112, 141, 181], "direcli": 13, "direct": [108, 165], "directli": [2, 11, 58, 115, 116, 119, 120, 122, 123, 127, 128, 143, 169, 173, 179], "directori": 170, "dirichlet": [126, 164, 165], "dirk": 132, "discard": [48, 61, 62, 63, 64, 65, 113, 125], "discret": [26, 117, 173, 177], "dispatch": 96, "dispers": 156, "displai": [7, 8, 29, 30, 32, 36, 40, 47, 129, 130, 131, 132], "display_sub_ptf_nam": [31, 33, 36, 40, 129], "dist": [48, 108, 109, 110, 111], "distanc": [31, 33, 47, 48, 97, 108, 109, 110, 111, 115, 119, 120, 124, 152, 156, 165, 167, 177], "distance_": [54, 55, 56, 57, 58, 59, 60, 167, 171], "distance_estim": [29, 30, 31, 32, 33, 47, 115, 119, 120, 124, 167, 177], "distance_estimator_": [115, 119, 120, 124], "distancecorrel": [171, 177], "distinct": [29, 30, 32, 47], "distinguish": [74, 76, 82, 84, 85, 116, 123, 127, 130, 131, 132], "distribut": [3, 4, 5, 14, 15, 26, 29, 49, 50, 51, 52, 53, 79, 108, 109, 110, 111, 117, 126, 129, 130, 131, 132, 146, 147, 148, 149, 156, 163, 164, 165, 169, 170, 173, 177, 181, 182], "distribution": [27, 117, 165, 166], "distributionallyrobustcvar": [25, 26, 45, 177], "diverg": 43, "diversif": [14, 24, 36, 116, 122, 123, 132, 165, 166], "diversifi": [55, 57, 59, 60, 71, 120, 124, 132], "divid": [12, 64, 108, 109, 110, 111, 130, 131, 132], "dividend": [49, 50, 51, 52, 53, 170], "divis": [30, 119, 177], "do": [31, 173], "docstr": 108, "document": [7, 8, 116, 117, 122, 123, 127], "doe": [14, 109, 170, 173], "doesn": [29, 110], "domin": [79, 129, 130, 131, 132, 135, 165, 179], "don": 11, "done": [48, 61, 62, 63, 64, 65, 108, 113, 125, 173], "donnat": [119, 120], "dot": [0, 32, 36, 124, 128, 132, 177, 179], "doubl": 15, "down": [14, 29, 30, 32, 119, 120, 177], "download": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 50, 51, 170], "download_if_miss": [50, 51], "downsid": [65, 74, 76, 82, 84, 85, 116, 123, 127, 130, 131, 132, 177], "drawdown": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 64, 65, 66, 67, 69, 70, 78, 80, 88, 116, 123, 127, 130, 131, 132, 165, 177, 179], "drawdown_at_risk": [62, 115, 119, 120, 130, 131, 132], "drawdown_at_risk_beta": [130, 131, 132], "drawdown_at_risk_ratio": [64, 130, 131, 132], "drawn": [108, 109, 110, 111, 126], "drift": 179, "driven": 117, "drop": [38, 41, 45, 128, 133, 136, 165, 166], "dropcorrel": [39, 180], "dt": 179, "dtype": [29, 31, 33, 36, 39, 47, 108], "dual": 108, "dualiti": 108, "due": [12, 33, 40, 96, 98, 100, 101, 102, 104, 107, 109, 142, 158, 179], "duplic": 116, "durat": 12, "dure": [13, 30, 47, 55, 56, 57, 58, 59, 60, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 122, 123, 124, 127, 128, 133, 134, 135, 139, 140, 141, 177], "dynam": 116, "e": [5, 96, 108, 109, 110, 111, 128, 129, 141, 169, 181], "each": [5, 7, 8, 11, 12, 13, 14, 18, 19, 20, 23, 29, 30, 31, 32, 33, 36, 39, 40, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 173, 176, 177, 179, 181], "earlier": 29, "easi": 169, "eco": [116, 117, 122, 123, 127], "edar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 65, 115, 116, 119, 120, 123, 127, 130, 131, 132, 165, 177], "edar_beta": [116, 123, 127, 130, 131, 132], "edar_ratio": [64, 130, 131, 132], "eff": [71, 132], "effect": [7, 8, 9, 18, 19, 20, 23, 29, 30, 32, 71, 107, 108, 109, 110, 111, 132, 133], "effective_number_asset": 132, "effici": [1, 10, 16, 43, 45, 120, 124, 166, 169, 173, 178], "efficient_frontier_s": [9, 14, 15, 43, 123, 178], "eigenvalu": [98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 158], "eigenvector": [100, 101], "either": [133, 173], "elast": 108, "eldar": 110, "electr": [4, 11, 12, 13, 19], "electron": [120, 124], "element": [100, 101, 116, 117, 120, 122, 123, 124, 127, 128, 129, 133, 134, 135, 146, 147, 148, 149, 169], "ellipsoid": [15, 116, 123, 146, 147, 148, 149, 150, 177, 182], "elsewher": 108, "embargo": [31, 33, 36, 39, 94, 176], "embargo_s": 94, "embed": 15, "empir": [1, 6, 16, 45, 100, 104, 105, 140, 148, 149, 165, 166], "empiricalcovari": [36, 40, 100, 101, 106, 112, 140, 168], "empiricalcovarianceuncertaintyset": [146, 182], "empiricalmu": [140, 172], "empiricalmuuncertaintyset": [15, 182], "empiricalprior": [3, 5, 20, 29, 36, 40, 43, 115, 116, 117, 119, 120, 121, 122, 123, 127, 139, 141, 146, 147, 148, 149, 165, 169, 173, 177, 181], "emploi": [29, 31, 120, 177], "empti": [48, 61, 62, 63, 64, 65, 113, 125, 129, 131], "enable_metadata_rout": [108, 109, 110, 111], "encapsul": [47, 54, 55, 56, 57, 58, 59, 60, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "encod": [48, 61, 62, 63, 64, 65, 113, 125], "end": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 48, 61, 62, 63, 64, 65, 94, 95, 98, 100, 101, 102, 104, 107, 109, 113, 123, 125, 127, 129, 135, 156, 177], "endswith": [48, 61, 62, 63, 64, 65, 113, 125], "enet_tol": 108, "enhanc": [92, 100, 107, 176, 179], "enough": [0, 31, 33, 36, 39, 179], "ensembl": [9, 10, 36, 114, 128, 165, 177], "ensur": [107, 127, 136, 176, 177], "entir": [9, 14, 108], "entri": [48, 165], "entrop": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 64, 65, 70, 72, 73, 116, 123, 127, 130, 131, 132, 165, 177], "entropi": [58, 70, 73, 130, 131, 132], "entropic_risk_measur": [62, 115, 119, 120, 130, 131, 132], "entropic_risk_measure_beta": [130, 131, 132], "entropic_risk_measure_ratio": [64, 130, 131, 132], "entropic_risk_measure_theta": [130, 131, 132], "enum": [48, 61, 62, 63, 64, 65, 113, 125], "enumer": [62, 63, 64, 65, 94, 95, 125, 151], "environ": 170, "eq": 110, "equal": [8, 12, 14, 18, 23, 26, 28, 29, 31, 32, 33, 34, 36, 45, 47, 48, 61, 62, 63, 64, 65, 106, 113, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 129, 165, 166], "equalweight": [2, 8, 14, 23, 26, 29, 30, 32, 33, 36, 126, 177], "equat": 14, "equilibrium": [106, 139, 165, 177], "equilibriummu": [139, 172, 177], "equiti": [116, 117, 122, 123, 127, 139, 165], "equival": [11, 14, 29, 115, 116, 117, 119, 120, 122, 123, 127, 173], "error": [1, 5, 15, 16, 45, 48, 61, 62, 63, 64, 65, 108, 109, 110, 111, 112, 113, 116, 117, 122, 123, 125, 127, 131, 132, 141, 152, 153, 154, 158, 165, 166, 177, 181, 182], "error_norm": [108, 109, 110, 111], "esfahani": [26, 117, 177], "estim": [3, 4, 5, 6, 7, 13, 14, 15, 18, 19, 20, 23, 26, 31, 33, 36, 40, 47, 54, 55, 56, 57, 58, 59, 60, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 161, 165, 169, 176, 180], "estimators_": [36, 128], "et": 107, "etc": [32, 124, 165, 168, 169, 171, 172, 177, 179, 180, 181, 182], "etf": [5, 6, 29, 49], "europ": [116, 117, 122, 123, 127, 139, 165], "european": 139, "evalu": [7, 8, 9, 14, 18, 19, 20, 23, 31, 33, 36, 40, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 173], "evar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 65, 115, 116, 119, 120, 123, 127, 130, 131, 132, 165, 177], "evar_beta": [116, 123, 127, 130, 131, 132], "evar_ratio": [64, 130, 131, 132], "even": [5, 8, 95, 169, 181], "everi": [7, 8, 11, 12, 13, 176, 177], "evolutionari": 135, "ewcovari": 168, "ewm": 103, "ewmu": [165, 172, 173], "exacerb": 14, "exact": 96, "exactli": [108, 109, 110, 111], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 94, 95, 96, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 132, 133, 134, 135, 139, 143, 165, 166, 167, 168, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182], "exce": 107, "except": [8, 129, 130, 131, 132], "excess": [64, 130, 131, 132], "exclud": [12, 94, 95], "execut": [16, 21, 24, 27, 34, 37, 41, 44, 46, 96, 166], "exhibit": [94, 176], "exist": [47, 95, 108, 109, 110, 111, 116, 117, 122, 123, 127, 170], "exp": 169, "expand": [48, 61, 62, 63, 64, 65, 113, 125], "expandtab": [48, 61, 62, 63, 64, 65, 113, 125], "expect": [2, 3, 4, 5, 6, 9, 12, 13, 15, 18, 19, 23, 65, 67, 68, 79, 99, 103, 105, 106, 112, 115, 116, 117, 119, 120, 121, 122, 123, 125, 127, 130, 131, 132, 139, 140, 141, 143, 147, 149, 150, 169, 177, 181, 182], "expected_returns_from_asset": 132, "expend_train": 95, "explain": [5, 12, 13, 29, 43, 101, 141, 181], "explicit": [54, 98, 99, 108, 137, 138, 144, 145], "exploit": [30, 33, 119, 177], "explor": [43, 108, 173, 177, 178], "explos": 96, "expon": [55, 57, 59, 60, 173], "exponenti": [72, 102, 103, 130, 131, 132, 165], "expos": 124, "express": [12, 13, 48, 61, 62, 63, 64, 65, 96, 113, 115, 116, 117, 119, 120, 122, 123, 125, 127, 132, 139], "extend": [36, 43, 107, 129, 176, 178], "extrariskmeasur": [92, 115, 119, 120, 124, 128, 130, 131, 132], "extrem": [76, 107, 130, 131, 132, 165], "ey": 10, "f": [2, 14, 23, 31, 33, 36, 39, 43, 48, 61, 62, 63, 64, 65, 94, 95, 97, 113, 123, 125, 177, 179], "f_": [13, 97, 115, 116, 119, 120, 122, 123, 127, 132], "face": [108, 165], "fact": 165, "factor": [1, 3, 4, 16, 29, 45, 49, 96, 102, 103, 106, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 136, 141, 142, 143, 146, 147, 148, 149, 166, 177], "factor_pric": [5, 6, 29, 165, 177, 181], "factor_prior_estim": [5, 6, 141, 165, 177, 181], "factor_prior_estimator_": 141, "factor_view": [6, 165, 177], "factori": 92, "factormodel": [5, 6, 29, 165, 177, 181], "fail": [98, 100, 101, 102, 104, 107, 108, 109, 116, 117, 122, 123, 127, 158], "failur": [48, 61, 62, 63, 64, 65, 113, 125], "fall": [15, 177], "fals": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 48, 50, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 95, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 112, 113, 116, 117, 122, 123, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 158, 160, 165, 173, 176, 177, 178, 180], "farthest": 48, "fast": [96, 129, 142], "faster": 158, "fat": [76, 130, 131, 132], "favor": 173, "feasibl": [10, 11], "featur": [58, 94, 102, 108, 109, 110, 111, 133, 134, 135, 139, 140, 141, 165, 176], "feature_names_in_": [47, 55, 56, 57, 58, 59, 60, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 122, 123, 124, 127, 128, 133, 134, 135, 139, 140, 141], "feature_names_out": [133, 134, 135], "februari": 109, "fee": [1, 16, 45, 115, 116, 119, 120, 122, 123, 127, 132, 165, 166, 177, 179], "field": [48, 61, 62, 63, 64, 65, 113, 125], "fig": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47], "figur": [7, 8, 14, 15, 40, 47, 129, 130, 131, 132], "file": [16, 21, 24, 27, 34, 37, 41, 44, 46, 166], "fill": [14, 40, 48, 61, 62, 63, 64, 65, 113, 125], "fillchar": [48, 61, 62, 63, 64, 65, 113, 125], "fillcolor": [14, 40], "filter": [14, 129], "final": [2, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 23, 29, 30, 31, 32, 36, 107, 119, 120, 124, 128, 135, 177, 179], "final_estim": [36, 128, 177], "final_estimator_": [36, 128], "financ": [100, 101, 120, 124, 158], "financi": [5, 11, 71, 94, 101, 119, 120, 132, 139, 141, 176, 181], "find": [7, 8, 9, 10, 18, 23, 26, 31, 33, 36, 40, 47, 48, 61, 62, 63, 64, 65, 97, 98, 100, 101, 102, 104, 107, 109, 112, 113, 117, 125, 141, 158, 169, 173, 177, 178], "fine": 165, "finer": 173, "finit": [26, 117, 132, 177], "first": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 29, 36, 39, 40, 43, 48, 61, 62, 63, 64, 65, 74, 95, 101, 108, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 158, 165, 169, 174, 177], "first_front_onli": 129, "first_lower_partial_mo": [65, 115, 116, 119, 120, 123, 127, 130, 131, 132], "first_lower_partial_moment_ratio": [64, 130, 131, 132], "fischer": 139, "fit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 54, 55, 56, 57, 58, 59, 60, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 167, 168, 169, 171, 172, 173, 176, 177, 178, 180, 181, 182], "fit_intercept": [5, 142], "fit_param": [96, 133, 134, 135], "fit_predict": [9, 10, 33, 43, 47, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128], "fit_transform": [133, 134, 135, 180], "fitness_measur": [130, 131, 132, 135, 179], "fitting_period": [12, 13], "fix": [12, 108, 139], "flag": 129, "flat": 47, "flint": 107, "flip": 92, "float": [11, 12, 13, 14, 15, 40, 55, 56, 57, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 139, 140, 146, 147, 148, 149, 150, 158], "fluctuat": 107, "fold": [12, 31, 33, 36, 39, 94, 95, 96, 97, 108, 124, 128, 173, 176, 179], "folder": [50, 51, 170], "follow": [11, 19, 40, 48, 61, 62, 63, 64, 65, 94, 113, 116, 117, 122, 123, 125, 127, 133, 134, 135, 139, 165, 167, 168, 169, 171, 172, 173, 176, 177, 180, 181, 182], "font": 9, "foral": [123, 177], "forc": [146, 147, 149], "forecast": 139, "forest": 48, "form": [32, 47, 48, 54, 55, 56, 57, 58, 59, 60, 79, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 167], "format": [48, 61, 62, 63, 64, 65, 113, 125, 129, 130, 131, 132, 133, 134, 135], "format_map": [48, 61, 62, 63, 64, 65, 113, 125], "formul": [110, 116, 179], "formula": [12, 106, 109, 110, 112, 115, 116, 119, 120, 122, 123, 127], "forward": [12, 13, 15, 95, 165], "found": [48, 61, 62, 63, 64, 65, 108, 113, 125], "four": 26, "fourth": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 75, 76, 130, 131, 132, 165], "fourth_central_mo": [62, 115, 119, 120, 130, 131, 132], "fourth_lower_partial_mo": [62, 115, 119, 120, 130, 131, 132], "frac": [15, 48, 58, 71, 97, 116, 123, 125, 132, 136, 148, 149, 156, 169, 177], "framework": [165, 174], "frank": [119, 120], "free": [116, 117, 122, 123, 127, 130, 131, 132, 139], "freedman": [58, 151, 161], "freedom": [146, 147, 148, 149], "frequenc": [139, 169], "frequent": [169, 179], "frobeniu": [108, 109, 110, 111], "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 65, 70, 73, 77, 78, 92, 94, 95, 97, 100, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182], "front": [48, 61, 62, 63, 64, 65, 113, 125, 129, 135, 178], "frontier": [1, 10, 16, 43, 45, 120, 124, 166, 169, 178], "ftse": [14, 15, 31, 36, 39, 40, 50], "full": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 48, 128, 173, 179], "fulli": [11, 116, 117, 122, 123, 180, 181], "function": [12, 14, 15, 26, 40, 72, 92, 96, 97, 108, 116, 117, 122, 123, 125, 127, 129, 130, 131, 132, 146, 147, 148, 149, 165, 169, 173, 176, 177, 178], "fund": 165, "further": [0, 33], "futur": [4, 6, 116, 117, 122, 123, 127, 169], "g": [96, 97, 108, 109, 110, 111, 128, 165], "g_": 97, "galleri": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 166], "gamma": 173, "gap": [47, 108, 119, 156], "garp": [136, 140, 169], "gaussian": [108, 109, 110, 111], "gautier": [119, 120, 165], "ge": [4, 6, 11, 12, 13, 19, 43, 123, 127, 156, 177], "ge0": 177, "gener": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 94, 95, 96, 108, 120, 124, 128, 133, 134, 135, 146, 147, 169, 173, 176, 177], "gerber": [5, 107], "gerbercovari": [5, 55, 165, 168], "get": [4, 6, 26, 47, 54, 55, 56, 57, 58, 59, 60, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 169, 181], "get_feature_names_out": [133, 134, 135], "get_measur": [130, 131, 132], "get_metadata_rout": [47, 54, 55, 56, 57, 58, 59, 60, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "get_n_split": 95, "get_param": [47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 165, 173], "get_path_id": [93, 94], "get_precis": [108, 109, 110, 111], "get_summari": 165, "get_support": [133, 134, 135], "get_weight": [132, 179], "getter": [108, 109, 110, 111], "gini": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 65, 79, 83, 123, 127, 130, 131, 132, 165, 177], "gini_mean_differ": [36, 65, 130, 131, 132], "gini_mean_difference_ratio": [64, 115, 116, 119, 120, 123, 127, 130, 131, 132], "github": [165, 170], "give": [0, 7, 8, 96, 108, 169], "given": [40, 48, 61, 62, 63, 64, 65, 69, 72, 89, 108, 109, 110, 111, 113, 124, 125, 128, 129, 130, 131, 132, 134, 139, 149, 157, 169, 173], "gmd": [79, 83, 130, 131, 132], "go": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 169], "goal": 100, "goe": [108, 177], "good": [92, 135], "grand": 112, "graph": [108, 129], "graph_obj": 40, "graph_object": [14, 15], "graphic": 165, "graphicallasso": 108, "graphicallassocv": 168, "greater": [30, 76, 101, 108, 116, 117, 122, 123, 127, 130, 131, 132], "greater_is_bett": 92, "greatli": [29, 30, 32], "green": [14, 15, 40], "grid": [14, 15, 108], "grid_search": [14, 15, 36, 40, 173], "grid_search_herc": 31, "grid_search_hrp": [31, 33], "gridsearch": 33, "gridsearchcv": [14, 15, 31, 33, 36, 40, 92, 165, 173], "group": [94, 95, 96, 116, 117, 122, 123, 127, 130, 131, 132, 139, 165, 177], "groupkfold": 96, "groups_": 139, "guarante": 117, "guid": [0, 7, 8, 47, 54, 55, 56, 57, 58, 59, 60, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 165, 169], "guidelin": 0, "g\u00e1bor": 56, "h": [58, 107, 132], "ha": [8, 12, 14, 18, 19, 23, 29, 30, 31, 32, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 133, 134, 135, 139, 140, 141, 156, 165, 173, 177], "hadamard": 169, "hand": 136, "handl": [12, 26, 48, 61, 62, 63, 64, 65, 113, 114, 117, 125, 177], "hat": [15, 112, 116, 123, 146, 147, 148, 149, 150, 182], "have": [2, 4, 6, 10, 11, 12, 14, 30, 36, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 165, 169, 173], "hd": [29, 30, 32, 43], "head": [7, 8, 43, 49, 50, 51, 52, 53, 170], "heatmap": [29, 30, 32, 47], "heavi": [76, 130, 131, 132], "hee": 48, "height": [29, 30, 32], "help": [5, 141, 181], "herc": [28, 30, 34, 45, 166, 176, 177], "here": [7, 8, 29, 32, 108, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 169, 173, 177], "herfindahl": [71, 132], "hermitian": 160, "hero": 110, "hierarch": [32, 34, 36, 47, 115, 119, 120, 124, 165, 166, 167], "hierarchi": [47, 48, 119, 120], "hierarchical_clustering_estim": [29, 30, 31, 115, 119, 120], "hierarchical_clustering_estimator_": [29, 30, 115, 119, 120], "hierarchical_clustering_estimator__linkage_method": 31, "hierarchicalclust": [29, 30, 31, 32, 33, 115, 119, 120, 124, 167], "hierarchicalequalriskcontribut": [30, 31, 36, 167, 177], "hierarchicalriskpar": [29, 31, 167, 177], "high": [26, 40, 92, 98, 100, 101, 102, 104, 107, 109, 112, 117, 124, 128, 135, 139, 165, 177], "higham": [98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 141, 158], "higham_max_iter": [98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 158], "higher": [2, 12, 13, 14, 31, 71, 76, 95, 130, 131, 132, 134, 165], "highest": [14, 15, 23, 31, 48, 61, 62, 63, 64, 65, 113, 125, 133, 134, 165, 173], "highli": [30, 38, 41, 45, 133, 165, 166, 169], "highlight": 129, "histogram": [161, 162], "histor": [31, 33, 36, 39, 67, 68, 89, 102, 105, 130, 131, 132], "holding_period": [12, 13], "home": 170, "homogen": [0, 4, 6, 12, 115, 116, 119, 120, 122, 123, 127, 132, 179], "horizon": [42, 44, 45, 140, 166, 169], "horizont": [29, 30, 32], "hous": 177, "hover": 129, "hover_measur": [9, 10, 14, 15, 129], "how": [2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 20, 36, 40, 47, 54, 55, 56, 57, 58, 59, 60, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 173, 177], "howev": [12, 13, 14, 29, 33, 40, 98, 100, 101, 102, 104, 107, 109, 115, 116, 119, 120, 122, 123, 127, 169], "hrp": [28, 29, 30, 32, 34, 45, 124, 166, 176, 177], "html": [116, 117, 122, 123, 127], "http": [7, 8, 116, 117, 122, 123, 127, 165], "hugo": 165, "hyper": 165, "hyperparamet": 33, "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 72, 73, 74, 76, 77, 78, 79, 82, 84, 85, 89, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 152, 153, 154, 156, 158, 160, 165, 167, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 182], "i_": 148, "id": [93, 94, 130, 131, 132], "idea": 10, "ident": [109, 110, 111, 127, 136, 169], "identifi": [48, 61, 62, 63, 64, 65, 94, 113, 125], "idx": [129, 130, 131, 132], "idzorek": 139, "ieee": 110, "iff": [133, 134, 135], "ignor": [47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 139, 140], "ij": 48, "ill": [100, 169], "ima": 158, "immedi": [94, 96, 176], "impact": [8, 12, 13, 14, 30, 115, 116, 119, 120, 122, 123, 127, 132], "implement": [48, 61, 62, 63, 64, 65, 93, 107, 110, 113, 125, 132, 133, 169, 173, 176, 177, 179], "import": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 49, 50, 51, 52, 53, 94, 95, 167, 168, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182], "impos": [5, 127, 141, 177, 181], "improv": [7, 8, 9, 18, 19, 20, 23, 31, 33, 36, 39, 40, 116, 143, 156, 178, 179], "inaccuraci": [40, 98, 100, 101, 102, 104, 107, 109], "inappropri": 95, "includ": [0, 7, 48, 61, 62, 63, 64, 65, 94, 108, 109, 110, 111, 113, 125, 127, 129, 133, 135, 165, 167, 176, 179], "incom": 139, "incorpor": [2, 6, 11, 12, 13, 14, 15, 20, 94, 101, 139, 176, 177, 181], "incorrect": 169, "increas": [14, 26, 39, 40, 116, 117, 122, 123, 127, 173], "increment": 48, "incur": 12, "independ": [36, 56, 169, 173], "index": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 48, 50, 51, 52, 53, 61, 62, 63, 64, 65, 71, 88, 94, 95, 113, 116, 117, 122, 123, 125, 127, 129, 130, 131, 132, 133, 134, 135, 165, 177, 179], "index_train_test_": 94, "indexerror": 129, "indic": [29, 30, 32, 71, 94, 95, 96, 108, 130, 131, 132, 133, 134, 135], "indict": 14, "individu": [36, 128, 135, 142, 146, 147, 177], "induc": [12, 13], "industri": 11, "inequ": [70, 73, 116, 117, 122, 123, 127, 130, 131, 132], "inf": [11, 108, 115, 116, 117, 119, 120, 122, 123, 127], "influenc": 173, "inform": [33, 47, 54, 55, 56, 57, 58, 59, 60, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 165, 177], "inherit": [178, 179], "initi": [131, 133, 146, 147, 158, 180], "inner": [32, 124, 128, 177], "inner_estim": [32, 33, 124, 165, 177], "inner_estimator__risk_measur": 33, "inner_estimators_": 124, "input": [4, 6, 11, 12, 13, 36, 47, 48, 61, 62, 63, 64, 65, 96, 108, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 161, 162, 165, 169, 177, 179, 181], "input_featur": [133, 134, 135], "insert": [48, 61, 62, 63, 64, 65, 113, 125, 129, 133, 134, 135], "insid": [108, 109, 110, 111, 124, 169], "inspir": 165, "instabl": [15, 39, 116, 123, 177, 182], "instanc": [47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 173], "instead": [6, 9, 10, 14, 30, 48, 50, 51, 58, 61, 62, 63, 64, 65, 95, 96, 108, 109, 110, 111, 113, 119, 124, 125, 128, 136, 139, 173, 176, 177], "institut": [71, 132], "insuffici": 135, "int": [47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 83, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 146, 147, 156, 158, 161, 162, 163, 164], "int64": [31, 33, 36, 39, 47], "integ": [48, 61, 62, 63, 64, 65, 108, 113, 124, 125, 128, 133, 134, 135], "integr": 176, "intend": [177, 179], "intention": [48, 61, 62, 63, 64, 65, 113, 125], "inter": [32, 124], "intercept": [5, 142], "intercepts_": 142, "interchang": 169, "interest": [116, 117, 122, 123, 127], "interfac": 165, "interpret": [48, 61, 62, 63, 64, 65, 113, 125], "intersect": 129, "intra": [32, 124], "introduc": [6, 26, 29, 30, 32, 33, 36, 39, 40, 56, 165], "invari": 169, "invers": [7, 18, 19, 29, 30, 36, 71, 108, 109, 110, 111, 119, 120, 121, 132, 139, 146, 147, 148, 149, 158, 165, 177], "inverse_transform": [133, 134, 135], "inversevolatil": [7, 18, 19, 36, 177], "invest": [11, 12, 42, 44, 45, 116, 117, 122, 123, 132, 140, 166, 169], "investment_horizon": [43, 140, 169], "investor": [3, 4, 5, 29, 72, 130, 131, 132, 139, 177, 179, 181], "invok": 96, "io": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "ipynb": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "is_log_norm": [43, 140, 169], "isalnum": [48, 61, 62, 63, 64, 65, 113, 125], "isalpha": [48, 61, 62, 63, 64, 65, 113, 125], "isascii": [48, 61, 62, 63, 64, 65, 113, 125], "isdecim": [48, 61, 62, 63, 64, 65, 113, 125], "isdigit": [48, 61, 62, 63, 64, 65, 113, 125], "isidentifi": [48, 61, 62, 63, 64, 65, 113, 125], "iskeyword": [48, 61, 62, 63, 64, 65, 113, 125], "islow": [48, 61, 62, 63, 64, 65, 113, 125], "isnumer": [48, 61, 62, 63, 64, 65, 113, 125], "isprint": [48, 61, 62, 63, 64, 65, 113, 125], "isspac": [48, 61, 62, 63, 64, 65, 113, 125], "issu": 109, "istitl": [48, 61, 62, 63, 64, 65, 113, 125], "isupp": [48, 61, 62, 63, 64, 65, 113, 125], "item": 129, "iter": [48, 61, 62, 63, 64, 65, 95, 96, 98, 100, 101, 102, 104, 107, 108, 109, 113, 124, 125, 128, 129, 141, 158, 173], "its": [11, 12, 13, 14, 15, 40, 48, 58, 61, 62, 63, 64, 65, 73, 108, 109, 110, 111, 113, 115, 116, 117, 119, 120, 121, 122, 123, 125, 127, 130, 131, 132, 133, 134, 135, 139, 150, 156, 157, 168, 169, 171, 172, 177, 179, 181, 182], "itself": [2, 48, 61, 62, 63, 64, 65, 113, 125, 129], "j": [48, 56, 94, 123, 169, 177], "jame": [3, 5, 112, 113, 181], "james_stein": [112, 113], "japan": 165, "javid": 107, "jnj": 43, "job": [96, 108, 124, 128, 142], "joblib": [96, 108, 124, 128, 142], "join": [48, 61, 62, 63, 64, 65, 113, 125, 136], "joint": [58, 169], "jorion": 112, "journal": [55, 57, 59, 60, 107, 109, 119, 120, 124, 139, 146, 147, 148, 149, 158], "jpm": [4, 6, 11, 12, 13, 19, 43, 165], "jpmorgan": [4, 11, 12, 13, 19], "jupyt": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45], "just": 40, "justifi": [48, 61, 62, 63, 64, 65, 113, 125], "k": [40, 94, 96, 97, 108, 134, 136, 146, 148, 150, 155, 156, 169, 173, 176, 182], "k_": 148, "kappa": [15, 116, 123, 146, 147, 148, 149, 150, 182], "kappa_": [15, 116, 123], "keep": [133, 134, 136], "keepend": [48, 61, 62, 63, 64, 65, 113, 125], "kei": [11, 12, 13, 48, 61, 62, 63, 64, 65, 108, 113, 115, 116, 117, 119, 120, 122, 123, 125, 127, 128, 129, 132, 139], "kendal": [29, 30, 32, 57, 60, 107, 165, 177], "kendalldist": [29, 30, 31, 32, 33, 171, 177], "keyword": [48, 54, 61, 62, 63, 64, 65, 98, 99, 113, 125, 128, 137, 138, 144, 145, 173], "kfold": [32, 94, 96, 108, 124, 128, 165, 173, 176, 177], "kmean": [32, 124, 177], "know": 11, "known": [15, 48, 58, 165, 177], "knuth": [58, 151, 162], "ko": [43, 165, 181], "kroneck": 148, "kuhn": [26, 117, 177], "kurtosi": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 115, 119, 120, 130, 131, 132, 165, 169], "kwarg": [47, 48, 54, 61, 62, 63, 64, 65, 92, 98, 99, 113, 125, 129, 137, 138, 144, 145], "l": 50, "l1": [1, 16, 36, 45, 108, 116, 122, 123, 165, 166, 177], "l1_coef": [14, 36, 116, 122, 123, 173], "l2": [1, 16, 45, 116, 122, 123, 161, 166, 177], "l2_coef": [14, 116, 122, 123, 165, 173], "label": [47, 94, 96, 176], "labels_": [47, 124], "lambda": [40, 123, 125, 169, 177], "lar": 108, "larg": [14, 98, 100, 101, 102, 104, 107, 109, 110, 135, 158, 165, 179], "larger": 170, "lasso": [108, 165], "lassocv": [5, 141, 142, 181], "last": [95, 102, 103, 104, 105, 107, 129, 131], "later": 176, "latest": [12, 13], "latter": [47, 54, 55, 56, 57, 58, 59, 60, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "law": [71, 132], "le": [123, 177], "lead": [13, 48, 61, 62, 63, 64, 65, 113, 115, 116, 119, 120, 122, 123, 124, 125, 127, 128, 169, 173, 176], "leaf": [29, 120, 177], "leakag": [7, 8, 32, 36, 94, 124, 128, 165, 174, 176, 177], "learn": [5, 7, 8, 92, 94, 100, 101, 108, 109, 110, 111, 120, 124, 165, 168, 171, 172, 173, 174, 176, 177, 180, 181, 182], "learnt": 173, "least": [48, 61, 62, 63, 64, 65, 94, 113, 125, 130, 131, 132], "ledoit": [109, 165], "ledoitwolf": [36, 168], "left": [48, 61, 62, 63, 64, 65, 98, 100, 101, 102, 104, 107, 108, 109, 113, 116, 117, 122, 123, 125, 127, 146, 147, 148, 149, 150, 158, 165, 169, 179, 182], "left_inequ": [11, 116, 117, 122, 123, 127], "len": [14, 48, 61, 62, 63, 64, 65, 113, 125], "length": [48, 61, 62, 63, 64, 65, 113, 125, 146, 147], "leq": [11, 102, 103, 116, 117, 122, 123, 127, 146, 147, 148, 149, 150, 182], "less": [11, 19, 31, 95, 116, 117, 122, 123, 127, 139, 143, 169], "let": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 133, 178], "level": [15, 54, 67, 68, 69, 70, 72, 73, 89, 96, 98, 99, 116, 117, 123, 124, 127, 128, 129, 130, 131, 132, 137, 138, 144, 145, 146, 147, 148, 149], "leverag": 11, "le\u00f3n": 169, "lib": 165, "librari": 165, "licens": 165, "lightweight": 96, "like": [11, 12, 13, 26, 29, 47, 48, 54, 55, 56, 57, 58, 59, 60, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 132, 133, 134, 135, 139, 140, 141, 142, 146, 147, 148, 149, 165, 168, 169, 171, 172, 176, 177, 180, 181, 182], "likelihood": [108, 109, 110, 111], "limit": [6, 48, 61, 62, 63, 64, 65, 107, 113, 125, 127, 177], "lin": 169, "line": [14, 15, 29, 30, 32, 40, 47, 48, 61, 62, 63, 64, 65, 113, 125], "line_color": [14, 15, 40], "line_dash": [14, 15, 40], "line_width": [14, 15, 40], "linear": [7, 8, 12, 13, 26, 56, 115, 116, 117, 119, 120, 122, 123, 127, 132, 136, 140, 142, 177], "linear_constraint": [11, 116, 117, 122, 123, 127, 165], "linear_model": [5, 181], "linear_regressor": [5, 142], "link": [29, 30, 32], "linkag": [47, 48, 115, 119, 120, 124, 156, 177], "linkage_matrix": 156, "linkage_matrix_": [47, 167], "linkage_method": [29, 30, 31, 32, 47], "linkagemethod": [29, 30, 31, 32, 33, 47], "linspac": 10, "list": [0, 11, 40, 48, 61, 62, 63, 64, 65, 108, 113, 116, 117, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 135, 139, 173, 178, 179], "literatur": 139, "litterman": [1, 16, 45, 139, 166, 177], "ljust": [48, 61, 62, 63, 64, 65, 113, 125], "lly": 43, "ln": [136, 169], "load": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 49, 50, 51, 52, 53, 137, 141, 142, 170, 181], "load_factors_dataset": [5, 6, 29, 165, 170, 177, 181], "load_ftse100_dataset": [14, 15, 31, 36, 39, 40, 170], "load_nasdaq_dataset": 170, "load_sp500_dataset": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 33, 43, 165, 167, 168, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182], "load_sp500_index": [2, 170], "loading_matrix": 5, "loading_matrix_": [5, 142], "loading_matrix_estim": [5, 141, 181], "loading_matrix_estimator_": [5, 141], "loadingmatrixestim": 141, "loadingmatrixregress": [5, 141, 181], "loc": [15, 29], "local": [50, 51, 170], "locat": [94, 108, 109, 110, 111], "location_": [108, 109, 110, 111], "log": [14, 108, 109, 110, 111, 127, 169, 173, 177], "log_return": 136, "log_scal": [129, 130, 131, 132], "logarithm": [129, 130, 131, 132, 136, 140], "logic": [95, 173], "loguniform": [14, 165, 173], "long": [2, 14, 15, 115, 116, 117, 119, 120, 122, 123, 127, 169, 177], "longer": [43, 130, 131, 132], "lookup": [48, 61, 62, 63, 64, 65, 113, 116, 125], "lookuperror": [48, 61, 62, 63, 64, 65, 113, 125], "lopez": [29, 32, 120, 124, 177], "lopsided": [130, 131, 132], "loss": [15, 89, 92, 130, 131, 132], "lost": 33, "loud": 101, "lovett": [71, 132], "low": [49, 92, 135, 139], "lower": [2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 48, 61, 62, 63, 64, 65, 74, 76, 84, 85, 113, 115, 116, 117, 119, 120, 122, 123, 125, 127, 130, 131, 132, 143, 165, 177, 181], "lowercas": [5, 48, 61, 62, 63, 64, 65, 113, 125, 181], "lowest": [14, 15, 48, 61, 62, 63, 64, 65, 113, 125, 133, 134], "lstrip": [48, 61, 62, 63, 64, 65, 113, 125], "lvert": [15, 97, 116, 123], "l\u00f2pez": [55, 57, 59, 60, 100, 101], "l\u00f3pez": [94, 120, 124], "m": [109, 129, 154, 155, 160], "machin": [94, 100, 101, 120, 124, 165], "mad": [82, 130, 131, 132], "made": 14, "mahalanobi": [108, 109, 110, 111], "mai": [0, 7, 8, 14, 31, 33, 36, 39, 48, 61, 62, 63, 64, 65, 108, 113, 125, 173, 176, 177], "main": 173, "mainli": [48, 61, 62, 63, 64, 65, 113, 125], "maintain": 129, "make": [5, 6, 7, 8, 11, 12, 13, 48, 61, 62, 63, 64, 65, 92, 95, 113, 125, 141, 177, 179, 181], "make_scor": [14, 15, 31, 36, 40, 173], "maketran": [48, 61, 62, 63, 64, 65, 113, 125], "manag": [1, 16, 45, 55, 57, 59, 60, 100, 101, 107, 114, 115, 116, 119, 120, 122, 123, 124, 127, 132, 136, 140, 165, 166, 169, 177, 179], "management_fe": [13, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 132], "mani": 173, "manipul": [130, 131, 132, 178], "manner": [29, 120, 173, 177], "map": [10, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 169], "marco": [29, 32, 94, 120, 124, 177], "margin": 58, "market": [4, 11, 101, 106, 116, 117, 119, 120, 122, 123, 139, 169, 177], "markowitz": [107, 165], "marti": [119, 120, 165], "mar\u010denko": 100, "mask": [133, 134, 135], "match": [116, 117, 122, 123, 127, 133, 134, 135, 139], "math": 48, "mathbb": 169, "mathemat": [146, 147, 148, 149], "matric": [101, 107, 109], "matrix": [3, 4, 5, 11, 29, 30, 32, 40, 47, 48, 54, 55, 56, 57, 58, 59, 60, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 115, 116, 117, 119, 120, 121, 122, 123, 124, 127, 132, 137, 139, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 168, 169, 171, 176, 177, 179, 181, 182], "matur": 169, "max": [3, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 48, 108, 109, 110, 111, 123, 156, 177], "max_": [123, 156, 169, 177], "max_average_drawdown": 123, "max_budget": [11, 116, 117, 122, 123], "max_cdar": [10, 123], "max_clust": 47, "max_cvar": [15, 123], "max_drawdown": [9, 10, 14, 15, 65, 115, 116, 119, 120, 123, 127, 130, 131, 132, 178, 179], "max_edar": 123, "max_evar": 123, "max_first_lower_partial_mo": 123, "max_gini_mean_differ": 123, "max_it": 108, "max_iter": 141, "max_long": [11, 116, 117, 122, 123], "max_max_drawdown": 123, "max_mean_absolute_devi": 123, "max_measur": [10, 129], "max_semi_devi": 123, "max_semi_vari": 123, "max_short": [11, 116, 117, 122, 123], "max_standard_devi": 123, "max_tracking_error": [2, 122, 123], "max_turnov": [122, 123], "max_ulcer_index": 123, "max_vari": [10, 14, 123], "max_weight": [11, 115, 116, 117, 119, 120, 122, 123, 127, 165], "max_worst_r": 123, "maxim": [10, 14, 15, 23, 31, 32, 33, 36, 40, 47, 122, 123, 125, 165, 177], "maximize_ratio": [3, 4, 5, 6, 7, 10, 32, 39, 123, 125, 165, 173, 177, 182], "maximize_return": [10, 14, 15, 123, 125], "maximize_util": [12, 13, 36, 123, 125], "maximum": [1, 3, 4, 5, 6, 10, 11, 12, 13, 16, 24, 36, 39, 40, 47, 48, 61, 62, 63, 64, 65, 69, 80, 89, 98, 100, 101, 102, 104, 107, 108, 109, 113, 115, 116, 117, 119, 120, 122, 123, 125, 127, 129, 130, 131, 132, 141, 158, 166], "maximumdiversif": [22, 23, 36, 45, 177], "maxsiz": 129, "maxsplit": [48, 61, 62, 63, 64, 65, 113, 125], "mb": [16, 21, 24, 27, 34, 37, 41, 44, 46, 166], "mean": [0, 2, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 29, 31, 32, 36, 39, 40, 43, 48, 61, 62, 63, 64, 65, 68, 74, 76, 79, 82, 83, 84, 85, 92, 96, 103, 105, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 139, 142, 143, 146, 147, 148, 149, 165, 166, 169, 173, 179], "mean_absolute_devi": [65, 115, 116, 119, 120, 123, 127, 130, 131, 132], "mean_absolute_deviation_ratio": [64, 130, 131, 132], "mean_risk": 180, "mean_test_scor": [14, 15, 40, 108], "mean_train_scor": [14, 40], "meanrisk": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33, 36, 39, 40, 43, 45, 122, 124, 128, 165, 173, 176, 177, 178, 180, 182], "meantim": 169, "measur": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 30, 31, 32, 33, 36, 39, 40, 56, 58, 92, 107, 116, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 165, 173, 176, 177, 178, 179], "measure_list": [31, 33, 36, 39, 129, 165, 178], "measures_df": [130, 131, 132], "measures_mean": [10, 14, 31, 33, 36, 39, 129], "measures_std": [10, 31, 33, 36, 39, 129], "mechan": [47, 54, 55, 56, 57, 58, 59, 60, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "median": [48, 124, 128], "mega": 11, "mem": [16, 21, 24, 27, 34, 37, 41, 44, 46, 166], "memori": [96, 109], "merg": [6, 31, 39], "meshgrid": 10, "meta": [108, 109, 110, 111, 177], "metadata": [47, 54, 55, 56, 57, 58, 59, 60, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "metadata_rout": [108, 109, 110, 111], "metadatarequest": [47, 54, 55, 56, 57, 58, 59, 60, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "metadatarout": 108, "method": [0, 5, 7, 8, 9, 11, 12, 13, 14, 18, 36, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 158, 165, 168, 169, 171, 172, 173, 176, 177, 178, 180, 181, 182], "methodologi": 169, "metric": [14, 15, 29, 30, 31, 32, 36, 40, 58, 117], "meucci": [112, 136, 140, 169], "mf": 13, "michaud": 169, "micropredict": 165, "mid": 174, "miko\u0142aj": [119, 120], "min": [8, 48, 123, 127, 177], "min_": [123, 127, 177], "min_acceptable_return": [74, 76, 82, 84, 85, 116, 123, 127, 130, 131, 132], "min_budget": [11, 116, 117, 122, 123], "min_measur": 129, "min_n_asset": 135, "min_return": [9, 122, 123, 127], "min_weight": [2, 11, 14, 15, 36, 115, 116, 117, 119, 120, 122, 123, 127, 165, 173], "minim": [2, 9, 26, 29, 30, 31, 32, 47, 48, 97, 117, 119, 120, 123, 125, 165, 177], "minimize_risk": [2, 8, 123, 125], "minimum": [1, 2, 9, 10, 11, 16, 29, 32, 40, 45, 47, 74, 76, 82, 84, 85, 115, 116, 117, 119, 120, 122, 123, 124, 127, 129, 130, 131, 132, 135, 166, 177], "minium": [115, 116, 117, 119, 120, 122, 123, 127], "minu": 179, "minut": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "mirror": [14, 173], "misc": 165, "miskolczi": 169, "miss": [108, 136], "mitig": 177, "mix": [11, 13, 115, 116, 117, 119, 120, 122, 123, 127], "mmp": 165, "mmse": 110, "mn": 129, "mode": [14, 15, 40, 108], "model": [1, 14, 15, 16, 45, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 139, 141, 143, 166, 167, 168, 171, 172, 173, 174, 177, 178, 179, 180, 182], "model1": [26, 29, 30, 32, 36, 39, 177], "model2": [26, 29, 30, 32, 36, 39, 177], "model2__prior_estimator__covariance_estim": 36, "model3": [26, 29, 30, 32, 36], "model3__l1_coef": 36, "model4": [26, 29, 32, 36], "model4__risk_measur": 36, "model_bl": 4, "model_bl_factor": 6, "model_empir": [4, 5], "model_factor": 6, "model_factor_1": 5, "model_factor_2": 5, "model_factor_3": 5, "model_herc": 31, "model_hrp": 31, "model_l1": 14, "model_l2": 14, "model_mf": 13, "model_nam": 36, "model_nco": 33, "model_no_track": 2, "model_no_uncertainti": 15, "model_select": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 92, 124, 165, 173, 176, 177, 178, 179, 180], "model_spx": 2, "model_stack": 36, "model_tc": 12, "model_tc2": 12, "model_track": 2, "model_uncertainti": 15, "model_valid": 94, "modern": [107, 165], "modifi": [92, 129], "modul": [0, 48, 61, 62, 63, 64, 65, 113, 125, 151, 167, 173, 176, 177], "mohajerin": 26, "moment": [3, 5, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 64, 65, 74, 75, 76, 84, 85, 86, 87, 90, 115, 116, 119, 120, 123, 127, 130, 131, 132, 140, 165, 168, 169, 172, 173, 177, 181, 182], "momentum": [6, 49], "month": [12, 14, 15, 31, 33, 36, 40], "more": [4, 5, 7, 8, 11, 12, 13, 14, 19, 29, 30, 31, 32, 33, 36, 39, 45, 47, 48, 61, 62, 63, 64, 65, 71, 95, 96, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 113, 116, 117, 119, 120, 122, 123, 124, 125, 127, 132, 133, 141, 165, 173, 177, 179, 181], "mosek": [26, 117, 169, 177], "most": [169, 173], "move": [45, 179], "movement": 107, "mrk": 43, "msft": [43, 165, 181], "mtum": [6, 49, 165, 177, 181], "mu": [3, 4, 5, 12, 13, 15, 103, 105, 106, 109, 110, 111, 112, 115, 116, 117, 119, 120, 122, 123, 125, 127, 143, 145, 147, 149, 150, 169, 172, 177, 181, 182], "mu_": [103, 105, 106, 112, 169, 172], "mu_estim": [3, 5, 139, 140, 165, 173, 177, 181], "mu_estimator_": 140, "mu_target_": 112, "mu_uncertainty_set_estim": [15, 116, 123, 165, 177, 182], "mu_uncertainty_set_estimator_": [116, 123], "mu_uncertainty_set_estimator__confidence_level": 15, "multi": [14, 15, 94, 107, 129, 131, 135, 178], "multi_output_regressor_": 142, "multioutput": 142, "multioutputregressor": 142, "multiperiodportfolio": [0, 12, 13, 14, 15, 31, 33, 36, 39, 40, 96, 129, 165, 176, 178, 179], "multipl": [29, 31, 33, 36, 39, 94, 96, 116, 120, 124, 128, 176, 177, 179], "multipli": [49, 50, 51, 52, 53, 110, 170], "multivari": [26, 109, 117, 169, 177], "must": [11, 12, 13, 48, 61, 62, 63, 64, 65, 92, 93, 94, 95, 106, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 160, 169], "mutli": 131, "mutual": [58, 177], "mutualinform": [171, 177], "mvo": 165, "my_param": 177, "my_portfolio": 179, "mycustomcovari": 177, "n": [2, 12, 13, 14, 31, 33, 36, 46, 48, 61, 62, 63, 64, 65, 97, 106, 113, 115, 116, 119, 120, 122, 123, 125, 127, 129, 132, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 169, 178], "n_": [71, 132], "n_alpha": 108, "n_asset": [12, 13, 39, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 135, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 178], "n_bin": [31, 36, 39, 58, 129, 161, 162], "n_bins_method": 58, "n_bootstrap_sampl": [146, 147], "n_clusters_": 47, "n_constraint": [116, 117, 122, 123, 127], "n_factor": [117, 127, 141, 142, 146, 147, 148, 149], "n_featur": [47, 94, 108, 109, 110, 111, 133, 134, 135], "n_features_in_": [47, 55, 56, 57, 58, 59, 60, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 122, 123, 124, 127, 128, 133, 134, 135, 139, 140, 141], "n_features_new": [133, 134, 135], "n_fold": [31, 33, 36, 39, 94, 95, 97, 165, 176], "n_group": [116, 117, 122, 123, 127, 139], "n_init": [32, 177], "n_iter": [14, 15, 173], "n_iter_": 108, "n_job": [5, 12, 13, 14, 15, 31, 32, 33, 36, 39, 40, 96, 108, 124, 128, 142, 165, 173, 177], "n_market": 101, "n_observ": [31, 33, 36, 39, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 146, 147, 148, 149, 161, 162, 176], "n_optim": [116, 117, 118, 121, 122, 123, 126, 127], "n_original_featur": [133, 134, 135], "n_output": [133, 134, 135], "n_refin": 108, "n_sampl": [47, 94, 108, 109, 110, 111, 133, 134, 135], "n_selected_featur": [133, 134, 135], "n_split": [94, 165], "n_target": [95, 96, 121, 122, 123, 124, 128], "n_test_fold": [31, 33, 36, 39, 94, 97, 165, 176], "n_test_path": 94, "n_view": 139, "naiv": [30, 119, 133, 165], "name": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 170, 173, 177, 178, 179], "named_estim": 128, "named_estimators_": 128, "named_step": 39, "nan": 50, "nan_threshold": 136, "nasdaq": 51, "nativ": 170, "natur": [48, 61, 62, 63, 64, 65, 113, 125], "nb": [14, 15, 36, 40], "nbinsmethod": 58, "nco": [32, 34, 124, 166, 177], "ndarrai": [47, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 133, 134, 135, 139, 140, 141, 142, 143, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "ndrrai": 132, "ne": [123, 177], "nearest": [40, 48, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 141, 158], "necessari": [79, 130, 131, 132, 133], "necessarili": 14, "need": [0, 7, 8, 12, 13, 15, 115, 116, 117, 119, 120, 122, 123, 124, 127, 132, 158, 165, 169], "neg": [11, 115, 116, 117, 119, 120, 122, 123, 133, 135], "neglig": [12, 179], "nest": [6, 28, 34, 45, 47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 166, 173], "nestedclustersoptim": [32, 33, 165, 167, 177], "net": [13, 108, 115, 116, 119, 120, 122, 123, 127], "network": [107, 119, 120], "neutral": [11, 116, 117, 122, 123], "never": [48, 61, 62, 63, 64, 65, 113, 125], "new": [29, 32, 48, 61, 62, 63, 64, 65, 108, 113, 125, 129, 178, 180, 181], "new_portfolio": 12, "new_valu": 128, "new_x": 180, "newli": 48, "nick": [98, 100, 101, 102, 104, 107, 109, 141, 158], "nicolini": 165, "nielsen": [119, 120], "nn": 148, "nois": [5, 100, 132, 141, 181], "non": [12, 14, 18, 26, 33, 36, 40, 48, 56, 61, 62, 63, 64, 65, 77, 79, 96, 98, 100, 101, 102, 104, 107, 109, 113, 116, 117, 122, 123, 125, 129, 130, 131, 132, 135, 146, 147, 148, 149, 158, 163, 165, 176, 177], "non_denominated_sort": [129, 178], "none": [11, 12, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 74, 76, 82, 84, 85, 92, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 151, 177], "nonzero_asset": [14, 132], "nonzero_assets_index": 132, "nor": 169, "norm": [14, 108, 109, 110, 111, 116, 122, 123], "normal": [58, 79, 104, 130, 131, 132, 169], "notat": [48, 61, 62, 63, 64, 65, 113, 125, 148], "note": [2, 5, 11, 12, 13, 14, 15, 40, 48, 54, 61, 62, 63, 64, 65, 92, 98, 99, 104, 108, 109, 110, 111, 113, 116, 117, 122, 123, 124, 125, 127, 128, 137, 138, 144, 145, 169, 179, 181], "notebook": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45], "notic": [12, 13, 29, 30], "notion": [12, 169], "now": [2, 10, 12, 14, 15, 36, 40], "np": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 47, 92, 94, 95, 109, 110, 111, 115, 116, 117, 119, 120, 122, 123, 127, 176, 177, 179], "nugget": 169, "null": 156, "num": 10, "number": [5, 7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 31, 33, 36, 39, 40, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 83, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 146, 147, 151, 156, 158, 163, 164, 165, 173, 176, 177, 181], "numer": [48, 61, 62, 63, 64, 65, 108, 110, 113, 116, 117, 122, 123, 125, 127, 158, 165], "numpi": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 92, 94, 95, 168, 171, 172, 176, 177, 179, 180, 181, 182], "nutshel": [71, 132], "o": [109, 110, 129], "oa": 168, "object": [0, 7, 8, 14, 18, 26, 29, 31, 33, 36, 39, 40, 47, 54, 55, 56, 57, 58, 59, 60, 92, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 165, 176, 177], "objective_funct": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 32, 36, 39, 123, 165, 173, 177, 182], "objectivefunct": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 32, 36, 39, 123, 165, 173, 177, 182], "observ": [31, 33, 36, 39, 47, 49, 50, 51, 52, 53, 67, 68, 69, 83, 89, 94, 95, 97, 102, 103, 104, 105, 107, 108, 109, 110, 111, 129, 130, 131, 132, 136, 139, 176, 179], "obtain": [31, 33, 36, 39, 70, 73, 130, 131, 132, 140, 143], "occur": [40, 98, 100, 101, 102, 104, 107, 109], "occurr": [48, 61, 62, 63, 64, 65, 113, 125, 129], "offer": 165, "often": [40, 94, 98, 100, 101, 102, 104, 107, 109, 176], "okhrin": [112, 113], "old": [48, 61, 62, 63, 64, 65, 113, 125], "omega": 139, "omit": [7, 8, 110], "onc": [108, 129], "one": [5, 11, 12, 13, 29, 30, 31, 32, 33, 36, 39, 43, 47, 48, 61, 62, 63, 64, 65, 94, 95, 96, 113, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 142, 143, 163, 164, 169, 173, 176, 177, 181], "ones": [12, 14, 15, 48, 61, 62, 63, 64, 65, 113, 125], "onli": [7, 8, 11, 12, 13, 14, 26, 29, 31, 33, 36, 39, 43, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 139, 140, 141, 169, 177, 179, 180], "open": [26, 165], "oper": [48, 61, 62, 63, 64, 65, 110, 113, 125, 133, 134, 135, 146, 147, 148, 149], "oppos": [30, 140], "optim": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 37, 39, 40, 43, 62, 96, 97, 107, 108, 109, 112, 132, 135, 136, 141, 143, 146, 147, 148, 149, 156, 161, 162, 166, 167, 174, 176, 178, 179, 180, 181, 182], "optimal_folds_numb": [31, 33, 36, 39, 176], "optimization__risk_measur": 173, "optimum": 108, "option": [3, 4, 5, 47, 48, 50, 51, 55, 58, 61, 62, 63, 64, 65, 74, 76, 82, 84, 85, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 169, 181], "oracl": [110, 165], "order": [12, 13, 29, 47, 115, 116, 119, 120, 122, 123, 127, 129, 131, 133, 156], "ordin": [48, 61, 62, 63, 64, 65, 113, 125], "org": [116, 117, 122, 123, 127], "origin": [29, 32, 47, 48, 61, 62, 63, 64, 65, 108, 109, 110, 111, 113, 120, 124, 125, 177], "oserror": [50, 51], "other": [7, 8, 11, 15, 19, 29, 31, 48, 61, 62, 63, 64, 65, 108, 109, 110, 111, 113, 125, 129, 130, 131, 132, 133, 136, 139, 173], "other_portfolio": 179, "otherwis": [47, 48, 61, 62, 63, 64, 65, 77, 78, 92, 95, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 112, 113, 116, 117, 122, 123, 125, 127, 129, 130, 131, 132, 134, 158, 160], "otim": 148, "our": [4, 6, 7, 8, 12, 13, 36, 165, 176], "out": [14, 15, 31, 32, 33, 36, 39, 40, 55, 57, 59, 60, 108, 116, 120, 122, 123, 124, 128, 129, 165, 177], "outcom": 92, "outer": [32, 36, 124, 128, 136, 177], "outer_estim": [32, 33, 124, 165, 177], "outer_estimator_": 124, "outlin": [29, 30, 32, 47], "outperform": [4, 6, 7, 8, 12, 13, 31, 33, 36, 55, 57, 59, 60, 120, 124, 139, 165], "output": [36, 96, 124, 128, 133, 134, 135, 176, 177, 178], "over": [15, 23, 26, 108, 117, 122, 130, 131, 132, 136, 163, 164, 169, 173, 177], "overal": 108, "overcom": [5, 141, 181], "overfit": [14, 15, 124, 128, 165, 174], "overhead": 142, "overlap": [48, 61, 62, 63, 64, 65, 94, 113, 125, 176], "overwrit": [116, 117, 123, 127], "overwrite_expected_return": [116, 117, 123, 127], "owa": 83, "own": [169, 173, 176], "oxford": 169, "p": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 23, 26, 29, 30, 32, 33, 43, 52, 53, 94, 107, 110, 170], "packag": [0, 174], "pad": [48, 61, 62, 63, 64, 65, 113, 125], "page": 109, "pair": [11, 12, 13, 96, 115, 116, 117, 119, 120, 122, 123, 127, 132, 133, 135, 139, 176], "panda": [39, 40, 129, 130, 131, 132, 133, 134, 135, 165, 168, 171, 172, 177, 179, 180, 181, 182], "panna": 169, "paper": [29, 32, 107, 120, 124, 177], "parallel": [5, 12, 96, 108, 124, 128, 142, 177], "parallel_backend": [96, 108, 124, 128, 142], "param": [47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "param_dist": 173, "param_distribut": [14, 15, 165, 173], "param_grid": [14, 15, 31, 33, 36, 40, 165, 173], "param_l2_coef": 14, "param_mu_uncertainty_set_estimator__confidence_level": 15, "param_pre_selection__k": 40, "paramet": [5, 7, 8, 9, 11, 12, 13, 26, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 174, 176, 177, 178, 181], "parameter_nam": 128, "parametr": 169, "pareto": [9, 129, 135], "pariti": [17, 21, 28, 30, 32, 34, 45, 119, 120, 127, 166], "parolya": [112, 113], "part": [48, 61, 62, 63, 64, 65, 113, 125, 173], "partial": [7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 65, 74, 76, 84, 85, 95, 116, 123, 127, 130, 131, 132, 165, 177], "particular": 109, "partit": [48, 61, 62, 63, 64, 65, 113, 125], "pass": [7, 8, 13, 47, 92, 96, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 173], "past": 95, "pastur": 100, "path": [31, 33, 36, 39, 93, 94, 96, 97, 124, 128, 176, 177], "pattern": [11, 116, 117, 122, 123, 127, 139], "patton": [146, 147], "paulsen": 132, "pd": 179, "pearson": [29, 30, 32, 59, 165], "pearsondist": [31, 33, 115, 119, 120, 124, 167, 171, 177], "penal": [14, 108, 116, 122, 123], "penalti": 108, "pep": 43, "per": [13, 14, 15, 36, 40, 124, 129, 142, 165], "percentag": 136, "perfectli": 179, "perfmeasur": [9, 10, 14, 15, 43, 92, 124, 128, 130, 131, 132, 135, 178, 179], "perform": [14, 15, 31, 33, 36, 38, 41, 45, 47, 63, 94, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 136, 142, 143, 156, 160, 165, 166, 169, 173, 174, 176, 179, 180], "period": [14, 15, 115, 116, 119, 120, 122, 123, 127, 129, 131, 132, 136, 169], "permit": 117, "pfe": 43, "pg": 43, "philipp": [112, 119, 120], "pick": 139, "picking_matrix_": 139, "piecewis": [26, 117, 177], "pin": 174, "pip": [165, 175], "pipe": 180, "pipelin": [11, 38, 45, 47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 173, 180], "pipeplin": [39, 40], "pitfal": [136, 140], "place": 129, "plan": 174, "pleas": [0, 47, 54, 55, 56, 57, 58, 59, 60, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "plot": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 94, 129, 130, 131, 132, 179], "plot_10_tracking_error": [2, 16, 166], "plot_11_empirical_prior": [3, 16, 166], "plot_12_black_and_litterman": [4, 16, 166], "plot_13_factor_model": [5, 16, 166], "plot_14_black_litterman_factor_model": [6, 16, 166], "plot_1_distributionally_robust_cvar": [26, 27, 166], "plot_1_drop_correl": [39, 41, 166], "plot_1_hrp_cvar": [29, 34, 166], "plot_1_investment_horizon": [43, 44, 166], "plot_1_maximum_divesif": [23, 24, 166], "plot_1_maximum_sharpe_ratio": [7, 16, 166], "plot_1_risk_parity_vari": [18, 21, 166], "plot_1_stack": [36, 37, 166], "plot_2_herc_cdar": [30, 34, 166], "plot_2_minimum_cvar": [8, 16, 166], "plot_2_risk_busgeting_cvar": [19, 21, 166], "plot_2_select_best_perform": [40, 41, 166], "plot_3_efficient_fronti": [9, 16, 166], "plot_3_hrp_vs_herc": [31, 34, 166], "plot_3_risk_parity_ledoit_wolf": [20, 21, 166], "plot_4_mean_variance_cdar": [10, 16, 166], "plot_4_nco": [32, 34, 166], "plot_5_nco_grid_search": [33, 34, 166], "plot_5_weight_constraint": [11, 16, 166], "plot_6_transaction_cost": [12, 16, 166], "plot_7_management_fe": [13, 16, 166], "plot_8_regular": [14, 16, 166], "plot_9_uncertainty_set": [15, 16, 166], "plot_composit": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 23, 26, 29, 30, 31, 32, 33, 36, 40, 43, 129, 130, 131, 132, 178, 179], "plot_contribut": [18, 19, 29, 30, 132, 179], "plot_cumulative_return": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 129, 130, 131, 132, 165, 178, 179], "plot_dendrogram": [29, 30, 32, 47], "plot_distribut": [31, 33, 36, 39, 129, 165, 178], "plot_measur": [9, 10, 14, 15, 43, 129, 178], "plot_return": [130, 131, 132], "plot_rolling_measur": [130, 131, 132, 179], "plot_train_test_fold": 94, "plot_train_test_index": 94, "plotli": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 129, 132], "pmb": 169, "point": [40, 48, 61, 62, 63, 64, 65, 98, 100, 101, 102, 104, 107, 108, 109, 113, 125, 129, 158], "polakow": 107, "polar": [133, 134, 135], "politi": [146, 147], "poor": 165, "poorli": [14, 15], "pop": 129, "popul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 96, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 165, 176], "population_test": [9, 10, 14, 29, 30, 32], "population_train": [2, 9, 10, 14, 15], "portfolio": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 55, 57, 59, 60, 71, 92, 95, 96, 107, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 135, 136, 140, 141, 146, 147, 148, 149, 165, 167, 173, 174, 176, 177, 178, 180, 181], "portfolio optim": 165, "portfolio_param": [2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 96, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128], "portfolio_test": 177, "portfolio_train": 177, "portion": 101, "pose": 169, "posit": [12, 36, 40, 48, 61, 62, 63, 64, 65, 98, 100, 101, 102, 104, 107, 109, 113, 115, 116, 117, 119, 120, 122, 123, 125, 127, 141, 158, 160], "possibl": [6, 19, 20, 23, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 173, 177, 181], "posterior": [4, 139, 181], "potenti": 135, "power": [55, 57, 59, 60], "pq": [48, 61, 62, 63, 64, 65, 113, 125], "practic": [169, 173, 179], "prado": [29, 32, 55, 57, 59, 60, 94, 100, 101, 120, 124, 177], "pre": [11, 39, 40, 135], "pre_dispatch": 96, "pre_select": [39, 40, 165, 173, 180], "pre_selection__k": 40, "preced": [14, 15, 31], "precis": [108, 109, 110, 111], "precision_": [108, 109, 110, 111], "pred": [31, 36, 40, 92, 173, 176], "pred1": [12, 13], "pred2": [12, 13], "pred3": 12, "pred_1": 39, "pred_2": 39, "pred_bench": [3, 7, 8, 14, 33, 36, 40], "pred_bl": 4, "pred_empir": 4, "pred_herc": 31, "pred_hrp": 31, "pred_model": [3, 7, 8, 40], "pred_nco": 33, "pred_no_reg": 14, "pred_no_uncertainti": 15, "pred_reg": 14, "pred_stack": 36, "pred_uncertainti": 15, "pred_uncertainty_r": 15, "predict": [0, 10, 11, 12, 13, 15, 92, 96, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 142, 173, 177, 178, 179, 180], "prefer": [108, 117, 177], "prefit": 128, "prefix": [48, 61, 62, 63, 64, 65, 113, 125], "prepar": [7, 8, 43, 136, 140], "preprocess": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 165, 167, 168, 171, 172, 173, 176, 177, 178, 180, 181, 182], "preselect": 135, "present": [33, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 139, 140], "press": [120, 124, 169], "prev": 179, "previou": [6, 12, 31, 33, 36, 40, 115, 116, 119, 120, 122, 123, 127, 132, 179], "previous_weight": [12, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 132], "price": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 165, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182], "prices_to_return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 165, 167, 168, 171, 172, 173, 176, 177, 178, 180, 181, 182], "principl": 173, "print": [2, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 39, 40, 94, 95, 108, 165, 167, 168, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182], "printabl": [48, 61, 62, 63, 64, 65, 113, 125], "prior": [1, 4, 5, 6, 16, 20, 36, 40, 43, 45, 101, 115, 116, 117, 119, 120, 121, 122, 123, 127, 146, 147, 148, 149, 165, 166, 169, 173], "prior_estim": [3, 4, 5, 6, 20, 29, 36, 40, 43, 115, 116, 117, 119, 120, 121, 122, 123, 127, 139, 146, 147, 148, 149, 165, 173, 177], "prior_estimator_": [5, 115, 116, 117, 121, 122, 123, 127, 139, 146, 147, 148, 149], "prior_estimator__mu_estimator__alpha": [165, 173], "prior_model": 5, "prior_model_": [5, 6, 139, 140, 141, 181], "priormodel": [3, 4, 5, 29, 115, 116, 117, 119, 120, 121, 122, 123, 127, 139, 140, 141, 177, 181], "probabl": [26, 117, 177], "problem": [0, 5, 12, 13, 26, 40, 97, 98, 100, 101, 102, 104, 107, 109, 115, 116, 117, 119, 120, 122, 123, 127, 132, 141, 158, 177, 179, 181], "problem_": [116, 117, 122, 123, 127], "problem_values_": [116, 117, 122, 123, 127], "procedur": [43, 169], "process": [11, 94, 96, 110, 135, 176], "processor": [96, 108, 124, 128, 142], "produc": [107, 163, 164], "product": [0, 32, 36, 124, 128, 132, 148, 169, 173, 177, 179], "profession": [136, 140, 169], "program": [26, 117, 146, 147, 148, 149, 177], "project": [140, 169], "properli": 169, "properti": [7, 8, 29, 30, 32, 94, 119, 120, 128, 130, 131, 132, 146, 147, 148, 149, 169, 173, 177], "proport": [107, 139], "propos": 110, "prove": [11, 26, 112, 117, 177], "provid": [5, 9, 11, 12, 13, 94, 95, 106, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 136, 139, 140, 141, 143, 169, 173, 181], "psd": [40, 98, 100, 101, 102, 104, 107, 109], "psd_variant": 107, "pseudo": [108, 109, 110, 111, 146, 147], "ptf": [14, 31, 33, 36, 132], "ptf0": 9, "ptf1": [9, 29, 30, 39, 179], "ptf10": 9, "ptf11": 9, "ptf12": 9, "ptf13": 9, "ptf14": 9, "ptf15": 9, "ptf16": 9, "ptf17": 9, "ptf18": 9, "ptf19": 9, "ptf2": [9, 30, 39, 179], "ptf20": 9, "ptf21": 9, "ptf22": 9, "ptf23": 9, "ptf24": 9, "ptf25": 9, "ptf26": 9, "ptf27": 9, "ptf28": 9, "ptf29": 9, "ptf3": [9, 179], "ptf4": 9, "ptf5": 9, "ptf6": 9, "ptf7": 9, "ptf8": 9, "ptf9": 9, "ptf_bench_test": [18, 19, 20, 23, 26], "ptf_bench_train": [18, 19, 23], "ptf_bl_factor_test": 6, "ptf_empirical_test": 5, "ptf_factor_1_test": 5, "ptf_factor_2_test": 5, "ptf_factor_3_test": 5, "ptf_factor_test": 6, "ptf_model1_test": 26, "ptf_model2_test": 26, "ptf_model3_test": 26, "ptf_model4_test": 26, "ptf_model_test": [18, 19, 20, 23], "ptf_model_train": [18, 19, 23], "ptf_no_tracking_test": 2, "ptf_no_tracking_train": 2, "ptf_tracking_test": 2, "ptf_tracking_train": 2, "public": [49, 50, 51, 52, 53, 165, 170], "publish": 107, "pujara": 107, "punctuat": [48, 61, 62, 63, 64, 65, 113, 125], "pure": 109, "purg": [28, 34, 45, 94, 166], "purged_s": [94, 95], "purpos": [5, 141, 177, 181], "put": 139, "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 133, 134, 135, 166], "pypi": [165, 175], "pyportfolioopt": 165, "python": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 48, 61, 62, 63, 64, 65, 113, 125, 165], "q": [129, 135, 176, 178], "qu": 135, "quad": [123, 177], "qual": [6, 49, 165, 177, 181], "qualiti": 6, "qualnam": 151, "quanliti": 49, "quant": 169, "quantifi": [71, 132], "quantil": [124, 128, 129, 176, 177, 178], "quantile_measur": [124, 128, 177], "quantit": [100, 101, 120, 124, 165], "quickli": 165, "r": [47, 48, 61, 62, 63, 64, 65, 113, 125, 132, 169, 179], "r_": [123, 125, 149, 177], "r_p": 179, "radiu": [26, 117], "raffinot": [30, 119, 177], "rais": [48, 50, 51, 61, 62, 63, 64, 65, 108, 109, 110, 111, 113, 116, 117, 122, 123, 125, 127, 129, 130, 131, 132, 152, 153, 154], "raise_on_failur": [10, 116, 117, 122, 123, 127], "ran": 14, "rand_weight": 178, "randint": 173, "randn": [94, 95], "random": [14, 15, 58, 94, 95, 100, 133, 146, 147, 148, 163, 164, 177, 178], "randomized_search": [14, 15, 165], "randomizedsearchcv": [14, 15, 165, 173], "randomli": 163, "rang": [10, 40, 48, 61, 62, 63, 64, 65, 108, 109, 110, 111, 113, 125, 129, 173, 178], "rank": 135, "rate": [116, 117, 122, 123, 127, 130, 131, 132, 139], "rather": [133, 134, 135], "ratio": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 18, 19, 20, 23, 29, 31, 32, 33, 36, 39, 40, 45, 64, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 166, 173, 177], "ratiomeasur": [9, 10, 14, 15, 31, 33, 36, 39, 40, 124, 128, 130, 131, 132, 134, 165, 173, 176, 178, 179], "ration": [7, 179], "rationmeasur": 92, "ravel": 10, "raw": 0, "rd_search": 173, "re": [6, 12, 13, 108, 109, 110, 111, 174], "reach": 135, "read": [108, 109, 110, 111], "readabl": [11, 12, 13], "real": 160, "realis": 79, "realiz": [4, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 65, 91, 123, 127, 130, 131, 132, 165, 177], "rearrang": [29, 120, 177], "reason": [29, 136], "rebal": [12, 13], "rebalanc": [12, 169, 179], "rebas": [129, 130, 131, 132], "receiv": 165, "recombin": [33, 36, 94], "recombined_path": 94, "recommend": [45, 169, 173], "reconstruct": [94, 97], "recurs": [29, 30, 119, 120, 177], "reduc": [5, 14, 15, 96, 97, 100, 112, 116, 122, 123, 127, 133, 134, 135, 141, 165, 174, 181, 182], "reduce_test": 95, "reduct": 14, "ref1": [11, 116, 117, 122, 123, 127], "ref2": [11, 116, 117, 122, 123, 127], "ref3": [11, 116, 117, 122, 123, 127], "ref_model": 14, "refer": [11, 14, 47, 55, 56, 57, 59, 60, 71, 94, 100, 101, 107, 109, 110, 112, 117, 119, 120, 124, 132, 135, 136, 139, 140, 146, 147, 148, 149, 156, 158, 161, 162, 165, 169, 177], "referenc": [116, 117, 122, 123, 127, 139], "refin": 108, "reform": 169, "reformul": [26, 117, 177], "regard": 179, "regardless": 29, "region": [15, 116, 123, 146, 147, 148, 149, 150], "regist": [48, 61, 62, 63, 64, 65, 113, 125], "register_error": [48, 61, 62, 63, 64, 65, 113, 125], "regress": 142, "regressor": 142, "regular": [1, 15, 16, 36, 45, 48, 61, 62, 63, 64, 65, 111, 113, 116, 117, 122, 123, 125, 165, 166, 177], "regularis": [109, 110], "rel": [4, 6, 29, 70, 73, 97, 130, 131, 132, 139], "relat": [58, 101, 179], "releas": [116, 117, 122, 123, 127, 169, 174], "relev": [108, 109, 110, 111], "reli": 30, "remain": [19, 29, 30, 32, 47, 48, 61, 62, 63, 64, 65, 113, 125, 133, 134, 135, 177], "remov": [39, 48, 61, 62, 63, 64, 65, 94, 101, 113, 125, 128, 129, 133, 134, 135, 176], "removeprefix": [48, 61, 62, 63, 64, 65, 113, 125], "removesuffix": [48, 61, 62, 63, 64, 65, 113, 125], "render": [7, 8], "reorder": [29, 30, 32, 47], "replac": [32, 40, 48, 61, 62, 63, 64, 65, 98, 100, 101, 102, 104, 107, 109, 113, 116, 117, 122, 123, 125, 127, 156], "replic": 179, "repo": 170, "repr": [48, 61, 62, 63, 64, 65, 113, 125], "repres": [3, 4, 5, 6, 15, 29, 30, 31, 32, 33, 36, 39, 40, 47, 49, 68, 70, 73, 108, 109, 110, 111, 130, 131, 132, 148, 176, 177, 181], "request": [108, 109, 110, 111, 179], "requir": 2, "rerun": [177, 181], "rescal": [77, 108, 109, 110, 111, 121, 129, 130, 131, 132], "research": [49, 50, 51, 52, 53, 107, 146, 147, 148, 149, 170], "reserv": [48, 61, 62, 63, 64, 65, 113, 125], "residu": 141, "residual_vari": 141, "resourc": 165, "respect": [11, 48, 108, 109, 110, 111], "rest": [48, 61, 62, 63, 64, 65, 113, 125], "result": [12, 13, 48, 61, 62, 63, 64, 65, 96, 108, 109, 110, 111, 113, 125, 142, 169], "retain": [108, 109, 110, 111, 133, 134, 135, 173], "retent": [133, 134, 135], "retriev": [12, 116, 117, 122, 123, 127], "return": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 26, 29, 31, 33, 36, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 171, 173, 176, 177, 178, 179, 180, 181, 182], "return_train_scor": [14, 40], "returns_df": [130, 131, 132, 179], "reveiz": 169, "revers": [129, 133, 134, 135], "review": [119, 120], "rfind": [48, 61, 62, 63, 64, 65, 113, 125], "rgb": [14, 15, 40], "rgba": [14, 40], "richard": 169, "ridgecv": 5, "right": [48, 61, 62, 63, 64, 65, 113, 116, 117, 122, 123, 125, 127, 130, 131, 132, 146, 147, 148, 149, 150, 182], "right_inequ": [11, 116, 117, 122, 123, 127], "rindex": [48, 61, 62, 63, 64, 65, 113, 125], "risk": [2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 21, 23, 28, 32, 34, 36, 40, 47, 62, 64, 65, 67, 68, 69, 70, 72, 73, 89, 106, 112, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 135, 136, 139, 140, 141, 166, 169, 173, 174, 181], "risk_": [123, 127, 177], "risk_avers": [106, 117, 123, 177], "risk_budget": [19, 127], "risk_free_r": [115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 130, 131, 132, 139], "risk_measur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 29, 30, 31, 32, 33, 36, 43, 115, 116, 119, 120, 123, 127, 165, 173, 177, 178], "riskbudget": [17, 18, 19, 20, 32, 33, 45, 165, 177], "riskfolio": 165, "riskmeasur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 29, 30, 31, 32, 33, 36, 43, 92, 115, 116, 119, 120, 123, 124, 127, 128, 130, 131, 132, 135, 165, 173, 177, 178, 179], "rjust": [48, 61, 62, 63, 64, 65, 113, 125], "rmse": [2, 122, 123], "robert": [139, 169], "robust": [5, 14, 15, 27, 31, 33, 36, 39, 107, 116, 117, 120, 122, 123, 124, 141, 146, 147, 148, 149, 165, 166, 181, 182], "rockafellar": [26, 117], "roll": [14, 15, 31, 33, 36, 39, 40, 130, 131, 132], "rolling_measur": [130, 131, 132, 179], "root": [2, 84, 86, 122, 123, 130, 131, 132, 169], "round": [129, 130, 131, 132], "rout": [47, 54, 55, 56, 57, 58, 59, 60, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "row": [7, 8, 136], "rpartit": [48, 61, 62, 63, 64, 65, 113, 125], "rrc": [43, 165], "rsome": 165, "rsplit": [48, 61, 62, 63, 64, 65, 113, 125], "rstrip": [48, 61, 62, 63, 64, 65, 113, 125], "rule": [130, 131, 132, 161, 162, 169], "run": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 96, 108, 124, 128, 133, 134, 135, 142, 169, 173, 177], "rust": [116, 117, 122, 123, 127], "rv": 173, "rvert": 97, "rvert_": [15, 116, 123], "s_": [15, 116, 123, 136, 169], "same": [7, 8, 11, 12, 13, 18, 31, 33, 36, 40, 47, 48, 61, 62, 63, 64, 65, 108, 109, 110, 111, 113, 115, 116, 117, 119, 120, 122, 123, 125, 127, 128, 135, 139, 165, 168, 171, 172, 173, 177, 180, 181, 182], "sampl": [14, 15, 26, 31, 32, 33, 36, 39, 40, 55, 57, 59, 60, 94, 95, 96, 108, 109, 110, 111, 112, 116, 117, 120, 122, 123, 124, 128, 133, 134, 135, 146, 147, 149, 156, 165, 173, 177], "sargen": 107, "satisfi": 10, "save": [5, 116, 117, 122, 123, 127, 181], "save_problem": [116, 117, 122, 123, 127], "sc": [116, 117, 122, 123, 127], "scalar": 92, "scale": [15, 108, 109, 110, 111, 116, 117, 122, 123, 127, 129, 130, 131, 132, 135, 169], "scale_constraint": [116, 117, 122, 123, 127], "scale_object": [116, 117, 122, 123, 127], "scatter": [14, 15, 40, 129], "scene_camera": 10, "scheme": [48, 61, 62, 63, 64, 65, 113, 125, 173], "sch\u00f6ttle": [146, 147, 148, 149], "scienc": 107, "scientif": 165, "scikit": [5, 7, 8, 92, 108, 109, 110, 111, 165, 168, 171, 172, 173, 174, 176, 177, 180, 181, 182], "scikit-learn": 165, "scipi": [14, 15, 47, 48, 165, 173], "score": [14, 15, 31, 36, 40, 92, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 173], "score_func": 92, "scorer": [40, 92], "script": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "search": [14, 15, 33, 48, 61, 62, 63, 64, 65, 97, 108, 113, 125], "second": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 65, 79, 84, 85, 86, 90, 123, 130, 131, 132, 133, 173], "secondli": 169, "section": [14, 15, 47, 48], "sector": 11, "secur": [5, 49, 50, 51, 52, 53, 101, 136, 141, 169, 170, 181], "see": [4, 7, 8, 14, 15, 26, 29, 30, 31, 43, 47, 48, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 115, 116, 119, 120, 122, 123, 124, 127, 128, 133, 134, 135, 141, 165, 173], "seed": [146, 147], "seen": [47, 55, 56, 57, 58, 59, 60, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 122, 123, 124, 127, 128, 133, 134, 135, 139, 140, 141, 169], "select": [11, 12, 13, 14, 15, 31, 39, 41, 108, 124, 128, 133, 134, 135, 146, 147, 166, 174, 177, 179], "selectkextrem": [40, 165, 173, 180], "selectnondomin": 180, "self": [47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 177], "sell": [11, 12, 115, 116, 117, 119, 120, 122, 123, 127], "semi": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 65, 84, 85, 107, 116, 123, 127, 130, 131, 132, 141, 165, 173, 177], "semi_devi": [65, 116, 123, 127, 130, 131, 132, 177], "semi_vari": [65, 115, 116, 119, 120, 123, 127, 130, 131, 132, 165, 173, 177], "sens": [108, 109, 110, 111], "sensit": 165, "sep": [48, 61, 62, 63, 64, 65, 113, 125], "separ": [5, 6, 48, 61, 62, 63, 64, 65, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 140, 141, 142, 181], "sequenti": 133, "seri": [78, 94, 95, 107, 130, 131, 132, 176], "serial": [94, 176], "seriat": [29, 120, 177], "set": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 158, 163, 166, 169, 170, 173, 176, 177, 178, 179], "set_config": [39, 40, 108, 109, 110, 111, 165, 180], "set_output": [133, 134, 135], "set_param": [2, 12, 13, 14, 15, 31, 47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "set_portfolio_param": [9, 10, 129, 178], "set_score_request": [108, 109, 110, 111], "shallow": 129, "shape": [6, 9, 10, 12, 13, 14, 15, 29, 30, 31, 32, 33, 36, 39, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 132, 133, 134, 135, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 176, 177, 178, 180, 182], "share": 116, "sharp": [1, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 18, 19, 20, 23, 29, 32, 33, 36, 39, 40, 45, 64, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 134, 166, 173, 177, 179], "sharpe_ratio": [39, 64, 124, 128, 130, 131, 132, 134, 165, 176, 177, 178, 179], "short": [2, 14, 15, 36, 115, 116, 117, 119, 120, 122, 123, 127, 169], "shortcom": [133, 165], "shortfal": [7, 8, 65, 68, 123, 130, 131, 132], "should": [12, 33, 54, 98, 99, 108, 109, 110, 111, 136, 137, 138, 144, 145, 169, 173, 179], "show": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 129], "show_front": [129, 178], "showlegend": [14, 40], "shown": 176, "shrink": 112, "shrinkag": [3, 5, 13, 17, 21, 45, 109, 110, 111, 112, 113, 115, 116, 119, 120, 122, 123, 127, 165, 166, 181], "shrinkage_": [109, 110], "shrunk": [109, 110, 111], "shrunkcovari": [20, 168], "shrunkmu": [3, 5, 113, 165, 172, 181], "shrunkmumethod": 112, "shuffl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 95, 165, 173, 176, 177, 178, 180], "sigma": [106, 146, 148, 149, 150, 169, 182], "sigma_": 169, "sign": 92, "signal": [100, 110], "signatur": [92, 173], "significantli": [14, 158], "sim": [148, 149], "similar": [169, 173], "simpl": [6, 47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 169, 177], "simplex": [163, 164], "simpli": [3, 12, 133], "simplifi": [43, 169], "simul": [31, 33, 36, 40], "simultan": 107, "sinc": [12, 29, 94, 165, 176], "singl": [2, 29, 30, 31, 32, 33, 47, 48, 94, 96, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 135, 136, 169, 176, 177], "site": [50, 51], "six": 14, "size": [6, 15, 31, 33, 36, 39, 48, 49, 61, 62, 63, 64, 65, 97, 102, 103, 104, 105, 107, 109, 113, 116, 117, 122, 123, 125, 127, 130, 131, 132, 146, 147, 148, 149, 150, 156, 161, 162, 165, 176, 177, 181, 182], "skew": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 115, 119, 120, 130, 131, 132, 165, 169], "skfolio": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "skfolio_data": [50, 51, 170], "skip": [97, 128], "sklean": 181, "sklearn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 92, 94, 95, 108, 109, 110, 111, 124, 142, 165, 167, 173, 176, 177, 178, 179, 180], "slice": [48, 61, 62, 63, 64, 65, 113, 125, 129, 130, 131, 132], "slightli": [31, 33, 40, 98, 100, 101, 102, 104, 107, 109], "slot": [130, 131, 132, 179], "slow": [98, 100, 101, 102, 104, 107, 109, 158], "slower": [141, 142], "small": [5, 110, 112, 141, 181], "smooth": [102, 103], "snippet": 165, "so": [12, 13, 26, 47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 165, 179], "social": 107, "solut": 148, "solv": [127, 177, 182], "solver": [26, 108, 116, 117, 122, 123, 127, 177], "solver_param": [116, 117, 122, 123, 127], "some": [55, 57, 59, 60, 101, 108, 109, 110, 111, 127, 143, 178], "sometim": 169, "sort": [129, 131, 133, 134, 135], "sort_idx": [14, 15], "sort_measur": 129, "sortino": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 130, 131, 132, 173], "sortino_ratio": [64, 130, 131, 132, 165, 173, 178, 179], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "sp500": 53, "space": [14, 26, 48, 61, 62, 63, 64, 65, 97, 113, 117, 125, 132, 177], "span": 29, "spars": 108, "spawn": 96, "spd": 158, "spearman": [60, 165], "spearmandist": [171, 177], "special": 122, "specif": [0, 5, 48, 61, 62, 63, 64, 65, 101, 113, 116, 117, 122, 123, 125, 127, 128, 141, 173, 181], "specifi": [11, 14, 15, 19, 48, 50, 51, 54, 58, 61, 62, 63, 64, 65, 68, 96, 98, 99, 108, 109, 110, 111, 113, 124, 125, 128, 130, 131, 132, 137, 138, 139, 144, 145], "spectral": [108, 109, 110, 111], "speed": 26, "sphinx": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45], "sphx_glr_auto_examples_miscellaneous_plot_set_output": [133, 134, 135], "split": [7, 8, 12, 29, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 93, 94, 95, 96, 108, 109, 113, 120, 124, 125, 128, 170, 176, 177], "splitlin": [48, 61, 62, 63, 64, 65, 113, 125], "splitter": [96, 108], "spx": [2, 3, 4, 5, 6, 29, 115, 116, 117, 119, 120, 122, 123, 127, 139, 170], "spx_price": 2, "spx_test": 2, "spx_train": 2, "sqrt": [2, 48, 55, 57, 59, 60, 108, 109, 110, 111, 130, 131, 132, 156], "squar": [2, 29, 30, 32, 47, 55, 57, 59, 60, 84, 86, 108, 109, 110, 111, 122, 123, 130, 131, 132, 146, 147, 148, 149, 153, 169], "sric": 132, "ssrn": [120, 124], "stabil": [14, 31, 116, 117, 122, 123, 127, 156], "stabl": [29, 30, 31, 32, 108, 119, 120, 129, 174, 177], "stack": [35, 37, 45, 128, 165, 166], "stackingoptim": [36, 177], "stake": 36, "standard": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 40, 49, 50, 51, 52, 53, 55, 57, 59, 60, 64, 65, 84, 86, 108, 123, 129, 130, 131, 132, 157, 158, 159, 170, 177], "standard_devi": [65, 116, 123, 127, 130, 131, 132], "starer": 107, "start": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 77, 94, 113, 120, 125, 129, 130, 131, 132, 151, 158, 165, 170, 177], "startswith": [48, 61, 62, 63, 64, 65, 113, 125], "stat": [14, 15, 165, 173, 178], "state": 110, "static": [48, 61, 62, 63, 64, 65, 113, 125], "stationari": [146, 147], "statist": [29, 47, 107, 119, 156, 169], "statsmodel": 165, "std": [31, 33, 36, 39, 157, 159], "std_test_scor": [14, 40, 108], "std_train_scor": [14, 40], "stein": [3, 5, 112, 113, 181], "step": [29, 30, 40, 119, 120, 133, 139, 169, 177], "sticker": [7, 8], "still": [8, 174], "stochast": [79, 130, 131, 132], "stock": [2, 13], "stop": [10, 48, 61, 62, 63, 64, 65, 108, 113, 125, 129], "store": [50, 51, 108, 109, 110, 111, 168, 171, 172, 177, 181, 182], "store_precis": [108, 109, 110, 111], "str": [48, 50, 51, 61, 62, 63, 64, 65, 96, 108, 109, 110, 111, 113, 115, 116, 117, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 151, 178], "strategi": [7, 8, 18, 19, 20, 23, 96, 108, 124, 128], "stratifi": 96, "strength": [36, 128, 177], "strict": [48, 61, 62, 63, 64, 65, 113, 125], "strictli": [130, 131, 132], "string": [11, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141], "strip": [48, 61, 62, 63, 64, 65, 113, 125], "structur": [5, 29, 30, 32, 141, 168, 171, 172, 177, 180, 181, 182], "sub": [29, 36, 48, 61, 62, 63, 64, 65, 108, 109, 110, 111, 113, 120, 125, 128, 129, 177], "subfold": [50, 51], "subobject": [47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "suboptim": [133, 169], "subsequ": 95, "subset": 101, "substitut": [48, 61, 62, 63, 64, 65, 113, 125], "substr": [48, 61, 62, 63, 64, 65, 113, 125], "succeq": [146, 148, 150, 182], "success": [12, 13, 158], "suffer": [29, 30, 32], "suffici": 11, "suffix": [48, 61, 62, 63, 64, 65, 113, 125], "suitabl": [48, 61, 62, 63, 64, 65, 95, 113, 125], "sum": [11, 116, 117, 121, 122, 123, 126, 127, 136, 139, 163, 164, 169, 179], "sum_": [12, 13, 14, 48, 115, 116, 119, 120, 122, 123, 127, 132, 156, 169], "summari": [7, 8, 9, 14, 15, 18, 19, 20, 23, 31, 33, 36, 39, 40, 94, 129, 130, 131, 132, 165, 169, 176, 178, 179], "super": 177, "superior": [79, 130, 131, 132], "support": [117, 124, 133, 134, 135, 177, 178], "suppos": [13, 133], "surfac": [1, 16, 45, 129, 166], "swapcas": [48, 61, 62, 63, 64, 65, 113, 125], "sx5e": [115, 116, 117, 119, 120, 122, 123, 127, 139], "sy": 129, "symetri": 97, "symmetr": [130, 131, 132, 154, 158, 160], "syntax": 173, "systemat": [5, 124, 128, 141, 181], "szeke": 56, "t": [11, 12, 13, 15, 29, 48, 61, 62, 63, 64, 65, 97, 106, 108, 109, 110, 111, 113, 115, 116, 119, 120, 122, 123, 125, 127, 136, 139, 146, 147, 148, 149, 150, 156, 169, 177, 179, 182], "tab": [48, 61, 62, 63, 64, 65, 113, 125], "tabl": [48, 61, 62, 63, 64, 65, 113, 125], "tabsiz": [48, 61, 62, 63, 64, 65, 113, 125], "tag": [2, 9, 10, 14, 15, 31, 33, 36, 39, 43, 129, 130, 131, 132], "tag_list": [31, 36, 39, 129], "tail": [68, 76, 130, 131, 132, 165], "tailor": 176, "take": [4, 5, 12, 14, 15, 116, 117, 122, 123, 127, 129, 133, 139, 168, 169, 171, 172, 173, 177, 179, 180, 181, 182], "taken": 18, "target": [2, 15, 74, 76, 82, 84, 85, 94, 96, 97, 112, 121, 122, 123, 124, 128, 133, 134, 135, 136, 176], "target_n_test_path": [31, 33, 36, 39, 97, 176], "target_train_s": [31, 33, 36, 39, 97, 176], "tau": [107, 139], "tc": 12, "technologi": 11, "tend": [14, 39, 107, 116, 122, 123, 165], "term": [11, 31, 33, 116, 117, 122, 123, 135, 141, 169], "test": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 48, 56, 61, 62, 63, 64, 65, 93, 94, 95, 96, 97, 108, 109, 110, 111, 113, 124, 125, 128, 158, 176, 178, 179], "test_index": [94, 95], "test_set_index": 94, "test_siz": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 95, 165, 173, 177, 178, 180], "text": [48, 61, 62, 63, 64, 65, 113, 123, 125, 127, 146, 148, 150, 156, 177, 182], "th": 108, "than": [5, 11, 14, 29, 30, 31, 32, 43, 47, 79, 95, 96, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 116, 117, 119, 120, 122, 123, 124, 127, 130, 131, 132, 133, 134, 135, 158, 169, 177, 179, 181], "thank": 165, "theat": 72, "thei": [0, 48, 61, 62, 63, 64, 65, 77, 78, 113, 125, 140, 165, 169, 170, 173, 177, 179], "them": [5, 6, 13, 26, 31, 33, 36, 39, 40, 128, 129, 141, 179, 181], "theori": [40, 58, 98, 100, 101, 102, 104, 107, 109, 161, 165], "therefor": [14, 135, 158, 169], "theta": 72, "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 165, 169, 173, 174, 176, 177, 178, 179, 181], "third": [29, 30, 32, 48, 61, 62, 63, 64, 65, 87, 113, 125], "thoma": [30, 119, 177], "those": [94, 176], "three": [14, 15, 31, 33, 36, 40, 48, 61, 62, 63, 64, 65, 107, 112, 113, 125, 133, 170], "threshold": [39, 47, 56, 98, 100, 101, 102, 104, 107, 109, 133, 135, 136, 158, 180], "through": [5, 72, 108, 130, 131, 132, 141, 169, 177, 181], "thu": 95, "tibshirani": 156, "tickformat": [14, 15, 40], "time": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 55, 57, 58, 59, 60, 92, 94, 95, 97, 106, 108, 115, 116, 117, 119, 120, 122, 123, 125, 127, 130, 131, 132, 136, 169, 176, 177], "timeseriessplit": 95, "titl": [14, 15, 40, 48, 61, 62, 63, 64, 65, 113, 125, 129, 165], "titlecas": [48, 61, 62, 63, 64, 65, 113, 125], "tlt": [116, 117, 122, 123, 127, 139, 165], "to_keep_": [133, 134, 135], "to_surfac": [10, 129], "togeth": [6, 36, 128, 165, 177, 179], "toi": [7, 8, 33], "tol": 108, "tol_gap_ab": [116, 117, 122, 123, 127], "tol_gap_rel": [116, 117, 122, 123, 127], "toler": 108, "tone": 101, "tonexti": [14, 40], "too": [48, 61, 62, 63, 64, 65, 113, 125], "tool": [7, 8, 165, 173, 176, 179], "top": [29, 30, 40, 119, 120, 165, 174, 177], "topic": 179, "topmost": [29, 120, 177], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 46, 96, 97, 112, 115, 116, 119, 120, 122, 123, 127, 132, 136, 166, 177], "toward": [12, 13, 112], "tr": [108, 109, 110, 111], "trace": [109, 110, 111], "track": [1, 16, 45, 122, 123, 165, 166, 177], "tracking_rms": 2, "tractabl": 117, "trade": [13, 112, 165, 179], "tradeoff": 2, "tradit": 100, "trail": [5, 48, 61, 62, 63, 64, 65, 113, 125], "train": [2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 94, 95, 96, 97, 108, 117, 124, 128, 142, 176, 177, 179], "train_index": [94, 95], "train_siz": [12, 13, 14, 15, 31, 33, 36, 40, 95, 165], "train_spx": 2, "train_test_split": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 165, 173, 176, 177, 178, 180], "transact": [1, 16, 45, 110, 115, 116, 117, 119, 120, 122, 123, 127, 132, 166, 177, 179], "transaction_cost": [12, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 132, 165], "transform": [7, 8, 11, 12, 13, 38, 39, 40, 43, 45, 55, 57, 59, 60, 133, 134, 135, 136, 140, 165, 169], "transform_output": [39, 40, 165, 180], "translat": [48, 61, 62, 63, 64, 65, 113, 125], "travers": [29, 120, 177], "tree": [29, 30, 32, 119, 120, 124, 177], "triangular": [3, 4, 5, 143, 181], "true": [10, 14, 29, 30, 32, 40, 43, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 158, 160, 165, 169, 173, 178], "truncat": [48, 61, 62, 63, 64, 65, 113, 125], "try": [48, 50, 51, 61, 62, 63, 64, 65, 113, 125], "tune": [165, 174], "tupl": [48, 61, 62, 63, 64, 65, 113, 125, 128, 159], "turnov": [116, 122, 123, 127, 165, 177], "tutori": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 116, 117, 122, 123, 127], "two": [2, 6, 14, 29, 31, 33, 40, 47, 48, 58, 61, 62, 63, 64, 65, 79, 97, 107, 108, 109, 110, 111, 112, 113, 119, 120, 125, 129, 130, 131, 132, 133, 156, 169, 173, 177], "type": [108, 109, 110, 111, 129, 151], "u": [29, 30, 32, 48, 61, 62, 63, 64, 65, 113, 116, 117, 122, 123, 125, 127, 139, 156, 165], "u_": [146, 147, 148, 149, 150, 182], "ulcer": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 65, 88, 123, 127, 130, 131, 132, 165, 177], "ulcer_index": [65, 115, 116, 119, 120, 123, 127, 130, 131, 132], "ulcer_index_ratio": [64, 130, 131, 132], "umbrella": 15, "un": 14, "unbias": [104, 112, 132], "uncas": [48, 61, 62, 63, 64, 65, 113, 125], "uncertain": [13, 115, 116, 119, 120, 122, 123, 127], "uncertainti": [1, 16, 26, 45, 116, 123, 139, 144, 145, 146, 147, 148, 149, 150, 166, 177], "uncertainty_set": [15, 165, 177, 182], "uncertainty_set_": [146, 147, 148, 149, 182], "uncertaintyset": [146, 147, 148, 149, 182], "unchang": [98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 133, 134, 135, 158], "uncommon": 169, "uncompound": [77, 78], "under": [9, 10, 13, 14, 15, 107, 108, 109, 110, 111, 149, 165, 169, 174, 177], "underli": [108, 179], "underperform": [7, 8, 33, 139], "underscor": [5, 15], "unfortun": 165, "unh": [7, 8, 43, 52], "unicod": [48, 61, 62, 63, 64, 65, 113, 125], "unicodeencodeerror": [48, 61, 62, 63, 64, 65, 113, 125], "unifi": 165, "uniform": [14, 15, 26, 117, 163, 164, 173, 177], "uniformli": [14, 15, 173], "unit": [129, 130, 131, 132], "univers": [120, 124, 169, 180], "unless": [48, 61, 62, 63, 64, 65, 96, 108, 113, 124, 125, 128, 142], "unrealist": 12, "unrepresent": [48, 61, 62, 63, 64, 65, 113, 125], "unsupervis": [133, 134, 135], "until": [135, 174], "untouch": [48, 61, 62, 63, 64, 65, 113, 125], "unus": 48, "unwant": [13, 115, 116, 119, 120, 122, 123, 127], "up": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 30, 31, 32, 33, 36, 39, 40, 43, 49, 50, 51, 52, 53, 98, 100, 101, 102, 104, 107, 109, 170], "updat": [4, 12, 29, 30, 47, 54, 55, 56, 57, 58, 59, 60, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 177, 181], "update_layout": [10, 14, 15, 40], "update_xax": 15, "update_yax": [14, 15, 40], "upgma": 48, "upgmc": 48, "upper": [14, 15, 48, 61, 62, 63, 64, 65, 70, 73, 113, 115, 116, 117, 119, 120, 122, 123, 125, 127, 130, 131, 132], "uppercas": [48, 61, 62, 63, 64, 65, 113, 125], "upsid": [29, 30, 32, 74, 76, 82, 84, 85, 116, 123, 127, 130, 131, 132], "url": 165, "uryasev": [26, 117], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 38, 39, 40, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 73, 74, 76, 79, 82, 83, 84, 85, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 158, 161, 162, 165, 167, 169, 170, 173, 176, 177, 179, 181, 182], "usabl": [48, 61, 62, 63, 64, 65, 113, 125], "user": [0, 7, 8, 47, 54, 55, 56, 57, 58, 59, 60, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 165, 169, 170], "usmv": [49, 177, 181], "usual": [13, 101, 173], "utf": [48, 61, 62, 63, 64, 65, 113, 125], "util": [12, 13, 29, 36, 72, 108, 109, 110, 111, 117, 123, 125, 130, 131, 132, 165, 177, 178], "v": [28, 34, 45, 48, 136, 140, 156, 166, 169, 176], "valid": [14, 32, 40, 48, 61, 62, 63, 64, 65, 93, 94, 95, 96, 108, 113, 124, 125, 128, 173, 174, 177], "valu": [2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 23, 29, 30, 32, 36, 40, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 156, 158, 160, 165, 173, 177], "value_at_risk": [62, 115, 119, 120, 130, 131, 132], "value_at_risk_beta": [130, 131, 132], "value_at_risk_ratio": [64, 130, 131, 132], "valueerror": [48, 61, 62, 63, 64, 65, 113, 125, 129, 152, 153, 154], "var": [62, 68, 73, 89, 130, 131, 132], "variabl": [5, 14, 15, 58, 79, 94, 116, 117, 122, 123, 127, 130, 131, 132, 133, 141, 148, 170, 173, 177, 181], "varianc": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 29, 30, 32, 33, 36, 39, 40, 43, 45, 47, 48, 65, 79, 85, 98, 100, 101, 102, 104, 107, 109, 112, 115, 116, 119, 120, 123, 124, 127, 130, 131, 132, 135, 141, 143, 146, 147, 148, 149, 158, 166, 169, 173, 177, 178, 179], "variance_from_asset": 132, "variance_upp": 10, "variant": 107, "variat": [58, 165, 173], "variou": 128, "vast": [7, 8], "vec": [146, 148, 150, 182], "vector": [11, 12, 13, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 112, 115, 116, 117, 119, 120, 122, 123, 127, 129, 130, 132, 133, 134, 135, 139, 148, 157, 159, 163, 164, 169, 176, 177, 179], "verbos": [96, 108, 116, 117, 122, 123, 124, 127, 128], "veri": [30, 108, 128, 169, 173, 177], "verifi": 160, "version": [14, 47, 48, 61, 62, 63, 64, 65, 92, 108, 109, 110, 111, 113, 125, 133, 134, 135, 173, 174], "versu": [2, 10], "vert": [14, 71, 116, 122, 123, 132], "vert_": [14, 71, 116, 122, 123, 132], "vertic": 40, "via": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 48, 61, 62, 63, 64, 65, 113, 125, 170], "view": [139, 165, 177, 181], "view_confid": 139, "views_": 139, "visual": [12, 13], "vlue": [6, 49, 165, 177, 181], "vod": 50, "vol": [7, 18, 19, 165], "vol_weighted_target": 112, "volatil": [7, 12, 14, 18, 19, 23, 36, 49, 112, 121, 122, 132, 165, 177], "volum": 109, "voor": 48, "w": [11, 12, 13, 14, 15, 71, 106, 115, 116, 117, 119, 120, 122, 123, 125, 127, 132, 148, 169, 177, 179], "w_": [12, 13, 14, 97, 115, 116, 119, 120, 122, 123, 127, 132, 156, 169, 179], "wa": [7, 8, 12, 33, 48, 56, 133, 134, 135], "wai": [40, 122, 123, 173], "walk": [12, 13, 15, 95, 165], "walkforward": [12, 13, 14, 15, 31, 33, 36, 40, 165, 179], "wang": [47, 119, 156], "want": [10, 12, 13, 176, 177], "ward": [29, 30, 31, 32, 33, 47, 48, 119, 120, 177], "warn": [116, 117, 122, 123, 127], "wasserstein": [26, 117, 177], "wasserstein_ball_radiu": [26, 117, 177], "we": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 92, 97, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 135, 141, 148, 158, 165, 169, 173, 174, 176, 177, 178, 181], "wei": [47, 119, 156], "weight": [0, 1, 2, 4, 8, 12, 13, 14, 16, 23, 26, 29, 30, 31, 32, 33, 36, 45, 48, 71, 83, 97, 102, 103, 106, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 136, 139, 163, 164, 166, 169, 177, 178, 179], "weight_n_test_path": 97, "weight_train_s": 97, "weights_": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 39, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 165, 173, 177, 178, 182], "weir": 50, "well": [47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 165, 176, 177], "were": [4, 6, 165], "werner": [146, 147, 148, 149], "when": [11, 12, 13, 14, 29, 30, 32, 40, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 133, 134, 135, 136, 139, 140, 141, 142, 143, 173, 176, 179], "where": [11, 29, 30, 48, 61, 62, 63, 64, 65, 94, 96, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 113, 119, 120, 122, 125, 129, 133, 134, 135, 156, 169, 173, 176, 177, 179], "whether": [48, 61, 62, 63, 64, 65, 108, 109, 110, 111, 113, 125, 160], "which": [4, 5, 6, 11, 12, 13, 14, 15, 23, 26, 29, 30, 32, 48, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 65, 70, 72, 73, 94, 96, 107, 108, 109, 110, 111, 113, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 134, 135, 139, 141, 158, 169, 170, 173, 176, 177, 179, 181], "while": [2, 36, 79, 94, 96, 107, 128, 130, 131, 132, 165, 173, 174], "white": [146, 147], "whitespac": [48, 61, 62, 63, 64, 65, 113, 125], "whole": [32, 124, 177], "whose": [48, 61, 62, 63, 64, 65, 94, 108, 109, 110, 111, 113, 125, 133, 134, 135, 176], "wi": 132, "wide": [55, 57, 59, 60, 173], "width": [14, 40, 48, 61, 62, 63, 64, 65, 113, 125], "wiesel": 110, "william": [71, 132], "window": [102, 103, 104, 105, 107, 130, 131, 132], "window_s": [102, 103, 104, 105, 107], "wise": 169, "wishart": 148, "wit": 169, "within": [26, 30, 48, 61, 62, 63, 64, 65, 113, 117, 119, 125, 128, 156, 173, 177], "without": [2, 5, 6, 7, 8, 12, 13, 14, 15, 20, 39, 40, 116, 117, 122, 123, 127, 130, 131, 132], "wmt": [7, 8, 29, 30, 32, 43, 52], "wolf": [109, 165], "word": [31, 48, 61, 62, 63, 64, 65, 113, 125], "work": [36, 40, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149], "wors": [130, 131, 132], "worst": [7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 36, 40, 64, 65, 67, 68, 69, 89, 91, 116, 117, 123, 127, 130, 131, 132, 134, 165, 182], "worst_real": [65, 115, 116, 119, 120, 123, 127, 130, 131, 132], "worst_realization_ratio": [64, 130, 131, 132], "would": [11, 13, 14, 36, 115, 116, 119, 120, 122, 123, 127, 133, 134, 135, 165, 169, 177, 179], "wpgma": 48, "wpgmc": 48, "wpp": 50, "wrap": 92, "write": 173, "written": [116, 117, 122, 123, 127], "wtb": 50, "www": [116, 117, 122, 123, 127], "x": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 152, 153, 154, 155, 160, 161, 162, 165, 167, 168, 169, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182], "x0": [132, 133, 134, 135], "x1": [132, 133, 134, 135], "x_new": [133, 134, 135], "x_r": [133, 134, 135], "x_test": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 108, 109, 110, 111, 165, 173, 176, 177, 178, 180], "x_train": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 165, 173, 177, 178, 180], "xaxis_titl": [14, 15, 40], "xmlcharrefreplac": [48, 61, 62, 63, 64, 65, 113, 125], "xom": [7, 8, 43, 52], "y": [2, 5, 6, 9, 10, 14, 15, 29, 40, 43, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 165, 177, 178, 181], "y_test": [2, 5, 6, 29, 165, 177], "y_test_mean": [14, 15], "y_test_std": 14, "y_train": [2, 5, 6, 29, 165, 177], "y_train_mean": 14, "y_train_std": 14, "yahoo": [49, 50, 51, 52, 53, 170], "yaxis_titl": [14, 15, 40], "year": [12, 13, 14, 15, 26, 31, 33, 36, 40, 43, 165, 169], "yearli": [13, 169], "yellow": [29, 30, 32, 47], "yield": [94, 95, 108, 124, 128, 169], "you": [7, 8, 9, 11, 12, 13, 15, 29, 58, 92, 95, 106, 108, 109, 110, 111, 116, 117, 122, 123, 127, 128, 139, 165, 169, 174, 176, 177], "your": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 169, 173, 177], "yue": [47, 119, 156], "z": [10, 48, 61, 62, 63, 64, 65, 113, 125, 129, 133, 178], "zero": [14, 48, 61, 62, 63, 64, 65, 98, 100, 101, 102, 104, 107, 108, 109, 110, 111, 113, 116, 122, 123, 125, 130, 131, 132, 133, 134, 135, 146, 147, 148, 149, 158, 163, 179], "zfill": [48, 61, 62, 63, 64, 65, 113, 125], "zhou": 135, "zip": 45, "zvra": 51, "zyme": 51, "zyne": 51, "zyxi": 51, "\u00ecn": 173}, "titles": ["API Reference", "Mean-Risk", "Tracking Error", "Empirical Prior", "Black &amp; Litterman", "Factor Model", "Black &amp; Litterman Factor Model", "Maximum Sharpe Ratio", "Minimum CVaR", "Efficient Frontier", "Mean-Variance-CDaR Surface", "Weight Constraints", "Transaction Costs", "Management Fees", "L1 and L2 Regularization", "Uncertainty Set", "Computation times", "Risk Budgeting", "Risk Parity - Variance", "Risk Budgeting - CVaR", "Risk Parity - Covariance shrinkage", "Computation times", "Maximum Diversification", "Maximum Diversification", "Computation times", "Distributionally Robust CVaR", "Distributionally Robust CVaR", "Computation times", "Hierarchical Clustering and NCO", "Hierarchical Risk Parity - CVaR", "Hierarchical Equal Risk Contribution - CDaR", "HRP vs HERC", "Nested Clusters Optimization", "NCO - Combinatorial Purged CV", "Computation times", "Ensemble Optimizations", "Stacking Optimization", "Computation times", "Pre-selection", "Drop Highly Correlated Assets", "Select Best Performers", "Computation times", "Data Preparation", "Investment Horizon", "Computation times", "Examples", "Computation times", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.cluster</span></code>.HierarchicalClustering", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.cluster</span></code>.LinkageMethod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_factors_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_ftse100_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_nasdaq_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_sp500_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_sp500_index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.BaseDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.CovarianceDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.DistanceCorrelation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.KendallDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.MutualInformation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.PearsonDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.SpearmanDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.BaseMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.ExtraRiskMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.PerfMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.RatioMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.RiskMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.average_drawdown", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.cdar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.cvar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.drawdown_at_risk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.edar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.effective_number_assets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.entropic_risk_measure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.evar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.first_lower_partial_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.fourth_central_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.fourth_lower_partial_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.get_cumulative_returns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.get_drawdowns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.gini_mean_difference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.max_drawdown", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.mean", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.mean_absolute_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.owa_gmd_weights", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.semi_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.semi_variance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.standard_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.third_central_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.ulcer_index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.value_at_risk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.variance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.worst_realization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.metrics</span></code>.make_scorer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.BaseCombinatorialCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.CombinatorialPurgedCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.WalkForward", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.cross_val_predict", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.optimal_folds_number", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.BaseCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.BaseMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.DenoiseCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.DetoneCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EWCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EWMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EmpiricalCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EmpiricalMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EquilibriumMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.GerberCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.GraphicalLassoCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.LedoitWolf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.OAS", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkMuMethods", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.BaseComposition", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.BaseHierarchicalOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.ConvexOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.DistributionallyRobustCVaR", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.EqualWeighted", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.HierarchicalEqualRiskContribution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.HierarchicalRiskParity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.InverseVolatility", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.MaximumDiversification", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.MeanRisk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.NestedClustersOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.ObjectiveFunction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.Random", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.RiskBudgeting", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.StackingOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.population</span></code>.Population", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.BasePortfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.MultiPeriodPortfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.Portfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.DropCorrelated", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectKExtremes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectNonDominated", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.preprocessing</span></code>.prices_to_returns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BaseLoadingMatrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BasePrior", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BlackLitterman", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.EmpiricalPrior", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.FactorModel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.LoadingMatrixRegression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.PriorModel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BaseCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BaseMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BootstrapCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BootstrapMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.EmpiricalCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.EmpiricalMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.UncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.NBinsMethod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_distance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_square", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_symmetric", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.commutation_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.compute_optimal_n_clusters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.corr_to_cov", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.cov_nearest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.cov_to_corr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.is_cholesky_dec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.n_bins_freedman", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.n_bins_knuth", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.rand_weights", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.rand_weights_dirichlet", "skfolio", "Computation times", "Clustering Estimators", "Covariance Estimator", "Data Preparation", "Datasets", "Distance Estimator", "Expected Return Estimator", "Hyper-Parameters Tuning", "User Guide", "Installation", "Model Selection", "Optimization", "Population", "Portfolio", "Pre-Selection Transformers", "Prior Estimator", "Uncertainty Set Estimator"], "titleterms": {"In": 169, "The": 169, "alloc": 177, "an": 173, "analysi": [5, 7, 8, 9, 10, 18, 19, 20, 23, 26, 31, 33, 36], "analyst": [4, 6], "api": 0, "approach": 169, "assert_is_dist": 152, "assert_is_squar": 153, "assert_is_symmetr": 154, "asset": 39, "attribut": 179, "avail": 165, "average_drawdown": 66, "base": [0, 179], "basecombinatorialcv": 93, "basecomposit": 114, "basecovari": 98, "basecovarianceuncertaintyset": 144, "basedist": 54, "basehierarchicaloptim": 115, "baseloadingmatrix": 137, "basemeasur": 61, "basemu": 99, "basemuuncertaintyset": 145, "baseportfolio": 130, "baseprior": 138, "benchmark": [3, 36], "best": 40, "black": [4, 6, 165, 181], "blacklitterman": 139, "bootstrapcovarianceuncertaintyset": 146, "bootstrapmuuncertaintyset": 147, "bound": 11, "budget": [11, 17, 19, 45, 177], "case": 177, "cdar": [10, 30, 67], "citat": 165, "class": 0, "cluster": [0, 28, 32, 45, 47, 48, 165, 167, 177], "combin": [177, 181], "combinatori": [31, 33, 36, 39, 165, 176], "combinatorialpurgedcv": 94, "commutation_matrix": 155, "composit": [29, 30, 32, 173], "comput": [16, 21, 24, 27, 34, 37, 41, 44, 46, 166], "compute_optimal_n_clust": 156, "concept": 165, "conclus": [7, 8, 33, 36], "constraint": [11, 165], "contribut": [18, 19, 29, 30, 177], "convex": 0, "convexoptim": 116, "corr_to_cov": 157, "correct": 169, "correl": 39, "cost": [12, 165], "cov_nearest": 158, "cov_to_corr": 159, "covari": [0, 20, 165, 168], "covariancedist": 55, "cross": [31, 33, 36, 39, 165, 176], "cross_val_predict": 96, "custom": 177, "cv": 33, "cvar": [8, 19, 25, 26, 29, 45, 68, 165, 177], "data": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 42, 45, 169], "dataclass": 0, "dataset": [0, 49, 50, 51, 52, 53, 165, 170], "dendrogram": [29, 30, 32], "denois": 165, "denoisecovari": 100, "deton": 165, "detonecovari": 101, "distanc": [0, 29, 30, 32, 54, 55, 56, 57, 58, 59, 60, 171], "distancecorrel": 56, "distribut": [31, 33, 36, 39], "distribution": [25, 26, 45, 177], "distributionallyrobustcvar": 117, "diversif": [22, 23, 45, 177], "drawdown_at_risk": 69, "drop": 39, "dropcorrel": 133, "edar": 70, "effective_number_asset": 71, "effici": [9, 14, 15], "embed": 165, "empir": [3, 4, 5, 181], "empiricalcovari": 104, "empiricalcovarianceuncertaintyset": 148, "empiricalmu": 105, "empiricalmuuncertaintyset": 149, "empiricalprior": 140, "ensembl": [0, 35, 45], "entropic_risk_measur": 72, "enum": 0, "equal": [30, 177], "equalweight": 118, "equilibriummu": 106, "error": 2, "estim": [0, 29, 30, 32, 167, 168, 171, 172, 173, 177, 181, 182], "evar": 73, "ewcovari": 102, "ewmu": 103, "exampl": [45, 169], "exhaust": 173, "expect": [165, 172], "extrariskmeasur": 62, "factor": [0, 5, 6, 165, 181], "factormodel": 141, "fee": 13, "first_lower_partial_mo": 74, "fit": 165, "fold": 165, "fourth_central_mo": 75, "fourth_lower_partial_mo": 76, "frontier": [9, 14, 15], "function": 0, "further": [6, 177], "gerber": 165, "gerbercovari": 107, "get_cumulative_return": 77, "get_drawdown": 78, "gini_mean_differ": 79, "go": [6, 177], "graphicallassocv": 108, "grid": [165, 173], "group": 11, "guid": 174, "herc": 31, "hierarch": [28, 29, 30, 45, 177], "hierarchicalclust": 47, "hierarchicalequalriskcontribut": 119, "hierarchicalriskpar": 120, "highli": 39, "horizon": 43, "hrp": 31, "hyper": [14, 15, 173], "import": 165, "inequ": 11, "instal": [165, 175], "inversevolatil": 121, "invest": 43, "is_cholesky_dec": 160, "k": 165, "kei": 165, "kendalldist": 57, "l1": 14, "l2": [14, 165], "ledoitwolf": 109, "left": 11, "linear": [11, 43, 169], "linkag": [29, 30, 32], "linkagemethod": 48, "litterman": [4, 6, 165, 181], "load": [0, 165], "load_factors_dataset": 49, "load_ftse100_dataset": 50, "load_nasdaq_dataset": 51, "load_sp500_dataset": 52, "load_sp500_index": 53, "loadingmatrixregress": 142, "logarithm": 169, "long": 11, "lower": 11, "make_scor": 92, "manag": 13, "matrix": 0, "max_drawdown": 80, "maximum": [7, 22, 23, 45, 165, 177], "maximumdiversif": 122, "mean": [1, 10, 45, 81, 177], "mean_absolute_devi": 82, "meanrisk": 123, "measur": [0, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "method": [29, 30, 32, 179], "metric": [0, 92, 173], "minimum": [8, 165], "model": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 165, 176, 181], "model_select": [0, 93, 94, 95, 96, 97], "moment": [0, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "mu": 0, "multi": [12, 13, 179], "multiperiodportfolio": 131, "multipl": 181, "mutualinform": 58, "n_bins_freedman": 161, "n_bins_knuth": 162, "naiv": [0, 177], "nbinsmethod": 151, "nco": [28, 33, 45], "nest": [32, 165, 177], "nestedclustersoptim": 124, "norm": 165, "oa": 110, "object": 173, "objectivefunct": 125, "optim": [0, 10, 32, 35, 36, 45, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 165, 169, 173, 177], "optimal_folds_numb": 97, "owa_gmd_weight": 83, "parallel": [165, 173], "paramet": [14, 15, 31, 33, 36, 40, 165, 173], "pareto": 10, "pariti": [18, 20, 29, 165, 177], "pearsondist": 59, "perfmeasur": 63, "perform": 40, "period": [12, 13, 179], "pipelin": [39, 40, 165], "pitfal": 169, "popul": [0, 129, 178], "portfolio": [0, 12, 13, 130, 131, 132, 169, 179], "posit": 11, "pre": [0, 38, 45, 165, 180], "pre_select": [0, 133, 134, 135], "predict": [2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 165, 176], "prepar": [42, 45, 169], "preprocess": [0, 136], "price": 43, "prices_to_return": 136, "prior": [0, 3, 29, 137, 138, 139, 140, 141, 142, 143, 177, 181], "priormodel": 143, "purg": [31, 33, 36, 39, 165, 176], "quickstart": 165, "rand_weight": 163, "rand_weights_dirichlet": 164, "random": [126, 165, 173], "ratio": [7, 165], "ratiomeasur": 64, "recognit": 165, "refer": 0, "regular": 14, "return": [43, 165, 169, 172], "right": 11, "risk": [1, 17, 18, 19, 20, 29, 30, 45, 165, 177], "riskbudget": 127, "riskmeasur": 65, "robust": [25, 26, 45, 177], "search": [165, 173], "select": [0, 38, 40, 45, 165, 176, 180], "selectkextrem": 134, "selectnondomin": 135, "semi_devi": 84, "semi_vari": 85, "set": [0, 15, 165, 182], "sharp": 7, "short": 11, "shrinkag": 20, "shrunk": 165, "shrunkcovari": 111, "shrunkmu": 112, "shrunkmumethod": 113, "skfolio": [0, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169], "sortino": 165, "space": 173, "spearmandist": 60, "specifi": 173, "split": 165, "stack": [36, 177], "stackingoptim": 128, "standard_devi": 86, "stat": [0, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "stock": 169, "summari": 29, "surfac": 10, "test": 165, "third_central_mo": 87, "time": [16, 21, 24, 27, 34, 37, 41, 44, 46, 166], "tip": 173, "track": 2, "train": 165, "transact": [12, 165], "transform": [0, 180], "tune": [14, 15, 31, 33, 36, 40, 173], "ulcer_index": 88, "uncertainti": [0, 15, 165, 182], "uncertainty_set": [0, 144, 145, 146, 147, 148, 149, 150], "uncertaintyset": 150, "upper": 11, "user": 174, "util": [0, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "v": 31, "valid": [31, 33, 36, 39, 165, 176], "value_at_risk": 89, "varianc": [10, 18, 90, 165], "view": [4, 6], "walkforward": 95, "weight": [11, 165], "worst": 177, "worst_real": 91}})