Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Analysis": [[7, "analysis"], [8, "analysis"], [9, "analysis"], [10, "analysis"], [18, "analysis"], [19, "analysis"], [20, "analysis"], [23, "analysis"], [26, "analysis"], [31, "analysis"], [33, "analysis"], [36, "analysis"]], "Analyst views": [[4, "analyst-views"], [6, "analyst-views"]], "Attributes and Methods": [[184, "attributes-and-methods"], [184, "id3"]], "Available models": [[169, "available-models"]], "Base Class": [[0, "base-class"], [0, "id10"], [0, "id12"], [0, "id15"]], "Base Classe": [[0, "base-classe"], [0, "id2"]], "Base Classes": [[0, "base-classes"], [0, "id21"]], "Base Portfolio": [[184, "base-portfolio"]], "Benchmark": [[3, "benchmark"], [36, "benchmark"]], "Black & Litterman": [[4, null], [186, "black-litterman"]], "Black & Litterman Factor Model": [[6, null], [6, "id1"], [169, "black-litterman-factor-model"]], "Black & Litterman Model": [[4, "black-litterman-model"], [169, "black-litterman-model"]], "Budget": [[11, "budget"]], "Citation": [[169, "citation"]], "Classes": [[0, "classes"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "id6"], [0, "id7"], [0, "id8"], [0, "id9"], [0, "id11"], [0, "id13"], [0, "id16"], [0, "id17"], [0, "id19"], [0, "id20"], [0, "id22"]], "Clustering Estimator": [[32, "clustering-estimator"]], "Clustering Estimators": [[171, null]], "Combinatorial Purged Cross-Validation": [[31, "combinatorial-purged-cross-validation"], [33, "combinatorial-purged-cross-validation"], [36, "combinatorial-purged-cross-validation"], [39, "combinatorial-purged-cross-validation"], [169, "combinatorial-purged-cross-validation"], [181, "combinatorial-purged-cross-validation"]], "Combining Multiple Prior Estimators": [[186, "combining-multiple-prior-estimators"]], "Combining Prior Estimators": [[182, "combining-prior-estimators"]], "Composite Estimators and Parameter Spaces": [[177, "composite-estimators-and-parameter-spaces"]], "Composition": [[29, "composition"], [30, "composition"], [32, "composition"]], "Computation times": [[16, null], [21, null], [24, null], [27, null], [34, null], [37, null], [41, null], [44, null], [47, null], [49, null], [170, null]], "Conclusion": [[7, "conclusion"], [8, "conclusion"], [33, "conclusion"], [36, "conclusion"], [43, "conclusion"]], "Covariance Estimator": [[172, null]], "Cross Validation": [[43, "cross-validation"]], "Cross-Validation Prediction": [[181, "cross-validation-prediction"]], "Custom Estimator": [[182, "custom-estimator"]], "Data": [[2, "data"], [3, "data"], [4, "data"], [5, "data"], [6, "data"], [7, "data"], [8, "data"], [9, "data"], [10, "data"], [11, "data"], [12, "data"], [13, "data"], [14, "data"], [15, "data"], [18, "data"], [19, "data"], [20, "data"], [23, "data"], [26, "data"], [29, "data"], [30, "data"], [31, "data"], [32, "data"], [33, "data"], [36, "data"], [39, "data"], [40, "data"]], "Data Preparation": [[45, null], [48, "data-preparation"], [173, null]], "Datasets": [[174, null]], "Dendrogram": [[29, "dendrogram"], [30, "dendrogram"], [32, "dendrogram"]], "Denoised Covariance & Shrunk Expected Returns": [[169, "denoised-covariance-shrunk-expected-returns"]], "Distance Estimator": [[29, "distance-estimator"], [30, "distance-estimator"], [32, "distance-estimator"], [175, null]], "Distribution": [[31, "distribution"], [33, "distribution"], [36, "distribution"], [39, "distribution"]], "Distributionally Robust CVaR": [[25, null], [26, null], [48, "distributionally-robust-cvar"], [182, "distributionally-robust-cvar"]], "Diversification Analysis": [[23, "diversification-analysis"]], "Drop Highly Correlated Assets": [[39, null]], "Efficient Frontier": [[9, null], [14, "efficient-frontier"], [15, "efficient-frontier"]], "Empirical Model": [[4, "empirical-model"], [5, "empirical-model"]], "Empirical Prior": [[3, null], [186, "empirical-prior"]], "Ensemble Optimizations": [[35, null], [48, "ensemble-optimizations"]], "Enum": [[0, "enum"]], "Example for stocks": [[173, "example-for-stocks"]], "Examples": [[48, null]], "Exhaustive Grid Search": [[177, "exhaustive-grid-search"]], "Expected Return Estimator": [[176, null]], "Factor Analysis": [[5, "factor-analysis"]], "Factor Model": [[5, null], [5, "id1"], [169, "factor-model"], [186, "factor-model"]], "Factor Model & Covariance Detoning": [[169, "factor-model-covariance-detoning"]], "Fit on training set": [[169, "fit-on-training-set"]], "Functions": [[0, "functions"], [0, "id23"], [0, "id24"], [0, "id25"], [0, "id26"], [0, "id27"]], "Going Further": [[6, "going-further"], [182, "going-further"]], "Grid Search on embedded parameters": [[169, "grid-search-on-embedded-parameters"]], "Group and Linear Constraints": [[11, "group-and-linear-constraints"]], "HRP vs HERC": [[31, null]], "Hierarchical Clustering and NCO": [[28, null], [48, "hierarchical-clustering-and-nco"]], "Hierarchical Equal Risk Contribution": [[182, "hierarchical-equal-risk-contribution"]], "Hierarchical Equal Risk Contribution - CDaR": [[30, null]], "Hierarchical Risk Parity": [[182, "hierarchical-risk-parity"]], "Hierarchical Risk Parity - CVaR": [[29, null]], "Hyper-Parameter Tuning": [[15, "hyper-parameter-tuning"]], "Hyper-Parameters Tuning": [[43, "hyper-parameters-tuning"], [177, null]], "Hyper-parameter Tuning": [[14, "hyper-parameter-tuning"]], "Implied Covariance Estimator": [[43, "implied-covariance-estimator"]], "Imports": [[169, "imports"]], "In skfolio": [[173, "in-skfolio"]], "Installation": [[169, "installation"], [179, null]], "Inverse Volatility": [[43, "inverse-volatility"]], "Investment Horizon": [[46, null]], "K-fold Cross-Validation": [[169, "k-fold-cross-validation"]], "Key Concepts": [[169, "key-concepts"]], "L1 and L2 Regularization": [[14, null]], "Left and Right Inequalities": [[11, "left-and-right-inequalities"]], "Linear Returns": [[46, "linear-returns"]], "Linear return": [[173, "linear-return"]], "Linkage Methods": [[29, "linkage-methods"], [30, "linkage-methods"], [32, "linkage-methods"]], "Load Dataset": [[169, "load-dataset"]], "Load Datasets": [[43, "load-datasets"]], "Loading Matrix Classes for Factor Models": [[0, "loading-matrix-classes-for-factor-models"]], "Logarithmic return": [[173, "logarithmic-return"]], "Lower and Upper Bounds on Weights": [[11, "lower-and-upper-bounds-on-weights"]], "Management Fees": [[13, null], [13, "id1"]], "Maximum Diversification": [[22, null], [23, null], [48, "maximum-diversification"], [182, "maximum-diversification"]], "Maximum Sharpe Ratio": [[7, null]], "Maximum Sortino Ratio": [[169, "maximum-sortino-ratio"]], "Mean-Risk": [[1, null], [48, "mean-risk"]], "Mean-Risk Optimization": [[182, "mean-risk-optimization"]], "Mean-Variance-CDaR Surface": [[10, null]], "Metadata Routing": [[42, null], [48, "metadata-routing"], [180, null]], "Minimum CVaR": [[8, null]], "Minimum Variance": [[169, "minimum-variance"]], "Model": [[2, "model"], [3, "model"], [7, "model"], [8, "model"], [9, "model"], [10, "model"], [11, "model"], [12, "model"], [13, "model"], [18, "model"], [19, "model"], [20, "model"], [23, "model"], [26, "model"], [29, "model"], [30, "model"], [31, "model"], [32, "model"], [33, "model"], [39, "model"], [40, "model"], [46, "model"]], "Model Dataclass": [[0, "model-dataclass"], [0, "id18"]], "Model Selection": [[181, null]], "Multi Period Portfolio": [[184, "multi-period-portfolio"]], "Multi-period portfolio": [[12, "multi-period-portfolio"], [13, "multi-period-portfolio"]], "NCO - Combinatorial Purged CV": [[33, null]], "Naive Allocation": [[182, "naive-allocation"]], "Nested Cluster Optimization with cross-validation and parallelization": [[169, "nested-cluster-optimization-with-cross-validation-and-parallelization"]], "Nested Clusters Optimization": [[32, null], [182, "nested-clusters-optimization"]], "Optimization": [[182, null]], "Parallelism": [[177, "parallelism"]], "Parameter Tuning": [[31, "parameter-tuning"], [33, "parameter-tuning"], [36, "parameter-tuning"], [40, "parameter-tuning"]], "Pareto Optimal Surface": [[10, "pareto-optimal-surface"]], "Pipeline": [[39, "pipeline"], [40, "pipeline"]], "Pitfall in Portfolio Optimization": [[173, "pitfall-in-portfolio-optimization"]], "Population": [[183, null]], "Portfolio": [[184, null], [184, "id2"]], "Pre-Selection Pipeline": [[169, "pre-selection-pipeline"]], "Pre-Selection Transformers": [[185, null]], "Pre-selection": [[38, null], [48, "pre-selection"]], "Predict on test set": [[169, "predict-on-test-set"]], "Prediction": [[2, "prediction"], [3, "prediction"], [4, "prediction"], [5, "prediction"], [6, "prediction"], [7, "prediction"], [8, "prediction"], [9, "prediction"], [14, "prediction"], [18, "prediction"], [19, "prediction"], [20, "prediction"], [23, "prediction"], [26, "prediction"], [29, "prediction"], [30, "prediction"], [31, "prediction"], [32, "prediction"], [33, "prediction"], [36, "prediction"], [39, "prediction"], [40, "prediction"]], "Prices": [[46, "prices"]], "Prior Estimator": [[29, "prior-estimator"], [182, "prior-estimator"], [186, null]], "Quickstart": [[169, "quickstart"]], "Randomized Parameter Optimization": [[177, "randomized-parameter-optimization"]], "Randomized Search of the L2 Norm": [[169, "randomized-search-of-the-l2-norm"]], "Recognition": [[169, "recognition"]], "Risk Budget": [[19, "risk-budget"]], "Risk Budgeting": [[17, null], [48, "risk-budgeting"], [182, "risk-budgeting"]], "Risk Budgeting - CVaR": [[19, null]], "Risk Contribution": [[29, "risk-contribution"], [30, "risk-contribution"]], "Risk Contribution Analysis": [[18, "risk-contribution-analysis"], [19, "risk-contribution-analysis"]], "Risk Parity & Gerber Covariance": [[169, "risk-parity-gerber-covariance"]], "Risk Parity - Covariance shrinkage": [[20, null]], "Risk Parity - Variance": [[18, null]], "Risk Parity on CVaR": [[169, "risk-parity-on-cvar"]], "Select Best Performers": [[40, null]], "Short and Long Position Constraints": [[11, "short-and-long-position-constraints"]], "Specifying an Objective Metric": [[177, "specifying-an-objective-metric"]], "Stacking Model": [[36, "stacking-model"]], "Stacking Optimization": [[36, null], [182, "stacking-optimization"]], "Summary": [[29, "summary"]], "The correct approach": [[173, "the-correct-approach"]], "Tips for Parameter Search": [[177, "tips-for-parameter-search"]], "Tracking Error": [[2, null]], "Train/Test split": [[169, "train-test-split"]], "Transaction Cost": [[12, "transaction-cost"]], "Transaction Costs": [[12, null]], "Uncertainty Set": [[15, null]], "Uncertainty Set Estimator": [[187, null]], "Uncertainty Set on Expected Returns": [[169, "uncertainty-set-on-expected-returns"]], "User Guide": [[178, null]], "Using Implied Volatility with Metadata Routing": [[43, null]], "Weight Constraints": [[11, null]], "Weight Constraints & Transaction Costs": [[169, "weight-constraints-transaction-costs"]], "Worst-Case Optimization": [[182, "worst-case-optimization"]], "skfolio": [[169, null]], "skfolio.cluster.HierarchicalClustering": [[50, null]], "skfolio.cluster.LinkageMethod": [[51, null]], "skfolio.cluster: Cluster Estimators": [[0, "module-3"]], "skfolio.datasets.load_factors_dataset": [[52, null]], "skfolio.datasets.load_ftse100_dataset": [[53, null]], "skfolio.datasets.load_nasdaq_dataset": [[54, null]], "skfolio.datasets.load_sp500_dataset": [[55, null]], "skfolio.datasets.load_sp500_index": [[56, null]], "skfolio.datasets: Datasets": [[0, "skfolio-datasets-datasets"]], "skfolio.distance.BaseDistance": [[57, null]], "skfolio.distance.CovarianceDistance": [[58, null]], "skfolio.distance.DistanceCorrelation": [[59, null]], "skfolio.distance.KendallDistance": [[60, null]], "skfolio.distance.MutualInformation": [[61, null]], "skfolio.distance.PearsonDistance": [[62, null]], "skfolio.distance.SpearmanDistance": [[63, null]], "skfolio.distance: Distance Estimators": [[0, "module-2"]], "skfolio.measures.BaseMeasure": [[64, null]], "skfolio.measures.ExtraRiskMeasure": [[65, null]], "skfolio.measures.PerfMeasure": [[66, null]], "skfolio.measures.RatioMeasure": [[67, null]], "skfolio.measures.RiskMeasure": [[68, null]], "skfolio.measures.average_drawdown": [[69, null]], "skfolio.measures.cdar": [[70, null]], "skfolio.measures.cvar": [[71, null]], "skfolio.measures.drawdown_at_risk": [[72, null]], "skfolio.measures.edar": [[73, null]], "skfolio.measures.effective_number_assets": [[74, null]], "skfolio.measures.entropic_risk_measure": [[75, null]], "skfolio.measures.evar": [[76, null]], "skfolio.measures.first_lower_partial_moment": [[77, null]], "skfolio.measures.fourth_central_moment": [[78, null]], "skfolio.measures.fourth_lower_partial_moment": [[79, null]], "skfolio.measures.get_cumulative_returns": [[80, null]], "skfolio.measures.get_drawdowns": [[81, null]], "skfolio.measures.gini_mean_difference": [[82, null]], "skfolio.measures.max_drawdown": [[83, null]], "skfolio.measures.mean": [[84, null]], "skfolio.measures.mean_absolute_deviation": [[85, null]], "skfolio.measures.owa_gmd_weights": [[86, null]], "skfolio.measures.semi_deviation": [[87, null]], "skfolio.measures.semi_variance": [[88, null]], "skfolio.measures.standard_deviation": [[89, null]], "skfolio.measures.third_central_moment": [[90, null]], "skfolio.measures.ulcer_index": [[91, null]], "skfolio.measures.value_at_risk": [[92, null]], "skfolio.measures.variance": [[93, null]], "skfolio.measures.worst_realization": [[94, null]], "skfolio.measures: Measures": [[0, "module-skfolio.measures"]], "skfolio.metrics.make_scorer": [[95, null]], "skfolio.metrics: Metrics": [[0, "module-7"]], "skfolio.model_selection.BaseCombinatorialCV": [[96, null]], "skfolio.model_selection.CombinatorialPurgedCV": [[97, null]], "skfolio.model_selection.WalkForward": [[98, null]], "skfolio.model_selection.cross_val_predict": [[99, null]], "skfolio.model_selection.optimal_folds_number": [[100, null]], "skfolio.model_selection: Model Selection": [[0, "module-6"]], "skfolio.moments.BaseCovariance": [[101, null]], "skfolio.moments.BaseMu": [[102, null]], "skfolio.moments.DenoiseCovariance": [[103, null]], "skfolio.moments.DetoneCovariance": [[104, null]], "skfolio.moments.EWCovariance": [[105, null]], "skfolio.moments.EWMu": [[106, null]], "skfolio.moments.EmpiricalCovariance": [[107, null]], "skfolio.moments.EmpiricalMu": [[108, null]], "skfolio.moments.EquilibriumMu": [[109, null]], "skfolio.moments.GerberCovariance": [[110, null]], "skfolio.moments.GraphicalLassoCV": [[111, null]], "skfolio.moments.ImpliedCovariance": [[112, null]], "skfolio.moments.LedoitWolf": [[113, null]], "skfolio.moments.OAS": [[114, null]], "skfolio.moments.ShrunkCovariance": [[115, null]], "skfolio.moments.ShrunkMu": [[116, null]], "skfolio.moments.ShrunkMuMethods": [[117, null]], "skfolio.moments.covariance: Covariance Estimators": [[0, "module-1"]], "skfolio.moments.mu: Mu Estimators": [[0, "module-0"]], "skfolio.optimization.BaseComposition": [[118, null]], "skfolio.optimization.BaseHierarchicalOptimization": [[119, null]], "skfolio.optimization.ConvexOptimization": [[120, null]], "skfolio.optimization.DistributionallyRobustCVaR": [[121, null]], "skfolio.optimization.EqualWeighted": [[122, null]], "skfolio.optimization.HierarchicalEqualRiskContribution": [[123, null]], "skfolio.optimization.HierarchicalRiskParity": [[124, null]], "skfolio.optimization.InverseVolatility": [[125, null]], "skfolio.optimization.MaximumDiversification": [[126, null]], "skfolio.optimization.MeanRisk": [[127, null]], "skfolio.optimization.NestedClustersOptimization": [[128, null]], "skfolio.optimization.ObjectiveFunction": [[129, null]], "skfolio.optimization.Random": [[130, null]], "skfolio.optimization.RiskBudgeting": [[131, null]], "skfolio.optimization.StackingOptimization": [[132, null]], "skfolio.optimization.cluster: Clustering Optimization Estimators": [[0, "module-skfolio.optimization.cluster"]], "skfolio.optimization.convex: Convex Optimization Estimators": [[0, "module-skfolio.optimization.convex"]], "skfolio.optimization.ensemble: Ensemble Optimization Estimators": [[0, "module-skfolio.optimization.ensemble"]], "skfolio.optimization.naive: Naive Optimization Estimators": [[0, "module-skfolio.optimization.naive"]], "skfolio.population.Population": [[133, null]], "skfolio.population: Population": [[0, "module-skfolio.population"]], "skfolio.portfolio.BasePortfolio": [[134, null]], "skfolio.portfolio.MultiPeriodPortfolio": [[135, null]], "skfolio.portfolio.Portfolio": [[136, null]], "skfolio.portfolio: Portfolio": [[0, "module-skfolio.portfolio"]], "skfolio.pre_selection.DropCorrelated": [[137, null]], "skfolio.pre_selection.SelectKExtremes": [[138, null]], "skfolio.pre_selection.SelectNonDominated": [[139, null]], "skfolio.pre_selection: Pre-selection Transformers": [[0, "module-5"]], "skfolio.preprocessing.prices_to_returns": [[140, null]], "skfolio.preprocessing: Preprocessing": [[0, "skfolio-preprocessing-preprocessing"]], "skfolio.prior.BaseLoadingMatrix": [[141, null]], "skfolio.prior.BasePrior": [[142, null]], "skfolio.prior.BlackLitterman": [[143, null]], "skfolio.prior.EmpiricalPrior": [[144, null]], "skfolio.prior.FactorModel": [[145, null]], "skfolio.prior.LoadingMatrixRegression": [[146, null]], "skfolio.prior.PriorModel": [[147, null]], "skfolio.prior: Prior Estimators": [[0, "module-skfolio"]], "skfolio.uncertainty_set.BaseCovarianceUncertaintySet": [[148, null]], "skfolio.uncertainty_set.BaseMuUncertaintySet": [[149, null]], "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet": [[150, null]], "skfolio.uncertainty_set.BootstrapMuUncertaintySet": [[151, null]], "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet": [[152, null]], "skfolio.uncertainty_set.EmpiricalMuUncertaintySet": [[153, null]], "skfolio.uncertainty_set.UncertaintySet": [[154, null]], "skfolio.uncertainty_set: Uncertainty set Estimators": [[0, "module-4"]], "skfolio.utils.stats.NBinsMethod": [[155, null]], "skfolio.utils.stats.assert_is_distance": [[156, null]], "skfolio.utils.stats.assert_is_square": [[157, null]], "skfolio.utils.stats.assert_is_symmetric": [[158, null]], "skfolio.utils.stats.commutation_matrix": [[159, null]], "skfolio.utils.stats.compute_optimal_n_clusters": [[160, null]], "skfolio.utils.stats.corr_to_cov": [[161, null]], "skfolio.utils.stats.cov_nearest": [[162, null]], "skfolio.utils.stats.cov_to_corr": [[163, null]], "skfolio.utils.stats.is_cholesky_dec": [[164, null]], "skfolio.utils.stats.n_bins_freedman": [[165, null]], "skfolio.utils.stats.n_bins_knuth": [[166, null]], "skfolio.utils.stats.rand_weights": [[167, null]], "skfolio.utils.stats.rand_weights_dirichlet": [[168, null]], "skfolio.utils.stats: Stats": [[0, "skfolio-utils-stats-stats"]]}, "docnames": ["api", "auto_examples/1_mean_risk/index", "auto_examples/1_mean_risk/plot_10_tracking_error", "auto_examples/1_mean_risk/plot_11_empirical_prior", "auto_examples/1_mean_risk/plot_12_black_and_litterman", "auto_examples/1_mean_risk/plot_13_factor_model", "auto_examples/1_mean_risk/plot_14_black_litterman_factor_model", "auto_examples/1_mean_risk/plot_1_maximum_sharpe_ratio", "auto_examples/1_mean_risk/plot_2_minimum_CVaR", "auto_examples/1_mean_risk/plot_3_efficient_frontier", "auto_examples/1_mean_risk/plot_4_mean_variance_cdar", "auto_examples/1_mean_risk/plot_5_weight_constraints", "auto_examples/1_mean_risk/plot_6_transaction_costs", "auto_examples/1_mean_risk/plot_7_management_fees", "auto_examples/1_mean_risk/plot_8_regularization", "auto_examples/1_mean_risk/plot_9_uncertainty_set", "auto_examples/1_mean_risk/sg_execution_times", "auto_examples/2_risk_budgeting/index", "auto_examples/2_risk_budgeting/plot_1_risk_parity_variance", "auto_examples/2_risk_budgeting/plot_2_risk_budgeting_CVaR", "auto_examples/2_risk_budgeting/plot_3_risk_parity_ledoit_wolf", "auto_examples/2_risk_budgeting/sg_execution_times", "auto_examples/3_maxiumum_diversification/index", "auto_examples/3_maxiumum_diversification/plot_1_maximum_divesification", "auto_examples/3_maxiumum_diversification/sg_execution_times", "auto_examples/4_distributionally_robust_cvar/index", "auto_examples/4_distributionally_robust_cvar/plot_1_distributionally_robust_cvar", "auto_examples/4_distributionally_robust_cvar/sg_execution_times", "auto_examples/5_clustering/index", "auto_examples/5_clustering/plot_1_hrp_cvar", "auto_examples/5_clustering/plot_2_herc_cdar", "auto_examples/5_clustering/plot_3_hrp_vs_herc", "auto_examples/5_clustering/plot_4_nco", "auto_examples/5_clustering/plot_5_nco_grid_search", "auto_examples/5_clustering/sg_execution_times", "auto_examples/6_ensemble/index", "auto_examples/6_ensemble/plot_1_stacking", "auto_examples/6_ensemble/sg_execution_times", "auto_examples/7_pre_selection/index", "auto_examples/7_pre_selection/plot_1_drop_correlated", "auto_examples/7_pre_selection/plot_2_select_best_performers", "auto_examples/7_pre_selection/sg_execution_times", "auto_examples/8_metadata_routing/index", "auto_examples/8_metadata_routing/plot_1_implied_volatility", "auto_examples/8_metadata_routing/sg_execution_times", "auto_examples/9_data_preparation/index", "auto_examples/9_data_preparation/plot_1_investment_horizon", "auto_examples/9_data_preparation/sg_execution_times", "auto_examples/index", "auto_examples/sg_execution_times", "generated/skfolio.cluster.HierarchicalClustering", "generated/skfolio.cluster.LinkageMethod", "generated/skfolio.datasets.load_factors_dataset", "generated/skfolio.datasets.load_ftse100_dataset", "generated/skfolio.datasets.load_nasdaq_dataset", "generated/skfolio.datasets.load_sp500_dataset", "generated/skfolio.datasets.load_sp500_index", "generated/skfolio.distance.BaseDistance", "generated/skfolio.distance.CovarianceDistance", "generated/skfolio.distance.DistanceCorrelation", "generated/skfolio.distance.KendallDistance", "generated/skfolio.distance.MutualInformation", "generated/skfolio.distance.PearsonDistance", "generated/skfolio.distance.SpearmanDistance", "generated/skfolio.measures.BaseMeasure", "generated/skfolio.measures.ExtraRiskMeasure", "generated/skfolio.measures.PerfMeasure", "generated/skfolio.measures.RatioMeasure", "generated/skfolio.measures.RiskMeasure", "generated/skfolio.measures.average_drawdown", "generated/skfolio.measures.cdar", "generated/skfolio.measures.cvar", "generated/skfolio.measures.drawdown_at_risk", "generated/skfolio.measures.edar", "generated/skfolio.measures.effective_number_assets", "generated/skfolio.measures.entropic_risk_measure", "generated/skfolio.measures.evar", "generated/skfolio.measures.first_lower_partial_moment", "generated/skfolio.measures.fourth_central_moment", "generated/skfolio.measures.fourth_lower_partial_moment", "generated/skfolio.measures.get_cumulative_returns", "generated/skfolio.measures.get_drawdowns", "generated/skfolio.measures.gini_mean_difference", "generated/skfolio.measures.max_drawdown", "generated/skfolio.measures.mean", "generated/skfolio.measures.mean_absolute_deviation", "generated/skfolio.measures.owa_gmd_weights", "generated/skfolio.measures.semi_deviation", "generated/skfolio.measures.semi_variance", "generated/skfolio.measures.standard_deviation", "generated/skfolio.measures.third_central_moment", "generated/skfolio.measures.ulcer_index", "generated/skfolio.measures.value_at_risk", "generated/skfolio.measures.variance", "generated/skfolio.measures.worst_realization", "generated/skfolio.metrics.make_scorer", "generated/skfolio.model_selection.BaseCombinatorialCV", "generated/skfolio.model_selection.CombinatorialPurgedCV", "generated/skfolio.model_selection.WalkForward", "generated/skfolio.model_selection.cross_val_predict", "generated/skfolio.model_selection.optimal_folds_number", "generated/skfolio.moments.BaseCovariance", "generated/skfolio.moments.BaseMu", "generated/skfolio.moments.DenoiseCovariance", "generated/skfolio.moments.DetoneCovariance", "generated/skfolio.moments.EWCovariance", "generated/skfolio.moments.EWMu", "generated/skfolio.moments.EmpiricalCovariance", "generated/skfolio.moments.EmpiricalMu", "generated/skfolio.moments.EquilibriumMu", "generated/skfolio.moments.GerberCovariance", "generated/skfolio.moments.GraphicalLassoCV", "generated/skfolio.moments.ImpliedCovariance", "generated/skfolio.moments.LedoitWolf", "generated/skfolio.moments.OAS", "generated/skfolio.moments.ShrunkCovariance", "generated/skfolio.moments.ShrunkMu", "generated/skfolio.moments.ShrunkMuMethods", "generated/skfolio.optimization.BaseComposition", "generated/skfolio.optimization.BaseHierarchicalOptimization", "generated/skfolio.optimization.ConvexOptimization", "generated/skfolio.optimization.DistributionallyRobustCVaR", "generated/skfolio.optimization.EqualWeighted", "generated/skfolio.optimization.HierarchicalEqualRiskContribution", "generated/skfolio.optimization.HierarchicalRiskParity", "generated/skfolio.optimization.InverseVolatility", "generated/skfolio.optimization.MaximumDiversification", "generated/skfolio.optimization.MeanRisk", "generated/skfolio.optimization.NestedClustersOptimization", "generated/skfolio.optimization.ObjectiveFunction", "generated/skfolio.optimization.Random", "generated/skfolio.optimization.RiskBudgeting", "generated/skfolio.optimization.StackingOptimization", "generated/skfolio.population.Population", "generated/skfolio.portfolio.BasePortfolio", "generated/skfolio.portfolio.MultiPeriodPortfolio", "generated/skfolio.portfolio.Portfolio", "generated/skfolio.pre_selection.DropCorrelated", "generated/skfolio.pre_selection.SelectKExtremes", "generated/skfolio.pre_selection.SelectNonDominated", "generated/skfolio.preprocessing.prices_to_returns", "generated/skfolio.prior.BaseLoadingMatrix", "generated/skfolio.prior.BasePrior", "generated/skfolio.prior.BlackLitterman", "generated/skfolio.prior.EmpiricalPrior", "generated/skfolio.prior.FactorModel", "generated/skfolio.prior.LoadingMatrixRegression", "generated/skfolio.prior.PriorModel", "generated/skfolio.uncertainty_set.BaseCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.BaseMuUncertaintySet", "generated/skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.BootstrapMuUncertaintySet", "generated/skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.EmpiricalMuUncertaintySet", "generated/skfolio.uncertainty_set.UncertaintySet", "generated/skfolio.utils.stats.NBinsMethod", "generated/skfolio.utils.stats.assert_is_distance", "generated/skfolio.utils.stats.assert_is_square", "generated/skfolio.utils.stats.assert_is_symmetric", "generated/skfolio.utils.stats.commutation_matrix", "generated/skfolio.utils.stats.compute_optimal_n_clusters", "generated/skfolio.utils.stats.corr_to_cov", "generated/skfolio.utils.stats.cov_nearest", "generated/skfolio.utils.stats.cov_to_corr", "generated/skfolio.utils.stats.is_cholesky_dec", "generated/skfolio.utils.stats.n_bins_freedman", "generated/skfolio.utils.stats.n_bins_knuth", "generated/skfolio.utils.stats.rand_weights", "generated/skfolio.utils.stats.rand_weights_dirichlet", "index", "sg_execution_times", "user_guide/cluster", "user_guide/covariance", "user_guide/data_preparation", "user_guide/datasets", "user_guide/distance", "user_guide/expected_returns", "user_guide/hyper_parameters_tuning", "user_guide/index", "user_guide/install", "user_guide/metadata_routing", "user_guide/model_selection", "user_guide/optimization", "user_guide/population", "user_guide/portfolio", "user_guide/pre_selection", "user_guide/prior", "user_guide/uncertainty_set"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "auto_examples/1_mean_risk/index.rst", "auto_examples/1_mean_risk/plot_10_tracking_error.rst", "auto_examples/1_mean_risk/plot_11_empirical_prior.rst", "auto_examples/1_mean_risk/plot_12_black_and_litterman.rst", "auto_examples/1_mean_risk/plot_13_factor_model.rst", "auto_examples/1_mean_risk/plot_14_black_litterman_factor_model.rst", "auto_examples/1_mean_risk/plot_1_maximum_sharpe_ratio.rst", "auto_examples/1_mean_risk/plot_2_minimum_CVaR.rst", "auto_examples/1_mean_risk/plot_3_efficient_frontier.rst", "auto_examples/1_mean_risk/plot_4_mean_variance_cdar.rst", "auto_examples/1_mean_risk/plot_5_weight_constraints.rst", "auto_examples/1_mean_risk/plot_6_transaction_costs.rst", "auto_examples/1_mean_risk/plot_7_management_fees.rst", "auto_examples/1_mean_risk/plot_8_regularization.rst", "auto_examples/1_mean_risk/plot_9_uncertainty_set.rst", "auto_examples/1_mean_risk/sg_execution_times.rst", "auto_examples/2_risk_budgeting/index.rst", "auto_examples/2_risk_budgeting/plot_1_risk_parity_variance.rst", "auto_examples/2_risk_budgeting/plot_2_risk_budgeting_CVaR.rst", "auto_examples/2_risk_budgeting/plot_3_risk_parity_ledoit_wolf.rst", "auto_examples/2_risk_budgeting/sg_execution_times.rst", "auto_examples/3_maxiumum_diversification/index.rst", "auto_examples/3_maxiumum_diversification/plot_1_maximum_divesification.rst", "auto_examples/3_maxiumum_diversification/sg_execution_times.rst", "auto_examples/4_distributionally_robust_cvar/index.rst", "auto_examples/4_distributionally_robust_cvar/plot_1_distributionally_robust_cvar.rst", "auto_examples/4_distributionally_robust_cvar/sg_execution_times.rst", "auto_examples/5_clustering/index.rst", "auto_examples/5_clustering/plot_1_hrp_cvar.rst", "auto_examples/5_clustering/plot_2_herc_cdar.rst", "auto_examples/5_clustering/plot_3_hrp_vs_herc.rst", "auto_examples/5_clustering/plot_4_nco.rst", "auto_examples/5_clustering/plot_5_nco_grid_search.rst", "auto_examples/5_clustering/sg_execution_times.rst", "auto_examples/6_ensemble/index.rst", "auto_examples/6_ensemble/plot_1_stacking.rst", "auto_examples/6_ensemble/sg_execution_times.rst", "auto_examples/7_pre_selection/index.rst", "auto_examples/7_pre_selection/plot_1_drop_correlated.rst", "auto_examples/7_pre_selection/plot_2_select_best_performers.rst", "auto_examples/7_pre_selection/sg_execution_times.rst", "auto_examples/8_metadata_routing/index.rst", "auto_examples/8_metadata_routing/plot_1_implied_volatility.rst", "auto_examples/8_metadata_routing/sg_execution_times.rst", "auto_examples/9_data_preparation/index.rst", "auto_examples/9_data_preparation/plot_1_investment_horizon.rst", "auto_examples/9_data_preparation/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/sg_execution_times.rst", "generated/skfolio.cluster.HierarchicalClustering.rst", "generated/skfolio.cluster.LinkageMethod.rst", "generated/skfolio.datasets.load_factors_dataset.rst", "generated/skfolio.datasets.load_ftse100_dataset.rst", "generated/skfolio.datasets.load_nasdaq_dataset.rst", "generated/skfolio.datasets.load_sp500_dataset.rst", "generated/skfolio.datasets.load_sp500_index.rst", "generated/skfolio.distance.BaseDistance.rst", "generated/skfolio.distance.CovarianceDistance.rst", "generated/skfolio.distance.DistanceCorrelation.rst", "generated/skfolio.distance.KendallDistance.rst", "generated/skfolio.distance.MutualInformation.rst", "generated/skfolio.distance.PearsonDistance.rst", "generated/skfolio.distance.SpearmanDistance.rst", "generated/skfolio.measures.BaseMeasure.rst", "generated/skfolio.measures.ExtraRiskMeasure.rst", "generated/skfolio.measures.PerfMeasure.rst", "generated/skfolio.measures.RatioMeasure.rst", "generated/skfolio.measures.RiskMeasure.rst", "generated/skfolio.measures.average_drawdown.rst", "generated/skfolio.measures.cdar.rst", "generated/skfolio.measures.cvar.rst", "generated/skfolio.measures.drawdown_at_risk.rst", "generated/skfolio.measures.edar.rst", "generated/skfolio.measures.effective_number_assets.rst", "generated/skfolio.measures.entropic_risk_measure.rst", "generated/skfolio.measures.evar.rst", "generated/skfolio.measures.first_lower_partial_moment.rst", "generated/skfolio.measures.fourth_central_moment.rst", "generated/skfolio.measures.fourth_lower_partial_moment.rst", "generated/skfolio.measures.get_cumulative_returns.rst", "generated/skfolio.measures.get_drawdowns.rst", "generated/skfolio.measures.gini_mean_difference.rst", "generated/skfolio.measures.max_drawdown.rst", "generated/skfolio.measures.mean.rst", "generated/skfolio.measures.mean_absolute_deviation.rst", "generated/skfolio.measures.owa_gmd_weights.rst", "generated/skfolio.measures.semi_deviation.rst", "generated/skfolio.measures.semi_variance.rst", "generated/skfolio.measures.standard_deviation.rst", "generated/skfolio.measures.third_central_moment.rst", "generated/skfolio.measures.ulcer_index.rst", "generated/skfolio.measures.value_at_risk.rst", "generated/skfolio.measures.variance.rst", "generated/skfolio.measures.worst_realization.rst", "generated/skfolio.metrics.make_scorer.rst", "generated/skfolio.model_selection.BaseCombinatorialCV.rst", "generated/skfolio.model_selection.CombinatorialPurgedCV.rst", "generated/skfolio.model_selection.WalkForward.rst", "generated/skfolio.model_selection.cross_val_predict.rst", "generated/skfolio.model_selection.optimal_folds_number.rst", "generated/skfolio.moments.BaseCovariance.rst", "generated/skfolio.moments.BaseMu.rst", "generated/skfolio.moments.DenoiseCovariance.rst", "generated/skfolio.moments.DetoneCovariance.rst", "generated/skfolio.moments.EWCovariance.rst", "generated/skfolio.moments.EWMu.rst", "generated/skfolio.moments.EmpiricalCovariance.rst", "generated/skfolio.moments.EmpiricalMu.rst", "generated/skfolio.moments.EquilibriumMu.rst", "generated/skfolio.moments.GerberCovariance.rst", "generated/skfolio.moments.GraphicalLassoCV.rst", "generated/skfolio.moments.ImpliedCovariance.rst", "generated/skfolio.moments.LedoitWolf.rst", "generated/skfolio.moments.OAS.rst", "generated/skfolio.moments.ShrunkCovariance.rst", "generated/skfolio.moments.ShrunkMu.rst", "generated/skfolio.moments.ShrunkMuMethods.rst", "generated/skfolio.optimization.BaseComposition.rst", "generated/skfolio.optimization.BaseHierarchicalOptimization.rst", "generated/skfolio.optimization.ConvexOptimization.rst", "generated/skfolio.optimization.DistributionallyRobustCVaR.rst", "generated/skfolio.optimization.EqualWeighted.rst", "generated/skfolio.optimization.HierarchicalEqualRiskContribution.rst", "generated/skfolio.optimization.HierarchicalRiskParity.rst", "generated/skfolio.optimization.InverseVolatility.rst", "generated/skfolio.optimization.MaximumDiversification.rst", "generated/skfolio.optimization.MeanRisk.rst", "generated/skfolio.optimization.NestedClustersOptimization.rst", "generated/skfolio.optimization.ObjectiveFunction.rst", "generated/skfolio.optimization.Random.rst", "generated/skfolio.optimization.RiskBudgeting.rst", "generated/skfolio.optimization.StackingOptimization.rst", "generated/skfolio.population.Population.rst", "generated/skfolio.portfolio.BasePortfolio.rst", "generated/skfolio.portfolio.MultiPeriodPortfolio.rst", "generated/skfolio.portfolio.Portfolio.rst", "generated/skfolio.pre_selection.DropCorrelated.rst", "generated/skfolio.pre_selection.SelectKExtremes.rst", "generated/skfolio.pre_selection.SelectNonDominated.rst", "generated/skfolio.preprocessing.prices_to_returns.rst", "generated/skfolio.prior.BaseLoadingMatrix.rst", "generated/skfolio.prior.BasePrior.rst", "generated/skfolio.prior.BlackLitterman.rst", "generated/skfolio.prior.EmpiricalPrior.rst", "generated/skfolio.prior.FactorModel.rst", "generated/skfolio.prior.LoadingMatrixRegression.rst", "generated/skfolio.prior.PriorModel.rst", "generated/skfolio.uncertainty_set.BaseCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.BaseMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.BootstrapMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.EmpiricalMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.UncertaintySet.rst", "generated/skfolio.utils.stats.NBinsMethod.rst", "generated/skfolio.utils.stats.assert_is_distance.rst", "generated/skfolio.utils.stats.assert_is_square.rst", "generated/skfolio.utils.stats.assert_is_symmetric.rst", "generated/skfolio.utils.stats.commutation_matrix.rst", "generated/skfolio.utils.stats.compute_optimal_n_clusters.rst", "generated/skfolio.utils.stats.corr_to_cov.rst", "generated/skfolio.utils.stats.cov_nearest.rst", "generated/skfolio.utils.stats.cov_to_corr.rst", "generated/skfolio.utils.stats.is_cholesky_dec.rst", "generated/skfolio.utils.stats.n_bins_freedman.rst", "generated/skfolio.utils.stats.n_bins_knuth.rst", "generated/skfolio.utils.stats.rand_weights.rst", "generated/skfolio.utils.stats.rand_weights_dirichlet.rst", "index.rst", "sg_execution_times.rst", "user_guide/cluster.rst", "user_guide/covariance.rst", "user_guide/data_preparation.rst", "user_guide/datasets.rst", "user_guide/distance.rst", "user_guide/expected_returns.rst", "user_guide/hyper_parameters_tuning.rst", "user_guide/index.rst", "user_guide/install.rst", "user_guide/metadata_routing.rst", "user_guide/model_selection.rst", "user_guide/optimization.rst", "user_guide/population.rst", "user_guide/portfolio.rst", "user_guide/pre_selection.rst", "user_guide/prior.rst", "user_guide/uncertainty_set.rst"], "indexentries": {"annualized_factor (skfolio.portfolio.baseportfolio property)": [[134, "skfolio.portfolio.BasePortfolio.annualized_factor", false]], "annualized_factor (skfolio.portfolio.multiperiodportfolio property)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.annualized_factor", false]], "annualized_factor (skfolio.portfolio.portfolio property)": [[136, "skfolio.portfolio.Portfolio.annualized_factor", false]], "append() (skfolio.population.population method)": [[133, "skfolio.population.Population.append", false]], "append() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.append", false]], "assert_is_distance() (in module skfolio.utils.stats)": [[156, "skfolio.utils.stats.assert_is_distance", false]], "assert_is_square() (in module skfolio.utils.stats)": [[157, "skfolio.utils.stats.assert_is_square", false]], "assert_is_symmetric() (in module skfolio.utils.stats)": [[158, "skfolio.utils.stats.assert_is_symmetric", false]], "assets (skfolio.portfolio.multiperiodportfolio property)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.assets", false]], "average_drawdown() (in module skfolio.measures)": [[69, "skfolio.measures.average_drawdown", false]], "basecombinatorialcv (class in skfolio.model_selection)": [[96, "skfolio.model_selection.BaseCombinatorialCV", false]], "basecomposition (class in skfolio.optimization)": [[118, "skfolio.optimization.BaseComposition", false]], "basecovariance (class in skfolio.moments)": [[101, "skfolio.moments.BaseCovariance", false]], "basecovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[148, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet", false]], "basedistance (class in skfolio.distance)": [[57, "skfolio.distance.BaseDistance", false]], "basehierarchicaloptimization (class in skfolio.optimization)": [[119, "skfolio.optimization.BaseHierarchicalOptimization", false]], "baseloadingmatrix (class in skfolio.prior)": [[141, "skfolio.prior.BaseLoadingMatrix", false]], "basemeasure (class in skfolio.measures)": [[64, "skfolio.measures.BaseMeasure", false]], "basemu (class in skfolio.moments)": [[102, "skfolio.moments.BaseMu", false]], "basemuuncertaintyset (class in skfolio.uncertainty_set)": [[149, "skfolio.uncertainty_set.BaseMuUncertaintySet", false]], "baseportfolio (class in skfolio.portfolio)": [[134, "skfolio.portfolio.BasePortfolio", false]], "baseprior (class in skfolio.prior)": [[142, "skfolio.prior.BasePrior", false]], "binary_train_test_sets (skfolio.model_selection.combinatorialpurgedcv property)": [[97, "skfolio.model_selection.CombinatorialPurgedCV.binary_train_test_sets", false]], "blacklitterman (class in skfolio.prior)": [[143, "skfolio.prior.BlackLitterman", false]], "bootstrapcovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[150, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet", false]], "bootstrapmuuncertaintyset (class in skfolio.uncertainty_set)": [[151, "skfolio.uncertainty_set.BootstrapMuUncertaintySet", false]], "capitalize() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.capitalize", false]], "capitalize() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.capitalize", false]], "capitalize() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.capitalize", false]], "capitalize() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.capitalize", false]], "capitalize() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.capitalize", false]], "capitalize() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.capitalize", false]], "capitalize() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.capitalize", false]], "capitalize() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.capitalize", false]], "casefold() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.casefold", false]], "casefold() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.casefold", false]], "casefold() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.casefold", false]], "casefold() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.casefold", false]], "casefold() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.casefold", false]], "casefold() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.casefold", false]], "casefold() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.casefold", false]], "casefold() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.casefold", false]], "cdar() (in module skfolio.measures)": [[70, "skfolio.measures.cdar", false]], "center() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.center", false]], "center() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.center", false]], "center() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.center", false]], "center() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.center", false]], "center() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.center", false]], "center() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.center", false]], "center() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.center", false]], "center() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.center", false]], "clear() (skfolio.population.population method)": [[133, "skfolio.population.Population.clear", false]], "clear() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.clear", false]], "clear() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.clear", false]], "clear() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.clear", false]], "combinatorialpurgedcv (class in skfolio.model_selection)": [[97, "skfolio.model_selection.CombinatorialPurgedCV", false]], "commutation_matrix() (in module skfolio.utils.stats)": [[159, "skfolio.utils.stats.commutation_matrix", false]], "composition (skfolio.portfolio.baseportfolio property)": [[134, "skfolio.portfolio.BasePortfolio.composition", false]], "composition (skfolio.portfolio.multiperiodportfolio property)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.composition", false]], "composition (skfolio.portfolio.portfolio property)": [[136, "skfolio.portfolio.Portfolio.composition", false]], "composition() (skfolio.population.population method)": [[133, "skfolio.population.Population.composition", false]], "compute_optimal_n_clusters() (in module skfolio.utils.stats)": [[160, "skfolio.utils.stats.compute_optimal_n_clusters", false]], "contribution() (skfolio.population.population method)": [[133, "skfolio.population.Population.contribution", false]], "contribution() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.contribution", false]], "contribution() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.contribution", false]], "contribution() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.contribution", false]], "convexoptimization (class in skfolio.optimization)": [[120, "skfolio.optimization.ConvexOptimization", false]], "copy() (skfolio.population.population method)": [[133, "skfolio.population.Population.copy", false]], "copy() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.copy", false]], "copy() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.copy", false]], "copy() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.copy", false]], "corr_to_cov() (in module skfolio.utils.stats)": [[161, "skfolio.utils.stats.corr_to_cov", false]], "count() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.count", false]], "count() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.count", false]], "count() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.count", false]], "count() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.count", false]], "count() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.count", false]], "count() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.count", false]], "count() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.count", false]], "count() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.count", false]], "count() (skfolio.population.population method)": [[133, "skfolio.population.Population.count", false]], "cov_nearest() (in module skfolio.utils.stats)": [[162, "skfolio.utils.stats.cov_nearest", false]], "cov_to_corr() (in module skfolio.utils.stats)": [[163, "skfolio.utils.stats.cov_to_corr", false]], "covariancedistance (class in skfolio.distance)": [[58, "skfolio.distance.CovarianceDistance", false]], "cross_val_predict() (in module skfolio.model_selection)": [[99, "skfolio.model_selection.cross_val_predict", false]], "cumulative_returns (skfolio.portfolio.baseportfolio attribute)": [[134, "skfolio.portfolio.BasePortfolio.cumulative_returns", false]], "cumulative_returns (skfolio.portfolio.multiperiodportfolio attribute)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.cumulative_returns", false]], "cumulative_returns (skfolio.portfolio.portfolio attribute)": [[136, "skfolio.portfolio.Portfolio.cumulative_returns", false]], "cumulative_returns_df (skfolio.portfolio.baseportfolio property)": [[134, "skfolio.portfolio.BasePortfolio.cumulative_returns_df", false]], "cumulative_returns_df (skfolio.portfolio.multiperiodportfolio property)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.cumulative_returns_df", false]], "cumulative_returns_df (skfolio.portfolio.portfolio property)": [[136, "skfolio.portfolio.Portfolio.cumulative_returns_df", false]], "cvar() (in module skfolio.measures)": [[71, "skfolio.measures.cvar", false]], "denoisecovariance (class in skfolio.moments)": [[103, "skfolio.moments.DenoiseCovariance", false]], "detonecovariance (class in skfolio.moments)": [[104, "skfolio.moments.DetoneCovariance", false]], "distancecorrelation (class in skfolio.distance)": [[59, "skfolio.distance.DistanceCorrelation", false]], "distributionallyrobustcvar (class in skfolio.optimization)": [[121, "skfolio.optimization.DistributionallyRobustCVaR", false]], "diversification (skfolio.portfolio.portfolio property)": [[136, "skfolio.portfolio.Portfolio.diversification", false]], "dominates() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.dominates", false]], "dominates() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.dominates", false]], "dominates() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.dominates", false]], "drawdown_at_risk() (in module skfolio.measures)": [[72, "skfolio.measures.drawdown_at_risk", false]], "drawdowns (skfolio.portfolio.baseportfolio attribute)": [[134, "skfolio.portfolio.BasePortfolio.drawdowns", false]], "drawdowns (skfolio.portfolio.multiperiodportfolio attribute)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.drawdowns", false]], "drawdowns (skfolio.portfolio.portfolio attribute)": [[136, "skfolio.portfolio.Portfolio.drawdowns", false]], "dropcorrelated (class in skfolio.pre_selection)": [[137, "skfolio.pre_selection.DropCorrelated", false]], "edar() (in module skfolio.measures)": [[73, "skfolio.measures.edar", false]], "effective_number_assets (skfolio.portfolio.portfolio property)": [[136, "skfolio.portfolio.Portfolio.effective_number_assets", false]], "effective_number_assets() (in module skfolio.measures)": [[74, "skfolio.measures.effective_number_assets", false]], "empiricalcovariance (class in skfolio.moments)": [[107, "skfolio.moments.EmpiricalCovariance", false]], "empiricalcovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[152, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet", false]], "empiricalmu (class in skfolio.moments)": [[108, "skfolio.moments.EmpiricalMu", false]], "empiricalmuuncertaintyset (class in skfolio.uncertainty_set)": [[153, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet", false]], "empiricalprior (class in skfolio.prior)": [[144, "skfolio.prior.EmpiricalPrior", false]], "encode() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.encode", false]], "encode() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.encode", false]], "encode() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.encode", false]], "encode() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.encode", false]], "encode() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.encode", false]], "encode() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.encode", false]], "encode() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.encode", false]], "encode() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.encode", false]], "endswith() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.endswith", false]], "endswith() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.endswith", false]], "endswith() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.endswith", false]], "endswith() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.endswith", false]], "endswith() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.endswith", false]], "endswith() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.endswith", false]], "endswith() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.endswith", false]], "endswith() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.endswith", false]], "entropic_risk_measure() (in module skfolio.measures)": [[75, "skfolio.measures.entropic_risk_measure", false]], "equalweighted (class in skfolio.optimization)": [[122, "skfolio.optimization.EqualWeighted", false]], "equilibriummu (class in skfolio.moments)": [[109, "skfolio.moments.EquilibriumMu", false]], "error_norm() (skfolio.moments.graphicallassocv method)": [[111, "skfolio.moments.GraphicalLassoCV.error_norm", false]], "error_norm() (skfolio.moments.ledoitwolf method)": [[113, "skfolio.moments.LedoitWolf.error_norm", false]], "error_norm() (skfolio.moments.oas method)": [[114, "skfolio.moments.OAS.error_norm", false]], "error_norm() (skfolio.moments.shrunkcovariance method)": [[115, "skfolio.moments.ShrunkCovariance.error_norm", false]], "evar() (in module skfolio.measures)": [[76, "skfolio.measures.evar", false]], "ewcovariance (class in skfolio.moments)": [[105, "skfolio.moments.EWCovariance", false]], "ewmu (class in skfolio.moments)": [[106, "skfolio.moments.EWMu", false]], "expandtabs() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.expandtabs", false]], "expandtabs() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.expandtabs", false]], "expandtabs() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.expandtabs", false]], "expandtabs() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.expandtabs", false]], "expected_returns_from_assets() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.expected_returns_from_assets", false]], "extend() (skfolio.population.population method)": [[133, "skfolio.population.Population.extend", false]], "extrariskmeasure (class in skfolio.measures)": [[65, "skfolio.measures.ExtraRiskMeasure", false]], "factormodel (class in skfolio.prior)": [[145, "skfolio.prior.FactorModel", false]], "filter() (skfolio.population.population method)": [[133, "skfolio.population.Population.filter", false]], "find() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.find", false]], "find() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.find", false]], "find() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.find", false]], "find() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.find", false]], "find() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.find", false]], "find() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.find", false]], "find() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.find", false]], "find() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.find", false]], "first_lower_partial_moment() (in module skfolio.measures)": [[77, "skfolio.measures.first_lower_partial_moment", false]], "fit() (skfolio.cluster.hierarchicalclustering method)": [[50, "skfolio.cluster.HierarchicalClustering.fit", false]], "fit() (skfolio.distance.basedistance method)": [[57, "skfolio.distance.BaseDistance.fit", false]], "fit() (skfolio.distance.covariancedistance method)": [[58, "skfolio.distance.CovarianceDistance.fit", false]], "fit() (skfolio.distance.distancecorrelation method)": [[59, "skfolio.distance.DistanceCorrelation.fit", false]], "fit() (skfolio.distance.kendalldistance method)": [[60, "skfolio.distance.KendallDistance.fit", false]], "fit() (skfolio.distance.mutualinformation method)": [[61, "skfolio.distance.MutualInformation.fit", false]], "fit() (skfolio.distance.pearsondistance method)": [[62, "skfolio.distance.PearsonDistance.fit", false]], "fit() (skfolio.distance.spearmandistance method)": [[63, "skfolio.distance.SpearmanDistance.fit", false]], "fit() (skfolio.moments.denoisecovariance method)": [[103, "skfolio.moments.DenoiseCovariance.fit", false]], "fit() (skfolio.moments.detonecovariance method)": [[104, "skfolio.moments.DetoneCovariance.fit", false]], "fit() (skfolio.moments.empiricalcovariance method)": [[107, "skfolio.moments.EmpiricalCovariance.fit", false]], "fit() (skfolio.moments.empiricalmu method)": [[108, "skfolio.moments.EmpiricalMu.fit", false]], "fit() (skfolio.moments.equilibriummu method)": [[109, "skfolio.moments.EquilibriumMu.fit", false]], "fit() (skfolio.moments.ewcovariance method)": [[105, "skfolio.moments.EWCovariance.fit", false]], "fit() (skfolio.moments.ewmu method)": [[106, "skfolio.moments.EWMu.fit", false]], "fit() (skfolio.moments.gerbercovariance method)": [[110, "skfolio.moments.GerberCovariance.fit", false]], "fit() (skfolio.moments.graphicallassocv method)": [[111, "skfolio.moments.GraphicalLassoCV.fit", false]], "fit() (skfolio.moments.impliedcovariance method)": [[112, "skfolio.moments.ImpliedCovariance.fit", false]], "fit() (skfolio.moments.ledoitwolf method)": [[113, "skfolio.moments.LedoitWolf.fit", false]], "fit() (skfolio.moments.oas method)": [[114, "skfolio.moments.OAS.fit", false]], "fit() (skfolio.moments.shrunkcovariance method)": [[115, "skfolio.moments.ShrunkCovariance.fit", false]], "fit() (skfolio.moments.shrunkmu method)": [[116, "skfolio.moments.ShrunkMu.fit", false]], "fit() (skfolio.optimization.distributionallyrobustcvar method)": [[121, "skfolio.optimization.DistributionallyRobustCVaR.fit", false]], "fit() (skfolio.optimization.equalweighted method)": [[122, "skfolio.optimization.EqualWeighted.fit", false]], "fit() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[123, "skfolio.optimization.HierarchicalEqualRiskContribution.fit", false]], "fit() (skfolio.optimization.hierarchicalriskparity method)": [[124, "skfolio.optimization.HierarchicalRiskParity.fit", false]], "fit() (skfolio.optimization.inversevolatility method)": [[125, "skfolio.optimization.InverseVolatility.fit", false]], "fit() (skfolio.optimization.maximumdiversification method)": [[126, "skfolio.optimization.MaximumDiversification.fit", false]], "fit() (skfolio.optimization.meanrisk method)": [[127, "skfolio.optimization.MeanRisk.fit", false]], "fit() (skfolio.optimization.nestedclustersoptimization method)": [[128, "skfolio.optimization.NestedClustersOptimization.fit", false]], "fit() (skfolio.optimization.random method)": [[130, "skfolio.optimization.Random.fit", false]], "fit() (skfolio.optimization.riskbudgeting method)": [[131, "skfolio.optimization.RiskBudgeting.fit", false]], "fit() (skfolio.optimization.stackingoptimization method)": [[132, "skfolio.optimization.StackingOptimization.fit", false]], "fit() (skfolio.pre_selection.dropcorrelated method)": [[137, "skfolio.pre_selection.DropCorrelated.fit", false]], "fit() (skfolio.pre_selection.selectkextremes method)": [[138, "skfolio.pre_selection.SelectKExtremes.fit", false]], "fit() (skfolio.pre_selection.selectnondominated method)": [[139, "skfolio.pre_selection.SelectNonDominated.fit", false]], "fit() (skfolio.prior.blacklitterman method)": [[143, "skfolio.prior.BlackLitterman.fit", false]], "fit() (skfolio.prior.empiricalprior method)": [[144, "skfolio.prior.EmpiricalPrior.fit", false]], "fit() (skfolio.prior.factormodel method)": [[145, "skfolio.prior.FactorModel.fit", false]], "fit() (skfolio.prior.loadingmatrixregression method)": [[146, "skfolio.prior.LoadingMatrixRegression.fit", false]], "fit() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[150, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[151, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[152, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[153, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.fit", false]], "fit_predict() (skfolio.cluster.hierarchicalclustering method)": [[50, "skfolio.cluster.HierarchicalClustering.fit_predict", false]], "fit_predict() (skfolio.optimization.basehierarchicaloptimization method)": [[119, "skfolio.optimization.BaseHierarchicalOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.convexoptimization method)": [[120, "skfolio.optimization.ConvexOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.distributionallyrobustcvar method)": [[121, "skfolio.optimization.DistributionallyRobustCVaR.fit_predict", false]], "fit_predict() (skfolio.optimization.equalweighted method)": [[122, "skfolio.optimization.EqualWeighted.fit_predict", false]], "fit_predict() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[123, "skfolio.optimization.HierarchicalEqualRiskContribution.fit_predict", false]], "fit_predict() (skfolio.optimization.hierarchicalriskparity method)": [[124, "skfolio.optimization.HierarchicalRiskParity.fit_predict", false]], "fit_predict() (skfolio.optimization.inversevolatility method)": [[125, "skfolio.optimization.InverseVolatility.fit_predict", false]], "fit_predict() (skfolio.optimization.maximumdiversification method)": [[126, "skfolio.optimization.MaximumDiversification.fit_predict", false]], "fit_predict() (skfolio.optimization.meanrisk method)": [[127, "skfolio.optimization.MeanRisk.fit_predict", false]], "fit_predict() (skfolio.optimization.nestedclustersoptimization method)": [[128, "skfolio.optimization.NestedClustersOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.random method)": [[130, "skfolio.optimization.Random.fit_predict", false]], "fit_predict() (skfolio.optimization.riskbudgeting method)": [[131, "skfolio.optimization.RiskBudgeting.fit_predict", false]], "fit_predict() (skfolio.optimization.stackingoptimization method)": [[132, "skfolio.optimization.StackingOptimization.fit_predict", false]], "fit_transform() (skfolio.pre_selection.dropcorrelated method)": [[137, "skfolio.pre_selection.DropCorrelated.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectkextremes method)": [[138, "skfolio.pre_selection.SelectKExtremes.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectnondominated method)": [[139, "skfolio.pre_selection.SelectNonDominated.fit_transform", false]], "fitness (skfolio.portfolio.baseportfolio attribute)": [[134, "skfolio.portfolio.BasePortfolio.fitness", false]], "fitness (skfolio.portfolio.multiperiodportfolio attribute)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.fitness", false]], "fitness (skfolio.portfolio.portfolio attribute)": [[136, "skfolio.portfolio.Portfolio.fitness", false]], "fitness_measures (skfolio.portfolio.baseportfolio property)": [[134, "skfolio.portfolio.BasePortfolio.fitness_measures", false]], "fitness_measures (skfolio.portfolio.multiperiodportfolio property)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.fitness_measures", false]], "fitness_measures (skfolio.portfolio.portfolio property)": [[136, "skfolio.portfolio.Portfolio.fitness_measures", false]], "format() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.format", false]], "format() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.format", false]], "format() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.format", false]], "format() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.format", false]], "format() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.format", false]], "format() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.format", false]], "format() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.format", false]], "format() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.format", false]], "format_map() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.format_map", false]], "format_map() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.format_map", false]], "format_map() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.format_map", false]], "format_map() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.format_map", false]], "format_map() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.format_map", false]], "format_map() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.format_map", false]], "format_map() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.format_map", false]], "format_map() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.format_map", false]], "fourth_central_moment() (in module skfolio.measures)": [[78, "skfolio.measures.fourth_central_moment", false]], "fourth_lower_partial_moment() (in module skfolio.measures)": [[79, "skfolio.measures.fourth_lower_partial_moment", false]], "gerbercovariance (class in skfolio.moments)": [[110, "skfolio.moments.GerberCovariance", false]], "get_cumulative_returns() (in module skfolio.measures)": [[80, "skfolio.measures.get_cumulative_returns", false]], "get_drawdowns() (in module skfolio.measures)": [[81, "skfolio.measures.get_drawdowns", false]], "get_feature_names_out() (skfolio.pre_selection.dropcorrelated method)": [[137, "skfolio.pre_selection.DropCorrelated.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectkextremes method)": [[138, "skfolio.pre_selection.SelectKExtremes.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectnondominated method)": [[139, "skfolio.pre_selection.SelectNonDominated.get_feature_names_out", false]], "get_measure() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.get_measure", false]], "get_measure() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.get_measure", false]], "get_measure() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.get_measure", false]], "get_metadata_routing() (skfolio.cluster.hierarchicalclustering method)": [[50, "skfolio.cluster.HierarchicalClustering.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.basedistance method)": [[57, "skfolio.distance.BaseDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.covariancedistance method)": [[58, "skfolio.distance.CovarianceDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.distancecorrelation method)": [[59, "skfolio.distance.DistanceCorrelation.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.kendalldistance method)": [[60, "skfolio.distance.KendallDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.mutualinformation method)": [[61, "skfolio.distance.MutualInformation.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.pearsondistance method)": [[62, "skfolio.distance.PearsonDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.spearmandistance method)": [[63, "skfolio.distance.SpearmanDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.model_selection.walkforward method)": [[98, "skfolio.model_selection.WalkForward.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.basecovariance method)": [[101, "skfolio.moments.BaseCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.basemu method)": [[102, "skfolio.moments.BaseMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.denoisecovariance method)": [[103, "skfolio.moments.DenoiseCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.detonecovariance method)": [[104, "skfolio.moments.DetoneCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.empiricalcovariance method)": [[107, "skfolio.moments.EmpiricalCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.empiricalmu method)": [[108, "skfolio.moments.EmpiricalMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.equilibriummu method)": [[109, "skfolio.moments.EquilibriumMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ewcovariance method)": [[105, "skfolio.moments.EWCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ewmu method)": [[106, "skfolio.moments.EWMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.gerbercovariance method)": [[110, "skfolio.moments.GerberCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.graphicallassocv method)": [[111, "skfolio.moments.GraphicalLassoCV.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.impliedcovariance method)": [[112, "skfolio.moments.ImpliedCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ledoitwolf method)": [[113, "skfolio.moments.LedoitWolf.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.oas method)": [[114, "skfolio.moments.OAS.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.shrunkcovariance method)": [[115, "skfolio.moments.ShrunkCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.shrunkmu method)": [[116, "skfolio.moments.ShrunkMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.basecomposition method)": [[118, "skfolio.optimization.BaseComposition.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.basehierarchicaloptimization method)": [[119, "skfolio.optimization.BaseHierarchicalOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.convexoptimization method)": [[120, "skfolio.optimization.ConvexOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.distributionallyrobustcvar method)": [[121, "skfolio.optimization.DistributionallyRobustCVaR.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.equalweighted method)": [[122, "skfolio.optimization.EqualWeighted.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[123, "skfolio.optimization.HierarchicalEqualRiskContribution.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.hierarchicalriskparity method)": [[124, "skfolio.optimization.HierarchicalRiskParity.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.inversevolatility method)": [[125, "skfolio.optimization.InverseVolatility.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.maximumdiversification method)": [[126, "skfolio.optimization.MaximumDiversification.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.meanrisk method)": [[127, "skfolio.optimization.MeanRisk.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.nestedclustersoptimization method)": [[128, "skfolio.optimization.NestedClustersOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.random method)": [[130, "skfolio.optimization.Random.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.riskbudgeting method)": [[131, "skfolio.optimization.RiskBudgeting.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.stackingoptimization method)": [[132, "skfolio.optimization.StackingOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.dropcorrelated method)": [[137, "skfolio.pre_selection.DropCorrelated.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectkextremes method)": [[138, "skfolio.pre_selection.SelectKExtremes.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectnondominated method)": [[139, "skfolio.pre_selection.SelectNonDominated.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.baseloadingmatrix method)": [[141, "skfolio.prior.BaseLoadingMatrix.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.baseprior method)": [[142, "skfolio.prior.BasePrior.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.blacklitterman method)": [[143, "skfolio.prior.BlackLitterman.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.empiricalprior method)": [[144, "skfolio.prior.EmpiricalPrior.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.factormodel method)": [[145, "skfolio.prior.FactorModel.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.loadingmatrixregression method)": [[146, "skfolio.prior.LoadingMatrixRegression.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[148, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[149, "skfolio.uncertainty_set.BaseMuUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[150, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[151, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[152, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[153, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.get_metadata_routing", false]], "get_n_splits() (skfolio.model_selection.walkforward method)": [[98, "skfolio.model_selection.WalkForward.get_n_splits", false]], "get_params() (skfolio.cluster.hierarchicalclustering method)": [[50, "skfolio.cluster.HierarchicalClustering.get_params", false]], "get_params() (skfolio.distance.basedistance method)": [[57, "skfolio.distance.BaseDistance.get_params", false]], "get_params() (skfolio.distance.covariancedistance method)": [[58, "skfolio.distance.CovarianceDistance.get_params", false]], "get_params() (skfolio.distance.distancecorrelation method)": [[59, "skfolio.distance.DistanceCorrelation.get_params", false]], "get_params() (skfolio.distance.kendalldistance method)": [[60, "skfolio.distance.KendallDistance.get_params", false]], "get_params() (skfolio.distance.mutualinformation method)": [[61, "skfolio.distance.MutualInformation.get_params", false]], "get_params() (skfolio.distance.pearsondistance method)": [[62, "skfolio.distance.PearsonDistance.get_params", false]], "get_params() (skfolio.distance.spearmandistance method)": [[63, "skfolio.distance.SpearmanDistance.get_params", false]], "get_params() (skfolio.moments.basecovariance method)": [[101, "skfolio.moments.BaseCovariance.get_params", false]], "get_params() (skfolio.moments.basemu method)": [[102, "skfolio.moments.BaseMu.get_params", false]], "get_params() (skfolio.moments.denoisecovariance method)": [[103, "skfolio.moments.DenoiseCovariance.get_params", false]], "get_params() (skfolio.moments.detonecovariance method)": [[104, "skfolio.moments.DetoneCovariance.get_params", false]], "get_params() (skfolio.moments.empiricalcovariance method)": [[107, "skfolio.moments.EmpiricalCovariance.get_params", false]], "get_params() (skfolio.moments.empiricalmu method)": [[108, "skfolio.moments.EmpiricalMu.get_params", false]], "get_params() (skfolio.moments.equilibriummu method)": [[109, "skfolio.moments.EquilibriumMu.get_params", false]], "get_params() (skfolio.moments.ewcovariance method)": [[105, "skfolio.moments.EWCovariance.get_params", false]], "get_params() (skfolio.moments.ewmu method)": [[106, "skfolio.moments.EWMu.get_params", false]], "get_params() (skfolio.moments.gerbercovariance method)": [[110, "skfolio.moments.GerberCovariance.get_params", false]], "get_params() (skfolio.moments.graphicallassocv method)": [[111, "skfolio.moments.GraphicalLassoCV.get_params", false]], "get_params() (skfolio.moments.impliedcovariance method)": [[112, "skfolio.moments.ImpliedCovariance.get_params", false]], "get_params() (skfolio.moments.ledoitwolf method)": [[113, "skfolio.moments.LedoitWolf.get_params", false]], "get_params() (skfolio.moments.oas method)": [[114, "skfolio.moments.OAS.get_params", false]], "get_params() (skfolio.moments.shrunkcovariance method)": [[115, "skfolio.moments.ShrunkCovariance.get_params", false]], "get_params() (skfolio.moments.shrunkmu method)": [[116, "skfolio.moments.ShrunkMu.get_params", false]], "get_params() (skfolio.optimization.basecomposition method)": [[118, "skfolio.optimization.BaseComposition.get_params", false]], "get_params() (skfolio.optimization.basehierarchicaloptimization method)": [[119, "skfolio.optimization.BaseHierarchicalOptimization.get_params", false]], "get_params() (skfolio.optimization.convexoptimization method)": [[120, "skfolio.optimization.ConvexOptimization.get_params", false]], "get_params() (skfolio.optimization.distributionallyrobustcvar method)": [[121, "skfolio.optimization.DistributionallyRobustCVaR.get_params", false]], "get_params() (skfolio.optimization.equalweighted method)": [[122, "skfolio.optimization.EqualWeighted.get_params", false]], "get_params() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[123, "skfolio.optimization.HierarchicalEqualRiskContribution.get_params", false]], "get_params() (skfolio.optimization.hierarchicalriskparity method)": [[124, "skfolio.optimization.HierarchicalRiskParity.get_params", false]], "get_params() (skfolio.optimization.inversevolatility method)": [[125, "skfolio.optimization.InverseVolatility.get_params", false]], "get_params() (skfolio.optimization.maximumdiversification method)": [[126, "skfolio.optimization.MaximumDiversification.get_params", false]], "get_params() (skfolio.optimization.meanrisk method)": [[127, "skfolio.optimization.MeanRisk.get_params", false]], "get_params() (skfolio.optimization.nestedclustersoptimization method)": [[128, "skfolio.optimization.NestedClustersOptimization.get_params", false]], "get_params() (skfolio.optimization.random method)": [[130, "skfolio.optimization.Random.get_params", false]], "get_params() (skfolio.optimization.riskbudgeting method)": [[131, "skfolio.optimization.RiskBudgeting.get_params", false]], "get_params() (skfolio.optimization.stackingoptimization method)": [[132, "skfolio.optimization.StackingOptimization.get_params", false]], "get_params() (skfolio.pre_selection.dropcorrelated method)": [[137, "skfolio.pre_selection.DropCorrelated.get_params", false]], "get_params() (skfolio.pre_selection.selectkextremes method)": [[138, "skfolio.pre_selection.SelectKExtremes.get_params", false]], "get_params() (skfolio.pre_selection.selectnondominated method)": [[139, "skfolio.pre_selection.SelectNonDominated.get_params", false]], "get_params() (skfolio.prior.baseloadingmatrix method)": [[141, "skfolio.prior.BaseLoadingMatrix.get_params", false]], "get_params() (skfolio.prior.baseprior method)": [[142, "skfolio.prior.BasePrior.get_params", false]], "get_params() (skfolio.prior.blacklitterman method)": [[143, "skfolio.prior.BlackLitterman.get_params", false]], "get_params() (skfolio.prior.empiricalprior method)": [[144, "skfolio.prior.EmpiricalPrior.get_params", false]], "get_params() (skfolio.prior.factormodel method)": [[145, "skfolio.prior.FactorModel.get_params", false]], "get_params() (skfolio.prior.loadingmatrixregression method)": [[146, "skfolio.prior.LoadingMatrixRegression.get_params", false]], "get_params() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[148, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[149, "skfolio.uncertainty_set.BaseMuUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[150, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[151, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[152, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[153, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.get_params", false]], "get_path_ids() (skfolio.model_selection.basecombinatorialcv method)": [[96, "skfolio.model_selection.BaseCombinatorialCV.get_path_ids", false]], "get_path_ids() (skfolio.model_selection.combinatorialpurgedcv method)": [[97, "skfolio.model_selection.CombinatorialPurgedCV.get_path_ids", false]], "get_precision() (skfolio.moments.graphicallassocv method)": [[111, "skfolio.moments.GraphicalLassoCV.get_precision", false]], "get_precision() (skfolio.moments.ledoitwolf method)": [[113, "skfolio.moments.LedoitWolf.get_precision", false]], "get_precision() (skfolio.moments.oas method)": [[114, "skfolio.moments.OAS.get_precision", false]], "get_precision() (skfolio.moments.shrunkcovariance method)": [[115, "skfolio.moments.ShrunkCovariance.get_precision", false]], "get_support() (skfolio.pre_selection.dropcorrelated method)": [[137, "skfolio.pre_selection.DropCorrelated.get_support", false]], "get_support() (skfolio.pre_selection.selectkextremes method)": [[138, "skfolio.pre_selection.SelectKExtremes.get_support", false]], "get_support() (skfolio.pre_selection.selectnondominated method)": [[139, "skfolio.pre_selection.SelectNonDominated.get_support", false]], "get_weight() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.get_weight", false]], "gini_mean_difference() (in module skfolio.measures)": [[82, "skfolio.measures.gini_mean_difference", false]], "graphicallassocv (class in skfolio.moments)": [[111, "skfolio.moments.GraphicalLassoCV", false]], "has() (skfolio.cluster.linkagemethod class method)": [[51, "skfolio.cluster.LinkageMethod.has", false]], "has() (skfolio.measures.basemeasure class method)": [[64, "skfolio.measures.BaseMeasure.has", false]], "has() (skfolio.measures.extrariskmeasure class method)": [[65, "skfolio.measures.ExtraRiskMeasure.has", false]], "has() (skfolio.measures.perfmeasure class method)": [[66, "skfolio.measures.PerfMeasure.has", false]], "has() (skfolio.measures.ratiomeasure class method)": [[67, "skfolio.measures.RatioMeasure.has", false]], "has() (skfolio.measures.riskmeasure class method)": [[68, "skfolio.measures.RiskMeasure.has", false]], "has() (skfolio.moments.shrunkmumethods class method)": [[117, "skfolio.moments.ShrunkMuMethods.has", false]], "has() (skfolio.optimization.objectivefunction class method)": [[129, "skfolio.optimization.ObjectiveFunction.has", false]], "hierarchicalclustering (class in skfolio.cluster)": [[50, "skfolio.cluster.HierarchicalClustering", false]], "hierarchicalequalriskcontribution (class in skfolio.optimization)": [[123, "skfolio.optimization.HierarchicalEqualRiskContribution", false]], "hierarchicalriskparity (class in skfolio.optimization)": [[124, "skfolio.optimization.HierarchicalRiskParity", false]], "impliedcovariance (class in skfolio.moments)": [[112, "skfolio.moments.ImpliedCovariance", false]], "index() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.index", false]], "index() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.index", false]], "index() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.index", false]], "index() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.index", false]], "index() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.index", false]], "index() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.index", false]], "index() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.index", false]], "index() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.index", false]], "index() (skfolio.population.population method)": [[133, "skfolio.population.Population.index", false]], "insert() (skfolio.population.population method)": [[133, "skfolio.population.Population.insert", false]], "inverse_transform() (skfolio.pre_selection.dropcorrelated method)": [[137, "skfolio.pre_selection.DropCorrelated.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectkextremes method)": [[138, "skfolio.pre_selection.SelectKExtremes.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectnondominated method)": [[139, "skfolio.pre_selection.SelectNonDominated.inverse_transform", false]], "inversevolatility (class in skfolio.optimization)": [[125, "skfolio.optimization.InverseVolatility", false]], "is_cholesky_dec() (in module skfolio.utils.stats)": [[164, "skfolio.utils.stats.is_cholesky_dec", false]], "isalnum() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.isalnum", false]], "isalnum() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.isalnum", false]], "isalnum() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.isalnum", false]], "isalnum() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.isalnum", false]], "isalnum() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.isalnum", false]], "isalnum() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.isalnum", false]], "isalnum() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.isalnum", false]], "isalnum() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.isalnum", false]], "isalpha() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.isalpha", false]], "isalpha() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.isalpha", false]], "isalpha() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.isalpha", false]], "isalpha() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.isalpha", false]], "isalpha() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.isalpha", false]], "isalpha() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.isalpha", false]], "isalpha() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.isalpha", false]], "isalpha() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.isalpha", false]], "isascii() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.isascii", false]], "isascii() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.isascii", false]], "isascii() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.isascii", false]], "isascii() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.isascii", false]], "isascii() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.isascii", false]], "isascii() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.isascii", false]], "isascii() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.isascii", false]], "isascii() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.isascii", false]], "isdecimal() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.isdecimal", false]], "isdecimal() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.isdecimal", false]], "isdecimal() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.isdecimal", false]], "isdecimal() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.isdecimal", false]], "isdigit() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.isdigit", false]], "isdigit() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.isdigit", false]], "isdigit() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.isdigit", false]], "isdigit() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.isdigit", false]], "isdigit() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.isdigit", false]], "isdigit() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.isdigit", false]], "isdigit() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.isdigit", false]], "isdigit() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.isdigit", false]], "isidentifier() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.isidentifier", false]], "isidentifier() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.isidentifier", false]], "isidentifier() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.isidentifier", false]], "isidentifier() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.isidentifier", false]], "islower() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.islower", false]], "islower() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.islower", false]], "islower() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.islower", false]], "islower() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.islower", false]], "islower() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.islower", false]], "islower() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.islower", false]], "islower() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.islower", false]], "islower() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.islower", false]], "isnumeric() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.isnumeric", false]], "isnumeric() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.isnumeric", false]], "isnumeric() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.isnumeric", false]], "isnumeric() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.isnumeric", false]], "isprintable() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.isprintable", false]], "isprintable() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.isprintable", false]], "isprintable() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.isprintable", false]], "isprintable() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.isprintable", false]], "isprintable() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.isprintable", false]], "isprintable() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.isprintable", false]], "isprintable() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.isprintable", false]], "isprintable() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.isprintable", false]], "isspace() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.isspace", false]], "isspace() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.isspace", false]], "isspace() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.isspace", false]], "isspace() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.isspace", false]], "isspace() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.isspace", false]], "isspace() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.isspace", false]], "isspace() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.isspace", false]], "isspace() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.isspace", false]], "istitle() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.istitle", false]], "istitle() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.istitle", false]], "istitle() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.istitle", false]], "istitle() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.istitle", false]], "istitle() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.istitle", false]], "istitle() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.istitle", false]], "istitle() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.istitle", false]], "istitle() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.istitle", false]], "isupper() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.isupper", false]], "isupper() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.isupper", false]], "isupper() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.isupper", false]], "isupper() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.isupper", false]], "isupper() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.isupper", false]], "isupper() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.isupper", false]], "isupper() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.isupper", false]], "isupper() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.isupper", false]], "join() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.join", false]], "join() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.join", false]], "join() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.join", false]], "join() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.join", false]], "join() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.join", false]], "join() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.join", false]], "join() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.join", false]], "join() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.join", false]], "kendalldistance (class in skfolio.distance)": [[60, "skfolio.distance.KendallDistance", false]], "ledoitwolf (class in skfolio.moments)": [[113, "skfolio.moments.LedoitWolf", false]], "linkagemethod (class in skfolio.cluster)": [[51, "skfolio.cluster.LinkageMethod", false]], "ljust() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.ljust", false]], "ljust() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.ljust", false]], "ljust() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.ljust", false]], "ljust() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.ljust", false]], "ljust() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.ljust", false]], "ljust() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.ljust", false]], "ljust() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.ljust", false]], "ljust() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.ljust", false]], "load_factors_dataset() (in module skfolio.datasets)": [[52, "skfolio.datasets.load_factors_dataset", false]], "load_ftse100_dataset() (in module skfolio.datasets)": [[53, "skfolio.datasets.load_ftse100_dataset", false]], "load_nasdaq_dataset() (in module skfolio.datasets)": [[54, "skfolio.datasets.load_nasdaq_dataset", false]], "load_sp500_dataset() (in module skfolio.datasets)": [[55, "skfolio.datasets.load_sp500_dataset", false]], "load_sp500_index() (in module skfolio.datasets)": [[56, "skfolio.datasets.load_sp500_index", false]], "loadingmatrixregression (class in skfolio.prior)": [[146, "skfolio.prior.LoadingMatrixRegression", false]], "lower() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.lower", false]], "lower() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.lower", false]], "lower() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.lower", false]], "lower() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.lower", false]], "lower() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.lower", false]], "lower() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.lower", false]], "lower() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.lower", false]], "lower() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.lower", false]], "lstrip() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.lstrip", false]], "lstrip() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.lstrip", false]], "lstrip() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.lstrip", false]], "lstrip() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.lstrip", false]], "lstrip() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.lstrip", false]], "lstrip() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.lstrip", false]], "lstrip() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.lstrip", false]], "lstrip() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.lstrip", false]], "mahalanobis() (skfolio.moments.graphicallassocv method)": [[111, "skfolio.moments.GraphicalLassoCV.mahalanobis", false]], "mahalanobis() (skfolio.moments.ledoitwolf method)": [[113, "skfolio.moments.LedoitWolf.mahalanobis", false]], "mahalanobis() (skfolio.moments.oas method)": [[114, "skfolio.moments.OAS.mahalanobis", false]], "mahalanobis() (skfolio.moments.shrunkcovariance method)": [[115, "skfolio.moments.ShrunkCovariance.mahalanobis", false]], "make_scorer() (in module skfolio.metrics)": [[95, "skfolio.metrics.make_scorer", false]], "maketrans() (skfolio.cluster.linkagemethod static method)": [[51, "skfolio.cluster.LinkageMethod.maketrans", false]], "maketrans() (skfolio.measures.basemeasure static method)": [[64, "skfolio.measures.BaseMeasure.maketrans", false]], "maketrans() (skfolio.measures.extrariskmeasure static method)": [[65, "skfolio.measures.ExtraRiskMeasure.maketrans", false]], "maketrans() (skfolio.measures.perfmeasure static method)": [[66, "skfolio.measures.PerfMeasure.maketrans", false]], "maketrans() (skfolio.measures.ratiomeasure static method)": [[67, "skfolio.measures.RatioMeasure.maketrans", false]], "maketrans() (skfolio.measures.riskmeasure static method)": [[68, "skfolio.measures.RiskMeasure.maketrans", false]], "maketrans() (skfolio.moments.shrunkmumethods static method)": [[117, "skfolio.moments.ShrunkMuMethods.maketrans", false]], "maketrans() (skfolio.optimization.objectivefunction static method)": [[129, "skfolio.optimization.ObjectiveFunction.maketrans", false]], "max_drawdown() (in module skfolio.measures)": [[83, "skfolio.measures.max_drawdown", false]], "max_measure() (skfolio.population.population method)": [[133, "skfolio.population.Population.max_measure", false]], "maximumdiversification (class in skfolio.optimization)": [[126, "skfolio.optimization.MaximumDiversification", false]], "mean() (in module skfolio.measures)": [[84, "skfolio.measures.mean", false]], "mean_absolute_deviation() (in module skfolio.measures)": [[85, "skfolio.measures.mean_absolute_deviation", false]], "meanrisk (class in skfolio.optimization)": [[127, "skfolio.optimization.MeanRisk", false]], "measures() (skfolio.population.population method)": [[133, "skfolio.population.Population.measures", false]], "measures_df (skfolio.portfolio.baseportfolio property)": [[134, "skfolio.portfolio.BasePortfolio.measures_df", false]], "measures_df (skfolio.portfolio.multiperiodportfolio property)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.measures_df", false]], "measures_df (skfolio.portfolio.portfolio property)": [[136, "skfolio.portfolio.Portfolio.measures_df", false]], "measures_mean() (skfolio.population.population method)": [[133, "skfolio.population.Population.measures_mean", false]], "measures_std() (skfolio.population.population method)": [[133, "skfolio.population.Population.measures_std", false]], "min_measure() (skfolio.population.population method)": [[133, "skfolio.population.Population.min_measure", false]], "module": [[0, "module-0", false], [0, "module-1", false], [0, "module-2", false], [0, "module-3", false], [0, "module-4", false], [0, "module-5", false], [0, "module-6", false], [0, "module-7", false], [0, "module-skfolio", false], [0, "module-skfolio.measures", false], [0, "module-skfolio.optimization.cluster", false], [0, "module-skfolio.optimization.convex", false], [0, "module-skfolio.optimization.ensemble", false], [0, "module-skfolio.optimization.naive", false], [0, "module-skfolio.population", false], [0, "module-skfolio.portfolio", false]], "multiperiodportfolio (class in skfolio.portfolio)": [[135, "skfolio.portfolio.MultiPeriodPortfolio", false]], "mutualinformation (class in skfolio.distance)": [[61, "skfolio.distance.MutualInformation", false]], "n_bins_freedman() (in module skfolio.utils.stats)": [[165, "skfolio.utils.stats.n_bins_freedman", false]], "n_bins_knuth() (in module skfolio.utils.stats)": [[166, "skfolio.utils.stats.n_bins_knuth", false]], "n_observations (skfolio.portfolio.baseportfolio property)": [[134, "skfolio.portfolio.BasePortfolio.n_observations", false]], "n_observations (skfolio.portfolio.multiperiodportfolio property)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.n_observations", false]], "n_observations (skfolio.portfolio.portfolio property)": [[136, "skfolio.portfolio.Portfolio.n_observations", false]], "n_splits (skfolio.model_selection.combinatorialpurgedcv property)": [[97, "skfolio.model_selection.CombinatorialPurgedCV.n_splits", false]], "n_test_paths (skfolio.model_selection.combinatorialpurgedcv property)": [[97, "skfolio.model_selection.CombinatorialPurgedCV.n_test_paths", false]], "named_estimators (skfolio.optimization.stackingoptimization property)": [[132, "skfolio.optimization.StackingOptimization.named_estimators", false]], "nbinsmethod() (in module skfolio.utils.stats)": [[155, "skfolio.utils.stats.NBinsMethod", false]], "nestedclustersoptimization (class in skfolio.optimization)": [[128, "skfolio.optimization.NestedClustersOptimization", false]], "non_denominated_sort() (skfolio.population.population method)": [[133, "skfolio.population.Population.non_denominated_sort", false]], "nonzero_assets (skfolio.portfolio.portfolio attribute)": [[136, "skfolio.portfolio.Portfolio.nonzero_assets", false]], "nonzero_assets_index (skfolio.portfolio.portfolio attribute)": [[136, "skfolio.portfolio.Portfolio.nonzero_assets_index", false]], "oas (class in skfolio.moments)": [[114, "skfolio.moments.OAS", false]], "objectivefunction (class in skfolio.optimization)": [[129, "skfolio.optimization.ObjectiveFunction", false]], "optimal_folds_number() (in module skfolio.model_selection)": [[100, "skfolio.model_selection.optimal_folds_number", false]], "owa_gmd_weights() (in module skfolio.measures)": [[86, "skfolio.measures.owa_gmd_weights", false]], "partition() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.partition", false]], "partition() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.partition", false]], "partition() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.partition", false]], "partition() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.partition", false]], "partition() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.partition", false]], "partition() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.partition", false]], "partition() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.partition", false]], "partition() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.partition", false]], "pearsondistance (class in skfolio.distance)": [[62, "skfolio.distance.PearsonDistance", false]], "perfmeasure (class in skfolio.measures)": [[66, "skfolio.measures.PerfMeasure", false]], "plot_composition() (skfolio.population.population method)": [[133, "skfolio.population.Population.plot_composition", false]], "plot_composition() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.plot_composition", false]], "plot_composition() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.plot_composition", false]], "plot_composition() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.plot_composition", false]], "plot_contribution() (skfolio.population.population method)": [[133, "skfolio.population.Population.plot_contribution", false]], "plot_contribution() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.plot_contribution", false]], "plot_contribution() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.plot_contribution", false]], "plot_contribution() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.plot_contribution", false]], "plot_cumulative_returns() (skfolio.population.population method)": [[133, "skfolio.population.Population.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.plot_cumulative_returns", false]], "plot_dendrogram() (skfolio.cluster.hierarchicalclustering method)": [[50, "skfolio.cluster.HierarchicalClustering.plot_dendrogram", false]], "plot_distribution() (skfolio.population.population method)": [[133, "skfolio.population.Population.plot_distribution", false]], "plot_measures() (skfolio.population.population method)": [[133, "skfolio.population.Population.plot_measures", false]], "plot_returns() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.plot_returns", false]], "plot_returns() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.plot_returns", false]], "plot_returns() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.plot_returns", false]], "plot_rolling_measure() (skfolio.population.population method)": [[133, "skfolio.population.Population.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.plot_rolling_measure", false]], "plot_train_test_folds() (skfolio.model_selection.combinatorialpurgedcv method)": [[97, "skfolio.model_selection.CombinatorialPurgedCV.plot_train_test_folds", false]], "plot_train_test_index() (skfolio.model_selection.combinatorialpurgedcv method)": [[97, "skfolio.model_selection.CombinatorialPurgedCV.plot_train_test_index", false]], "pop() (skfolio.population.population method)": [[133, "skfolio.population.Population.pop", false]], "population (class in skfolio.population)": [[133, "skfolio.population.Population", false]], "portfolio (class in skfolio.portfolio)": [[136, "skfolio.portfolio.Portfolio", false]], "portfolios (skfolio.portfolio.multiperiodportfolio property)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.portfolios", false]], "predict() (skfolio.optimization.basehierarchicaloptimization method)": [[119, "skfolio.optimization.BaseHierarchicalOptimization.predict", false]], "predict() (skfolio.optimization.convexoptimization method)": [[120, "skfolio.optimization.ConvexOptimization.predict", false]], "predict() (skfolio.optimization.distributionallyrobustcvar method)": [[121, "skfolio.optimization.DistributionallyRobustCVaR.predict", false]], "predict() (skfolio.optimization.equalweighted method)": [[122, "skfolio.optimization.EqualWeighted.predict", false]], "predict() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[123, "skfolio.optimization.HierarchicalEqualRiskContribution.predict", false]], "predict() (skfolio.optimization.hierarchicalriskparity method)": [[124, "skfolio.optimization.HierarchicalRiskParity.predict", false]], "predict() (skfolio.optimization.inversevolatility method)": [[125, "skfolio.optimization.InverseVolatility.predict", false]], "predict() (skfolio.optimization.maximumdiversification method)": [[126, "skfolio.optimization.MaximumDiversification.predict", false]], "predict() (skfolio.optimization.meanrisk method)": [[127, "skfolio.optimization.MeanRisk.predict", false]], "predict() (skfolio.optimization.nestedclustersoptimization method)": [[128, "skfolio.optimization.NestedClustersOptimization.predict", false]], "predict() (skfolio.optimization.random method)": [[130, "skfolio.optimization.Random.predict", false]], "predict() (skfolio.optimization.riskbudgeting method)": [[131, "skfolio.optimization.RiskBudgeting.predict", false]], "predict() (skfolio.optimization.stackingoptimization method)": [[132, "skfolio.optimization.StackingOptimization.predict", false]], "prices_to_returns() (in module skfolio.preprocessing)": [[140, "skfolio.preprocessing.prices_to_returns", false]], "priormodel (class in skfolio.prior)": [[147, "skfolio.prior.PriorModel", false]], "quantile() (skfolio.population.population method)": [[133, "skfolio.population.Population.quantile", false]], "rand_weights() (in module skfolio.utils.stats)": [[167, "skfolio.utils.stats.rand_weights", false]], "rand_weights_dirichlet() (in module skfolio.utils.stats)": [[168, "skfolio.utils.stats.rand_weights_dirichlet", false]], "random (class in skfolio.optimization)": [[130, "skfolio.optimization.Random", false]], "ratiomeasure (class in skfolio.measures)": [[67, "skfolio.measures.RatioMeasure", false]], "recombined_paths (skfolio.model_selection.combinatorialpurgedcv property)": [[97, "skfolio.model_selection.CombinatorialPurgedCV.recombined_paths", false]], "remove() (skfolio.population.population method)": [[133, "skfolio.population.Population.remove", false]], "removeprefix() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.removeprefix", false]], "removeprefix() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.removeprefix", false]], "removeprefix() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.removeprefix", false]], "removeprefix() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.removeprefix", false]], "removesuffix() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.removesuffix", false]], "removesuffix() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.removesuffix", false]], "removesuffix() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.removesuffix", false]], "removesuffix() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.removesuffix", false]], "replace() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.replace", false]], "replace() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.replace", false]], "replace() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.replace", false]], "replace() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.replace", false]], "replace() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.replace", false]], "replace() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.replace", false]], "replace() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.replace", false]], "replace() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.replace", false]], "returns_df (skfolio.portfolio.baseportfolio property)": [[134, "skfolio.portfolio.BasePortfolio.returns_df", false]], "returns_df (skfolio.portfolio.multiperiodportfolio property)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.returns_df", false]], "returns_df (skfolio.portfolio.portfolio property)": [[136, "skfolio.portfolio.Portfolio.returns_df", false]], "reverse() (skfolio.population.population method)": [[133, "skfolio.population.Population.reverse", false]], "rfind() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.rfind", false]], "rfind() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.rfind", false]], "rfind() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.rfind", false]], "rfind() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.rfind", false]], "rfind() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.rfind", false]], "rfind() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.rfind", false]], "rfind() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.rfind", false]], "rfind() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.rfind", false]], "rindex() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.rindex", false]], "rindex() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.rindex", false]], "rindex() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.rindex", false]], "rindex() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.rindex", false]], "rindex() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.rindex", false]], "rindex() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.rindex", false]], "rindex() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.rindex", false]], "rindex() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.rindex", false]], "riskbudgeting (class in skfolio.optimization)": [[131, "skfolio.optimization.RiskBudgeting", false]], "riskmeasure (class in skfolio.measures)": [[68, "skfolio.measures.RiskMeasure", false]], "rjust() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.rjust", false]], "rjust() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.rjust", false]], "rjust() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.rjust", false]], "rjust() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.rjust", false]], "rjust() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.rjust", false]], "rjust() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.rjust", false]], "rjust() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.rjust", false]], "rjust() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.rjust", false]], "rolling_measure() (skfolio.population.population method)": [[133, "skfolio.population.Population.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.rolling_measure", false]], "rpartition() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.rpartition", false]], "rpartition() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.rpartition", false]], "rpartition() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.rpartition", false]], "rpartition() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.rpartition", false]], "rpartition() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.rpartition", false]], "rpartition() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.rpartition", false]], "rpartition() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.rpartition", false]], "rpartition() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.rpartition", false]], "rsplit() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.rsplit", false]], "rsplit() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.rsplit", false]], "rsplit() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.rsplit", false]], "rsplit() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.rsplit", false]], "rsplit() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.rsplit", false]], "rsplit() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.rsplit", false]], "rsplit() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.rsplit", false]], "rsplit() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.rsplit", false]], "rstrip() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.rstrip", false]], "rstrip() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.rstrip", false]], "rstrip() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.rstrip", false]], "rstrip() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.rstrip", false]], "rstrip() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.rstrip", false]], "rstrip() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.rstrip", false]], "rstrip() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.rstrip", false]], "rstrip() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.rstrip", false]], "score() (skfolio.moments.graphicallassocv method)": [[111, "skfolio.moments.GraphicalLassoCV.score", false]], "score() (skfolio.moments.ledoitwolf method)": [[113, "skfolio.moments.LedoitWolf.score", false]], "score() (skfolio.moments.oas method)": [[114, "skfolio.moments.OAS.score", false]], "score() (skfolio.moments.shrunkcovariance method)": [[115, "skfolio.moments.ShrunkCovariance.score", false]], "score() (skfolio.optimization.basehierarchicaloptimization method)": [[119, "skfolio.optimization.BaseHierarchicalOptimization.score", false]], "score() (skfolio.optimization.convexoptimization method)": [[120, "skfolio.optimization.ConvexOptimization.score", false]], "score() (skfolio.optimization.distributionallyrobustcvar method)": [[121, "skfolio.optimization.DistributionallyRobustCVaR.score", false]], "score() (skfolio.optimization.equalweighted method)": [[122, "skfolio.optimization.EqualWeighted.score", false]], "score() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[123, "skfolio.optimization.HierarchicalEqualRiskContribution.score", false]], "score() (skfolio.optimization.hierarchicalriskparity method)": [[124, "skfolio.optimization.HierarchicalRiskParity.score", false]], "score() (skfolio.optimization.inversevolatility method)": [[125, "skfolio.optimization.InverseVolatility.score", false]], "score() (skfolio.optimization.maximumdiversification method)": [[126, "skfolio.optimization.MaximumDiversification.score", false]], "score() (skfolio.optimization.meanrisk method)": [[127, "skfolio.optimization.MeanRisk.score", false]], "score() (skfolio.optimization.nestedclustersoptimization method)": [[128, "skfolio.optimization.NestedClustersOptimization.score", false]], "score() (skfolio.optimization.random method)": [[130, "skfolio.optimization.Random.score", false]], "score() (skfolio.optimization.riskbudgeting method)": [[131, "skfolio.optimization.RiskBudgeting.score", false]], "score() (skfolio.optimization.stackingoptimization method)": [[132, "skfolio.optimization.StackingOptimization.score", false]], "selectkextremes (class in skfolio.pre_selection)": [[138, "skfolio.pre_selection.SelectKExtremes", false]], "selectnondominated (class in skfolio.pre_selection)": [[139, "skfolio.pre_selection.SelectNonDominated", false]], "semi_deviation() (in module skfolio.measures)": [[87, "skfolio.measures.semi_deviation", false]], "semi_variance() (in module skfolio.measures)": [[88, "skfolio.measures.semi_variance", false]], "set_fit_request() (skfolio.moments.impliedcovariance method)": [[112, "skfolio.moments.ImpliedCovariance.set_fit_request", false]], "set_output() (skfolio.pre_selection.dropcorrelated method)": [[137, "skfolio.pre_selection.DropCorrelated.set_output", false]], "set_output() (skfolio.pre_selection.selectkextremes method)": [[138, "skfolio.pre_selection.SelectKExtremes.set_output", false]], "set_output() (skfolio.pre_selection.selectnondominated method)": [[139, "skfolio.pre_selection.SelectNonDominated.set_output", false]], "set_params() (skfolio.cluster.hierarchicalclustering method)": [[50, "skfolio.cluster.HierarchicalClustering.set_params", false]], "set_params() (skfolio.distance.basedistance method)": [[57, "skfolio.distance.BaseDistance.set_params", false]], "set_params() (skfolio.distance.covariancedistance method)": [[58, "skfolio.distance.CovarianceDistance.set_params", false]], "set_params() (skfolio.distance.distancecorrelation method)": [[59, "skfolio.distance.DistanceCorrelation.set_params", false]], "set_params() (skfolio.distance.kendalldistance method)": [[60, "skfolio.distance.KendallDistance.set_params", false]], "set_params() (skfolio.distance.mutualinformation method)": [[61, "skfolio.distance.MutualInformation.set_params", false]], "set_params() (skfolio.distance.pearsondistance method)": [[62, "skfolio.distance.PearsonDistance.set_params", false]], "set_params() (skfolio.distance.spearmandistance method)": [[63, "skfolio.distance.SpearmanDistance.set_params", false]], "set_params() (skfolio.moments.basecovariance method)": [[101, "skfolio.moments.BaseCovariance.set_params", false]], "set_params() (skfolio.moments.basemu method)": [[102, "skfolio.moments.BaseMu.set_params", false]], "set_params() (skfolio.moments.denoisecovariance method)": [[103, "skfolio.moments.DenoiseCovariance.set_params", false]], "set_params() (skfolio.moments.detonecovariance method)": [[104, "skfolio.moments.DetoneCovariance.set_params", false]], "set_params() (skfolio.moments.empiricalcovariance method)": [[107, "skfolio.moments.EmpiricalCovariance.set_params", false]], "set_params() (skfolio.moments.empiricalmu method)": [[108, "skfolio.moments.EmpiricalMu.set_params", false]], "set_params() (skfolio.moments.equilibriummu method)": [[109, "skfolio.moments.EquilibriumMu.set_params", false]], "set_params() (skfolio.moments.ewcovariance method)": [[105, "skfolio.moments.EWCovariance.set_params", false]], "set_params() (skfolio.moments.ewmu method)": [[106, "skfolio.moments.EWMu.set_params", false]], "set_params() (skfolio.moments.gerbercovariance method)": [[110, "skfolio.moments.GerberCovariance.set_params", false]], "set_params() (skfolio.moments.graphicallassocv method)": [[111, "skfolio.moments.GraphicalLassoCV.set_params", false]], "set_params() (skfolio.moments.impliedcovariance method)": [[112, "skfolio.moments.ImpliedCovariance.set_params", false]], "set_params() (skfolio.moments.ledoitwolf method)": [[113, "skfolio.moments.LedoitWolf.set_params", false]], "set_params() (skfolio.moments.oas method)": [[114, "skfolio.moments.OAS.set_params", false]], "set_params() (skfolio.moments.shrunkcovariance method)": [[115, "skfolio.moments.ShrunkCovariance.set_params", false]], "set_params() (skfolio.moments.shrunkmu method)": [[116, "skfolio.moments.ShrunkMu.set_params", false]], "set_params() (skfolio.optimization.basecomposition method)": [[118, "skfolio.optimization.BaseComposition.set_params", false]], "set_params() (skfolio.optimization.basehierarchicaloptimization method)": [[119, "skfolio.optimization.BaseHierarchicalOptimization.set_params", false]], "set_params() (skfolio.optimization.convexoptimization method)": [[120, "skfolio.optimization.ConvexOptimization.set_params", false]], "set_params() (skfolio.optimization.distributionallyrobustcvar method)": [[121, "skfolio.optimization.DistributionallyRobustCVaR.set_params", false]], "set_params() (skfolio.optimization.equalweighted method)": [[122, "skfolio.optimization.EqualWeighted.set_params", false]], "set_params() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[123, "skfolio.optimization.HierarchicalEqualRiskContribution.set_params", false]], "set_params() (skfolio.optimization.hierarchicalriskparity method)": [[124, "skfolio.optimization.HierarchicalRiskParity.set_params", false]], "set_params() (skfolio.optimization.inversevolatility method)": [[125, "skfolio.optimization.InverseVolatility.set_params", false]], "set_params() (skfolio.optimization.maximumdiversification method)": [[126, "skfolio.optimization.MaximumDiversification.set_params", false]], "set_params() (skfolio.optimization.meanrisk method)": [[127, "skfolio.optimization.MeanRisk.set_params", false]], "set_params() (skfolio.optimization.nestedclustersoptimization method)": [[128, "skfolio.optimization.NestedClustersOptimization.set_params", false]], "set_params() (skfolio.optimization.random method)": [[130, "skfolio.optimization.Random.set_params", false]], "set_params() (skfolio.optimization.riskbudgeting method)": [[131, "skfolio.optimization.RiskBudgeting.set_params", false]], "set_params() (skfolio.optimization.stackingoptimization method)": [[132, "skfolio.optimization.StackingOptimization.set_params", false]], "set_params() (skfolio.pre_selection.dropcorrelated method)": [[137, "skfolio.pre_selection.DropCorrelated.set_params", false]], "set_params() (skfolio.pre_selection.selectkextremes method)": [[138, "skfolio.pre_selection.SelectKExtremes.set_params", false]], "set_params() (skfolio.pre_selection.selectnondominated method)": [[139, "skfolio.pre_selection.SelectNonDominated.set_params", false]], "set_params() (skfolio.prior.baseloadingmatrix method)": [[141, "skfolio.prior.BaseLoadingMatrix.set_params", false]], "set_params() (skfolio.prior.baseprior method)": [[142, "skfolio.prior.BasePrior.set_params", false]], "set_params() (skfolio.prior.blacklitterman method)": [[143, "skfolio.prior.BlackLitterman.set_params", false]], "set_params() (skfolio.prior.empiricalprior method)": [[144, "skfolio.prior.EmpiricalPrior.set_params", false]], "set_params() (skfolio.prior.factormodel method)": [[145, "skfolio.prior.FactorModel.set_params", false]], "set_params() (skfolio.prior.loadingmatrixregression method)": [[146, "skfolio.prior.LoadingMatrixRegression.set_params", false]], "set_params() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[148, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[149, "skfolio.uncertainty_set.BaseMuUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[150, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[151, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[152, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[153, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.set_params", false]], "set_portfolio_params() (skfolio.population.population method)": [[133, "skfolio.population.Population.set_portfolio_params", false]], "set_score_request() (skfolio.moments.graphicallassocv method)": [[111, "skfolio.moments.GraphicalLassoCV.set_score_request", false]], "set_score_request() (skfolio.moments.ledoitwolf method)": [[113, "skfolio.moments.LedoitWolf.set_score_request", false]], "set_score_request() (skfolio.moments.oas method)": [[114, "skfolio.moments.OAS.set_score_request", false]], "set_score_request() (skfolio.moments.shrunkcovariance method)": [[115, "skfolio.moments.ShrunkCovariance.set_score_request", false]], "shrunkcovariance (class in skfolio.moments)": [[115, "skfolio.moments.ShrunkCovariance", false]], "shrunkmu (class in skfolio.moments)": [[116, "skfolio.moments.ShrunkMu", false]], "shrunkmumethods (class in skfolio.moments)": [[117, "skfolio.moments.ShrunkMuMethods", false]], "skfolio": [[0, "module-0", false], [0, "module-1", false], [0, "module-2", false], [0, "module-3", false], [0, "module-4", false], [0, "module-5", false], [0, "module-6", false], [0, "module-7", false], [0, "module-skfolio", false]], "skfolio.measures": [[0, "module-skfolio.measures", false]], "skfolio.optimization.cluster": [[0, "module-skfolio.optimization.cluster", false]], "skfolio.optimization.convex": [[0, "module-skfolio.optimization.convex", false]], "skfolio.optimization.ensemble": [[0, "module-skfolio.optimization.ensemble", false]], "skfolio.optimization.naive": [[0, "module-skfolio.optimization.naive", false]], "skfolio.population": [[0, "module-skfolio.population", false]], "skfolio.portfolio": [[0, "module-skfolio.portfolio", false]], "sort() (skfolio.population.population method)": [[133, "skfolio.population.Population.sort", false]], "sort_measure() (skfolio.population.population method)": [[133, "skfolio.population.Population.sort_measure", false]], "spearmandistance (class in skfolio.distance)": [[63, "skfolio.distance.SpearmanDistance", false]], "split() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.split", false]], "split() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.split", false]], "split() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.split", false]], "split() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.split", false]], "split() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.split", false]], "split() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.split", false]], "split() (skfolio.model_selection.combinatorialpurgedcv method)": [[97, "skfolio.model_selection.CombinatorialPurgedCV.split", false]], "split() (skfolio.model_selection.walkforward method)": [[98, "skfolio.model_selection.WalkForward.split", false]], "split() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.split", false]], "split() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.split", false]], "splitlines() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.splitlines", false]], "splitlines() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.splitlines", false]], "splitlines() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.splitlines", false]], "splitlines() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.splitlines", false]], "splitlines() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.splitlines", false]], "splitlines() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.splitlines", false]], "splitlines() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.splitlines", false]], "splitlines() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.splitlines", false]], "sric (skfolio.portfolio.portfolio property)": [[136, "skfolio.portfolio.Portfolio.sric", false]], "stackingoptimization (class in skfolio.optimization)": [[132, "skfolio.optimization.StackingOptimization", false]], "standard_deviation() (in module skfolio.measures)": [[89, "skfolio.measures.standard_deviation", false]], "startswith() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.startswith", false]], "startswith() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.startswith", false]], "startswith() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.startswith", false]], "startswith() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.startswith", false]], "startswith() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.startswith", false]], "startswith() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.startswith", false]], "startswith() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.startswith", false]], "startswith() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.startswith", false]], "strip() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.strip", false]], "strip() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.strip", false]], "strip() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.strip", false]], "strip() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.strip", false]], "strip() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.strip", false]], "strip() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.strip", false]], "strip() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.strip", false]], "strip() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.strip", false]], "summary() (skfolio.population.population method)": [[133, "skfolio.population.Population.summary", false]], "summary() (skfolio.portfolio.baseportfolio method)": [[134, "skfolio.portfolio.BasePortfolio.summary", false]], "summary() (skfolio.portfolio.multiperiodportfolio method)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.summary", false]], "summary() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.summary", false]], "swapcase() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.swapcase", false]], "swapcase() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.swapcase", false]], "swapcase() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.swapcase", false]], "swapcase() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.swapcase", false]], "swapcase() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.swapcase", false]], "swapcase() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.swapcase", false]], "swapcase() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.swapcase", false]], "swapcase() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.swapcase", false]], "test_set_index (skfolio.model_selection.combinatorialpurgedcv property)": [[97, "skfolio.model_selection.CombinatorialPurgedCV.test_set_index", false]], "third_central_moment() (in module skfolio.measures)": [[90, "skfolio.measures.third_central_moment", false]], "title() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.title", false]], "title() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.title", false]], "title() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.title", false]], "title() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.title", false]], "title() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.title", false]], "title() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.title", false]], "title() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.title", false]], "title() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.title", false]], "transform() (skfolio.pre_selection.dropcorrelated method)": [[137, "skfolio.pre_selection.DropCorrelated.transform", false]], "transform() (skfolio.pre_selection.selectkextremes method)": [[138, "skfolio.pre_selection.SelectKExtremes.transform", false]], "transform() (skfolio.pre_selection.selectnondominated method)": [[139, "skfolio.pre_selection.SelectNonDominated.transform", false]], "translate() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.translate", false]], "translate() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.translate", false]], "translate() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.translate", false]], "translate() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.translate", false]], "translate() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.translate", false]], "translate() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.translate", false]], "translate() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.translate", false]], "translate() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.translate", false]], "ulcer_index() (in module skfolio.measures)": [[91, "skfolio.measures.ulcer_index", false]], "uncertaintyset (class in skfolio.uncertainty_set)": [[154, "skfolio.uncertainty_set.UncertaintySet", false]], "upper() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.upper", false]], "upper() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.upper", false]], "upper() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.upper", false]], "upper() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.upper", false]], "upper() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.upper", false]], "upper() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.upper", false]], "upper() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.upper", false]], "upper() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.upper", false]], "value_at_risk() (in module skfolio.measures)": [[92, "skfolio.measures.value_at_risk", false]], "variance() (in module skfolio.measures)": [[93, "skfolio.measures.variance", false]], "variance_from_assets() (skfolio.portfolio.portfolio method)": [[136, "skfolio.portfolio.Portfolio.variance_from_assets", false]], "walkforward (class in skfolio.model_selection)": [[98, "skfolio.model_selection.WalkForward", false]], "weights_per_observation (skfolio.portfolio.multiperiodportfolio property)": [[135, "skfolio.portfolio.MultiPeriodPortfolio.weights_per_observation", false]], "weights_per_observation (skfolio.portfolio.portfolio property)": [[136, "skfolio.portfolio.Portfolio.weights_per_observation", false]], "worst_realization() (in module skfolio.measures)": [[94, "skfolio.measures.worst_realization", false]], "zfill() (skfolio.cluster.linkagemethod method)": [[51, "skfolio.cluster.LinkageMethod.zfill", false]], "zfill() (skfolio.measures.basemeasure method)": [[64, "skfolio.measures.BaseMeasure.zfill", false]], "zfill() (skfolio.measures.extrariskmeasure method)": [[65, "skfolio.measures.ExtraRiskMeasure.zfill", false]], "zfill() (skfolio.measures.perfmeasure method)": [[66, "skfolio.measures.PerfMeasure.zfill", false]], "zfill() (skfolio.measures.ratiomeasure method)": [[67, "skfolio.measures.RatioMeasure.zfill", false]], "zfill() (skfolio.measures.riskmeasure method)": [[68, "skfolio.measures.RiskMeasure.zfill", false]], "zfill() (skfolio.moments.shrunkmumethods method)": [[117, "skfolio.moments.ShrunkMuMethods.zfill", false]], "zfill() (skfolio.optimization.objectivefunction method)": [[129, "skfolio.optimization.ObjectiveFunction.zfill", false]]}, "objects": {"": [[0, 0, 0, "module-7", "skfolio"]], "skfolio": [[0, 0, 0, "-", "measures"], [0, 0, 0, "-", "population"], [0, 0, 0, "-", "portfolio"]], "skfolio.cluster": [[50, 1, 1, "", "HierarchicalClustering"], [51, 1, 1, "", "LinkageMethod"]], "skfolio.cluster.HierarchicalClustering": [[50, 2, 1, "", "fit"], [50, 2, 1, "", "fit_predict"], [50, 2, 1, "", "get_metadata_routing"], [50, 2, 1, "", "get_params"], [50, 2, 1, "", "plot_dendrogram"], [50, 2, 1, "", "set_params"]], "skfolio.cluster.LinkageMethod": [[51, 2, 1, "", "capitalize"], [51, 2, 1, "", "casefold"], [51, 2, 1, "", "center"], [51, 2, 1, "", "count"], [51, 2, 1, "", "encode"], [51, 2, 1, "", "endswith"], [51, 2, 1, "", "expandtabs"], [51, 2, 1, "", "find"], [51, 2, 1, "", "format"], [51, 2, 1, "", "format_map"], [51, 2, 1, "", "has"], [51, 2, 1, "", "index"], [51, 2, 1, "", "isalnum"], [51, 2, 1, "", "isalpha"], [51, 2, 1, "", "isascii"], [51, 2, 1, "", "isdecimal"], [51, 2, 1, "", "isdigit"], [51, 2, 1, "", "isidentifier"], [51, 2, 1, "", "islower"], [51, 2, 1, "", "isnumeric"], [51, 2, 1, "", "isprintable"], [51, 2, 1, "", "isspace"], [51, 2, 1, "", "istitle"], [51, 2, 1, "", "isupper"], [51, 2, 1, "", "join"], [51, 2, 1, "", "ljust"], [51, 2, 1, "", "lower"], [51, 2, 1, "", "lstrip"], [51, 2, 1, "", "maketrans"], [51, 2, 1, "", "partition"], [51, 2, 1, "", "removeprefix"], [51, 2, 1, "", "removesuffix"], [51, 2, 1, "", "replace"], [51, 2, 1, "", "rfind"], [51, 2, 1, "", "rindex"], [51, 2, 1, "", "rjust"], [51, 2, 1, "", "rpartition"], [51, 2, 1, "", "rsplit"], [51, 2, 1, "", "rstrip"], [51, 2, 1, "", "split"], [51, 2, 1, "", "splitlines"], [51, 2, 1, "", "startswith"], [51, 2, 1, "", "strip"], [51, 2, 1, "", "swapcase"], [51, 2, 1, "", "title"], [51, 2, 1, "", "translate"], [51, 2, 1, "", "upper"], [51, 2, 1, "", "zfill"]], "skfolio.datasets": [[52, 3, 1, "", "load_factors_dataset"], [53, 3, 1, "", "load_ftse100_dataset"], [54, 3, 1, "", "load_nasdaq_dataset"], [55, 3, 1, "", "load_sp500_dataset"], [56, 3, 1, "", "load_sp500_index"]], "skfolio.distance": [[57, 1, 1, "", "BaseDistance"], [58, 1, 1, "", "CovarianceDistance"], [59, 1, 1, "", "DistanceCorrelation"], [60, 1, 1, "", "KendallDistance"], [61, 1, 1, "", "MutualInformation"], [62, 1, 1, "", "PearsonDistance"], [63, 1, 1, "", "SpearmanDistance"]], "skfolio.distance.BaseDistance": [[57, 2, 1, "", "fit"], [57, 2, 1, "", "get_metadata_routing"], [57, 2, 1, "", "get_params"], [57, 2, 1, "", "set_params"]], "skfolio.distance.CovarianceDistance": [[58, 2, 1, "", "fit"], [58, 2, 1, "", "get_metadata_routing"], [58, 2, 1, "", "get_params"], [58, 2, 1, "", "set_params"]], "skfolio.distance.DistanceCorrelation": [[59, 2, 1, "", "fit"], [59, 2, 1, "", "get_metadata_routing"], [59, 2, 1, "", "get_params"], [59, 2, 1, "", "set_params"]], "skfolio.distance.KendallDistance": [[60, 2, 1, "", "fit"], [60, 2, 1, "", "get_metadata_routing"], [60, 2, 1, "", "get_params"], [60, 2, 1, "", "set_params"]], "skfolio.distance.MutualInformation": [[61, 2, 1, "", "fit"], [61, 2, 1, "", "get_metadata_routing"], [61, 2, 1, "", "get_params"], [61, 2, 1, "", "set_params"]], "skfolio.distance.PearsonDistance": [[62, 2, 1, "", "fit"], [62, 2, 1, "", "get_metadata_routing"], [62, 2, 1, "", "get_params"], [62, 2, 1, "", "set_params"]], "skfolio.distance.SpearmanDistance": [[63, 2, 1, "", "fit"], [63, 2, 1, "", "get_metadata_routing"], [63, 2, 1, "", "get_params"], [63, 2, 1, "", "set_params"]], "skfolio.measures": [[64, 1, 1, "", "BaseMeasure"], [65, 1, 1, "", "ExtraRiskMeasure"], [66, 1, 1, "", "PerfMeasure"], [67, 1, 1, "", "RatioMeasure"], [68, 1, 1, "", "RiskMeasure"], [69, 3, 1, "", "average_drawdown"], [70, 3, 1, "", "cdar"], [71, 3, 1, "", "cvar"], [72, 3, 1, "", "drawdown_at_risk"], [73, 3, 1, "", "edar"], [74, 3, 1, "", "effective_number_assets"], [75, 3, 1, "", "entropic_risk_measure"], [76, 3, 1, "", "evar"], [77, 3, 1, "", "first_lower_partial_moment"], [78, 3, 1, "", "fourth_central_moment"], [79, 3, 1, "", "fourth_lower_partial_moment"], [80, 3, 1, "", "get_cumulative_returns"], [81, 3, 1, "", "get_drawdowns"], [82, 3, 1, "", "gini_mean_difference"], [83, 3, 1, "", "max_drawdown"], [84, 3, 1, "", "mean"], [85, 3, 1, "", "mean_absolute_deviation"], [86, 3, 1, "", "owa_gmd_weights"], [87, 3, 1, "", "semi_deviation"], [88, 3, 1, "", "semi_variance"], [89, 3, 1, "", "standard_deviation"], [90, 3, 1, "", "third_central_moment"], [91, 3, 1, "", "ulcer_index"], [92, 3, 1, "", "value_at_risk"], [93, 3, 1, "", "variance"], [94, 3, 1, "", "worst_realization"]], "skfolio.measures.BaseMeasure": [[64, 2, 1, "", "capitalize"], [64, 2, 1, "", "casefold"], [64, 2, 1, "", "center"], [64, 2, 1, "", "count"], [64, 2, 1, "", "encode"], [64, 2, 1, "", "endswith"], [64, 2, 1, "", "expandtabs"], [64, 2, 1, "", "find"], [64, 2, 1, "", "format"], [64, 2, 1, "", "format_map"], [64, 2, 1, "", "has"], [64, 2, 1, "", "index"], [64, 2, 1, "", "isalnum"], [64, 2, 1, "", "isalpha"], [64, 2, 1, "", "isascii"], [64, 2, 1, "", "isdecimal"], [64, 2, 1, "", "isdigit"], [64, 2, 1, "", "isidentifier"], [64, 2, 1, "", "islower"], [64, 2, 1, "", "isnumeric"], [64, 2, 1, "", "isprintable"], [64, 2, 1, "", "isspace"], [64, 2, 1, "", "istitle"], [64, 2, 1, "", "isupper"], [64, 2, 1, "", "join"], [64, 2, 1, "", "ljust"], [64, 2, 1, "", "lower"], [64, 2, 1, "", "lstrip"], [64, 2, 1, "", "maketrans"], [64, 2, 1, "", "partition"], [64, 2, 1, "", "removeprefix"], [64, 2, 1, "", "removesuffix"], [64, 2, 1, "", "replace"], [64, 2, 1, "", "rfind"], [64, 2, 1, "", "rindex"], [64, 2, 1, "", "rjust"], [64, 2, 1, "", "rpartition"], [64, 2, 1, "", "rsplit"], [64, 2, 1, "", "rstrip"], [64, 2, 1, "", "split"], [64, 2, 1, "", "splitlines"], [64, 2, 1, "", "startswith"], [64, 2, 1, "", "strip"], [64, 2, 1, "", "swapcase"], [64, 2, 1, "", "title"], [64, 2, 1, "", "translate"], [64, 2, 1, "", "upper"], [64, 2, 1, "", "zfill"]], "skfolio.measures.ExtraRiskMeasure": [[65, 2, 1, "", "capitalize"], [65, 2, 1, "", "casefold"], [65, 2, 1, "", "center"], [65, 2, 1, "", "count"], [65, 2, 1, "", "encode"], [65, 2, 1, "", "endswith"], [65, 2, 1, "", "expandtabs"], [65, 2, 1, "", "find"], [65, 2, 1, "", "format"], [65, 2, 1, "", "format_map"], [65, 2, 1, "", "has"], [65, 2, 1, "", "index"], [65, 2, 1, "", "isalnum"], [65, 2, 1, "", "isalpha"], [65, 2, 1, "", "isascii"], [65, 2, 1, "", "isdecimal"], [65, 2, 1, "", "isdigit"], [65, 2, 1, "", "isidentifier"], [65, 2, 1, "", "islower"], [65, 2, 1, "", "isnumeric"], [65, 2, 1, "", "isprintable"], [65, 2, 1, "", "isspace"], [65, 2, 1, "", "istitle"], [65, 2, 1, "", "isupper"], [65, 2, 1, "", "join"], [65, 2, 1, "", "ljust"], [65, 2, 1, "", "lower"], [65, 2, 1, "", "lstrip"], [65, 2, 1, "", "maketrans"], [65, 2, 1, "", "partition"], [65, 2, 1, "", "removeprefix"], [65, 2, 1, "", "removesuffix"], [65, 2, 1, "", "replace"], [65, 2, 1, "", "rfind"], [65, 2, 1, "", "rindex"], [65, 2, 1, "", "rjust"], [65, 2, 1, "", "rpartition"], [65, 2, 1, "", "rsplit"], [65, 2, 1, "", "rstrip"], [65, 2, 1, "", "split"], [65, 2, 1, "", "splitlines"], [65, 2, 1, "", "startswith"], [65, 2, 1, "", "strip"], [65, 2, 1, "", "swapcase"], [65, 2, 1, "", "title"], [65, 2, 1, "", "translate"], [65, 2, 1, "", "upper"], [65, 2, 1, "", "zfill"]], "skfolio.measures.PerfMeasure": [[66, 2, 1, "", "capitalize"], [66, 2, 1, "", "casefold"], [66, 2, 1, "", "center"], [66, 2, 1, "", "count"], [66, 2, 1, "", "encode"], [66, 2, 1, "", "endswith"], [66, 2, 1, "", "expandtabs"], [66, 2, 1, "", "find"], [66, 2, 1, "", "format"], [66, 2, 1, "", "format_map"], [66, 2, 1, "", "has"], [66, 2, 1, "", "index"], [66, 2, 1, "", "isalnum"], [66, 2, 1, "", "isalpha"], [66, 2, 1, "", "isascii"], [66, 2, 1, "", "isdecimal"], [66, 2, 1, "", "isdigit"], [66, 2, 1, "", "isidentifier"], [66, 2, 1, "", "islower"], [66, 2, 1, "", "isnumeric"], [66, 2, 1, "", "isprintable"], [66, 2, 1, "", "isspace"], [66, 2, 1, "", "istitle"], [66, 2, 1, "", "isupper"], [66, 2, 1, "", "join"], [66, 2, 1, "", "ljust"], [66, 2, 1, "", "lower"], [66, 2, 1, "", "lstrip"], [66, 2, 1, "", "maketrans"], [66, 2, 1, "", "partition"], [66, 2, 1, "", "removeprefix"], [66, 2, 1, "", "removesuffix"], [66, 2, 1, "", "replace"], [66, 2, 1, "", "rfind"], [66, 2, 1, "", "rindex"], [66, 2, 1, "", "rjust"], [66, 2, 1, "", "rpartition"], [66, 2, 1, "", "rsplit"], [66, 2, 1, "", "rstrip"], [66, 2, 1, "", "split"], [66, 2, 1, "", "splitlines"], [66, 2, 1, "", "startswith"], [66, 2, 1, "", "strip"], [66, 2, 1, "", "swapcase"], [66, 2, 1, "", "title"], [66, 2, 1, "", "translate"], [66, 2, 1, "", "upper"], [66, 2, 1, "", "zfill"]], "skfolio.measures.RatioMeasure": [[67, 2, 1, "", "capitalize"], [67, 2, 1, "", "casefold"], [67, 2, 1, "", "center"], [67, 2, 1, "", "count"], [67, 2, 1, "", "encode"], [67, 2, 1, "", "endswith"], [67, 2, 1, "", "expandtabs"], [67, 2, 1, "", "find"], [67, 2, 1, "", "format"], [67, 2, 1, "", "format_map"], [67, 2, 1, "", "has"], [67, 2, 1, "", "index"], [67, 2, 1, "", "isalnum"], [67, 2, 1, "", "isalpha"], [67, 2, 1, "", "isascii"], [67, 2, 1, "", "isdecimal"], [67, 2, 1, "", "isdigit"], [67, 2, 1, "", "isidentifier"], [67, 2, 1, "", "islower"], [67, 2, 1, "", "isnumeric"], [67, 2, 1, "", "isprintable"], [67, 2, 1, "", "isspace"], [67, 2, 1, "", "istitle"], [67, 2, 1, "", "isupper"], [67, 2, 1, "", "join"], [67, 2, 1, "", "ljust"], [67, 2, 1, "", "lower"], [67, 2, 1, "", "lstrip"], [67, 2, 1, "", "maketrans"], [67, 2, 1, "", "partition"], [67, 2, 1, "", "removeprefix"], [67, 2, 1, "", "removesuffix"], [67, 2, 1, "", "replace"], [67, 2, 1, "", "rfind"], [67, 2, 1, "", "rindex"], [67, 2, 1, "", "rjust"], [67, 2, 1, "", "rpartition"], [67, 2, 1, "", "rsplit"], [67, 2, 1, "", "rstrip"], [67, 2, 1, "", "split"], [67, 2, 1, "", "splitlines"], [67, 2, 1, "", "startswith"], [67, 2, 1, "", "strip"], [67, 2, 1, "", "swapcase"], [67, 2, 1, "", "title"], [67, 2, 1, "", "translate"], [67, 2, 1, "", "upper"], [67, 2, 1, "", "zfill"]], "skfolio.measures.RiskMeasure": [[68, 2, 1, "", "capitalize"], [68, 2, 1, "", "casefold"], [68, 2, 1, "", "center"], [68, 2, 1, "", "count"], [68, 2, 1, "", "encode"], [68, 2, 1, "", "endswith"], [68, 2, 1, "", "expandtabs"], [68, 2, 1, "", "find"], [68, 2, 1, "", "format"], [68, 2, 1, "", "format_map"], [68, 2, 1, "", "has"], [68, 2, 1, "", "index"], [68, 2, 1, "", "isalnum"], [68, 2, 1, "", "isalpha"], [68, 2, 1, "", "isascii"], [68, 2, 1, "", "isdecimal"], [68, 2, 1, "", "isdigit"], [68, 2, 1, "", "isidentifier"], [68, 2, 1, "", "islower"], [68, 2, 1, "", "isnumeric"], [68, 2, 1, "", "isprintable"], [68, 2, 1, "", "isspace"], [68, 2, 1, "", "istitle"], [68, 2, 1, "", "isupper"], [68, 2, 1, "", "join"], [68, 2, 1, "", "ljust"], [68, 2, 1, "", "lower"], [68, 2, 1, "", "lstrip"], [68, 2, 1, "", "maketrans"], [68, 2, 1, "", "partition"], [68, 2, 1, "", "removeprefix"], [68, 2, 1, "", "removesuffix"], [68, 2, 1, "", "replace"], [68, 2, 1, "", "rfind"], [68, 2, 1, "", "rindex"], [68, 2, 1, "", "rjust"], [68, 2, 1, "", "rpartition"], [68, 2, 1, "", "rsplit"], [68, 2, 1, "", "rstrip"], [68, 2, 1, "", "split"], [68, 2, 1, "", "splitlines"], [68, 2, 1, "", "startswith"], [68, 2, 1, "", "strip"], [68, 2, 1, "", "swapcase"], [68, 2, 1, "", "title"], [68, 2, 1, "", "translate"], [68, 2, 1, "", "upper"], [68, 2, 1, "", "zfill"]], "skfolio.metrics": [[95, 3, 1, "", "make_scorer"]], "skfolio.model_selection": [[96, 1, 1, "", "BaseCombinatorialCV"], [97, 1, 1, "", "CombinatorialPurgedCV"], [98, 1, 1, "", "WalkForward"], [99, 3, 1, "", "cross_val_predict"], [100, 3, 1, "", "optimal_folds_number"]], "skfolio.model_selection.BaseCombinatorialCV": [[96, 2, 1, "", "get_path_ids"]], "skfolio.model_selection.CombinatorialPurgedCV": [[97, 4, 1, "", "binary_train_test_sets"], [97, 2, 1, "", "get_path_ids"], [97, 4, 1, "", "n_splits"], [97, 4, 1, "", "n_test_paths"], [97, 2, 1, "", "plot_train_test_folds"], [97, 2, 1, "", "plot_train_test_index"], [97, 4, 1, "", "recombined_paths"], [97, 2, 1, "", "split"], [97, 4, 1, "", "test_set_index"]], "skfolio.model_selection.WalkForward": [[98, 2, 1, "", "get_metadata_routing"], [98, 2, 1, "", "get_n_splits"], [98, 2, 1, "", "split"]], "skfolio.moments": [[101, 1, 1, "", "BaseCovariance"], [102, 1, 1, "", "BaseMu"], [103, 1, 1, "", "DenoiseCovariance"], [104, 1, 1, "", "DetoneCovariance"], [105, 1, 1, "", "EWCovariance"], [106, 1, 1, "", "EWMu"], [107, 1, 1, "", "EmpiricalCovariance"], [108, 1, 1, "", "EmpiricalMu"], [109, 1, 1, "", "EquilibriumMu"], [110, 1, 1, "", "GerberCovariance"], [111, 1, 1, "", "GraphicalLassoCV"], [112, 1, 1, "", "ImpliedCovariance"], [113, 1, 1, "", "LedoitWolf"], [114, 1, 1, "", "OAS"], [115, 1, 1, "", "ShrunkCovariance"], [116, 1, 1, "", "ShrunkMu"], [117, 1, 1, "", "ShrunkMuMethods"]], "skfolio.moments.BaseCovariance": [[101, 2, 1, "", "get_metadata_routing"], [101, 2, 1, "", "get_params"], [101, 2, 1, "", "set_params"]], "skfolio.moments.BaseMu": [[102, 2, 1, "", "get_metadata_routing"], [102, 2, 1, "", "get_params"], [102, 2, 1, "", "set_params"]], "skfolio.moments.DenoiseCovariance": [[103, 2, 1, "", "fit"], [103, 2, 1, "", "get_metadata_routing"], [103, 2, 1, "", "get_params"], [103, 2, 1, "", "set_params"]], "skfolio.moments.DetoneCovariance": [[104, 2, 1, "", "fit"], [104, 2, 1, "", "get_metadata_routing"], [104, 2, 1, "", "get_params"], [104, 2, 1, "", "set_params"]], "skfolio.moments.EWCovariance": [[105, 2, 1, "", "fit"], [105, 2, 1, "", "get_metadata_routing"], [105, 2, 1, "", "get_params"], [105, 2, 1, "", "set_params"]], "skfolio.moments.EWMu": [[106, 2, 1, "", "fit"], [106, 2, 1, "", "get_metadata_routing"], [106, 2, 1, "", "get_params"], [106, 2, 1, "", "set_params"]], "skfolio.moments.EmpiricalCovariance": [[107, 2, 1, "", "fit"], [107, 2, 1, "", "get_metadata_routing"], [107, 2, 1, "", "get_params"], [107, 2, 1, "", "set_params"]], "skfolio.moments.EmpiricalMu": [[108, 2, 1, "", "fit"], [108, 2, 1, "", "get_metadata_routing"], [108, 2, 1, "", "get_params"], [108, 2, 1, "", "set_params"]], "skfolio.moments.EquilibriumMu": [[109, 2, 1, "", "fit"], [109, 2, 1, "", "get_metadata_routing"], [109, 2, 1, "", "get_params"], [109, 2, 1, "", "set_params"]], "skfolio.moments.GerberCovariance": [[110, 2, 1, "", "fit"], [110, 2, 1, "", "get_metadata_routing"], [110, 2, 1, "", "get_params"], [110, 2, 1, "", "set_params"]], "skfolio.moments.GraphicalLassoCV": [[111, 2, 1, "", "error_norm"], [111, 2, 1, "", "fit"], [111, 2, 1, "", "get_metadata_routing"], [111, 2, 1, "", "get_params"], [111, 2, 1, "", "get_precision"], [111, 2, 1, "", "mahalanobis"], [111, 2, 1, "", "score"], [111, 2, 1, "", "set_params"], [111, 2, 1, "", "set_score_request"]], "skfolio.moments.ImpliedCovariance": [[112, 2, 1, "", "fit"], [112, 2, 1, "", "get_metadata_routing"], [112, 2, 1, "", "get_params"], [112, 2, 1, "", "set_fit_request"], [112, 2, 1, "", "set_params"]], "skfolio.moments.LedoitWolf": [[113, 2, 1, "", "error_norm"], [113, 2, 1, "", "fit"], [113, 2, 1, "", "get_metadata_routing"], [113, 2, 1, "", "get_params"], [113, 2, 1, "", "get_precision"], [113, 2, 1, "", "mahalanobis"], [113, 2, 1, "", "score"], [113, 2, 1, "", "set_params"], [113, 2, 1, "", "set_score_request"]], "skfolio.moments.OAS": [[114, 2, 1, "", "error_norm"], [114, 2, 1, "", "fit"], [114, 2, 1, "", "get_metadata_routing"], [114, 2, 1, "", "get_params"], [114, 2, 1, "", "get_precision"], [114, 2, 1, "", "mahalanobis"], [114, 2, 1, "", "score"], [114, 2, 1, "", "set_params"], [114, 2, 1, "", "set_score_request"]], "skfolio.moments.ShrunkCovariance": [[115, 2, 1, "", "error_norm"], [115, 2, 1, "", "fit"], [115, 2, 1, "", "get_metadata_routing"], [115, 2, 1, "", "get_params"], [115, 2, 1, "", "get_precision"], [115, 2, 1, "", "mahalanobis"], [115, 2, 1, "", "score"], [115, 2, 1, "", "set_params"], [115, 2, 1, "", "set_score_request"]], "skfolio.moments.ShrunkMu": [[116, 2, 1, "", "fit"], [116, 2, 1, "", "get_metadata_routing"], [116, 2, 1, "", "get_params"], [116, 2, 1, "", "set_params"]], "skfolio.moments.ShrunkMuMethods": [[117, 2, 1, "", "capitalize"], [117, 2, 1, "", "casefold"], [117, 2, 1, "", "center"], [117, 2, 1, "", "count"], [117, 2, 1, "", "encode"], [117, 2, 1, "", "endswith"], [117, 2, 1, "", "expandtabs"], [117, 2, 1, "", "find"], [117, 2, 1, "", "format"], [117, 2, 1, "", "format_map"], [117, 2, 1, "", "has"], [117, 2, 1, "", "index"], [117, 2, 1, "", "isalnum"], [117, 2, 1, "", "isalpha"], [117, 2, 1, "", "isascii"], [117, 2, 1, "", "isdecimal"], [117, 2, 1, "", "isdigit"], [117, 2, 1, "", "isidentifier"], [117, 2, 1, "", "islower"], [117, 2, 1, "", "isnumeric"], [117, 2, 1, "", "isprintable"], [117, 2, 1, "", "isspace"], [117, 2, 1, "", "istitle"], [117, 2, 1, "", "isupper"], [117, 2, 1, "", "join"], [117, 2, 1, "", "ljust"], [117, 2, 1, "", "lower"], [117, 2, 1, "", "lstrip"], [117, 2, 1, "", "maketrans"], [117, 2, 1, "", "partition"], [117, 2, 1, "", "removeprefix"], [117, 2, 1, "", "removesuffix"], [117, 2, 1, "", "replace"], [117, 2, 1, "", "rfind"], [117, 2, 1, "", "rindex"], [117, 2, 1, "", "rjust"], [117, 2, 1, "", "rpartition"], [117, 2, 1, "", "rsplit"], [117, 2, 1, "", "rstrip"], [117, 2, 1, "", "split"], [117, 2, 1, "", "splitlines"], [117, 2, 1, "", "startswith"], [117, 2, 1, "", "strip"], [117, 2, 1, "", "swapcase"], [117, 2, 1, "", "title"], [117, 2, 1, "", "translate"], [117, 2, 1, "", "upper"], [117, 2, 1, "", "zfill"]], "skfolio.optimization": [[118, 1, 1, "", "BaseComposition"], [119, 1, 1, "", "BaseHierarchicalOptimization"], [120, 1, 1, "", "ConvexOptimization"], [121, 1, 1, "", "DistributionallyRobustCVaR"], [122, 1, 1, "", "EqualWeighted"], [123, 1, 1, "", "HierarchicalEqualRiskContribution"], [124, 1, 1, "", "HierarchicalRiskParity"], [125, 1, 1, "", "InverseVolatility"], [126, 1, 1, "", "MaximumDiversification"], [127, 1, 1, "", "MeanRisk"], [128, 1, 1, "", "NestedClustersOptimization"], [129, 1, 1, "", "ObjectiveFunction"], [130, 1, 1, "", "Random"], [131, 1, 1, "", "RiskBudgeting"], [132, 1, 1, "", "StackingOptimization"], [0, 0, 0, "-", "cluster"], [0, 0, 0, "-", "convex"], [0, 0, 0, "-", "ensemble"], [0, 0, 0, "-", "naive"]], "skfolio.optimization.BaseComposition": [[118, 2, 1, "", "get_metadata_routing"], [118, 2, 1, "", "get_params"], [118, 2, 1, "", "set_params"]], "skfolio.optimization.BaseHierarchicalOptimization": [[119, 2, 1, "", "fit_predict"], [119, 2, 1, "", "get_metadata_routing"], [119, 2, 1, "", "get_params"], [119, 2, 1, "", "predict"], [119, 2, 1, "", "score"], [119, 2, 1, "", "set_params"]], "skfolio.optimization.ConvexOptimization": [[120, 2, 1, "", "fit_predict"], [120, 2, 1, "", "get_metadata_routing"], [120, 2, 1, "", "get_params"], [120, 2, 1, "", "predict"], [120, 2, 1, "", "score"], [120, 2, 1, "", "set_params"]], "skfolio.optimization.DistributionallyRobustCVaR": [[121, 2, 1, "", "fit"], [121, 2, 1, "", "fit_predict"], [121, 2, 1, "", "get_metadata_routing"], [121, 2, 1, "", "get_params"], [121, 2, 1, "", "predict"], [121, 2, 1, "", "score"], [121, 2, 1, "", "set_params"]], "skfolio.optimization.EqualWeighted": [[122, 2, 1, "", "fit"], [122, 2, 1, "", "fit_predict"], [122, 2, 1, "", "get_metadata_routing"], [122, 2, 1, "", "get_params"], [122, 2, 1, "", "predict"], [122, 2, 1, "", "score"], [122, 2, 1, "", "set_params"]], "skfolio.optimization.HierarchicalEqualRiskContribution": [[123, 2, 1, "", "fit"], [123, 2, 1, "", "fit_predict"], [123, 2, 1, "", "get_metadata_routing"], [123, 2, 1, "", "get_params"], [123, 2, 1, "", "predict"], [123, 2, 1, "", "score"], [123, 2, 1, "", "set_params"]], "skfolio.optimization.HierarchicalRiskParity": [[124, 2, 1, "", "fit"], [124, 2, 1, "", "fit_predict"], [124, 2, 1, "", "get_metadata_routing"], [124, 2, 1, "", "get_params"], [124, 2, 1, "", "predict"], [124, 2, 1, "", "score"], [124, 2, 1, "", "set_params"]], "skfolio.optimization.InverseVolatility": [[125, 2, 1, "", "fit"], [125, 2, 1, "", "fit_predict"], [125, 2, 1, "", "get_metadata_routing"], [125, 2, 1, "", "get_params"], [125, 2, 1, "", "predict"], [125, 2, 1, "", "score"], [125, 2, 1, "", "set_params"]], "skfolio.optimization.MaximumDiversification": [[126, 2, 1, "", "fit"], [126, 2, 1, "", "fit_predict"], [126, 2, 1, "", "get_metadata_routing"], [126, 2, 1, "", "get_params"], [126, 2, 1, "", "predict"], [126, 2, 1, "", "score"], [126, 2, 1, "", "set_params"]], "skfolio.optimization.MeanRisk": [[127, 2, 1, "", "fit"], [127, 2, 1, "", "fit_predict"], [127, 2, 1, "", "get_metadata_routing"], [127, 2, 1, "", "get_params"], [127, 2, 1, "", "predict"], [127, 2, 1, "", "score"], [127, 2, 1, "", "set_params"]], "skfolio.optimization.NestedClustersOptimization": [[128, 2, 1, "", "fit"], [128, 2, 1, "", "fit_predict"], [128, 2, 1, "", "get_metadata_routing"], [128, 2, 1, "", "get_params"], [128, 2, 1, "", "predict"], [128, 2, 1, "", "score"], [128, 2, 1, "", "set_params"]], "skfolio.optimization.ObjectiveFunction": [[129, 2, 1, "", "capitalize"], [129, 2, 1, "", "casefold"], [129, 2, 1, "", "center"], [129, 2, 1, "", "count"], [129, 2, 1, "", "encode"], [129, 2, 1, "", "endswith"], [129, 2, 1, "", "expandtabs"], [129, 2, 1, "", "find"], [129, 2, 1, "", "format"], [129, 2, 1, "", "format_map"], [129, 2, 1, "", "has"], [129, 2, 1, "", "index"], [129, 2, 1, "", "isalnum"], [129, 2, 1, "", "isalpha"], [129, 2, 1, "", "isascii"], [129, 2, 1, "", "isdecimal"], [129, 2, 1, "", "isdigit"], [129, 2, 1, "", "isidentifier"], [129, 2, 1, "", "islower"], [129, 2, 1, "", "isnumeric"], [129, 2, 1, "", "isprintable"], [129, 2, 1, "", "isspace"], [129, 2, 1, "", "istitle"], [129, 2, 1, "", "isupper"], [129, 2, 1, "", "join"], [129, 2, 1, "", "ljust"], [129, 2, 1, "", "lower"], [129, 2, 1, "", "lstrip"], [129, 2, 1, "", "maketrans"], [129, 2, 1, "", "partition"], [129, 2, 1, "", "removeprefix"], [129, 2, 1, "", "removesuffix"], [129, 2, 1, "", "replace"], [129, 2, 1, "", "rfind"], [129, 2, 1, "", "rindex"], [129, 2, 1, "", "rjust"], [129, 2, 1, "", "rpartition"], [129, 2, 1, "", "rsplit"], [129, 2, 1, "", "rstrip"], [129, 2, 1, "", "split"], [129, 2, 1, "", "splitlines"], [129, 2, 1, "", "startswith"], [129, 2, 1, "", "strip"], [129, 2, 1, "", "swapcase"], [129, 2, 1, "", "title"], [129, 2, 1, "", "translate"], [129, 2, 1, "", "upper"], [129, 2, 1, "", "zfill"]], "skfolio.optimization.Random": [[130, 2, 1, "", "fit"], [130, 2, 1, "", "fit_predict"], [130, 2, 1, "", "get_metadata_routing"], [130, 2, 1, "", "get_params"], [130, 2, 1, "", "predict"], [130, 2, 1, "", "score"], [130, 2, 1, "", "set_params"]], "skfolio.optimization.RiskBudgeting": [[131, 2, 1, "", "fit"], [131, 2, 1, "", "fit_predict"], [131, 2, 1, "", "get_metadata_routing"], [131, 2, 1, "", "get_params"], [131, 2, 1, "", "predict"], [131, 2, 1, "", "score"], [131, 2, 1, "", "set_params"]], "skfolio.optimization.StackingOptimization": [[132, 2, 1, "", "fit"], [132, 2, 1, "", "fit_predict"], [132, 2, 1, "", "get_metadata_routing"], [132, 2, 1, "", "get_params"], [132, 4, 1, "", "named_estimators"], [132, 2, 1, "", "predict"], [132, 2, 1, "", "score"], [132, 2, 1, "", "set_params"]], "skfolio.population": [[133, 1, 1, "", "Population"]], "skfolio.population.Population": [[133, 2, 1, "", "append"], [133, 2, 1, "", "clear"], [133, 2, 1, "", "composition"], [133, 2, 1, "", "contribution"], [133, 2, 1, "", "copy"], [133, 2, 1, "", "count"], [133, 2, 1, "", "extend"], [133, 2, 1, "", "filter"], [133, 2, 1, "", "index"], [133, 2, 1, "", "insert"], [133, 2, 1, "", "max_measure"], [133, 2, 1, "", "measures"], [133, 2, 1, "", "measures_mean"], [133, 2, 1, "", "measures_std"], [133, 2, 1, "", "min_measure"], [133, 2, 1, "", "non_denominated_sort"], [133, 2, 1, "", "plot_composition"], [133, 2, 1, "", "plot_contribution"], [133, 2, 1, "", "plot_cumulative_returns"], [133, 2, 1, "", "plot_distribution"], [133, 2, 1, "", "plot_measures"], [133, 2, 1, "", "plot_rolling_measure"], [133, 2, 1, "", "pop"], [133, 2, 1, "", "quantile"], [133, 2, 1, "", "remove"], [133, 2, 1, "", "reverse"], [133, 2, 1, "", "rolling_measure"], [133, 2, 1, "", "set_portfolio_params"], [133, 2, 1, "", "sort"], [133, 2, 1, "", "sort_measure"], [133, 2, 1, "", "summary"]], "skfolio.portfolio": [[134, 1, 1, "", "BasePortfolio"], [135, 1, 1, "", "MultiPeriodPortfolio"], [136, 1, 1, "", "Portfolio"]], "skfolio.portfolio.BasePortfolio": [[134, 4, 1, "", "annualized_factor"], [134, 2, 1, "", "clear"], [134, 4, 1, "", "composition"], [134, 2, 1, "", "contribution"], [134, 2, 1, "", "copy"], [134, 5, 1, "", "cumulative_returns"], [134, 4, 1, "", "cumulative_returns_df"], [134, 2, 1, "", "dominates"], [134, 5, 1, "", "drawdowns"], [134, 5, 1, "", "fitness"], [134, 4, 1, "", "fitness_measures"], [134, 2, 1, "", "get_measure"], [134, 4, 1, "", "measures_df"], [134, 4, 1, "", "n_observations"], [134, 2, 1, "", "plot_composition"], [134, 2, 1, "", "plot_contribution"], [134, 2, 1, "", "plot_cumulative_returns"], [134, 2, 1, "", "plot_returns"], [134, 2, 1, "", "plot_rolling_measure"], [134, 4, 1, "", "returns_df"], [134, 2, 1, "", "rolling_measure"], [134, 2, 1, "", "summary"]], "skfolio.portfolio.MultiPeriodPortfolio": [[135, 4, 1, "", "annualized_factor"], [135, 2, 1, "", "append"], [135, 4, 1, "", "assets"], [135, 2, 1, "", "clear"], [135, 4, 1, "", "composition"], [135, 2, 1, "", "contribution"], [135, 2, 1, "", "copy"], [135, 5, 1, "", "cumulative_returns"], [135, 4, 1, "", "cumulative_returns_df"], [135, 2, 1, "", "dominates"], [135, 5, 1, "", "drawdowns"], [135, 5, 1, "", "fitness"], [135, 4, 1, "", "fitness_measures"], [135, 2, 1, "", "get_measure"], [135, 4, 1, "", "measures_df"], [135, 4, 1, "", "n_observations"], [135, 2, 1, "", "plot_composition"], [135, 2, 1, "", "plot_contribution"], [135, 2, 1, "", "plot_cumulative_returns"], [135, 2, 1, "", "plot_returns"], [135, 2, 1, "", "plot_rolling_measure"], [135, 4, 1, "", "portfolios"], [135, 4, 1, "", "returns_df"], [135, 2, 1, "", "rolling_measure"], [135, 2, 1, "", "summary"], [135, 4, 1, "", "weights_per_observation"]], "skfolio.portfolio.Portfolio": [[136, 4, 1, "", "annualized_factor"], [136, 2, 1, "", "clear"], [136, 4, 1, "", "composition"], [136, 2, 1, "", "contribution"], [136, 2, 1, "", "copy"], [136, 5, 1, "", "cumulative_returns"], [136, 4, 1, "", "cumulative_returns_df"], [136, 4, 1, "", "diversification"], [136, 2, 1, "", "dominates"], [136, 5, 1, "", "drawdowns"], [136, 4, 1, "", "effective_number_assets"], [136, 2, 1, "", "expected_returns_from_assets"], [136, 5, 1, "", "fitness"], [136, 4, 1, "", "fitness_measures"], [136, 2, 1, "", "get_measure"], [136, 2, 1, "", "get_weight"], [136, 4, 1, "", "measures_df"], [136, 4, 1, "", "n_observations"], [136, 5, 1, "", "nonzero_assets"], [136, 5, 1, "", "nonzero_assets_index"], [136, 2, 1, "", "plot_composition"], [136, 2, 1, "", "plot_contribution"], [136, 2, 1, "", "plot_cumulative_returns"], [136, 2, 1, "", "plot_returns"], [136, 2, 1, "", "plot_rolling_measure"], [136, 4, 1, "", "returns_df"], [136, 2, 1, "", "rolling_measure"], [136, 4, 1, "", "sric"], [136, 2, 1, "", "summary"], [136, 2, 1, "", "variance_from_assets"], [136, 4, 1, "", "weights_per_observation"]], "skfolio.pre_selection": [[137, 1, 1, "", "DropCorrelated"], [138, 1, 1, "", "SelectKExtremes"], [139, 1, 1, "", "SelectNonDominated"]], "skfolio.pre_selection.DropCorrelated": [[137, 2, 1, "", "fit"], [137, 2, 1, "", "fit_transform"], [137, 2, 1, "", "get_feature_names_out"], [137, 2, 1, "", "get_metadata_routing"], [137, 2, 1, "", "get_params"], [137, 2, 1, "", "get_support"], [137, 2, 1, "", "inverse_transform"], [137, 2, 1, "", "set_output"], [137, 2, 1, "", "set_params"], [137, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectKExtremes": [[138, 2, 1, "", "fit"], [138, 2, 1, "", "fit_transform"], [138, 2, 1, "", "get_feature_names_out"], [138, 2, 1, "", "get_metadata_routing"], [138, 2, 1, "", "get_params"], [138, 2, 1, "", "get_support"], [138, 2, 1, "", "inverse_transform"], [138, 2, 1, "", "set_output"], [138, 2, 1, "", "set_params"], [138, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectNonDominated": [[139, 2, 1, "", "fit"], [139, 2, 1, "", "fit_transform"], [139, 2, 1, "", "get_feature_names_out"], [139, 2, 1, "", "get_metadata_routing"], [139, 2, 1, "", "get_params"], [139, 2, 1, "", "get_support"], [139, 2, 1, "", "inverse_transform"], [139, 2, 1, "", "set_output"], [139, 2, 1, "", "set_params"], [139, 2, 1, "", "transform"]], "skfolio.preprocessing": [[140, 3, 1, "", "prices_to_returns"]], "skfolio.prior": [[141, 1, 1, "", "BaseLoadingMatrix"], [142, 1, 1, "", "BasePrior"], [143, 1, 1, "", "BlackLitterman"], [144, 1, 1, "", "EmpiricalPrior"], [145, 1, 1, "", "FactorModel"], [146, 1, 1, "", "LoadingMatrixRegression"], [147, 1, 1, "", "PriorModel"]], "skfolio.prior.BaseLoadingMatrix": [[141, 2, 1, "", "get_metadata_routing"], [141, 2, 1, "", "get_params"], [141, 2, 1, "", "set_params"]], "skfolio.prior.BasePrior": [[142, 2, 1, "", "get_metadata_routing"], [142, 2, 1, "", "get_params"], [142, 2, 1, "", "set_params"]], "skfolio.prior.BlackLitterman": [[143, 2, 1, "", "fit"], [143, 2, 1, "", "get_metadata_routing"], [143, 2, 1, "", "get_params"], [143, 2, 1, "", "set_params"]], "skfolio.prior.EmpiricalPrior": [[144, 2, 1, "", "fit"], [144, 2, 1, "", "get_metadata_routing"], [144, 2, 1, "", "get_params"], [144, 2, 1, "", "set_params"]], "skfolio.prior.FactorModel": [[145, 2, 1, "", "fit"], [145, 2, 1, "", "get_metadata_routing"], [145, 2, 1, "", "get_params"], [145, 2, 1, "", "set_params"]], "skfolio.prior.LoadingMatrixRegression": [[146, 2, 1, "", "fit"], [146, 2, 1, "", "get_metadata_routing"], [146, 2, 1, "", "get_params"], [146, 2, 1, "", "set_params"]], "skfolio.uncertainty_set": [[148, 1, 1, "", "BaseCovarianceUncertaintySet"], [149, 1, 1, "", "BaseMuUncertaintySet"], [150, 1, 1, "", "BootstrapCovarianceUncertaintySet"], [151, 1, 1, "", "BootstrapMuUncertaintySet"], [152, 1, 1, "", "EmpiricalCovarianceUncertaintySet"], [153, 1, 1, "", "EmpiricalMuUncertaintySet"], [154, 1, 1, "", "UncertaintySet"]], "skfolio.uncertainty_set.BaseCovarianceUncertaintySet": [[148, 2, 1, "", "get_metadata_routing"], [148, 2, 1, "", "get_params"], [148, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BaseMuUncertaintySet": [[149, 2, 1, "", "get_metadata_routing"], [149, 2, 1, "", "get_params"], [149, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet": [[150, 2, 1, "", "fit"], [150, 2, 1, "", "get_metadata_routing"], [150, 2, 1, "", "get_params"], [150, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BootstrapMuUncertaintySet": [[151, 2, 1, "", "fit"], [151, 2, 1, "", "get_metadata_routing"], [151, 2, 1, "", "get_params"], [151, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet": [[152, 2, 1, "", "fit"], [152, 2, 1, "", "get_metadata_routing"], [152, 2, 1, "", "get_params"], [152, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.EmpiricalMuUncertaintySet": [[153, 2, 1, "", "fit"], [153, 2, 1, "", "get_metadata_routing"], [153, 2, 1, "", "get_params"], [153, 2, 1, "", "set_params"]], "skfolio.utils.stats": [[155, 3, 1, "", "NBinsMethod"], [156, 3, 1, "", "assert_is_distance"], [157, 3, 1, "", "assert_is_square"], [158, 3, 1, "", "assert_is_symmetric"], [159, 3, 1, "", "commutation_matrix"], [160, 3, 1, "", "compute_optimal_n_clusters"], [161, 3, 1, "", "corr_to_cov"], [162, 3, 1, "", "cov_nearest"], [163, 3, 1, "", "cov_to_corr"], [164, 3, 1, "", "is_cholesky_dec"], [165, 3, 1, "", "n_bins_freedman"], [166, 3, 1, "", "n_bins_knuth"], [167, 3, 1, "", "rand_weights"], [168, 3, 1, "", "rand_weights_dirichlet"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "terms": {"": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 160, 166, 169, 172, 173, 174, 175, 176, 180, 182, 183, 184, 185, 186, 187], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 46, 47, 49, 55, 58, 59, 60, 62, 63, 70, 71, 72, 73, 75, 76, 80, 92, 97, 98, 99, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123, 124, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 139, 140, 143, 150, 151, 152, 153, 154, 167, 169, 170, 173, 177, 178, 181, 182, 183, 184, 185, 186, 187], "00": [7, 8, 9, 14, 15, 16, 18, 19, 20, 21, 23, 24, 27, 29, 34, 36, 40, 41, 43, 47, 49, 170], "000": [46, 49], "0000": [51, 55, 64, 65, 66, 67, 68, 117, 129], "000000": [7, 8], "0000000000000002": 11, "000000000000002": 11, "0000001319361242": 9, "000005": 40, "000006": [9, 40], "000007": [9, 40], "000008": [8, 9], "000009": [9, 15, 23], "000010": [9, 19, 36], "000011": [7, 9, 18, 19, 20], "000012": [9, 20], "000013": [8, 9, 14, 15, 23], "000014": [9, 15, 36], "000015": [9, 36], "000016": [8, 9], "000017": 9, "000018": 9, "000019": 9, "000020": [9, 14], "000021": [9, 14, 19], "000022": [7, 9, 18, 19], "000023": [9, 18, 20], "000024": 9, "000025": 20, "000026": 9, "000027": [8, 23], "000028": [9, 23], "000029": [7, 9], "000031": 9, "000033": 9, "000034": 9, "000035": 9, "000037": [9, 29], "000038": 9, "000039": 29, "000040": [9, 29], "000041": [9, 29], "000043": [9, 29], "000045": 9, "000046": 9, "000050": 9, "000054": 9, "000055": 9, "000056": 9, "000057": 9, "000058": 9, "000062": 9, "00007": 6, "000070": 9, "000073": 29, "000074": 29, "000078": 29, "000079": [9, 29], "000082": 15, "000088": 9, "000090": 29, "000096": 40, "000097": 9, "000098": 9, "0001": [26, 111, 169, 177], "00010": [15, 143], "00011": [6, 9, 40], "00012": [9, 10], "00013": 14, "00014": 9, "00015": 143, "00016": 9, "00017": [8, 9, 36], "00018": 9, "00019": 9, "0002": [143, 169, 184], "00020": 9, "00021": [7, 9, 18, 19], "00022": [9, 18, 20], "00023": [8, 9, 14, 19, 20, 23], "00024": [7, 9, 23], "00025": [9, 15], "00026": [9, 29], "00027": [9, 29], "00028": [9, 29], "00029": 9, "0003": [182, 186], "00030": 9, "00031": 9, "00032": 9, "00033": 9, "00034": 9, "00035": 9, "00035714285714285714": 14, "00036": 9, "00037": 9, "00038": 9, "00039": [6, 9, 143], "0004": [143, 182, 186], "00040": 9, "00041": 9, "00042": 9, "00043": 9, "00044": 9, "00045": 9, "00046": 9, "00047": 9, "00048": 9, "0005": 31, "00059": [4, 6, 9], "0006": [182, 186], "00062": 15, "00068": 15, "00071": 14, "00074": 15, "00075": 15, "00077": 9, "00079": [14, 15], "00080": 15, "00081": 14, "00084": 14, "00085": 9, "00086": [4, 6, 14], "00087": 14, "00092": 15, "00094": 14, "00097": 40, "00098": [4, 6], "001": [14, 26, 36, 136, 177, 184], "0010": 184, "00105085": 8, "0011": [9, 40], "0012": [9, 14, 15, 36], "00122": 36, "00125": 36, "0013": [11, 14, 15, 40, 120, 121, 126, 127, 131], "00139632": 2, "0014": [9, 184], "0015": [8, 9, 40, 184], "00152747": 7, "0016": [9, 15, 40], "0017": [9, 14, 15], "00175085e": 5, "0018": [7, 9, 14, 18, 19, 40], "0019": [9, 15, 18, 20, 36], "00199173": 7, "002": [12, 184], "0020": [8, 9, 20, 23, 40], "0021": [9, 14, 15, 19], "0022": [7, 9, 15], "0023": [9, 14, 29, 40], "0024": [9, 23, 29], "0025": [8, 9, 184], "0026": [9, 36], "00263": 36, "0027": [9, 14, 15], "0028": [9, 14], "0029": [9, 15, 31], "003": [2, 184], "0030": [9, 184], "00305": 36, "0031": [9, 36], "0032": [7, 9, 18, 19], "00322793": 2, "0033": [8, 9, 15, 18, 20, 23, 29], "00333111e": 32, "0034": [9, 15, 29, 40], "00342423": 8, "0035": [8, 9], "00354605": 8, "00356473": 9, "0036": [9, 19], "0036976120249752": 7, "0037": [7, 9, 14], "00370324": 2, "003731": [7, 8], "003745": [7, 8], "003759": [7, 8], "0038": [9, 40], "0039": [9, 23], "004": 184, "0040": [9, 15, 36, 40], "0041": [9, 14, 40], "0042": 40, "0043": [9, 15], "0044": [9, 14], "0045": [9, 15, 29], "0046": [8, 9, 29], "0047": [9, 29, 36], "0048": [9, 36, 40], "0049": [9, 23], "005": 12, "0050": 9, "0051": [8, 9, 15, 23], "0052": [7, 9, 18, 19, 20, 36], "005201": [7, 8], "005267": [7, 8], "0053": [7, 9, 14, 18, 19, 20], "0054": [9, 14, 18, 20, 36], "00542224": 8, "0055": [9, 15], "0056": [9, 19], "005633": [7, 8], "0057": [15, 36], "0058": [9, 20], "0059": 9, "006": 15, "0060": [8, 9, 23], "0061": [7, 8, 9, 18, 19], "0062": [9, 23], "0063": [7, 9, 14, 15, 18, 20, 40], "0064": [8, 9, 15, 23], "0065": 9, "00652106e": 32, "0066": [9, 40], "0067": [9, 19], "0068": 9, "0069": [9, 15], "0070": [9, 29, 40], "0071": [7, 9, 14], "0072": [8, 9, 14, 23, 29], "0073": [7, 9, 18, 19, 20, 29, 40], "0074": [9, 29, 40], "007435": [7, 8], "0075": [9, 40], "007576": [7, 8], "0076": [9, 14, 29], "00765335": 19, "0077": [9, 19, 29], "0078": [9, 14, 29], "0079": [9, 23], "007f": [51, 64, 65, 66, 67, 68, 117, 129], "0080": [9, 29], "008045": [7, 8], "00805152": 7, "0081": [9, 36], "0082": 9, "00827991": 30, "0083": 9, "0084": 9, "0085": [9, 14], "0086": 9, "0087": 9, "0088": [9, 14], "0089": 9, "0090": [8, 9], "0091": 9, "0092": 9, "0093": 9, "0093012": 19, "00932275": 7, "0094": 9, "0095": [9, 36], "00959883e": 39, "0096": [9, 36], "0097": [9, 15], "0098": [9, 15, 36], "009868": [7, 8], "0099": [9, 15], "00992555": 9, "009933": [7, 8], "01": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 26, 30, 31, 32, 33, 34, 36, 39, 40, 43, 44, 46, 52, 53, 54, 55, 56, 143, 170, 174, 177, 182, 184], "010": [7, 8, 9, 15, 18, 19, 20], "0100": 9, "010079": [7, 8], "01024013e": 8, "01028137": 2, "01069377": 8, "010732": [7, 8], "01084089": 7, "011": [8, 9, 20, 29, 36], "01100645": 2, "01140416": 30, "012": [7, 8, 9, 14, 18, 19, 20, 23, 29], "01217676": 8, "01241175": 9, "013": [8, 9, 14, 15, 19, 20, 23, 29, 36], "013630": [7, 8], "014": [7, 9, 14, 23, 29, 40, 54], "0141": 31, "0149": 31, "015": [7, 8, 9, 14, 15, 23, 29, 143], "015381": [7, 8], "015500": [7, 8], "01562655e": 5, "0157": 31, "0159": 31, "016": [7, 9, 15, 18, 19, 20, 36, 40], "016527": [7, 8], "017": [8, 9, 19], "01757816": 30, "01787286": 7, "018": 9, "019": [9, 14], "01910610e": 26, "019355": [7, 8], "01943433": 9, "02": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 26, 29, 30, 32, 33, 34, 37, 39, 40, 46, 52, 54, 55, 56, 121, 143, 170, 174, 184], "020": [9, 14], "020114": [7, 8], "020193584925389": 9, "020833": [7, 8], "02092595": 9, "021": [9, 15, 36, 46], "02117437": 2, "021355": [7, 8], "02155918": 2, "02170548": 30, "021741551637176403": 8, "021821": [7, 8], "022": [9, 15, 23, 29, 36], "022087577333468": 9, "02231082e": 4, "022411747155862805": 14, "02274707": 43, "023": [9, 14, 29, 40, 46], "02313728e": 6, "02335296e": 39, "0235": 33, "02374444": 2, "024": [7, 8, 9, 14, 15, 29, 46], "02409012": 30, "02428936": 30, "024823": [7, 8], "02483767": 29, "025": [9, 29], "025061083134673378": 8, "02548697": [7, 18, 19], "02554287": 43, "02564642": [7, 18, 19], "02575021": 30, "02596219": 29, "026": [8, 9, 14, 20, 23, 29, 40], "026619": [7, 8], "027": [7, 8, 9, 14, 18, 19, 20, 23, 29, 46], "02702131": 9, "02730592": 30, "02737024e": 23, "02773558": 29, "028": 9, "029": [7, 9, 19, 23, 40], "02943678": 9, "0296872": [7, 18, 19], "02979163": 43, "0298146": 2, "02983878": 30, "03": [2, 4, 5, 6, 7, 8, 9, 13, 15, 16, 19, 23, 29, 32, 36, 39, 40, 46, 52, 54, 55, 56, 169, 170, 184], "030": 9, "030303": [7, 8], "031": [9, 15], "03133290e": [5, 6], "03144452": 29, "031996": [7, 8], "032": [9, 15, 40, 46], "03210848": [18, 20], "03257461": 19, "032813": 9, "033": [9, 40], "03306735": [7, 18, 19], "03319698": 30, "03336015": 19, "03372647": [18, 20], "034": [9, 14, 40], "03431023e": 39, "03451801": [18, 20], "03497807": 29, "035": [9, 14, 15, 36], "03551377": [7, 18, 19], "03629576": 43, "03632272": 29, "03676195": 2, "037": [9, 14, 36, 40], "03703667": 43, "03704654": 9, "0373302": 2, "03752756": 43, "0376": 33, "03774863": 9, "03785094": [18, 20], "03790179": 29, "038": [9, 40], "03882539": [7, 18, 19], "039": [8, 9, 29, 53, 143], "0393462": 29, "03970752": [7, 18, 19], "03993049": 9, "03994768": 19, "0399564198202886": 7, "04": [2, 3, 4, 7, 8, 9, 14, 15, 16, 20, 21, 31, 36, 39, 40, 43, 46, 53, 54, 55, 56, 143, 169, 170], "040": [7, 9, 14, 18, 19, 29], "04046603": [18, 20], "04094166": 29, "041": [9, 18, 20, 29, 46], "0413538": [18, 20], "04135536": 43, "04158213": 9, "04183614e": 6, "042": [9, 15, 53], "04203502": 184, "04203503": 184, "04204356": 9, "04207543": 43, "04230882": 19, "04238321": 43, "0425223": [18, 20], "04289017": 9, "042905188108048": 9, "043": [9, 20], "0430764": 9, "043189": [7, 8], "0437015": 20, "044": [7, 8, 9, 15, 18, 19, 23], "04421773": 29, "04432756": [18, 20], "04462864": 43, "045": [8, 9, 15, 18, 20, 23, 40], "04503263": 20, "04535355": [18, 20], "0453914": 20, "04579241": 19, "04585759e": 8, "04592872": 43, "046": [9, 53], "04647771": 20, "04667582": [18, 20], "047": [7, 9, 14, 19], "04723274": [7, 18, 19], "04726087": 30, "04742354": [7, 18, 19], "04745674": 43, "04755329": 20, "04774432": 20, "048": [7, 9, 40, 53], "04807705": 29, "04828249": 19, "04852969": 20, "04863941e": 3, "04893332": 12, "04897392": 19, "049": [9, 36], "04907541": 20, "04927078": 20, "04927288": 30, "04988135": 20, "05": [7, 8, 9, 10, 14, 15, 16, 18, 19, 23, 26, 29, 30, 31, 32, 36, 39, 40, 43, 46, 53, 54, 55, 56, 120, 121, 126, 127, 131, 143, 169], "050": [8, 9, 14, 36], "05033705": 29, "0507476631082548": 33, "051": [9, 23, 36, 40], "05103838": [18, 20], "05112798": 20, "05137979": 20, "05150748e": 13, "0517859": 20, "05199345": 20, "052": [8, 9, 29, 36], "05201907e": 39, "0520937": [18, 20], "0528462": 20, "05289115": 29, "0529288": 20, "053": [9, 29], "05358558": 43, "05360544": 20, "05371274": 19, "0537393": 20, "05375933": 20, "054": [9, 29, 40, 52], "05417573": 20, "05418786": [18, 20], "05430773": 19, "05434705": [7, 18, 19], "055": [8, 9, 14, 29], "05537228": 19, "05570808": [7, 18, 19], "05576851": [7, 18, 19], "05581397": [7, 18, 19], "056": [8, 9, 29], "05618856": 43, "05627071": [18, 20], "05685439e": 5, "057": [9, 29], "05717669e": 3, "05726203": 30, "05744543": [7, 18, 19], "058": [9, 29], "05814153": 30, "05859946e": 32, "05865087e": 12, "05865225e": 12, "059": 9, "059202": 29, "06": [7, 8, 9, 13, 15, 18, 19, 20, 23, 29, 43, 52, 53, 169], "060": 9, "06052737e": 32, "061": 9, "06105331": [18, 20], "06119574": [18, 20], "06173016": 19, "062": 9, "06210401": 11, "06251756": 19, "063": [7, 9, 14, 18, 19, 36], "06308422": 29, "06310889": 29, "06348968": 19, "06351213": [7, 18, 19], "06358463": [7, 18, 19], "06368034": 43, "064": [7, 8, 9, 18, 19, 20, 23], "06469243": [18, 20], "065": [7, 9, 18, 19, 20, 23], "06560031": 19, "06568282": [18, 20], "06593521": [18, 20], "066": [7, 9], "06610498": [7, 18, 19], "06656721": 30, "06697905": [7, 18, 19], "067": [9, 19, 40, 52], "06700177": 19, "06701373": 43, "06751700747046248": 10, "0676481": [7, 18, 19], "068": [9, 14, 19, 20, 36, 40, 46], "06832987": 11, "06858182": 2, "06880861": 19, "06892752": 19, "06894686": [18, 20], "069": [8, 9, 15, 23], "06982611e": 26, "07": [8, 9, 12, 16, 23, 29, 41, 43, 44, 52, 53, 170], "070": [9, 15, 36], "07033698": 19, "07049715": [7, 18, 19], "07087663e": 26, "071": 9, "07120393e": 39, "072": [9, 23], "07275256": 43, "073": [7, 9, 14, 36], "07317879": 2, "0739193": 43, "074": [9, 15, 29], "07464383": 29, "07489027": 43, "075": [9, 14, 29], "07596741": 29, "076": [8, 9, 29], "077": [9, 29, 36], "078": 9, "079": [9, 29], "07941073": 2, "08": [2, 4, 5, 7, 8, 9, 13, 14, 19, 23, 36, 40, 43, 46, 52, 54, 55, 56], "080": [9, 53], "08070112": 30, "08083036": 30, "08086158e": 23, "081": [9, 29], "0810491": 2, "082": 9, "08277551": 29, "083": 9, "083026522037701": 9, "084": [9, 13, 16, 29, 170], "085": [8, 9, 29], "08503818e": 32, "08520002": 43, "086": [9, 29], "08622477": 29, "087": [9, 29], "08797657e": 39, "088": [7, 8, 9, 16, 18, 19, 23, 170], "08879337e": 32, "089": [9, 18, 20], "08919173e": 39, "08991858e": 32, "09": [3, 4, 5, 6, 7, 8, 9, 12, 13, 26, 40, 43], "090": [9, 15], "091": 9, "092": [7, 9, 23], "09226948e": [3, 4, 7], "093": [9, 19], "0933616": 30, "094": 9, "09420898": 30, "09425878e": 39, "095": 9, "09507654e": [3, 4, 7], "096": [9, 23], "09690756e": 39, "097": [8, 9, 20, 23, 40], "09718550832245014": 10, "0972": 10, "09755793e": 32, "098": [7, 9, 18, 19, 20], "09849875e": [5, 6], "099": [7, 9], "1": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 24, 26, 27, 29, 30, 31, 32, 33, 36, 37, 39, 40, 43, 44, 46, 47, 50, 51, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 92, 95, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 150, 151, 152, 153, 154, 155, 160, 162, 165, 166, 169, 173, 177, 178, 182, 183, 184, 187], "10": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 36, 39, 40, 43, 46, 53, 97, 114, 120, 121, 126, 127, 131, 138, 169, 177, 181], "100": [9, 11, 14, 15, 31, 36, 39, 40, 43, 53, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123, 124, 126, 127, 131, 145, 162, 181, 183], "1000": [80, 113, 133, 134, 135, 136, 150, 151], "1006": 33, "10083470e": 5, "1010": 9, "102": 46, "1021": 9, "10292071071001885": 10, "103": 54, "1030": 9, "10319630e": 8, "10362386": 11, "1037": 9, "104": [31, 34, 170], "105": 31, "1053": 9, "10584830e": 5, "106": 9, "1060": 9, "107": 15, "10752495e": 39, "1077": 9, "10847215e": 23, "10y": 46, "11": [3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 18, 19, 20, 23, 26, 29, 36, 39, 40, 55, 97, 170], "1106": 9, "11063721e": 32, "11093659": 2, "112": 52, "113": 46, "1133": 9, "11391513": 11, "11421641e": 4, "11477958e": 39, "11478008e": 23, "115": 53, "1162": 9, "117": 46, "1176": 9, "1177": 9, "118": [19, 21, 53, 170], "11868007e": 12, "11892006e": 23, "119": [14, 40, 53], "1191": 9, "1193": 9, "11970704e": 39, "12": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 39, 43, 46, 52, 54, 55, 56, 97, 169, 170, 174], "120": 31, "12051211e": 39, "121": [46, 53], "1210": 9, "12141020e": 39, "1220": 9, "1225": 14, "1235": 9, "124": 53, "1248": 9, "12489362e": 39, "12492676e": 5, "125": 46, "1250": 55, "12558991e": 39, "126": 39, "1275": 9, "128": 46, "1289": 15, "12895735e": [5, 6], "1291": 9, "1298": 9, "13": [5, 7, 8, 9, 14, 15, 20, 23, 29, 40, 54, 101, 103, 104, 105, 107, 110, 112, 113, 162], "13001762e": [5, 6], "1301": 9, "1304": 36, "1314": 9, "1315": 9, "1317": 9, "132": 9, "13239659e": 39, "1327": 9, "133": [36, 37, 170], "1330": 9, "1332": [9, 40], "13346758e": [5, 6], "1335": 9, "1343": 15, "1346": 40, "13607836e": 8, "1362": 54, "13696569e": [5, 6], "13808863e": 39, "1394": 9, "14": [7, 8, 9, 14, 15, 16, 18, 19, 23, 29, 31, 40, 46], "1428": 9, "14316461e": 39, "144": 46, "1453": 9, "1455": 54, "146": [33, 34, 170], "147": 46, "14733606e": 8, "14759387e": 6, "148": 46, "1486": 14, "14895433": 30, "1494": 9, "14940375e": 39, "15": [4, 8, 9, 14, 15, 23, 26, 27, 29, 36, 40, 170], "150": 11, "152135": 43, "152278": 43, "1526": 29, "153001": 43, "1536": 9, "154207": 43, "15445083e": 32, "155202": 43, "1565": 29, "1577": 29, "1588": 29, "1589": 9, "159": 46, "15980287": 2, "16": [7, 8, 9, 14, 15, 18, 19, 20, 29, 31, 36, 40, 43], "1604": 36, "161": 46, "16112642e": 26, "16185865e": 32, "16206284e": 5, "16248113e": 39, "1630": 29, "16368341e": [3, 4, 7], "1648": 9, "165": [14, 15, 40], "16514560e": 32, "16562529e": 8, "169083": 43, "1695": 9, "16956647": 11, "17": [7, 8, 9, 10, 14, 15, 19, 20, 23, 29, 40, 43], "170": 36, "1700238781664583": 10, "170897": 43, "171": 36, "171737": 43, "17183301e": 39, "171892": 43, "17212380e": 39, "17341817e": 11, "17359260e": 39, "1739": 9, "174": 46, "1742": 9, "174764": 43, "17510456": 2, "17733231e": [12, 13], "177369": 43, "178946": 43, "1794": 9, "18": [7, 9, 14, 15, 16, 18, 19, 20, 23, 29, 33, 36, 40, 41, 43, 170], "180": [14, 40], "1800": 23, "181": 46, "182061194357152": 9, "18289085e": 8, "183766": 43, "18408031e": 5, "184267": 43, "1843": 9, "18441126e": [3, 4, 7], "185": 53, "18538495e": 5, "186081": 43, "187148": 43, "187463": 43, "1875": 55, "18803064e": 26, "18843086e": 39, "1888": 7, "189": [29, 34, 170], "1890": 9, "19": [7, 8, 9, 14, 18, 20, 23, 29, 34, 36], "190": 36, "190308": 43, "190412": 43, "191375": 43, "192": 46, "192007": 43, "19328243e": 32, "1938": 9, "194": [14, 16, 26, 27, 170], "194368": 43, "195078": 43, "1952": 169, "1955": 116, "1959": [8, 23], "195953": 43, "19657594e": [5, 6], "1967": [31, 39], "196927": 43, "197475": 43, "1976": 8, "19789402e": 6, "1981": 165, "1984": 9, "1986": 116, "19871439e": [3, 4, 7], "1988": [74, 136], "1990": [3, 4, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 32, 46, 55, 56, 174], "1991": 143, "1996": 20, "1_mean_risk": [16, 170], "1d": [119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "1e": [14, 101, 103, 104, 105, 107, 110, 111, 112, 113, 120, 121, 126, 127, 131, 162, 169], "1e5": 100, "1y": 46, "2": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 23, 26, 29, 31, 32, 36, 39, 40, 41, 43, 46, 50, 51, 54, 58, 60, 61, 62, 63, 74, 97, 98, 99, 100, 105, 106, 110, 112, 113, 114, 116, 120, 121, 123, 124, 126, 127, 128, 131, 133, 136, 137, 139, 143, 150, 151, 152, 153, 154, 160, 169, 173, 177, 182, 183, 184, 187], "20": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 39, 43, 46, 55, 56, 112, 120, 121, 126, 127, 131, 174], "200": [11, 120, 121, 126, 127, 131], "2000": [14, 15, 31, 36, 39, 40, 53, 121], "200046": 43, "200105310175214": 9, "2002": [101, 103, 104, 105, 107, 110, 112, 113, 145, 162], "2004": [113, 150, 151], "2005": [59, 116], "200575932248872": 9, "2006": 112, "2007": [143, 169], "2009": [50, 123, 150, 151, 152, 153, 160], "2010": [43, 114, 140, 144, 173, 180], "20106233e": 8, "2014": [2, 5, 6, 29, 52], "201485": 43, "2015": [10, 33, 110, 112], "2016": [58, 60, 62, 63, 124, 128], "2017": [123, 139, 173], "2018": [26, 54, 97, 121, 123], "2019": [110, 116, 124, 128, 136], "2020": [26, 30, 103, 104, 112, 123, 124, 128, 182, 187], "202081924170507": 9, "20210608e": 39, "2022": [3, 4, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 30, 32, 33, 43, 46, 52, 55, 56, 110, 174, 184], "20227491": 2, "2023": [14, 15, 31, 36, 39, 40, 53, 54, 110, 169], "2024": 178, "2025": 9, "203": 46, "2031": 19, "203852": 43, "204": [2, 16, 170], "2041": 9, "204832": 43, "20495386e": 39, "205": 53, "20549958e": 39, "20563054e": 39, "2061": 9, "2065": [18, 20], "20663228": 11, "20664617": 11, "206697": 43, "20670474": 11, "20671539": 11, "206951": 43, "206968": 43, "207576": 43, "2076": 9, "208": [7, 16, 170], "20898034e": [3, 4, 7], "209": 53, "2091": 9, "209388": 43, "21": [8, 9, 10, 12, 14, 15, 16, 19, 29, 39, 40, 170], "210": 39, "2102": 9, "2112": 9, "2117": [7, 9, 18, 19], "2124": 9, "2126": 9, "21327461e": 5, "215": 46, "215212": 43, "21580436": 2, "216570": 43, "22": [4, 7, 9, 14, 15, 18, 19, 20, 29], "220": [46, 53], "221074": 43, "22117587e": 32, "221868": 43, "22188511e": [5, 6], "222": 53, "223": 33, "22380709e": 5, "224": 53, "225127": 43, "22605638e": 32, "2264": 52, "22729906e": 39, "22768876": 11, "22770146": 11, "22770271": 11, "22788246": 11, "229": [46, 53], "22969370e": 32, "23": [7, 8, 9, 18, 20, 23, 29, 114], "23117943e": 39, "23352411e": 3, "235": 46, "235650": 43, "23719260e": 5, "239496": 43, "239639": 43, "24": [9, 14, 23, 29, 36, 40, 43], "240": 53, "24004576e": 5, "24120028e": [3, 4, 7], "241811": 43, "241965": 43, "242284": 43, "242375": 43, "24355699e": 4, "245": 31, "24556425e": 6, "24664456e": 32, "246774": 43, "247": 54, "249": 53, "24959219e": [5, 6], "25": [4, 9, 14, 15, 31, 33, 36, 40, 119, 123, 124], "250": [3, 16, 170], "2500": 55, "25000": 55, "25073031e": 32, "251145": 43, "251838": 43, "252": [9, 12, 13, 14, 15, 31, 33, 36, 39, 40, 43, 44, 46, 112, 134, 135, 136, 169, 170, 173, 181], "25212125e": 13, "253": 52, "253970": 43, "254": 53, "25426519e": 39, "254766": 43, "255": [14, 15, 40], "256": 52, "259": [20, 21, 170], "26": [8, 9, 15, 36, 40, 41], "26134346e": 5, "26155697e": 8, "261709": 43, "263": 52, "264": 46, "264077": 43, "264144": 43, "266": 46, "266908": 43, "267": 46, "268": 46, "269": 46, "269549": 43, "269812": 43, "27": [8, 9, 15, 29, 36], "270": [30, 34, 170], "270434": 43, "27194222e": 3, "272263586429105": 29, "27250993e": 4, "27306716e": 39, "275882": 43, "27962284e": 4, "27967880e": [5, 6], "28": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 40, 43, 46, 52, 55, 56, 174], "28133405e": 39, "282": 46, "28246101": 11, "283": [46, 53], "28439988": 12, "28498817e": [3, 4, 7], "285": 53, "28522027e": [3, 4, 7], "286204": 43, "287342": 43, "288": 46, "288435": 43, "289": 53, "289510": 43, "29": [7, 9, 14, 18, 19, 23, 29, 40, 52, 170], "292817": 43, "29453598e": 13, "29453703e": 13, "295364": 43, "296356964248307": 9, "297652": 43, "298": 36, "2980": 36, "2_": [150, 151, 152, 153], "2_risk_budget": [21, 170], "2d": [5, 11, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 143, 186], "2f": [2, 14, 23, 33, 36, 39, 40], "2h": [133, 134, 135, 136], "2x3x3": 15, "3": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 26, 29, 31, 32, 36, 39, 40, 43, 46, 51, 55, 64, 65, 66, 67, 68, 97, 98, 100, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 126, 127, 128, 129, 131, 137, 150, 151, 169, 173, 177, 184, 185], "30": [2, 8, 9, 14, 15, 18, 20, 23, 33, 36, 37, 40, 46, 133, 134, 135, 136, 170, 183], "30000034617916516": 11, "301": 46, "30105753780178": 29, "303": 54, "30314924e": 3, "304": 46, "30530766e": [3, 4, 7], "305664213686036": 9, "306039": 43, "30675668e": 39, "30700985e": 32, "30767706e": 39, "31": [8, 9, 14, 15, 31, 36, 39, 40, 43, 53, 54], "310": [46, 54], "31092783e": 5, "312173": 43, "31250": 55, "313": 53, "314383": 43, "31550592e": 39, "316": 54, "316284": 43, "31737525e": [5, 6], "32": [7, 8, 9, 14, 15, 18, 19, 23, 29, 40], "320883": 43, "321191": 43, "32124541e": 5, "322": 46, "322091": 43, "322661810340446": 9, "32493866e": 6, "32678922e": 39, "33": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 32, 36, 39, 40, 169, 177, 182, 183], "330": 52, "330876": 43, "332589": 55, "3333332": 12, "33333333e": 11, "33333336": 12, "33333345": 12, "33456624e": 23, "334821": 55, "335938": 55, "336": 54, "337": 53, "337054": 55, "338": 52, "339286": 55, "33953561e": 5, "34": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29], "34073945e": 4, "34097308e": 6, "342": 16, "343": [10, 16, 170], "345087054431556": 10, "34583888e": 32, "347656": 55, "348085": 43, "34862950e": [3, 4, 7], "34906672e": 32, "34914228e": 26, "349220": 43, "35": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 33, 34, 36, 43, 54, 170], "35005322e": 3, "351": 52, "351130": 43, "352": 56, "35228602e": 5, "353": 56, "354": 53, "354942": 43, "355": 56, "355469": 55, "355792": 43, "35632022e": 23, "35652050e": [5, 6], "356746": 43, "35710067e": [3, 4, 7], "358": 56, "359": 56, "35927671e": 8, "36": [9, 14, 18, 20, 29, 33, 43, 54], "360345": 43, "36085745e": 39, "361084": 43, "36241349e": 26, "362751": 43, "36336705e": [5, 6], "364": 46, "36401076e": 4, "364353": 43, "365": 113, "366": [11, 16, 170], "368335377715717": 9, "368504": 43, "368514": 43, "37": [7, 9, 14, 15, 18, 20, 23, 29, 54], "371094": 55, "371865": 43, "37192080e": 12, "374699": 43, "3750": 55, "375000": 55, "38": [9, 15, 29, 31, 34, 40, 54, 170], "38087390e": 5, "381": 53, "382": 53, "382813": 55, "382926": 43, "384": 46, "38460704e": 26, "38469617e": 39, "38515810e": 39, "386": [46, 53], "387": 46, "38771680e": 32, "39": [2, 7, 9, 14, 15, 18, 19, 20, 29, 36, 40], "391": 46, "391758": 43, "392": 53, "393": 46, "394": 46, "394581": 43, "395642": 43, "397": 46, "39848924e": 32, "399360341488464": 9, "399780": 43, "3_maxiumum_diversif": [24, 170], "3d": 133, "3f": 15, "3fri": 98, "3m": 46, "3x3": 14, "4": [3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 23, 26, 29, 32, 36, 39, 40, 43, 46, 50, 54, 55, 97, 98, 110, 111, 112, 123, 124, 127, 137, 138, 139, 160, 173, 182, 184], "40": [8, 9, 14, 18, 20, 23, 29, 36, 39, 53, 184], "400": [43, 54], "40097067e": 39, "40239485319279": 9, "40287802e": 39, "40429482e": 4, "405": 53, "40597193e": 4, "407690290599575": 9, "40812344e": 3, "408136": 43, "40973224e": 39, "40979832e": 12, "41": [9, 14, 18, 20, 29, 54, 113], "41147667e": 23, "41661311e": 39, "41726679e": 8, "41742527e": 8, "41921466e": 32, "42": [9, 14, 15, 29, 36], "422": 52, "42282444e": 5, "423": 46, "42391438e": 5, "426": [5, 16, 170], "42685508e": 6, "42766417e": 39, "42768380e": 26, "42845847e": 39, "42882219e": 26, "43": [7, 8, 9, 14, 19, 23, 29, 36], "430": [52, 54], "43028265e": 13, "43231855e": [3, 4, 7], "437": 52, "43758398806516": 9, "438": 46, "43855248e": [3, 4, 7], "43876113e": 5, "44": [9, 15, 29, 31, 40], "44128512e": [5, 6], "44532312e": 5, "44687699e": 5, "44938306e": 3, "45": [7, 9, 14, 15, 18, 19, 23, 31, 36], "45171911e": 23, "452": [46, 53], "455": 52, "45574521e": 5, "456": [23, 24, 170], "458": 53, "45803069e": 4, "459": 46, "46": [9, 14, 15, 18, 20, 23, 29, 36, 39, 52], "460": 54, "460872007821077": [7, 18, 19], "461275191312059": 8, "462": 53, "463": 46, "46436338e": [5, 6], "469": [4, 16, 170], "47": [7, 9, 19, 20, 29, 52], "47134961e": 5, "47358386e": 8, "474123745524875": 9, "475": 53, "476": 53, "48": [8, 9, 14, 19, 23, 29, 36, 52], "48009915e": 32, "481": 46, "48139841e": 39, "48213167e": 39, "48283750e": 5, "483": 53, "48339328e": 32, "48492469e": 32, "48598568e": 5, "48699105e": 23, "48850261e": 5, "49": [7, 8, 9, 15, 18, 19, 23, 29, 36, 40], "495": 54, "49645166e": 5, "498": 53, "49938736e": [3, 4, 7], "49999867": 11, "4_distributionally_robust_cvar": [27, 170], "4f": [31, 33], "5": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 36, 39, 40, 43, 52, 55, 58, 59, 60, 62, 63, 97, 98, 99, 110, 111, 112, 119, 120, 121, 123, 124, 126, 127, 128, 131, 132, 139, 169, 173, 185, 187], "50": [9, 11, 12, 14, 15, 19, 29, 31, 36, 40, 43, 54, 119, 123, 124], "500": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 33, 43, 46, 55, 56, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 174], "5000": 55, "50000": 55, "5016": 114, "502": 52, "5029": 114, "50514320e": 5, "50727312e": 23, "508": 46, "51": [8, 9, 14, 15, 20, 23, 29, 39, 54], "512": 53, "51323607e": 23, "51376159e": 4, "51475217e": 39, "5152184941723748": 9, "51844546e": 3, "52": [8, 9, 15, 18, 20, 23, 52], "52171782e": 39, "522": 46, "52217700e": 39, "52708811e": 8, "53": [7, 8, 9, 14, 15, 36, 40, 52], "53270264e": 39, "533289375090764": 29, "53379955e": 26, "53398775": 9, "535": 53, "536": 46, "53601183e": 39, "537": 46, "54": [7, 8, 9, 14, 18, 19, 23, 29, 40], "540": 53, "54382763e": 39, "543932": 43, "54482537e": 39, "54697151e": 5, "548": 53, "549": 46, "55": [9, 14, 23], "550": 54, "55249501e": 32, "553": 53, "55455742": 9, "555": [12, 16, 170], "558054": 43, "56": [7, 9, 15, 18, 19, 29, 40], "56000809e": 6, "560177235001134": 29, "560475": 43, "562": 53, "56214479e": 6, "56311233e": 39, "56548525": 11, "56558315": 11, "56559255": 11, "56566507": 11, "568791": 43, "56967308e": 26, "57": [9, 14, 19, 23], "572": 53, "572056": 43, "57560762e": 23, "578": 53, "57851861e": 5, "5798056188194143": 9, "58": [2, 7, 9, 14, 15, 20, 29, 114], "581": [46, 53], "58100177e": 32, "58269647e": 3, "58312606e": 39, "58350612e": 8, "59": [9, 14, 15, 23, 40, 43], "590": 53, "59049257e": 32, "591675649894958": 9, "59482204e": 5, "595": 46, "5960": 53, "59687833e": 39, "59789920e": 5, "59858003": 9, "59880563e": 5, "599": [18, 21, 46, 170], "5_cluster": [34, 170], "5f": 36, "6": [3, 5, 6, 8, 9, 11, 12, 13, 15, 23, 26, 29, 32, 39, 46, 54, 97, 98, 112, 173, 184], "60": [2, 9, 12, 13, 14, 15, 31, 33, 36, 40, 43, 169], "600": [8, 16, 170], "6008387080754516": 9, "60306246e": 39, "61": [8, 9, 29, 40], "61481439e": 5, "61513792e": 5, "62": [8, 9, 14, 15, 29], "62035863e": 39, "621": [46, 54], "62236661e": 32, "62545194e": 26, "62632716e": 5, "63": [9, 15, 18, 19, 20, 29], "63365545e": 39, "634": 46, "63432134e": [5, 6], "636": 46, "63901744e": 32, "64": [9, 14, 15, 29, 31, 36, 39, 40, 53], "64005580e": 6, "64220700e": 5, "644": 46, "64582189e": 5, "646": 46, "64696218e": 39, "64772972e": [3, 4, 7], "648": 54, "64823756e": 3, "64841618e": 39, "64888981e": 8, "65": [7, 9, 14, 15, 18, 19, 29, 36, 40], "65046123e": 39, "65079997e": 39, "653": 46, "65451603e": 4, "655": 15, "65625": 55, "658": 46, "66": [9, 15, 18, 20, 23, 29, 40, 53, 54], "66255502e": 5, "664": 46, "66647584e": 4, "66666667e": 11, "66785730e": 5, "669076363622692": 9, "67": [8, 9, 18, 20, 23, 43, 56], "67249461e": 26, "67279164e": 39, "677": 52, "67810934e": 39, "679": 34, "68": [7, 8, 9, 36], "681": 54, "68197345e": 5, "685": 53, "685271602584908": 23, "68550154": 9, "68739416e": 5, "68742795e": 39, "687782011560027": 9, "69": [9, 14, 15, 20, 29, 36, 53, 56], "692": 46, "69581067e": 6, "69632764e": 6, "6_ensembl": [37, 170], "7": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 23, 26, 32, 33, 39, 40, 43, 54, 97, 120, 121, 126, 127, 131, 173], "70": [8, 9, 15, 23, 29, 36, 50, 53, 120, 121, 126, 127, 131], "700": 54, "703": 170, "704": 52, "70440099e": [5, 6], "709": 46, "71": [8, 9, 14, 15, 23, 29, 40], "711": 53, "716": 53, "72": [7, 9, 10, 14, 15, 19, 29, 36, 40, 53, 54], "722": 52, "72248235e": 5, "72469426e": 6, "725": 53, "72770463e": 39, "72794158e": 5, "728117696106207": 19, "729": 53, "72968062e": 32, "72985253e": 4, "73": [7, 9, 14, 15, 18, 19, 20], "730": 41, "731": 52, "73658093e": 39, "73670065e": 4, "73718908e": 4, "738": 46, "73909314e": [3, 4, 7], "74": [7, 9, 14, 15, 29, 40, 53], "74138185e": 23, "74197781": 11, "742": [6, 16, 170], "74253021e": [5, 6], "74284346e": 32, "74340049e": 39, "74361693e": 5, "74499181e": 39, "74507544e": 39, "74787861e": 13, "74823262e": 5, "74856659e": [3, 4, 7], "75": [9, 11, 14, 15, 23, 29, 36], "75000": 55, "75757760e": 39, "75790832e": 32, "75802352": 11, "75907600e": 39, "76": [8, 9, 15, 20, 56], "762": [40, 41, 170], "76926114e": 39, "77": [8, 9, 14, 23, 29, 54], "77006663e": 5, "77319466e": 39, "775": 46, "777": 46, "77784307e": 5, "77910456e": 4, "78": [2, 8, 9, 14, 19, 23, 29, 40, 54], "780": 54, "78010014e": [3, 4, 7], "78013891e": 6, "78090544": 9, "78413867e": 3, "786": 39, "78708311e": 3, "78775169e": [12, 13], "788185892520897": 9, "78965839e": 5, "79": [7, 8, 9, 14, 18, 19, 23, 36, 56], "79050966e": 23, "79104637e": [5, 6], "792": 52, "79313343e": 32, "79558938e": 39, "79623520e": 39, "796875": 55, "79844555e": 8, "79851683e": 4, "7_pre_select": [41, 170], "8": [3, 4, 5, 6, 7, 8, 9, 12, 15, 18, 19, 20, 23, 26, 29, 31, 32, 33, 36, 39, 40, 43, 51, 54, 64, 65, 66, 67, 68, 97, 117, 129, 160, 169, 181], "80": [9, 15, 19, 40], "800": 39, "80653860e": 39, "80823151e": 39, "809": 54, "81": [7, 8, 9, 14, 15, 19, 29, 40], "811": 54, "81108516e": 39, "81161325e": 3, "81176235e": 5, "812": [15, 16, 46, 170], "8125": 55, "81304000e": 32, "81629430e": 26, "82": [9, 15, 20, 23, 29, 36, 54], "820": 46, "82266765e": [12, 13], "825": 54, "82564384e": 39, "82592031e": 23, "82822281e": 39, "829": 53, "83": [7, 9, 15, 18, 19, 23, 36], "8313": [55, 56], "83522508e": 6, "83697624e": 39, "84": [9, 14, 20, 29, 36], "84021249e": [3, 4, 7], "84053635e": 39, "843069929154527": 9, "84348572e": 26, "84365114e": 39, "84470288e": 39, "84531907e": 26, "847": 46, "84876780e": 39, "84916828e": 39, "84980192e": 4, "85": [9, 14, 15, 40], "852": 53, "853": 46, "85394928e": 39, "85688593e": 6, "859": 9, "859375": 55, "85983398e": 26, "86": [9, 14, 18, 20, 29, 33, 40], "860": [14, 46], "864764715990296": 9, "869": [9, 54], "87": [8, 9, 14, 29], "875000": 55, "87866505e": 3, "87986871": 9, "88": [9, 33, 36, 40, 113], "88131852e": 12, "88142338e": [5, 6], "88210632e": 5, "885": 53, "89": [9, 15, 29, 40, 54], "890625": 55, "89116954e": 5, "89240131e": 39, "89248471e": 39, "89322196e": 3, "894001701422519": 9, "89793803e": 8, "8_metadata_rout": [44, 170], "9": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 20, 23, 26, 32, 33, 36, 39, 43, 97, 120, 121, 126, 127, 131, 182, 185], "90": [8, 9, 15, 23, 29, 36], "90123331e": 26, "90340137e": 23, "9038840095066056": 10, "907": 53, "90879685e": 3, "91": [9, 15, 29, 40, 54], "910": 46, "91035768e": 8, "912975728797552": 7, "913": 54, "914061803583557": 9, "91471166e": 39, "91741539e": 39, "91785162": 9, "91802980e": 5, "91846109e": 39, "92": [8, 9, 15, 23, 29, 53], "921033968992518": 20, "92143200e": 32, "92149669e": 39, "922": [9, 54], "926": 53, "92817471e": 8, "92866673e": 39, "92880653e": 39, "93": [9, 14, 29], "93000375": 9, "93188830e": 6, "933": 54, "936428254316073": 9, "93749217": 9, "9375": 55, "93771054e": 3, "938": 46, "93952573e": 23, "94": [7, 8, 9, 15, 18, 19, 23, 29, 36], "940": 9, "9401232": 9, "941": [46, 47, 170], "94502152e": 39, "94746608e": 5, "94836568e": 39, "95": [2, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 53, 70, 71, 72, 73, 75, 76, 92, 120, 121, 127, 131, 134, 135, 136, 137, 150, 151, 152, 153, 181, 183], "950": 53, "95027284": 9, "95048460e": 23, "95142106e": 5, "96": [9, 14, 53], "96049980e": 39, "965": 54, "966": 46, "967": 54, "968": [39, 41, 170], "96861483": 9, "96891040e": 39, "96895546e": 3, "969": [9, 32, 34, 170], "97": [9, 14, 15, 18, 20, 29, 36, 53], "972": 53, "97503410e": 26, "976": 21, "97776252e": 5, "97964062": 9, "97994501e": 6, "98": [7, 9, 18, 19, 36], "98154300e": 23, "98213665e": 3, "98242729e": 6, "98247368e": 39, "98298183e": 5, "98357211e": 32, "98391244e": 39, "98463685": 9, "98558904e": 39, "986": 52, "987": 46, "99": [9, 15, 19, 29], "991": [46, 52], "99284245e": 39, "995": 54, "995810799947282": [18, 20], "99610901e": 4, "99620661e": 39, "99627408e": 39, "99643566e": 32, "9983657": 9, "999": [9, 52], "999999999999993": [8, 23, 29], "9_data_prepar": [47, 170], "A": [2, 3, 4, 5, 11, 12, 14, 29, 40, 49, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 162, 172, 173, 175, 177, 180, 182, 183, 184, 185, 186], "And": [18, 19, 30, 116, 131, 182], "As": [2, 12, 13, 18, 19, 23], "At": [134, 135, 136], "But": 6, "By": [4, 6, 11, 12, 13, 14, 15, 32, 40, 53, 54, 174, 177, 186], "For": [2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 50, 61, 97, 98, 99, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 140, 145, 169, 173, 177, 180, 181, 182, 183, 184, 186], "IN": 133, "If": [11, 12, 13, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 95, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 162, 169, 173, 174], "In": [2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 29, 30, 31, 32, 33, 39, 40, 43, 51, 61, 64, 65, 66, 67, 68, 95, 98, 111, 114, 117, 129, 132, 147, 177, 180, 181, 183, 184], "It": [3, 4, 5, 7, 8, 11, 15, 26, 29, 30, 32, 40, 43, 74, 77, 79, 82, 85, 87, 88, 101, 103, 104, 105, 107, 110, 112, 113, 119, 120, 121, 123, 124, 126, 127, 128, 131, 134, 135, 136, 143, 145, 160, 162, 169, 171, 172, 173, 175, 176, 177, 182, 184, 185, 186, 187], "Its": [14, 15, 128], "No": [2, 14, 15, 164], "Not": [50, 57, 58, 59, 60, 61, 62, 63, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 143, 144], "On": [140, 165, 169], "One": [111, 128, 181], "That": [14, 120], "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 82, 85, 87, 88, 92, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 171, 174, 177, 181, 182, 184, 186, 187], "Then": [2, 12, 13, 14, 31, 32, 39, 40, 43, 128, 144, 162, 180, 182], "There": [116, 173], "These": [14, 15, 173, 186], "To": [5, 7, 8, 10, 12, 18, 19, 20, 23, 26, 29, 30, 32, 36, 40, 43, 97, 128, 132, 136, 137, 181, 182, 186], "With": [43, 51, 64, 65, 66, 67, 68, 112, 117, 120, 121, 126, 127, 129, 131, 140, 143, 169, 182], "_": [120, 173], "_2": 51, "__": [50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 177], "__getitem__": [51, 64, 65, 66, 67, 68, 117, 129], "__init__": [57, 101, 102, 141, 142, 148, 149, 182], "_asset": [150, 151, 152, 153], "_avers": 109, "_coef": [14, 120, 126, 127], "_cost": [12, 119, 120, 123, 124, 126, 127, 131, 136], "_cvx_cach": 120, "_deviat": [134, 135, 136], "_factor": [134, 135, 136], "_fee": [13, 119, 120, 123, 124, 126, 127, 131, 136], "_prev_": [12, 119, 120, 123, 124, 126, 127, 131, 136], "_ratio": [134, 135, 136], "_return": [12, 13, 119, 120, 123, 124, 126, 127, 131, 136, 182], "_risk": 120, "_risk_": [127, 182], "_set_covari": 182, "_test_scor": 111, "_validate_data": 182, "_varianc": [134, 135, 136], "aal": [53, 54], "aaoi": 54, "aaon": 54, "aapl": [4, 6, 7, 8, 11, 12, 13, 19, 43, 46, 54, 55, 169, 186], "ab": [51, 64, 65, 66, 67, 68, 117, 129, 136], "abf": 53, "abl": [4, 6, 14, 15, 33], "about": [3, 4, 5, 6, 26, 29, 42, 45, 48, 120, 121, 126, 127, 131, 143, 178, 182, 186], "abov": [6, 11, 12, 13, 14, 15, 32, 43, 50, 100, 101, 103, 104, 105, 107, 110, 112, 113, 119, 120, 121, 123, 124, 126, 127, 131, 137, 140, 162, 169, 173, 177], "absolut": [4, 6, 7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 29, 30, 32, 36, 40, 58, 60, 62, 63, 67, 68, 82, 85, 120, 121, 126, 127, 131, 134, 135, 136, 137, 143, 169, 182], "abstract": [57, 96, 134], "accept": [77, 79, 85, 87, 88, 120, 127, 131, 133, 134, 135, 136], "access": [5, 26, 132], "accord": [12, 40, 99, 128, 132, 133, 137, 138, 139, 181, 182], "account": [12, 18], "accur": [4, 6, 145], "accuraci": [111, 120, 121, 126, 127, 131], "achiev": [2, 12, 14, 15, 31, 43, 173], "across": [0, 111, 140, 173], "activ": 178, "ad": [50, 111, 112, 113, 114, 115, 127, 131, 137, 138, 139, 145, 169, 177, 181, 183], "add": [9, 11, 12, 13, 31, 33, 36, 39, 40, 43, 119, 120, 121, 123, 124, 126, 127, 131], "add_constraint": [120, 121, 126, 127, 131], "add_object": [120, 121, 126, 127, 131], "add_vlin": [14, 15, 40], "addit": [43, 95, 99, 127, 131, 132, 133, 137, 138, 139, 169, 171, 173, 180, 181, 184], "addition": 177, "adher": [52, 53, 54, 55, 56, 174], "adjust": [52, 53, 54, 55, 56, 112, 136, 174], "advanc": [7, 8, 11, 48, 97, 120, 121, 126, 127, 131], "advantag": [14, 15, 177], "advis": [26, 178], "af": [12, 13, 112, 119, 120, 123, 124, 126, 127, 131, 136], "affect": [29, 30, 32, 104, 113, 114], "after": [51, 52, 53, 54, 55, 56, 64, 65, 66, 67, 68, 97, 98, 117, 128, 129, 174, 177], "again": [111, 132], "against": [5, 116, 137, 145, 186], "aggreg": [140, 173], "aht": 53, "ai": 169, "al": 110, "alejandro": 173, "algorithm": [29, 30, 32, 50, 51, 101, 103, 104, 105, 107, 110, 112, 113, 114, 123, 124, 128, 137, 139, 145, 150, 151, 162, 182], "alia": [111, 112, 113, 114, 115], "align": [127, 131, 160, 182], "all": [0, 5, 8, 11, 12, 14, 15, 26, 29, 32, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 169, 170, 173, 174, 177, 181, 182, 184], "allevi": 169, "alloc": [4, 12, 14, 15, 26, 29, 30, 31, 116, 121, 123, 124, 131, 169, 173], "allow": [11, 36, 104, 111, 112, 113, 114, 115, 119, 123, 124, 132, 177, 182], "almost": [111, 113, 114, 115], "along": 14, "alpha": [43, 51, 64, 65, 66, 67, 68, 105, 106, 111, 112, 116, 117, 129, 169, 177], "alpha_": [111, 116], "alphabet": [51, 64, 65, 66, 67, 68, 117, 129], "alreadi": [30, 132, 174], "also": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 29, 30, 31, 32, 40, 43, 51, 64, 65, 66, 67, 68, 117, 120, 121, 126, 127, 128, 129, 131, 132, 137, 139, 140, 145, 169, 173, 180, 181, 182, 184, 186], "alter": 110, "altern": [10, 112, 174], "alwai": [98, 162, 177], "amd": [7, 8, 43, 46, 55], "among": [14, 15, 120, 127, 128, 131, 132, 182], "amount": 13, "amplitud": 110, "an": [4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 23, 26, 29, 30, 31, 32, 33, 36, 39, 43, 51, 53, 54, 64, 65, 66, 67, 68, 73, 76, 97, 98, 99, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 153, 154, 156, 157, 158, 167, 176, 181, 182, 184, 187], "analys": 43, "analysi": [12, 13, 15, 39, 40, 43, 113, 116, 162, 183, 184], "analyst": [143, 182, 186], "analyst_view": [4, 186], "analyz": [10, 14, 15, 18, 19, 23, 29, 30, 31, 32, 36], "andersen": 112, "angular": [58, 60, 62, 63], "ani": [32, 43, 50, 51, 64, 65, 66, 67, 68, 112, 117, 119, 120, 121, 123, 124, 126, 127, 129, 131, 132, 133, 140, 169, 172, 175, 176, 177, 182, 184, 185, 186, 187], "ann": 33, "annual": [4, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 43, 66, 67, 68, 98, 112, 134, 135, 136, 173], "annualized_factor": [39, 112, 134, 135, 136], "annualized_mean": [9, 10, 14, 15, 46, 66, 134, 135, 136, 183], "annualized_semi_devi": [68, 134, 135, 136], "annualized_semi_vari": [68, 134, 135, 136], "annualized_sharpe_ratio": [7, 9, 10, 14, 15, 31, 33, 36, 39, 40, 43, 67, 134, 135, 136, 169, 181, 182, 184, 185], "annualized_sortino_ratio": [9, 10, 14, 15, 31, 67, 134, 135, 136], "annualized_standard_devi": [14, 68, 134, 135, 136], "annualized_vari": [9, 10, 18, 46, 68, 134, 135, 136, 183], "annum": 13, "anoth": [13, 14, 53, 54, 119, 120, 123, 124, 126, 127, 131, 136, 173, 177, 184, 186], "anthoni": [74, 136], "anto": 53, "anymor": 12, "api": [5, 6, 8, 33, 43, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 143, 144, 169, 172, 174, 175, 176, 177, 182, 185, 186, 187], "append": [12, 29, 30, 32, 133, 135, 183], "appl": [4, 11, 12, 13, 19], "appli": [6, 11, 12, 13, 58, 60, 62, 63, 98, 112, 119, 120, 121, 123, 124, 126, 127, 128, 131, 133, 136, 147, 160, 164, 173, 177], "applic": [50, 52, 53, 54, 55, 56, 104, 123, 160, 174, 177], "appreci": 169, "approach": [13, 14, 15, 119, 120, 123, 124, 126, 127, 131, 137, 143, 169, 177, 182, 186], "appropri": [30, 52, 53, 54, 55, 56, 137, 138, 139, 174], "approxim": [114, 169, 173], "ar": [0, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 29, 30, 31, 32, 33, 36, 43, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 162, 169, 172, 173, 174, 175, 176, 177, 181, 182, 184, 185, 186], "arang": 43, "arg": [51, 57, 64, 65, 66, 67, 68, 101, 102, 117, 129, 141, 142, 148, 149], "argsort": [14, 15], "argument": [50, 51, 57, 64, 65, 66, 67, 68, 95, 101, 102, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 141, 142, 148, 149, 177], "aris": [15, 120, 127, 182, 187], "arma": [97, 181], "around": [14, 31, 33, 36, 39, 111], "arrai": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 39, 50, 57, 58, 59, 60, 61, 62, 63, 95, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 150, 151, 152, 153, 165, 166, 172, 175, 176, 182, 184, 185, 186, 187], "articl": 114, "asarrai": [7, 8, 14, 15, 95, 181, 184], "ascend": 133, "ascii": [51, 64, 65, 66, 67, 68, 117, 129], "assembl": 40, "asset": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 38, 40, 41, 43, 46, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 151, 152, 153, 162, 169, 170, 172, 173, 174, 175, 176, 180, 182, 184, 185, 186, 187], "asset_i": 143, "asset_j": 143, "asset_nam": 19, "assets_covari": 136, "assets_expected_return": 136, "assets_view": 6, "assign": [11, 51, 97, 100, 119, 120, 121, 123, 124, 126, 127, 131, 139], "associ": [76, 103, 111, 113, 114, 115], "assum": [4, 6, 10, 12, 13, 51, 64, 65, 66, 67, 68, 111, 113, 114, 115, 117, 129, 132], "assume_cent": [111, 113, 114, 115], "assumpt": [153, 173], "astyp": [14, 15, 43], "attent": 169, "attilio": [116, 140, 144], "attribut": [50, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 172, 175, 176, 182, 186, 187], "author": 169, "auto": [32, 43, 112, 182], "auto_exampl": [16, 21, 24, 27, 34, 37, 41, 44, 47, 49], "auto_examples_jupyt": 48, "auto_examples_python": 48, "automat": [150, 151, 174], "auxiliari": [131, 182], "avail": [43, 53, 54, 103, 104, 109, 111, 112, 113, 114, 115, 116, 120, 121, 123, 125, 126, 127, 128, 131, 132, 143, 144, 145, 146, 150, 151, 152, 153, 172, 174, 175, 176, 179, 180, 182, 184, 185, 187], "averag": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 39, 40, 43, 51, 67, 68, 69, 100, 107, 127, 131, 134, 135, 136, 137, 140, 169, 181, 182], "average_drawdown": [68, 119, 120, 123, 124, 127, 131, 134, 135, 136], "average_drawdown_ratio": [67, 134, 135, 136], "avers": [12, 13, 75, 76, 109, 121, 127, 134, 135, 136, 182], "avg": [14, 15, 36, 40], "avoid": [7, 8, 32, 36, 43, 97, 99, 112, 120, 128, 132, 137, 181, 182], "axi": [29, 30, 32, 133, 134, 135, 136], "b": [11, 12, 110, 120, 121, 126, 127, 131, 139, 143, 182, 184], "bac": [7, 8, 43, 46, 55], "back": 162, "ball": [26, 121, 182], "bank": [74, 136], "bar": [43, 116], "barmod": 43, "barrier": [131, 182], "base": [28, 29, 36, 40, 48, 50, 57, 64, 96, 97, 101, 102, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 139, 141, 142, 148, 149, 152, 153, 160, 166, 169], "basecombinatorialcv": [128, 132], "basecovari": [58, 103, 104, 109, 112, 116, 144, 182], "basecovarianceuncertaintyset": [120, 127], "basecrossvalid": [128, 132], "basedist": [119, 123, 124, 128], "baseestim": [112, 128, 146], "baseloadingmatrix": [5, 145], "basemu": 144, "basemuuncertaintyset": [120, 127], "baseoptim": [99, 128, 132], "baseportfolio": [133, 135, 136, 184], "baseprior": [119, 120, 121, 123, 124, 125, 126, 127, 131, 143, 145, 150, 151, 152, 153], "basic": 20, "bay": [116, 117], "bayes_stein": [116, 117], "bayesian": [143, 169, 186], "bby": [43, 46, 169, 186], "becaus": [4, 6, 12, 18, 30, 43, 114, 139, 173, 181], "becom": [12, 128, 132, 184], "been": [29, 30, 51, 64, 65, 66, 67, 68, 110, 117, 129, 132, 137, 138, 139, 160, 169], "befor": [39, 40, 48, 51, 64, 65, 66, 67, 68, 97, 98, 111, 113, 114, 115, 117, 129, 133, 139, 184], "begin": [51, 64, 65, 66, 67, 68, 117, 127, 129, 131, 140, 160, 182], "behav": 173, "behind": 169, "being": [97, 114, 177], "belief": [3, 4, 5, 29, 182, 186], "bellow": 29, "belong": [9, 10, 183], "below": [4, 6, 9, 11, 12, 13, 14, 15, 29, 30, 32, 33, 36, 43, 50, 77, 79, 88, 98, 100, 110, 111, 119, 120, 121, 123, 124, 126, 127, 131, 134, 135, 136, 137, 139, 169, 173, 177, 182], "bench": [3, 18, 19, 20, 23, 26, 29, 30, 32], "benchmark": [7, 8, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 40, 43, 125, 126, 127, 128, 132, 182], "benefit": 177, "best": [38, 41, 48, 111, 138, 169, 170, 177], "best_estimator_": [14, 15, 31, 33, 36, 40, 43, 169, 177], "best_model": [14, 15, 169, 177], "best_model_r": 15, "best_model_rd": 14, "best_params_": [14, 15, 40], "beta": [5, 70, 71, 72, 73, 75, 76, 92, 116, 134, 135, 136, 145, 150, 151, 152, 153, 186], "beta_": [43, 112, 116], "better": [14, 15, 29, 30, 31, 32, 43, 112, 120, 121, 123, 124, 126, 127, 131, 134, 135, 136, 182], "between": [2, 12, 14, 15, 29, 30, 32, 46, 50, 51, 61, 64, 65, 66, 67, 68, 82, 111, 112, 113, 114, 115, 117, 124, 126, 127, 129, 134, 135, 136, 140, 143, 160, 177, 182], "bia": [13, 116, 119, 120, 123, 124, 126, 127, 131, 136], "bibtex": 169, "big": 11, "biggl": [140, 173], "biggr": [140, 173], "bigl": 160, "bigr": 160, "bin": [61, 133, 155, 165, 166], "binary_train_test_set": 97, "binder": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46], "binom": 50, "bisect": [29, 30, 123, 124, 182], "bi\u0144kowski": [123, 124], "bj\u00f6rkman": 112, "black": [1, 16, 48, 143, 170, 182], "blacklitterman": [4, 6, 169, 182, 186], "block": [113, 150, 151], "block_siz": [113, 150, 151], "blue": [29, 30, 32, 50], "bodnar": [116, 117], "bodnar_okhrin": [116, 117], "bollerslev": 112, "bond": [120, 121, 126, 127, 131, 143, 169, 173], "bool": [50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 95, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 162, 164], "boolean": [137, 138, 139], "bootstrap": [150, 151, 169], "bootstrapcovarianceuncertaintyset": 187, "bootstrapmuuncertaintyset": [15, 169, 182, 187], "both": [2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 31, 33, 36, 39, 43, 97, 114, 133, 136, 154, 162, 173, 182, 183, 187], "bound": [9, 14, 73, 76, 119, 120, 121, 123, 124, 126, 127, 131, 134, 135, 136], "boundari": [51, 64, 65, 66, 67, 68, 117, 129], "brace": [51, 64, 65, 66, 67, 68, 117, 129], "break": [51, 64, 65, 66, 67, 68, 117, 129, 178], "bring": 26, "browser": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46], "bsd": 169, "budget": [21, 120, 121, 126, 127, 131, 169, 170, 177], "bui": 12, "build": [3, 4, 5, 6, 19, 58, 60, 62, 63, 124, 128, 169, 178, 183, 187], "built": 169, "bunch": 132, "busi": [12, 14, 15, 31, 33, 36, 40, 43, 173], "c": [114, 131, 160, 182, 184], "c_": [12, 51, 119, 120, 123, 124, 126, 127, 131, 136, 160], "c_t": 51, "cach": [53, 54, 120, 174, 184], "calcul": [50, 51, 111], "call": [7, 8, 14, 29, 30, 32, 51, 61, 64, 65, 66, 67, 68, 99, 117, 120, 127, 128, 129, 140, 177, 183, 184], "callabl": [95, 120, 121, 126, 127, 131], "calmar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 134, 135, 136], "calmar_ratio": [36, 67, 134, 135, 136, 169], "cambridg": [124, 128], "can": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 51, 57, 61, 64, 65, 66, 67, 68, 73, 76, 82, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 162, 164, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187], "candid": 177, "cannot": [12, 82, 134, 135, 136, 173], "cap": [11, 109], "capit": [11, 51, 64, 65, 66, 67, 68, 117, 129], "captur": 59, "cardin": [14, 51, 120, 126, 127, 160], "carlo": [169, 173], "carri": 112, "case": [11, 15, 26, 51, 64, 65, 66, 67, 68, 95, 99, 117, 120, 121, 126, 127, 129, 131, 147, 160, 173, 184, 187], "casefold": [51, 64, 65, 66, 67, 68, 117, 129], "caseless": [51, 64, 65, 66, 67, 68, 117, 129], "caus": [43, 112], "cd": 111, "cdar": [1, 7, 8, 9, 14, 15, 16, 18, 19, 20, 23, 28, 29, 34, 36, 40, 48, 68, 73, 119, 120, 123, 124, 127, 131, 134, 135, 136, 169, 170, 182, 184], "cdar_beta": [120, 127, 131, 134, 135, 136], "cdar_ratio": [36, 67, 134, 135, 136, 182], "cdot": [11, 12, 13, 109, 119, 120, 121, 123, 124, 126, 127, 131, 136, 184], "center": [26, 51, 52, 53, 54, 55, 56, 64, 65, 66, 67, 68, 111, 113, 114, 115, 117, 121, 129, 174, 182], "central": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 65, 78, 90, 134, 135, 136, 169], "centroid": 51, "certain": [110, 182], "chain": [29, 30, 32], "challeng": 111, "chanc": 33, "chang": [5, 7, 8, 12, 13, 14, 29, 30, 32, 40, 43, 111, 112, 113, 114, 115, 173, 178], "char": [51, 64, 65, 66, 67, 68, 117, 129], "charact": [51, 64, 65, 66, 67, 68, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "characterist": 173, "check": [7, 8, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 162, 164, 182], "check_observations_ord": 135, "chen": 114, "chernoff": [73, 76, 134, 135, 136], "chi": [150, 151, 152, 153], "choic": [29, 30, 32, 111, 116, 173, 177], "choleski": [3, 4, 5, 101, 103, 104, 105, 107, 110, 112, 113, 120, 121, 125, 126, 127, 131, 143, 147, 162, 164, 182, 186], "choos": [31, 33, 36, 39, 100, 120, 121, 126, 127, 131, 181], "chose": 19, "chosen": [29, 31, 33, 36, 40, 58, 128, 132, 177, 182], "christensen": 112, "christoffersen": 112, "chronolog": 135, "circ": 173, "circular": [150, 151, 169], "clarabel": [26, 120, 121, 126, 127, 131], "class": [7, 8, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 177, 182, 183, 184, 187], "classifi": 103, "classmethod": [51, 64, 65, 66, 67, 68, 117, 129], "claus": 169, "clear": [14, 133, 134, 135, 136], "clearli": 14, "clip": [101, 103, 104, 105, 107, 110, 112, 113, 145, 162], "clone": [2, 14, 15], "close": [29, 52, 53, 54, 55, 56, 111, 152, 173, 174], "closer": [26, 43, 112], "cluster": [29, 30, 31, 33, 34, 104, 119, 123, 124, 128, 132, 160, 170], "clustering_estim": [32, 33, 128, 182], "clustering_estimator_": [32, 128], "clustering_estimator__linkage_method": 33, "co": 110, "code": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48, 51, 64, 65, 66, 67, 68, 117, 129, 169], "codec": [51, 64, 65, 66, 67, 68, 117, 129], "codepend": [57, 58, 59, 60, 61, 62, 63, 119, 123, 124, 128, 175, 182], "codependence_": [57, 58, 59, 60, 61, 62, 63, 175], "coef": [14, 43], "coeffici": [14, 43, 112, 113, 114, 115, 120, 126, 127], "coefs_": [43, 112], "coher": [50, 73, 76, 134, 135, 136, 169, 184], "collect": [99, 128, 132, 181, 182], "color": [14, 15, 29, 30, 32, 40, 43, 50, 133], "color_scal": [9, 10, 14, 15, 133], "column": [7, 8, 11, 12, 13, 19, 43, 99, 111, 112, 119, 120, 121, 123, 124, 126, 127, 131, 135, 136, 137, 138, 139, 143, 184], "column_indic": 99, "com": [7, 8, 169], "combin": [31, 33, 36, 39, 97, 100, 113, 114, 115, 132, 143, 177, 181], "combinatori": [28, 34, 48, 96, 97, 99, 100, 170, 182], "combinatorialcv": [128, 132], "combinatorialpurgecv": 181, "combinatorialpurgedcv": [31, 33, 36, 39, 99, 128, 132, 169, 181, 182], "come": [52, 53, 54, 55, 56, 111, 174], "common": [5, 6, 29, 52, 98, 140, 143, 144, 145, 173, 182, 186], "commonli": 182, "commut": [152, 159], "comp_cov": [111, 113, 114, 115], "compar": [2, 7, 8, 10, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 43, 51, 64, 65, 66, 67, 68, 97, 98, 111, 113, 114, 115, 117, 126, 127, 129, 135, 139, 143, 147, 181, 182, 184], "comparison": [2, 3, 4, 5, 6, 31, 51, 64, 65, 66, 67, 68, 117, 129], "compat": [5, 7, 8, 98, 169, 181, 184, 185, 186], "complement": 171, "complet": [31, 51, 180], "complex": [133, 182], "compon": [5, 50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 173, 186], "compos": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 50, 52, 53, 54, 55, 56, 119, 120, 123, 124, 126, 127, 131, 133, 135, 136, 169, 174, 184], "composit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 31, 33, 36, 39, 40, 43, 46, 53, 54, 55, 133, 134, 135, 136, 174, 183, 184], "compound": [80, 81, 133, 134, 135, 136, 140, 144, 173, 183], "comput": [4, 14, 15, 29, 30, 32, 43, 50, 51, 58, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 119, 120, 123, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 139, 143, 150, 151, 152, 153, 159, 160, 162, 164, 165, 166, 173, 177, 182, 184, 186], "concaten": [9, 51, 64, 65, 66, 67, 68, 117, 129], "concentr": [30, 74, 136, 169], "concept": [7, 8, 73, 76, 134, 135, 136], "concern": [17, 22, 25, 28, 35, 48, 178], "conclud": 30, "condens": 50, "condensed_distance_": 50, "condit": [2, 8, 10, 67, 68, 70, 71, 82, 103, 111, 113, 120, 121, 127, 131, 134, 135, 136, 169, 182], "confid": [15, 70, 71, 72, 73, 75, 76, 92, 120, 121, 127, 131, 134, 135, 136, 143, 150, 151, 152, 153, 154], "confidence_level": [15, 150, 151, 152, 153, 182, 187], "configur": [137, 138, 139], "confirm": 30, "consecut": 177, "consid": [14, 15, 31, 51, 64, 65, 66, 67, 68, 117, 129, 136, 139, 152, 177], "consider": 169, "consist": [5, 8, 36, 50, 51, 57, 58, 59, 60, 61, 62, 63, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 143, 144, 177, 181, 182, 186], "constant": [103, 116], "constrain": [14, 15, 182], "constraint": [1, 2, 9, 10, 14, 15, 16, 26, 48, 120, 121, 126, 127, 131, 170, 182], "construct": [26, 110, 112, 121, 177, 182], "constructor": [132, 177], "consum": 180, "consumpt": 99, "contain": [2, 3, 4, 5, 7, 8, 29, 30, 32, 50, 51, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 177, 182, 183, 184, 186], "context": [99, 111, 128, 132, 146], "conting": 61, "continu": [14, 15, 36, 140, 173, 177], "contribut": [28, 34, 36, 48, 50, 123, 131, 133, 134, 135, 136, 139, 169, 170, 184], "contributor": 169, "control": [11, 26, 98, 99, 111, 126, 127, 143, 184], "convent": [50, 57, 58, 59, 60, 61, 62, 63, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 143, 144], "converg": [26, 111, 120, 147], "convers": 173, "convert": [4, 6, 12, 13, 51, 64, 65, 66, 67, 68, 95, 117, 129, 143, 144, 161, 162, 163, 173], "convex": [26, 65, 113, 114, 115, 120, 121, 131, 136, 169, 182, 184], "cookbook": 173, "coordin": 111, "cophenet": [29, 30, 32, 50], "copi": [51, 64, 65, 66, 67, 68, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "core": 177, "corr": [43, 58, 60, 62, 63, 112, 137, 161, 163], "correct": [150, 151], "correl": [12, 18, 29, 30, 32, 38, 41, 43, 48, 58, 59, 60, 62, 63, 97, 110, 112, 123, 124, 137, 139, 161, 162, 163, 169, 170, 181], "correspond": [10, 50, 79, 99, 104, 111, 112, 128, 132, 133, 134, 135, 136, 137, 138, 139, 181, 184], "cost": [1, 16, 48, 100, 119, 120, 121, 123, 124, 126, 127, 131, 136, 170, 182, 184], "coul": 2, "could": 173, "count": [51, 64, 65, 66, 67, 68, 110, 117, 129, 133], "coupl": [6, 140], "cov": [43, 113, 114, 115, 152, 161, 162, 163, 173, 182], "cov_nearest": [40, 101, 103, 104, 105, 107, 110, 112, 113, 145], "covari": [3, 4, 5, 6, 17, 21, 40, 48, 58, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 131, 136, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 161, 162, 163, 170, 173, 182, 186, 187], "covariance_": [43, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 172], "covariance_estim": [3, 5, 20, 36, 43, 58, 103, 104, 109, 116, 144, 169, 180, 182, 186], "covariance_estimator_": [58, 103, 104, 109, 116, 144], "covariance_uncertainty_set_estim": [120, 127, 187], "covariance_uncertainty_set_estimator_": [120, 127], "covariancedist": [175, 182], "covert": 112, "cp": [120, 121, 126, 127, 131], "cpu": 99, "creat": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 99, 174, 183, 186], "criterion": 136, "cross": [14, 32, 40, 96, 97, 98, 99, 111, 128, 132, 177, 182], "cross_val_predict": [12, 13, 14, 15, 31, 33, 36, 39, 40, 43, 132, 169, 181, 184], "cross_val_scor": 95, "crsp": [52, 53, 54, 55, 56, 174], "crucial": 12, "ct": [133, 134, 135, 136], "cumul": [7, 8, 12, 13, 18, 19, 20, 26, 31, 33, 36, 39, 40, 43, 80, 81, 133, 134, 135, 136, 150, 151, 152, 153], "cumulative_return": [134, 135, 136, 184], "cumulative_returns_df": [134, 135, 136, 184], "current": [111, 113, 114, 115, 134, 135, 136, 139, 177], "custom": [40, 95, 120, 121, 126, 127, 131, 173, 177], "custom_scor": 177, "cv": [12, 13, 14, 15, 28, 31, 34, 36, 39, 40, 43, 48, 97, 98, 99, 111, 128, 132, 169, 170, 177, 181, 182], "cv_result": [14, 15, 40, 43], "cv_results_": [14, 15, 40, 43, 111, 177], "cvar": [1, 2, 7, 9, 14, 15, 16, 17, 18, 20, 21, 23, 27, 28, 30, 31, 32, 33, 34, 36, 40, 68, 76, 119, 120, 121, 123, 124, 127, 128, 131, 134, 135, 136, 170, 177, 184], "cvar_beta": [15, 120, 121, 127, 131, 134, 135, 136], "cvar_ratio": [2, 15, 31, 33, 67, 134, 135, 136], "cvpxy": [120, 121, 126, 127, 131], "cvx": [43, 46, 120, 169, 186], "cvxpy": [120, 121, 126, 127, 131, 169], "d": [43, 50, 51, 61, 110, 112, 153, 160], "d_": 160, "dai": [12, 13, 14, 15, 31, 33, 36, 39, 40, 43, 98, 173], "daili": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 52, 53, 54, 55, 56, 112, 119, 120, 123, 124, 126, 127, 131, 136, 143, 173, 174], "dar": [72, 73, 134, 135, 136], "dash": [14, 15, 40], "data": [43, 46, 50, 51, 52, 53, 54, 55, 56, 64, 65, 66, 67, 68, 97, 98, 99, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 121, 128, 129, 132, 137, 138, 139, 140, 144, 145, 166, 169, 174, 177, 178, 180, 181, 182, 184, 186], "data_hom": [53, 54], "dataclass": [3, 4, 5, 147, 154, 186], "datafram": [11, 12, 13, 43, 52, 53, 54, 55, 56, 98, 112, 119, 120, 121, 123, 124, 126, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 172, 175, 176, 182, 184, 185, 186, 187], "dataset": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 46, 97, 101, 103, 104, 105, 107, 110, 112, 113, 162, 171, 172, 175, 176, 177, 180, 181, 182, 183, 185, 186, 187], "date": [7, 8, 43, 46, 52, 53, 54, 56, 98, 140, 184], "dateoffset": 98, "datetim": [98, 184], "datetimeindex": 98, "ddof": [107, 182], "de": [29, 32, 58, 60, 62, 63, 97, 103, 104, 124, 128, 182], "decad": [123, 124], "decim": [51, 64, 65, 66, 67, 68, 117, 129], "declar": 111, "decomposit": [5, 101, 103, 104, 105, 107, 110, 112, 113, 120, 121, 125, 126, 127, 131, 143, 145, 147, 162, 164, 182, 186], "deconstruct": 110, "decreas": [40, 177], "dedic": 177, "deep": [50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 169, 177], "def": [51, 64, 65, 66, 67, 68, 117, 129, 177, 182], "defaul": 98, "default": [3, 4, 5, 7, 8, 11, 12, 13, 14, 26, 29, 30, 32, 40, 43, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 85, 87, 88, 92, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162, 167, 173, 174, 177, 181, 182, 184, 186], "defin": [2, 11, 12, 50, 58, 59, 60, 61, 62, 63, 74, 75, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 154, 160, 173, 187], "definit": [40, 101, 103, 104, 105, 107, 110, 112, 113, 145, 162, 164], "deform": 10, "degre": [82, 134, 135, 136, 143, 150, 151, 152, 153], "delai": 99, "delatt": 169, "delet": [51, 64, 65, 66, 67, 68, 117, 129], "delimit": [51, 64, 65, 66, 67, 68, 117, 129], "demand": 99, "demiguel": 169, "demonstr": [36, 40, 173, 182], "dendrogram": [50, 123, 124, 182], "denois": [3, 103, 182, 186], "denoisecovari": [3, 169, 172, 182, 186], "denomin": [110, 114, 139], "denot": [152, 173], "densiti": [160, 165], "depend": [12, 33, 59, 61, 75, 95, 110, 120, 121, 126, 127, 131, 134, 135, 136, 137, 150, 151, 169, 173, 181], "deriv": [112, 125, 173], "descend": [133, 136], "descent": 111, "describ": [113, 143, 177], "descript": [50, 51, 127, 131], "design": [6, 169, 182], "detail": [0, 40, 43, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 116, 120, 121, 123, 125, 126, 127, 128, 131, 132, 143, 144, 145, 146, 150, 151, 152, 153, 169, 177], "determin": [33, 99, 111, 116, 128, 132, 135, 160, 173], "determinist": [13, 119, 120, 123, 124, 126, 127, 131], "deton": 104, "detonecovari": [169, 172], "develop": [29, 30, 32, 123, 124, 128, 160, 169, 178, 182], "deviat": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 40, 43, 67, 68, 79, 85, 87, 89, 111, 120, 127, 131, 133, 134, 135, 136, 161, 162, 163, 169, 182], "df": [43, 52, 53, 54, 55, 56, 133], "diaconi": 165, "diag": 173, "diagon": [143, 145, 150, 151, 152, 153], "dict": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 46, 50, 57, 58, 59, 60, 61, 62, 63, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153], "dictionari": [11, 12, 13, 51, 64, 65, 66, 67, 68, 112, 117, 119, 120, 121, 123, 124, 126, 127, 129, 131, 132, 136, 143, 177], "diebol": 112, "differ": [2, 7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 33, 36, 39, 40, 46, 50, 67, 68, 82, 86, 114, 123, 126, 127, 131, 133, 134, 135, 136, 140, 160, 169, 173, 182], "differenti": 103, "digit": [51, 64, 65, 66, 67, 68, 117, 129], "dimens": 147, "dimension": [5, 40, 101, 103, 104, 105, 107, 110, 112, 113, 116, 145, 162, 186], "direcli": 13, "direct": [111, 169], "directli": [2, 11, 61, 119, 120, 123, 124, 126, 127, 131, 132, 147, 173, 177, 184], "directori": 174, "dirichlet": [130, 168, 169], "dirk": 136, "discard": [51, 64, 65, 66, 67, 68, 117, 129], "discret": [26, 121, 177, 182], "dispatch": 99, "dispers": 160, "displai": [7, 8, 29, 30, 32, 36, 40, 50, 133, 134, 135, 136], "display_sub_ptf_nam": [31, 33, 36, 40, 43, 133], "dist": [51, 111, 113, 114, 115], "distanc": [31, 33, 50, 51, 100, 111, 113, 114, 115, 119, 123, 124, 128, 156, 160, 169, 171, 182], "distance_": [57, 58, 59, 60, 61, 62, 63, 171, 175], "distance_estim": [29, 30, 31, 32, 33, 50, 119, 123, 124, 128, 171, 182], "distance_estimator_": [119, 123, 124, 128], "distancecorrel": [175, 182], "distinct": [29, 30, 32, 50], "distinguish": [77, 79, 85, 87, 88, 120, 127, 131, 134, 135, 136], "distribut": [3, 4, 5, 14, 15, 26, 29, 43, 52, 53, 54, 55, 56, 82, 111, 112, 113, 114, 115, 121, 130, 133, 134, 135, 136, 150, 151, 152, 153, 160, 167, 168, 169, 173, 174, 177, 182, 186, 187], "distribution": [27, 121, 169, 170], "distributionallyrobustcvar": [25, 26, 48, 182], "diverg": 46, "diversif": [14, 24, 36, 120, 126, 127, 136, 169, 170], "diversifi": [58, 60, 62, 63, 74, 124, 128, 136], "divid": [12, 67, 111, 113, 114, 115, 134, 135, 136], "dividend": [52, 53, 54, 55, 56, 174], "divis": [30, 123, 182], "do": [31, 177], "docstr": [43, 111], "document": [7, 8, 43, 120, 121, 126, 127, 131, 180], "doe": [14, 112, 113, 174, 177], "doesn": [29, 114], "domin": [82, 133, 134, 135, 136, 139, 169, 184], "don": 11, "done": [51, 64, 65, 66, 67, 68, 111, 117, 129, 177], "donnat": [123, 124], "dot": [0, 32, 36, 128, 132, 136, 182, 184], "doubl": 15, "down": [14, 29, 30, 32, 123, 124, 182], "download": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48, 53, 54, 174], "download_if_miss": [53, 54], "downsid": [68, 77, 79, 85, 87, 88, 120, 127, 131, 134, 135, 136, 182], "drawdown": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 36, 40, 65, 67, 68, 69, 70, 72, 73, 81, 83, 91, 120, 127, 131, 134, 135, 136, 169, 182, 184], "drawdown_at_risk": [65, 119, 123, 124, 134, 135, 136], "drawdown_at_risk_beta": [134, 135, 136], "drawdown_at_risk_ratio": [67, 134, 135, 136], "drawn": [111, 113, 114, 115, 130], "drift": 184, "driven": 121, "drop": [38, 41, 48, 132, 137, 140, 169, 170], "drop_inceptions_nan": 140, "dropcorrel": [39, 185], "dt": [98, 184], "dtype": [29, 31, 33, 36, 39, 50, 111], "dual": 111, "dualiti": 111, "due": [12, 33, 40, 99, 101, 103, 104, 105, 107, 110, 112, 113, 146, 162, 184], "duplic": 120, "durat": [12, 98], "dure": [13, 30, 50, 58, 59, 60, 61, 62, 63, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 124, 126, 127, 128, 131, 132, 137, 138, 139, 143, 144, 145, 182], "dynam": 120, "e": [5, 98, 111, 112, 113, 114, 115, 132, 133, 145, 173, 186], "each": [5, 7, 8, 11, 12, 13, 14, 18, 19, 20, 23, 29, 30, 31, 32, 33, 36, 39, 40, 43, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 177, 181, 182, 184, 186], "earlier": 29, "easi": 173, "easier": 43, "eco": [120, 121, 126, 127, 131], "edar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 68, 119, 120, 123, 124, 127, 131, 134, 135, 136, 169, 182], "edar_beta": [120, 127, 131, 134, 135, 136], "edar_ratio": [67, 134, 135, 136], "eff": [74, 136], "effect": [7, 8, 9, 18, 19, 20, 23, 29, 30, 32, 74, 110, 111, 112, 113, 114, 115, 136, 137], "effective_number_asset": 136, "effici": [1, 10, 16, 46, 48, 124, 128, 170, 173, 177, 183], "efficient_frontier_s": [9, 14, 15, 46, 127, 183], "egber": 112, "eigenvalu": [101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 162], "eigenvector": [103, 104], "either": [137, 177], "elast": 111, "eldar": 114, "electr": [4, 11, 12, 13, 19], "electron": [124, 128], "element": [103, 104, 120, 121, 124, 126, 127, 128, 131, 132, 133, 137, 138, 139, 150, 151, 152, 153, 173], "ellipsoid": [15, 120, 127, 150, 151, 152, 153, 154, 182, 187], "elsewher": 111, "embargo": [31, 33, 36, 39, 97, 181], "embargo_s": 97, "embed": 15, "emit": 162, "empir": [1, 6, 16, 48, 103, 107, 108, 144, 152, 153, 169, 170], "empiricalcovari": [36, 43, 103, 104, 109, 112, 116, 144, 172], "empiricalcovarianceuncertaintyset": [150, 187], "empiricalmu": [144, 176], "empiricalmuuncertaintyset": [15, 187], "empiricalprior": [3, 5, 20, 29, 36, 43, 46, 119, 120, 121, 123, 124, 125, 126, 127, 131, 143, 145, 150, 151, 152, 153, 169, 173, 177, 180, 182, 186], "emploi": [29, 31, 124, 182], "empti": [51, 64, 65, 66, 67, 68, 117, 129, 133, 135], "enabl": [43, 180], "enable_metadata_rout": [43, 103, 104, 109, 111, 112, 113, 114, 115, 116, 121, 123, 125, 126, 128, 132, 143, 144, 145, 146, 150, 151, 152, 153, 180], "encapsul": [50, 57, 58, 59, 60, 61, 62, 63, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153], "encod": [51, 64, 65, 66, 67, 68, 117, 129], "end": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 51, 64, 65, 66, 67, 68, 97, 98, 117, 127, 129, 131, 133, 139, 160, 182], "endswith": [51, 64, 65, 66, 67, 68, 117, 129], "enet_tol": 111, "enhanc": [95, 103, 110, 181, 184], "enough": [0, 31, 33, 36, 39, 184], "ensembl": [9, 10, 36, 118, 132, 169, 182], "ensur": [110, 131, 140, 181, 182], "entir": [9, 14, 111], "entri": [51, 169], "entrop": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 65, 67, 68, 73, 75, 76, 120, 127, 131, 134, 135, 136, 169, 182], "entropi": [61, 73, 76, 134, 135, 136], "entropic_risk_measur": [65, 119, 123, 124, 134, 135, 136], "entropic_risk_measure_beta": [134, 135, 136], "entropic_risk_measure_ratio": [67, 134, 135, 136], "entropic_risk_measure_theta": [134, 135, 136], "enum": [51, 64, 65, 66, 67, 68, 117, 129], "enumer": [65, 66, 67, 68, 97, 98, 129, 155], "environ": 174, "epsilon": [43, 112], "eq": 114, "equal": [8, 12, 14, 18, 23, 26, 28, 29, 31, 32, 33, 34, 36, 48, 50, 51, 64, 65, 66, 67, 68, 109, 117, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 133, 169, 170], "equalweight": [2, 8, 14, 23, 26, 29, 30, 32, 33, 36, 130, 182], "equat": 14, "equilibrium": [109, 143, 169, 182], "equilibriummu": [143, 176, 182], "equiti": [120, 121, 126, 127, 131, 143, 169], "equival": [11, 14, 29, 119, 120, 121, 123, 124, 126, 127, 131, 177], "error": [1, 5, 15, 16, 43, 48, 51, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 116, 117, 120, 121, 126, 127, 129, 131, 135, 136, 145, 156, 157, 158, 162, 169, 170, 182, 186, 187], "error_i": 43, "error_norm": [111, 113, 114, 115], "esfahani": [26, 121, 182], "estim": [3, 4, 5, 6, 7, 13, 14, 15, 18, 19, 20, 23, 26, 31, 33, 36, 40, 50, 57, 58, 59, 60, 61, 62, 63, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 169, 173, 180, 181, 185], "estimators_": [36, 132], "et": 110, "etc": [32, 128, 169, 172, 173, 175, 176, 182, 184, 185, 186, 187], "etf": [5, 6, 29, 52], "europ": [120, 121, 126, 127, 131, 143, 169], "european": 143, "evalu": [7, 8, 9, 14, 18, 19, 20, 23, 31, 33, 36, 40, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 177], "evar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 68, 119, 120, 123, 124, 127, 131, 134, 135, 136, 169, 182], "evar_beta": [120, 127, 131, 134, 135, 136], "evar_ratio": [67, 134, 135, 136], "even": [5, 8, 98, 173, 186], "everi": [7, 8, 11, 12, 13, 43, 98, 181, 182], "evid": 112, "evolutionari": 139, "ewcovari": 172, "ewm": 106, "ewmu": [169, 176, 177], "exacerb": 14, "exact": 99, "exactli": [111, 113, 114, 115], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 64, 65, 66, 67, 68, 97, 98, 99, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 136, 137, 138, 139, 143, 147, 169, 170, 171, 172, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187], "exce": 110, "except": [8, 133, 134, 135, 136], "excess": [67, 134, 135, 136], "exclud": [12, 97, 98], "execut": [16, 21, 24, 27, 34, 37, 41, 44, 47, 49, 99, 170], "exhibit": [97, 181], "exist": [50, 98, 111, 112, 113, 114, 115, 120, 121, 126, 127, 131, 174], "exp": 173, "expand": [51, 64, 65, 66, 67, 68, 117, 129], "expandtab": [51, 64, 65, 66, 67, 68, 117, 129], "expect": [2, 3, 4, 5, 6, 9, 12, 13, 15, 18, 19, 23, 68, 70, 71, 82, 102, 106, 108, 109, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 131, 134, 135, 136, 143, 144, 145, 147, 151, 153, 154, 173, 182, 186, 187], "expected_returns_from_asset": 136, "expend_train": 98, "explain": [5, 12, 13, 29, 46, 104, 145, 186], "explan": 180, "explicit": [57, 101, 102, 111, 141, 142, 148, 149], "explicitli": 180, "exploit": [30, 33, 123, 182], "explor": [46, 111, 177, 182, 183], "explos": 99, "expon": [58, 60, 62, 63, 177], "exponenti": [75, 105, 106, 134, 135, 136, 169], "expos": 128, "express": [12, 13, 43, 51, 64, 65, 66, 67, 68, 99, 112, 117, 119, 120, 121, 123, 124, 126, 127, 129, 131, 136, 143], "extend": [36, 46, 110, 133, 181, 183], "extrariskmeasur": [95, 119, 123, 124, 128, 132, 134, 135, 136], "extrem": [79, 110, 134, 135, 136, 169], "ey": 10, "f": [2, 14, 23, 31, 33, 36, 39, 43, 46, 51, 64, 65, 66, 67, 68, 97, 98, 100, 117, 127, 129, 182, 184], "f_": [13, 100, 119, 120, 123, 124, 126, 127, 131, 136], "face": [111, 169], "fact": 169, "factor": [1, 3, 4, 16, 29, 48, 52, 99, 105, 106, 109, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 140, 145, 146, 147, 150, 151, 152, 153, 170, 182], "factor_pric": [5, 6, 29, 169, 182, 186], "factor_prior_estim": [5, 6, 145, 169, 182, 186], "factor_prior_estimator_": 145, "factor_view": [6, 169, 182], "factori": 95, "factormodel": [5, 6, 29, 169, 182, 186], "fail": [111, 120, 121, 126, 127, 131, 162], "failur": [51, 64, 65, 66, 67, 68, 117, 129], "fall": [15, 182], "fals": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 51, 53, 54, 58, 60, 62, 63, 64, 65, 66, 67, 68, 80, 81, 95, 98, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 162, 164, 169, 177, 181, 182, 183, 185], "farthest": 51, "fast": [99, 133, 146], "faster": 162, "fat": [79, 134, 135, 136], "favor": 177, "feasibl": [10, 11], "featur": [61, 97, 105, 111, 113, 114, 115, 137, 138, 139, 143, 144, 145, 169, 181], "feature_names_in_": [50, 58, 59, 60, 61, 62, 63, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 124, 126, 127, 128, 131, 132, 137, 138, 139, 143, 144, 145], "feature_names_out": [137, 138, 139], "februari": 113, "fee": [1, 16, 48, 119, 120, 123, 124, 126, 127, 131, 136, 169, 170, 182, 184], "few": 180, "fewer": 98, "field": [51, 64, 65, 66, 67, 68, 117, 129], "fig": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 50], "figur": [7, 8, 14, 15, 40, 50, 133, 134, 135, 136], "file": [16, 21, 24, 27, 34, 37, 41, 44, 47, 49, 170], "fill": [14, 40, 51, 64, 65, 66, 67, 68, 117, 129], "fillchar": [51, 64, 65, 66, 67, 68, 117, 129], "fillcolor": [14, 40], "filter": [14, 133], "final": [2, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 23, 29, 30, 31, 32, 36, 43, 110, 112, 123, 124, 128, 132, 139, 182, 184], "final_estim": [36, 132, 182], "final_estimator_": [36, 132], "financ": [103, 104, 124, 128, 162], "financi": [5, 11, 74, 97, 104, 123, 124, 136, 143, 145, 181, 186], "find": [7, 8, 9, 10, 18, 23, 26, 31, 33, 36, 40, 43, 50, 51, 64, 65, 66, 67, 68, 100, 101, 103, 104, 105, 107, 110, 112, 113, 116, 117, 121, 129, 145, 162, 173, 177, 182, 183], "fine": 169, "finer": 177, "finit": [26, 43, 112, 121, 133, 134, 135, 136, 182], "first": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 29, 36, 39, 40, 43, 46, 51, 64, 65, 66, 67, 68, 77, 98, 104, 111, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 162, 169, 173, 178, 180, 182], "first_front_onli": 133, "first_lower_partial_mo": [68, 119, 120, 123, 124, 127, 131, 134, 135, 136], "first_lower_partial_moment_ratio": [67, 134, 135, 136], "fischer": 143, "fit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 50, 57, 58, 59, 60, 61, 62, 63, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 185, 186, 187], "fit_intercept": [5, 146], "fit_param": [58, 103, 104, 109, 111, 112, 116, 121, 123, 124, 125, 126, 127, 128, 131, 132, 137, 138, 139, 143, 144, 145, 146, 150, 151, 152, 153], "fit_predict": [9, 10, 33, 46, 50, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "fit_transform": [137, 138, 139, 185], "fitness_measur": [134, 135, 136, 139, 184], "fitting_period": [12, 13], "fix": [12, 111, 143], "flag": 133, "flat": 50, "flint": 110, "flip": 95, "float": [11, 12, 13, 14, 15, 40, 58, 59, 60, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 143, 144, 150, 151, 152, 153, 154, 162], "fluctuat": 110, "fold": [12, 31, 33, 36, 39, 97, 98, 99, 100, 111, 128, 132, 177, 181, 184], "folder": [53, 54, 174], "follow": [11, 19, 40, 51, 64, 65, 66, 67, 68, 97, 117, 120, 121, 126, 127, 129, 131, 137, 138, 139, 143, 169, 171, 172, 173, 175, 176, 177, 181, 182, 185, 186, 187], "font": 9, "foral": [127, 182], "forc": [150, 151, 153], "forecast": [112, 143], "forest": 51, "form": [32, 50, 51, 57, 58, 59, 60, 61, 62, 63, 82, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 171], "format": [51, 64, 65, 66, 67, 68, 117, 129, 133, 134, 135, 136, 137, 138, 139], "format_map": [51, 64, 65, 66, 67, 68, 117, 129], "formul": [114, 120, 184], "formula": [12, 109, 113, 114, 116, 119, 120, 123, 124, 126, 127, 131], "forward": [12, 13, 15, 98, 169], "found": [51, 64, 65, 66, 67, 68, 111, 117, 129], "four": 26, "fourth": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 65, 78, 79, 134, 135, 136, 169], "fourth_central_mo": [65, 119, 123, 124, 134, 135, 136], "fourth_lower_partial_mo": [65, 119, 123, 124, 134, 135, 136], "frac": [15, 51, 61, 74, 100, 112, 120, 127, 129, 134, 135, 136, 140, 152, 153, 160, 173, 182], "framework": [169, 178], "frank": [123, 124], "free": [120, 121, 126, 127, 131, 134, 135, 136, 143], "freedman": [61, 155, 165], "freedom": [150, 151, 152, 153], "freq": 98, "freq_offset": 98, "frequenc": [98, 112, 143, 173], "frequent": [173, 184], "fridai": 98, "frobeniu": [111, 113, 114, 115], "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 67, 68, 73, 76, 80, 81, 95, 97, 98, 100, 103, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 162, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187], "front": [51, 64, 65, 66, 67, 68, 117, 129, 133, 139, 183], "frontier": [1, 10, 16, 46, 48, 124, 128, 170, 173, 183], "ftse": [14, 15, 31, 36, 39, 40, 53], "full": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 50, 51, 132, 177, 180, 184], "fulli": [11, 120, 121, 126, 127, 185, 186], "function": [12, 14, 15, 26, 40, 43, 75, 95, 99, 100, 111, 120, 121, 126, 127, 129, 131, 133, 134, 135, 136, 150, 151, 152, 153, 169, 173, 177, 181, 182, 183], "fund": 169, "further": [0, 33], "futur": [4, 6, 112, 120, 121, 126, 127, 131, 173], "g": [43, 100, 111, 112, 113, 114, 115, 132, 169], "g_": 100, "galleri": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48, 170], "gamma": 177, "gap": [50, 111, 123, 160], "garp": [140, 144, 173], "gaussian": [111, 113, 114, 115], "gautier": [123, 124, 169], "ge": [4, 6, 11, 12, 13, 19, 43, 46, 127, 131, 160, 182], "ge0": 182, "gener": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48, 97, 98, 99, 111, 124, 128, 132, 137, 138, 139, 150, 151, 173, 177, 181, 182], "gerber": [5, 110], "gerbercovari": [5, 43, 58, 169, 172], "get": [4, 6, 26, 50, 57, 58, 59, 60, 61, 62, 63, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 173, 186], "get_feature_names_out": [137, 138, 139], "get_measur": [134, 135, 136], "get_metadata_rout": [50, 57, 58, 59, 60, 61, 62, 63, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153], "get_n_split": 98, "get_param": [50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 169, 177], "get_path_id": [96, 97], "get_precis": [111, 113, 114, 115], "get_summari": 169, "get_support": [137, 138, 139], "get_weight": [136, 184], "getter": [111, 113, 114, 115], "gini": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 67, 68, 82, 86, 127, 131, 134, 135, 136, 169, 182], "gini_mean_differ": [36, 68, 134, 135, 136], "gini_mean_difference_ratio": [67, 119, 120, 123, 124, 127, 131, 134, 135, 136], "github": [169, 174], "give": [0, 7, 8, 43, 99, 111, 173], "given": [40, 51, 64, 65, 66, 67, 68, 72, 75, 92, 111, 112, 113, 114, 115, 117, 128, 129, 132, 133, 134, 135, 136, 138, 143, 153, 161, 173, 177], "gmd": [82, 86, 134, 135, 136], "go": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 173], "goal": 103, "goe": [111, 182], "good": [95, 139], "grand": 116, "graph": [111, 133], "graph_obj": 40, "graph_object": [14, 15], "graphic": 169, "graphicallasso": 111, "graphicallassocv": 172, "greater": [30, 79, 104, 111, 120, 121, 126, 127, 131, 134, 135, 136], "greater_is_bett": 95, "greatli": [29, 30, 32], "green": [14, 15, 40], "grid": [14, 15, 43, 111], "grid_search": [14, 15, 36, 40, 43, 177], "grid_search_herc": 31, "grid_search_hrp": [31, 33], "gridsearch": 33, "gridsearchcv": [14, 15, 31, 33, 36, 40, 43, 95, 169, 177], "group": [43, 97, 98, 120, 121, 126, 127, 131, 134, 135, 136, 143, 169, 182], "groups_": 143, "gs_model": 43, "guarante": 121, "guid": [0, 7, 8, 43, 50, 57, 58, 59, 60, 61, 62, 63, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 169, 173], "guidelin": 0, "g\u00e1bor": 59, "h": [61, 110, 133, 134, 135, 136], "ha": [8, 12, 14, 18, 19, 23, 29, 30, 31, 32, 50, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 137, 138, 139, 143, 144, 145, 160, 169, 177, 182], "hadamard": 173, "hand": 140, "handl": [12, 26, 51, 64, 65, 66, 67, 68, 117, 118, 121, 129, 182], "hansen": 112, "hat": [15, 116, 120, 127, 150, 151, 152, 153, 154, 187], "have": [2, 4, 6, 10, 11, 12, 14, 30, 36, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 169, 173, 177], "hd": [29, 30, 32, 43, 46], "head": [7, 8, 43, 46, 52, 53, 54, 55, 56, 174], "heatmap": [29, 30, 32, 50], "heavi": [79, 134, 135, 136], "hee": 51, "height": [29, 30, 32], "help": [5, 145, 186], "herc": [28, 30, 34, 48, 170, 181, 182], "here": [7, 8, 29, 32, 98, 111, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 173, 177, 180, 182], "herfindahl": [74, 136], "hermitian": 164, "hero": 114, "hierarch": [32, 34, 36, 50, 119, 123, 124, 128, 169, 170, 171], "hierarchi": [50, 51, 123, 124], "hierarchical_clustering_estim": [29, 30, 31, 119, 123, 124], "hierarchical_clustering_estimator_": [29, 30, 119, 123, 124], "hierarchical_clustering_estimator__linkage_method": 31, "hierarchicalclust": [29, 30, 31, 32, 33, 119, 123, 124, 128, 171], "hierarchicalequalriskcontribut": [30, 31, 36, 171, 182], "hierarchicalriskpar": [29, 31, 171, 182], "high": [26, 40, 95, 101, 103, 104, 105, 107, 110, 112, 113, 116, 121, 128, 132, 139, 143, 162, 169, 182], "higham": [101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 145, 162], "higham_max_iter": [101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 162], "higher": [2, 12, 13, 14, 31, 74, 79, 98, 134, 135, 136, 138, 169], "highest": [14, 15, 23, 31, 43, 51, 64, 65, 66, 67, 68, 117, 129, 137, 138, 169, 177], "highli": [30, 38, 41, 48, 137, 169, 170, 173], "highlight": 133, "histogram": [165, 166], "histor": [31, 33, 36, 39, 70, 71, 92, 105, 108, 134, 135, 136], "holding_period": [12, 13], "home": 174, "homogen": [0, 4, 6, 12, 119, 120, 123, 124, 126, 127, 131, 136, 184], "horizon": [45, 47, 48, 144, 170, 173], "horizont": [29, 30, 32], "hous": 182, "hover": 133, "hover_measur": [9, 10, 14, 15, 133], "how": [2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 20, 36, 40, 43, 50, 57, 58, 59, 60, 61, 62, 63, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 177, 180, 182], "howev": [12, 13, 14, 29, 33, 119, 120, 123, 124, 126, 127, 131, 173], "hrp": [28, 29, 30, 32, 34, 48, 128, 170, 181, 182], "html": [120, 121, 126, 127, 131], "http": [7, 8, 120, 121, 126, 127, 131, 169], "hugo": 169, "hyper": 169, "hyperparamet": 33, "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 75, 76, 77, 79, 80, 81, 82, 85, 87, 88, 92, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 160, 162, 164, 169, 171, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187], "i_": 152, "id": [96, 97, 134, 135, 136], "idea": 10, "ident": [113, 114, 115, 131, 140, 173], "identifi": [51, 64, 65, 66, 67, 68, 97, 117, 129], "idx": [133, 134, 135, 136], "idzorek": 143, "ieee": 114, "iff": [137, 138, 139], "ignor": [50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 143, 144], "ij": 51, "ill": [103, 173], "ima": 162, "immedi": [97, 99, 181], "impact": [8, 12, 13, 14, 30, 119, 120, 123, 124, 126, 127, 131, 136], "implement": [51, 64, 65, 66, 67, 68, 96, 110, 114, 117, 129, 136, 137, 173, 177, 181, 182, 184], "impli": [42, 44, 48, 112, 169, 170, 180], "implied_vol": [43, 112, 180], "implied_vol_test": 43, "implied_vol_train": 43, "impliedcovari": [43, 180], "import": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 52, 53, 54, 55, 56, 97, 98, 171, 172, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187], "impos": [5, 131, 145, 182, 186], "improv": [7, 8, 9, 18, 19, 20, 23, 31, 33, 36, 39, 40, 120, 147, 160, 183, 184], "inaccuraci": [40, 101, 103, 104, 105, 107, 110, 112, 113, 162], "inappropri": 98, "incept": 140, "includ": [0, 7, 51, 64, 65, 66, 67, 68, 97, 111, 113, 114, 115, 117, 129, 131, 133, 137, 139, 169, 171, 181, 184], "incom": 143, "incorpor": [2, 6, 11, 12, 13, 14, 15, 20, 97, 104, 143, 181, 182, 186], "incorrect": 173, "increas": [14, 26, 39, 40, 120, 121, 126, 127, 131, 177], "increment": 51, "incur": 12, "independ": [36, 59, 173, 177], "index": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 51, 53, 54, 55, 56, 64, 65, 66, 67, 68, 74, 91, 97, 98, 112, 117, 120, 121, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 169, 182, 184], "index_train_test_": 97, "indexerror": 133, "indic": [29, 30, 32, 74, 97, 98, 99, 111, 134, 135, 136, 137, 138, 139], "indict": 14, "individu": [36, 132, 139, 146, 150, 151, 182], "induc": [12, 13], "industri": 11, "inequ": [73, 76, 120, 121, 126, 127, 131, 134, 135, 136], "inf": [11, 111, 119, 120, 121, 123, 124, 126, 127, 131], "influenc": 177, "inform": [33, 43, 50, 57, 58, 59, 60, 61, 62, 63, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 169, 182], "inherit": [183, 184], "initi": [135, 137, 150, 151, 162, 185], "inner": [32, 128, 132, 182], "inner_estim": [32, 33, 128, 169, 182], "inner_estimator__risk_measur": 33, "inner_estimators_": 128, "input": [4, 6, 11, 12, 13, 36, 50, 51, 64, 65, 66, 67, 68, 99, 111, 112, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 165, 166, 169, 173, 182, 184, 186], "input_featur": [137, 138, 139], "insert": [51, 64, 65, 66, 67, 68, 117, 129, 133, 137, 138, 139], "insid": [43, 111, 112, 113, 114, 115, 128, 173, 180], "inspir": 169, "instabl": [15, 39, 120, 127, 182, 187], "instanc": [50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 177], "instead": [6, 9, 10, 14, 30, 51, 53, 54, 61, 64, 65, 66, 67, 68, 98, 99, 111, 112, 113, 114, 115, 117, 123, 128, 129, 132, 140, 143, 177, 181, 182], "institut": [74, 136], "insuffici": 139, "int": [50, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 86, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 150, 151, 160, 162, 165, 166, 167, 168], "int64": [31, 33, 36, 39, 50], "integ": [51, 64, 65, 66, 67, 68, 98, 111, 117, 128, 129, 132, 137, 138, 139], "integr": 181, "intend": [182, 184], "intention": [51, 64, 65, 66, 67, 68, 117, 129], "inter": [32, 128], "intercept": [5, 43, 112, 146], "intercepts_": [43, 112, 146], "interchang": 173, "interest": [120, 121, 126, 127, 131], "interfac": 169, "interpret": [51, 64, 65, 66, 67, 68, 117, 129], "intersect": 133, "intra": [32, 128], "introduc": [6, 26, 29, 30, 32, 33, 36, 39, 40, 43, 59, 169], "invari": 173, "invers": [7, 18, 19, 29, 30, 36, 74, 111, 113, 114, 115, 123, 124, 125, 136, 143, 150, 151, 152, 153, 162, 169, 182], "inverse_transform": [137, 138, 139], "inversevolatil": [7, 18, 19, 36, 43, 182], "invest": [11, 12, 45, 47, 48, 120, 121, 126, 127, 136, 144, 170, 173], "investment_horizon": [46, 144, 173], "investor": [3, 4, 5, 29, 75, 134, 135, 136, 143, 182, 184, 186], "invok": 99, "io": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46], "ipynb": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46], "is_log_norm": [46, 144, 173], "isalnum": [51, 64, 65, 66, 67, 68, 117, 129], "isalpha": [51, 64, 65, 66, 67, 68, 117, 129], "isascii": [51, 64, 65, 66, 67, 68, 117, 129], "isdecim": [51, 64, 65, 66, 67, 68, 117, 129], "isdigit": [51, 64, 65, 66, 67, 68, 117, 129], "isidentifi": [51, 64, 65, 66, 67, 68, 117, 129], "iskeyword": [51, 64, 65, 66, 67, 68, 117, 129], "islow": [51, 64, 65, 66, 67, 68, 117, 129], "isnumer": [51, 64, 65, 66, 67, 68, 117, 129], "isprint": [51, 64, 65, 66, 67, 68, 117, 129], "isspac": [51, 64, 65, 66, 67, 68, 117, 129], "issu": 113, "istitl": [51, 64, 65, 66, 67, 68, 117, 129], "isupp": [51, 64, 65, 66, 67, 68, 117, 129], "item": [43, 133], "iter": [51, 64, 65, 66, 67, 68, 98, 99, 101, 103, 104, 105, 107, 110, 111, 112, 113, 117, 128, 129, 132, 133, 145, 162, 177], "its": [11, 12, 13, 14, 15, 40, 43, 51, 61, 64, 65, 66, 67, 68, 76, 111, 112, 113, 114, 115, 117, 119, 120, 121, 123, 124, 125, 126, 127, 129, 131, 134, 135, 136, 137, 138, 139, 143, 154, 160, 161, 172, 173, 175, 176, 180, 182, 184, 186, 187], "itself": [2, 51, 64, 65, 66, 67, 68, 117, 129, 133], "iv": [43, 112], "iv_": [43, 112], "j": [51, 59, 97, 127, 173, 182], "jame": [3, 5, 116, 117, 186], "james_stein": [116, 117], "japan": 169, "javid": 110, "jnj": [43, 46], "job": [99, 111, 128, 132, 146], "joblib": [99, 111, 128, 132, 146], "join": [51, 64, 65, 66, 67, 68, 117, 129, 140], "joint": [61, 173], "jorion": 116, "journal": [58, 60, 62, 63, 110, 113, 123, 124, 128, 143, 150, 151, 152, 153, 162], "jpm": [4, 6, 11, 12, 13, 19, 43, 46, 169], "jpmorgan": [4, 11, 12, 13, 19], "julia": 112, "jupyt": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48], "justifi": [51, 64, 65, 66, 67, 68, 117, 129], "k": [40, 43, 97, 99, 100, 111, 138, 140, 150, 152, 154, 159, 160, 173, 177, 181, 187], "k_": 152, "kappa": [15, 120, 127, 150, 151, 152, 153, 154, 187], "kappa_": [15, 120, 127], "keep": [137, 138, 140], "keepend": [51, 64, 65, 66, 67, 68, 117, 129], "kei": [11, 12, 13, 51, 64, 65, 66, 67, 68, 111, 112, 117, 119, 120, 121, 123, 124, 126, 127, 129, 131, 132, 133, 136, 143], "kendal": [29, 30, 32, 60, 63, 110, 169, 182], "kendalldist": [29, 30, 31, 32, 33, 175, 182], "keyword": [51, 57, 64, 65, 66, 67, 68, 101, 102, 117, 129, 132, 141, 142, 148, 149, 177], "kfold": [32, 97, 99, 111, 128, 132, 169, 177, 181, 182], "kmean": [32, 128, 182], "know": 11, "known": [15, 51, 61, 169, 182], "knuth": [61, 155, 166], "ko": [43, 46, 169, 186], "kroneck": 152, "kuhn": [26, 121, 182], "kurtosi": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 65, 119, 123, 124, 134, 135, 136, 169, 173], "kwarg": [50, 51, 57, 64, 65, 66, 67, 68, 95, 101, 102, 117, 129, 133, 141, 142, 148, 149], "l": 53, "l1": [1, 16, 36, 48, 111, 120, 126, 127, 169, 170, 182], "l1_coef": [14, 36, 120, 126, 127, 177], "l2": [1, 16, 48, 120, 126, 127, 165, 170, 182], "l2_coef": [14, 120, 126, 127, 169, 177], "label": [50, 97, 181], "labels_": [50, 128], "lambda": [40, 127, 129, 173, 182], "lar": 111, "larg": [14, 101, 103, 104, 105, 107, 110, 112, 113, 114, 139, 140, 162, 169, 184], "larger": 174, "lasso": [111, 169], "lassocv": [5, 145, 146, 186], "last": [98, 105, 106, 107, 108, 110, 133, 135], "later": 181, "latest": [12, 13], "latter": [50, 57, 58, 59, 60, 61, 62, 63, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153], "law": [74, 136], "le": [127, 182], "lead": [13, 51, 64, 65, 66, 67, 68, 117, 119, 120, 123, 124, 126, 127, 128, 129, 131, 132, 173, 177, 181], "leaf": [29, 124, 182], "leakag": [7, 8, 32, 36, 97, 128, 132, 169, 178, 181, 182], "learn": [5, 7, 8, 95, 97, 103, 104, 111, 112, 113, 114, 115, 124, 128, 169, 172, 175, 176, 177, 178, 180, 181, 182, 185, 186, 187], "learnt": 177, "least": [51, 64, 65, 66, 67, 68, 97, 117, 129, 134, 135, 136], "ledoit": [113, 169], "ledoitwolf": [36, 43, 172], "left": [51, 64, 65, 66, 67, 68, 101, 103, 104, 105, 107, 110, 111, 112, 113, 117, 120, 121, 126, 127, 129, 131, 150, 151, 152, 153, 154, 162, 169, 173, 184, 187], "left_inequ": [11, 120, 121, 126, 127, 131], "len": [14, 51, 64, 65, 66, 67, 68, 117, 129], "length": [51, 64, 65, 66, 67, 68, 98, 117, 129, 150, 151], "leptokurt": [43, 112], "leq": [11, 105, 106, 120, 121, 126, 127, 131, 150, 151, 152, 153, 154, 187], "less": [11, 19, 31, 43, 112, 120, 121, 126, 127, 131, 143, 147, 173], "let": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 137, 180, 183], "level": [15, 57, 70, 71, 72, 73, 75, 76, 92, 99, 101, 102, 120, 121, 127, 128, 131, 132, 133, 134, 135, 136, 141, 142, 148, 149, 150, 151, 152, 153], "level_0": 43, "level_1": 43, "leverag": 11, "le\u00f3n": 173, "lib": 169, "librari": 169, "licens": 169, "lightweight": 99, "like": [11, 12, 13, 26, 29, 50, 51, 57, 58, 59, 60, 61, 62, 63, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136, 137, 138, 139, 143, 144, 145, 146, 150, 151, 152, 153, 169, 172, 173, 175, 176, 181, 182, 185, 186, 187], "likelihood": [111, 113, 114, 115], "limit": [6, 51, 64, 65, 66, 67, 68, 110, 117, 129, 131, 182], "lin": 173, "line": [14, 15, 29, 30, 32, 40, 43, 50, 51, 64, 65, 66, 67, 68, 117, 129], "line_color": [14, 15, 40], "line_dash": [14, 15, 40], "line_width": [14, 15, 40], "linear": [7, 8, 12, 13, 26, 59, 112, 119, 120, 121, 123, 124, 126, 127, 131, 136, 140, 144, 146, 182], "linear_constraint": [11, 120, 121, 126, 127, 131, 169], "linear_model": [5, 186], "linear_regressor": [5, 112, 146], "linear_regressors_": 112, "linearregress": 112, "link": [29, 30, 32], "linkag": [50, 51, 119, 123, 124, 128, 160, 182], "linkage_matrix": 160, "linkage_matrix_": [50, 171], "linkage_method": [29, 30, 31, 32, 50], "linkagemethod": [29, 30, 31, 32, 33, 50], "linspac": 10, "list": [0, 11, 40, 51, 64, 65, 66, 67, 68, 98, 111, 112, 117, 120, 121, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 139, 143, 177, 183, 184], "literatur": [43, 143], "litterman": [1, 16, 48, 143, 170, 182], "ljust": [51, 64, 65, 66, 67, 68, 117, 129], "lly": [43, 46], "ln": [43, 112, 140, 173], "load": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 46, 52, 53, 54, 55, 56, 141, 145, 146, 174, 186], "load_factors_dataset": [5, 6, 29, 169, 174, 182, 186], "load_ftse100_dataset": [14, 15, 31, 36, 39, 40, 174], "load_nasdaq_dataset": 174, "load_sp500_dataset": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 33, 43, 46, 169, 171, 172, 174, 175, 176, 177, 180, 181, 182, 183, 185, 186, 187], "load_sp500_implied_vol_dataset": [43, 180], "load_sp500_index": [2, 174], "loading_matrix": 5, "loading_matrix_": [5, 146], "loading_matrix_estim": [5, 145, 186], "loading_matrix_estimator_": [5, 145], "loadingmatrixestim": 145, "loadingmatrixregress": [5, 145, 186], "loc": [15, 29, 43, 180], "local": [53, 54, 174], "locat": [97, 111, 113, 114, 115], "location_": [111, 113, 114, 115], "log": [14, 43, 111, 112, 113, 114, 115, 131, 173, 177, 182], "log_return": 140, "log_scal": [133, 134, 135, 136], "logarithm": [43, 112, 133, 134, 135, 136, 140, 144], "logic": [98, 177], "loguniform": [14, 169, 177], "long": [2, 14, 15, 119, 120, 121, 123, 124, 126, 127, 131, 173, 182], "longer": [46, 134, 135, 136], "lookup": [51, 64, 65, 66, 67, 68, 117, 120, 129], "lookuperror": [51, 64, 65, 66, 67, 68, 117, 129], "lopez": [29, 32, 124, 128, 182], "lopsided": [134, 135, 136], "loss": [15, 92, 95, 134, 135, 136], "lost": 33, "loud": 104, "lovett": [74, 136], "low": [52, 95, 139, 143], "lower": [2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 51, 64, 65, 66, 67, 68, 77, 79, 87, 88, 117, 119, 120, 121, 123, 124, 126, 127, 129, 131, 134, 135, 136, 147, 169, 182, 186], "lowercas": [5, 51, 64, 65, 66, 67, 68, 117, 129, 186], "lowest": [14, 15, 51, 64, 65, 66, 67, 68, 117, 129, 137, 138], "lstrip": [51, 64, 65, 66, 67, 68, 117, 129], "lvert": [15, 100, 120, 127], "l\u00f2pez": [58, 60, 62, 63, 103, 104], "l\u00f3pez": [97, 124, 128], "m": [98, 113, 133, 158, 159, 164], "machin": [97, 103, 104, 124, 128, 169], "mad": [85, 134, 135, 136], "made": 14, "mahalanobi": [111, 113, 114, 115], "mai": [0, 7, 8, 14, 31, 33, 36, 39, 51, 64, 65, 66, 67, 68, 111, 117, 129, 177, 181, 182], "main": 177, "mainli": [51, 64, 65, 66, 67, 68, 117, 129], "maintain": 133, "make": [5, 6, 7, 8, 11, 12, 13, 51, 64, 65, 66, 67, 68, 95, 98, 117, 129, 145, 182, 184, 186], "make_scor": [14, 15, 31, 36, 40, 43, 177], "maketran": [51, 64, 65, 66, 67, 68, 117, 129], "manag": [1, 16, 48, 58, 60, 62, 63, 103, 104, 110, 118, 119, 120, 123, 124, 126, 127, 128, 131, 136, 140, 144, 169, 170, 173, 182, 184], "management_fe": [13, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 136], "mani": 177, "manipul": [134, 135, 136, 183], "manner": [29, 124, 177, 182], "map": [10, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 173], "marco": [29, 32, 97, 124, 128, 182], "margin": 61, "market": [4, 11, 104, 109, 120, 121, 123, 124, 126, 127, 143, 173, 182], "markowitz": [110, 169], "marti": [123, 124, 169], "mar\u010denko": 103, "mask": [137, 138, 139], "match": [120, 121, 126, 127, 131, 137, 138, 139, 143], "math": [51, 133], "mathbb": 173, "mathemat": [150, 151, 152, 153], "matric": [104, 110, 113], "matrix": [3, 4, 5, 11, 29, 30, 32, 40, 43, 50, 51, 57, 58, 59, 60, 61, 62, 63, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123, 124, 125, 126, 127, 128, 131, 136, 141, 143, 144, 145, 146, 147, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 175, 181, 182, 184, 186, 187], "matur": 173, "max": [3, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 51, 111, 113, 114, 115, 127, 160, 182], "max_": [127, 160, 173, 182], "max_average_drawdown": 127, "max_budget": [11, 120, 121, 126, 127], "max_cdar": [10, 127], "max_clust": 50, "max_cvar": [15, 127], "max_drawdown": [9, 10, 14, 15, 68, 119, 120, 123, 124, 127, 131, 134, 135, 136, 183, 184], "max_edar": 127, "max_evar": 127, "max_first_lower_partial_mo": 127, "max_gini_mean_differ": 127, "max_it": 111, "max_iter": 145, "max_long": [11, 120, 121, 126, 127], "max_max_drawdown": 127, "max_mean_absolute_devi": 127, "max_measur": [10, 133], "max_semi_devi": 127, "max_semi_vari": 127, "max_short": [11, 120, 121, 126, 127], "max_standard_devi": 127, "max_tracking_error": [2, 126, 127], "max_turnov": [126, 127], "max_ulcer_index": 127, "max_vari": [10, 14, 127], "max_weight": [11, 119, 120, 121, 123, 124, 126, 127, 131, 169], "max_worst_r": 127, "maxim": [10, 14, 15, 23, 31, 32, 33, 36, 40, 43, 50, 126, 127, 129, 169, 182], "maximize_ratio": [3, 4, 5, 6, 7, 10, 32, 39, 127, 129, 169, 177, 182, 187], "maximize_return": [10, 14, 15, 127, 129], "maximize_util": [12, 13, 36, 127, 129], "maximum": [1, 3, 4, 5, 6, 10, 11, 12, 13, 16, 24, 36, 39, 40, 50, 51, 64, 65, 66, 67, 68, 72, 83, 92, 101, 103, 104, 105, 107, 110, 111, 112, 113, 117, 119, 120, 121, 123, 124, 126, 127, 129, 131, 133, 134, 135, 136, 145, 162, 170], "maximumdiversif": [22, 23, 36, 48, 182], "maxsiz": 133, "maxsplit": [51, 64, 65, 66, 67, 68, 117, 129], "mb": [16, 21, 24, 27, 34, 37, 41, 44, 47, 49, 170], "mean": [0, 2, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 29, 31, 32, 36, 39, 40, 43, 46, 51, 64, 65, 66, 67, 68, 71, 77, 79, 82, 85, 86, 87, 88, 95, 98, 99, 106, 108, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 143, 146, 147, 150, 151, 152, 153, 169, 170, 173, 177, 184], "mean_absolute_devi": [68, 119, 120, 123, 124, 127, 131, 134, 135, 136], "mean_absolute_deviation_ratio": [67, 134, 135, 136], "mean_risk": 185, "mean_test_scor": [14, 15, 40, 43, 111], "mean_train_scor": [14, 40], "meanrisk": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33, 36, 39, 40, 43, 46, 48, 126, 128, 132, 169, 177, 180, 181, 182, 183, 185, 187], "meantim": 173, "measur": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 30, 31, 32, 33, 36, 39, 40, 59, 61, 95, 110, 120, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 169, 177, 181, 182, 183, 184], "measure_list": [31, 33, 36, 39, 133, 169, 183], "measures_df": [134, 135, 136], "measures_mean": [10, 14, 31, 33, 36, 39, 133], "measures_std": [10, 31, 33, 36, 39, 133], "mechan": [50, 57, 58, 59, 60, 61, 62, 63, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 180], "median": [51, 128, 132], "mega": 11, "mem": [16, 21, 24, 27, 34, 37, 41, 44, 47, 49, 170], "memori": [99, 113], "merg": [6, 31, 39], "meshgrid": 10, "meta": [43, 111, 112, 113, 114, 115, 182], "metadata": [44, 50, 57, 58, 59, 60, 61, 62, 63, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 170], "metadata_rout": [111, 112, 113, 114, 115], "metadatarequest": [50, 57, 58, 59, 60, 61, 62, 63, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153], "metadatarout": 111, "method": [0, 5, 7, 8, 9, 11, 12, 13, 14, 18, 36, 43, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 162, 169, 172, 173, 175, 176, 177, 180, 181, 182, 183, 185, 186, 187], "methodologi": 173, "metric": [14, 15, 29, 30, 31, 32, 36, 40, 43, 61, 121], "meucci": [116, 140, 144, 173], "mf": 13, "michaud": 173, "micropredict": 169, "mid": 178, "miko\u0142aj": [123, 124], "min": [8, 51, 127, 131, 182], "min_": [127, 131, 182], "min_acceptable_return": [77, 79, 85, 87, 88, 120, 127, 131, 134, 135, 136], "min_budget": [11, 120, 121, 126, 127], "min_measur": 133, "min_n_asset": 139, "min_return": [9, 126, 127, 131], "min_weight": [2, 11, 14, 15, 36, 119, 120, 121, 123, 124, 126, 127, 131, 169, 177], "minim": [2, 9, 26, 29, 30, 31, 32, 50, 51, 100, 121, 123, 124, 127, 129, 169, 182], "minimize_risk": [2, 8, 127, 129], "minimum": [1, 2, 9, 10, 11, 16, 29, 32, 40, 43, 48, 50, 77, 79, 85, 87, 88, 119, 120, 121, 123, 124, 126, 127, 128, 131, 133, 134, 135, 136, 139, 170, 182], "minium": [119, 120, 121, 123, 124, 126, 127, 131], "minu": 184, "minut": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46], "mirror": [14, 177], "misc": 169, "miskolczi": 173, "miss": [111, 140], "mitig": 182, "mix": [11, 13, 119, 120, 121, 123, 124, 126, 127, 131], "mmp": 169, "mmse": 114, "mn": 133, "mode": [14, 15, 40, 111], "model": [1, 14, 15, 16, 43, 48, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 143, 145, 147, 170, 171, 172, 175, 176, 177, 178, 180, 182, 183, 184, 185, 187], "model1": [26, 29, 30, 32, 36, 39, 182], "model2": [26, 29, 30, 32, 36, 39, 182], "model2__prior_estimator__covariance_estim": 36, "model3": [26, 29, 30, 32, 36], "model3__l1_coef": 36, "model4": [26, 29, 32, 36], "model4__risk_measur": 36, "model_bl": 4, "model_bl_factor": 6, "model_empir": [4, 5], "model_factor": 6, "model_factor_1": 5, "model_factor_2": 5, "model_factor_3": 5, "model_herc": 31, "model_hrp": 31, "model_l1": 14, "model_l2": 14, "model_mf": 13, "model_nam": 36, "model_nco": 33, "model_no_track": 2, "model_no_uncertainti": 15, "model_select": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 95, 128, 169, 177, 181, 182, 183, 184, 185], "model_spx": 2, "model_stack": 36, "model_tc": 12, "model_tc2": 12, "model_track": 2, "model_uncertainti": 15, "model_valid": 97, "modern": [110, 169], "modifi": [95, 133], "modul": [0, 51, 64, 65, 66, 67, 68, 117, 129, 155, 171, 177, 181, 182], "mohajerin": 26, "moment": [3, 5, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 43, 65, 67, 68, 77, 78, 79, 87, 88, 89, 90, 93, 119, 120, 123, 124, 127, 131, 134, 135, 136, 144, 169, 172, 173, 176, 177, 180, 182, 186, 187], "momentum": [6, 52], "month": [12, 14, 15, 31, 33, 36, 40, 98], "montli": 98, "more": [4, 5, 7, 8, 11, 12, 13, 14, 19, 29, 30, 31, 32, 33, 36, 39, 40, 43, 48, 50, 51, 64, 65, 66, 67, 68, 74, 98, 99, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 136, 137, 143, 144, 145, 146, 150, 151, 152, 153, 169, 177, 182, 184, 186], "mosek": [26, 121, 173, 182], "most": [173, 177], "move": [48, 184], "movement": 110, "mrk": [43, 46], "msft": [43, 46, 169, 186], "mtum": [6, 52, 169, 182, 186], "mu": [3, 4, 5, 12, 13, 15, 106, 108, 109, 113, 114, 115, 116, 119, 120, 121, 123, 124, 126, 127, 129, 131, 147, 149, 151, 153, 154, 173, 176, 182, 186, 187], "mu_": [106, 108, 109, 116, 173, 176], "mu_estim": [3, 5, 143, 144, 169, 177, 182, 186], "mu_estimator_": 144, "mu_target_": 116, "mu_uncertainty_set_estim": [15, 120, 127, 169, 182, 187], "mu_uncertainty_set_estimator_": [120, 127], "mu_uncertainty_set_estimator__confidence_level": 15, "multi": [14, 15, 97, 110, 133, 135, 139, 183], "multi_output_regressor_": 146, "multicollinear": [40, 101, 103, 104, 105, 107, 110, 112, 113, 162], "multioutput": 146, "multioutputregressor": 146, "multiperiodportfolio": [0, 12, 13, 14, 15, 31, 33, 36, 39, 40, 99, 133, 169, 181, 183, 184], "multipl": [29, 31, 33, 36, 39, 97, 99, 120, 124, 128, 132, 181, 182, 184], "multipli": [52, 53, 54, 55, 56, 114, 174], "multivari": [26, 113, 121, 173, 182], "must": [11, 12, 13, 43, 51, 64, 65, 66, 67, 68, 95, 96, 97, 98, 109, 112, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 143, 144, 164, 173, 180], "mutli": 135, "mutual": [61, 182], "mutualinform": [175, 182], "mvo": 169, "my_param": 182, "my_portfolio": 184, "mycustomcovari": 182, "n": [2, 12, 13, 14, 31, 33, 36, 49, 51, 64, 65, 66, 67, 68, 100, 109, 117, 119, 120, 123, 124, 126, 127, 129, 131, 133, 136, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 173, 183], "n_": [74, 136], "n_alpha": 111, "n_asset": [12, 13, 39, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 183], "n_bin": [31, 36, 39, 61, 133, 165, 166], "n_bins_method": 61, "n_bootstrap_sampl": [150, 151], "n_clusters_": 50, "n_constraint": [120, 121, 126, 127, 131], "n_factor": [121, 131, 145, 146, 150, 151, 152, 153], "n_featur": [50, 97, 111, 113, 114, 115, 137, 138, 139], "n_features_in_": [50, 58, 59, 60, 61, 62, 63, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 124, 126, 127, 128, 131, 132, 137, 138, 139, 143, 144, 145], "n_features_new": [137, 138, 139], "n_fold": [31, 33, 36, 39, 97, 98, 100, 169, 181], "n_group": [120, 121, 126, 127, 131, 143], "n_init": [32, 182], "n_iter": [14, 15, 177], "n_iter_": 111, "n_job": [5, 12, 13, 14, 15, 31, 32, 33, 36, 39, 40, 43, 99, 111, 128, 132, 146, 169, 177, 182], "n_market": 104, "n_observ": [31, 33, 36, 39, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 150, 151, 152, 153, 165, 166, 181], "n_optim": [120, 121, 122, 125, 126, 127, 130, 131], "n_original_featur": [137, 138, 139], "n_output": [137, 138, 139], "n_refin": 111, "n_sampl": [50, 97, 111, 113, 114, 115, 137, 138, 139], "n_selected_featur": [137, 138, 139], "n_split": [97, 169], "n_target": [98, 99, 125, 126, 127, 128, 132], "n_test_fold": [31, 33, 36, 39, 97, 100, 169, 181], "n_test_path": 97, "n_view": 143, "naiv": [30, 43, 123, 137, 169], "name": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 174, 177, 182, 183, 184], "named_estim": 132, "named_estimators_": 132, "named_step": 39, "nan": [53, 140], "nan_threshold": 140, "nasdaq": 54, "nativ": 174, "natur": [51, 64, 65, 66, 67, 68, 117, 129], "nb": [14, 15, 36, 40], "nbinsmethod": 61, "nco": [32, 34, 128, 170, 182], "ndarrai": [50, 57, 58, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 138, 139, 143, 144, 145, 146, 147, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "ne": [127, 182], "nearest": [40, 51, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 145, 162], "necessari": [82, 134, 135, 136, 137], "necessarili": 14, "need": [0, 7, 8, 12, 13, 15, 43, 119, 120, 121, 123, 124, 126, 127, 128, 131, 136, 162, 169, 173, 180], "neg": [11, 119, 120, 121, 123, 124, 126, 127, 137, 139], "neglig": [12, 184], "nest": [6, 28, 34, 48, 50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 170, 177], "nestedclustersoptim": [32, 33, 169, 171, 182], "net": [13, 111, 119, 120, 123, 124, 126, 127, 131], "network": [110, 123, 124], "neutral": [11, 120, 121, 126, 127], "never": [51, 64, 65, 66, 67, 68, 117, 129], "new": [29, 32, 51, 64, 65, 66, 67, 68, 111, 112, 117, 129, 133, 183, 185, 186], "new_portfolio": 12, "new_valu": 132, "new_x": 185, "newli": 51, "next": 98, "nick": [101, 103, 104, 105, 107, 110, 112, 113, 145, 162], "nicolini": 169, "nielsen": [123, 124], "nn": 152, "nois": [5, 103, 136, 145, 186], "non": [12, 14, 18, 26, 33, 36, 43, 51, 59, 64, 65, 66, 67, 68, 80, 82, 99, 110, 112, 117, 120, 121, 126, 127, 129, 133, 134, 135, 136, 139, 150, 151, 152, 153, 162, 167, 169, 181, 182], "non_denominated_sort": [133, 183], "none": [11, 12, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 79, 85, 87, 88, 95, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 182], "nonzero_asset": [14, 136], "nonzero_assets_index": 136, "nor": 173, "norm": [14, 111, 113, 114, 115, 120, 126, 127], "normal": [43, 61, 82, 107, 112, 134, 135, 136, 173], "notat": [51, 64, 65, 66, 67, 68, 117, 129, 152], "note": [2, 5, 11, 12, 13, 14, 15, 40, 51, 57, 64, 65, 66, 67, 68, 95, 101, 102, 107, 111, 112, 113, 114, 115, 117, 120, 121, 126, 127, 128, 129, 131, 132, 141, 142, 148, 149, 173, 184, 186], "notebook": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48], "notic": [12, 13, 29, 30], "notion": [12, 173], "now": [2, 10, 12, 14, 15, 36, 40], "np": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 43, 50, 95, 97, 98, 113, 114, 115, 119, 120, 121, 123, 124, 126, 127, 131, 181, 182, 184], "nugget": 173, "null": 160, "num": 10, "number": [5, 7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 31, 33, 36, 39, 40, 50, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 86, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 150, 151, 155, 160, 162, 167, 168, 169, 177, 181, 182, 186], "numer": [51, 64, 65, 66, 67, 68, 111, 114, 117, 120, 121, 126, 127, 129, 131, 162, 169], "numpi": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 43, 95, 97, 98, 135, 136, 172, 175, 176, 181, 182, 184, 185, 186, 187], "nutshel": [74, 136], "o": [113, 114, 133], "oa": 172, "object": [0, 7, 8, 14, 18, 26, 29, 31, 33, 36, 39, 40, 50, 57, 58, 59, 60, 61, 62, 63, 95, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 169, 181, 182], "objective_funct": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 32, 36, 39, 127, 169, 177, 182, 187], "objectivefunct": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 32, 36, 39, 127, 169, 177, 182, 187], "observ": [31, 33, 36, 39, 40, 43, 50, 52, 53, 54, 55, 56, 70, 71, 72, 86, 92, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 133, 134, 135, 136, 140, 143, 162, 181, 184], "obtain": [31, 33, 36, 39, 73, 76, 134, 135, 136, 144, 147], "occur": [40, 101, 103, 104, 105, 107, 110, 112, 113, 162], "occurr": [51, 64, 65, 66, 67, 68, 117, 129, 133], "offer": 169, "offset": 98, "often": [40, 97, 101, 103, 104, 105, 107, 110, 112, 113, 162, 181], "okhrin": [116, 117], "ol": [43, 112], "old": [51, 64, 65, 66, 67, 68, 117, 129], "omega": 143, "omit": [7, 8, 114], "omxs30": 112, "onc": [111, 133], "one": [5, 11, 12, 13, 29, 30, 31, 32, 33, 36, 39, 43, 46, 50, 51, 64, 65, 66, 67, 68, 97, 98, 99, 117, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 146, 147, 167, 168, 173, 177, 181, 182, 186], "ones": [12, 14, 15, 51, 64, 65, 66, 67, 68, 98, 117, 129], "onli": [7, 8, 11, 12, 13, 14, 26, 29, 31, 33, 36, 39, 46, 50, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 137, 138, 139, 143, 144, 145, 146, 150, 151, 152, 153, 173, 180, 182, 184, 185], "open": [26, 169], "oper": [51, 64, 65, 66, 67, 68, 114, 117, 129, 137, 138, 139, 150, 151, 152, 153], "oppos": [30, 144], "optim": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 37, 39, 40, 43, 46, 65, 99, 100, 110, 111, 113, 116, 136, 139, 140, 145, 147, 150, 151, 152, 153, 160, 165, 166, 170, 171, 178, 180, 181, 183, 184, 185, 186, 187], "optimal_folds_numb": [31, 33, 36, 39, 181], "optimization__risk_measur": 177, "optimum": 111, "option": [3, 4, 5, 50, 51, 53, 54, 58, 61, 64, 65, 66, 67, 68, 77, 79, 85, 87, 88, 95, 97, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 151, 152, 153, 173, 186], "oracl": [114, 169], "order": [12, 13, 29, 50, 119, 120, 123, 124, 126, 127, 131, 133, 135, 136, 137, 160, 180], "ordin": [51, 64, 65, 66, 67, 68, 117, 129], "org": [120, 121, 126, 127, 131], "origin": [29, 32, 50, 51, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 117, 124, 128, 129, 182], "oserror": [53, 54], "other": [7, 8, 11, 15, 19, 29, 31, 51, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 117, 129, 133, 134, 135, 136, 137, 140, 143, 177], "other_portfolio": 184, "otherwis": [50, 51, 64, 65, 66, 67, 68, 80, 81, 95, 98, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 126, 127, 129, 131, 133, 134, 135, 136, 138, 140, 162, 164], "otim": 152, "our": [4, 6, 7, 8, 12, 13, 36, 43, 169, 181], "out": [14, 15, 31, 32, 33, 36, 39, 40, 43, 58, 60, 62, 63, 111, 120, 124, 126, 127, 128, 132, 133, 169, 182], "outcom": 95, "outer": [32, 36, 128, 132, 140, 182], "outer_estim": [32, 33, 128, 169, 182], "outer_estimator_": 128, "outlin": [29, 30, 32, 50], "outperform": [4, 6, 7, 8, 12, 13, 31, 33, 36, 58, 60, 62, 63, 124, 128, 143, 169], "output": [36, 99, 128, 132, 137, 138, 139, 181, 182, 183], "over": [15, 23, 26, 111, 121, 126, 133, 134, 135, 136, 140, 167, 168, 173, 177, 182], "overal": 111, "overcom": [5, 145, 186], "overfit": [14, 15, 128, 132, 169, 178], "overhead": 146, "overlap": [43, 51, 64, 65, 66, 67, 68, 97, 112, 117, 129, 181], "overwrit": [120, 121, 127, 131], "overwrite_expected_return": [120, 121, 127, 131], "owa": 86, "own": [173, 177, 181], "oxford": 173, "p": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 23, 26, 29, 30, 32, 33, 43, 46, 55, 56, 97, 110, 112, 114, 174], "packag": [0, 178], "pad": [51, 64, 65, 66, 67, 68, 117, 129], "page": 113, "pair": [11, 12, 13, 99, 112, 119, 120, 121, 123, 124, 126, 127, 131, 136, 137, 139, 143, 181], "panda": [39, 40, 43, 98, 133, 134, 135, 136, 137, 138, 139, 169, 172, 175, 176, 182, 184, 185, 186, 187], "panna": 173, "paper": [29, 32, 110, 124, 128, 182], "parallel": [5, 12, 99, 111, 128, 132, 146, 182], "parallel_backend": [99, 111, 128, 132, 146], "param": [43, 50, 57, 58, 59, 60, 61, 62, 63, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153], "param_dist": 177, "param_distribut": [14, 15, 169, 177], "param_grid": [14, 15, 31, 33, 36, 40, 43, 169, 177], "param_l2_coef": 14, "param_mu_uncertainty_set_estimator__confidence_level": 15, "param_pre_selection__k": 40, "param_prior_estimator__covariance_estimator__prior_covariance_estim": 43, "param_prior_estimator__covariance_estimator__window_s": 43, "paramet": [5, 7, 8, 9, 11, 12, 13, 26, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 178, 181, 182, 183, 186], "parameter_nam": 132, "parametr": 173, "pareto": [9, 133, 139], "pariti": [17, 21, 28, 30, 32, 34, 48, 123, 124, 131, 170], "parolya": [116, 117], "part": [51, 64, 65, 66, 67, 68, 117, 129, 177], "partial": [7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 29, 36, 40, 67, 68, 77, 79, 87, 88, 98, 120, 127, 131, 134, 135, 136, 169, 182], "particular": 113, "partit": [51, 64, 65, 66, 67, 68, 117, 129], "pass": [7, 8, 13, 43, 50, 95, 99, 103, 104, 109, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 143, 144, 145, 146, 150, 151, 152, 153, 177, 180], "past": 98, "pastur": 103, "path": [31, 33, 36, 39, 96, 97, 99, 100, 128, 132, 181, 182], "pattern": [11, 120, 121, 126, 127, 131, 143], "patton": [150, 151], "paulsen": 136, "pd": [40, 43, 98, 101, 103, 104, 105, 107, 110, 112, 113, 184], "pearson": [29, 30, 32, 62, 169], "pearsondist": [31, 33, 119, 123, 124, 128, 171, 175, 182], "penal": [14, 111, 120, 126, 127], "penalti": 111, "pep": [43, 46], "per": [13, 14, 15, 36, 40, 43, 128, 133, 135, 136, 146, 169], "percentag": 140, "perfectli": 184, "perfmeasur": [9, 10, 14, 15, 46, 95, 128, 132, 134, 135, 136, 139, 183, 184], "perform": [14, 15, 31, 33, 36, 38, 41, 48, 50, 66, 97, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 140, 146, 147, 160, 164, 169, 170, 173, 177, 178, 181, 184, 185], "period": [14, 15, 98, 119, 120, 123, 124, 126, 127, 131, 133, 135, 136, 140, 173], "permit": 121, "pfe": [43, 46], "pg": [43, 46], "philipp": [116, 123, 124], "pick": 143, "picking_matrix_": 143, "piecewis": [26, 121, 182], "pin": 178, "pip": [169, 179], "pipe": 185, "pipelin": [11, 38, 48, 50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 177, 185], "pipeplin": [39, 40], "pitfal": [140, 144], "place": 133, "plan": 178, "pleas": [0, 50, 57, 58, 59, 60, 61, 62, 63, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153], "plot": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 50, 97, 133, 134, 135, 136, 184], "plot_10_tracking_error": [2, 16, 170], "plot_11_empirical_prior": [3, 16, 170], "plot_12_black_and_litterman": [4, 16, 170], "plot_13_factor_model": [5, 16, 170], "plot_14_black_litterman_factor_model": [6, 16, 170], "plot_1_distributionally_robust_cvar": [26, 27, 170], "plot_1_drop_correl": [39, 41, 170], "plot_1_hrp_cvar": [29, 34, 170], "plot_1_implied_volatil": [43, 44, 170], "plot_1_investment_horizon": [46, 47, 170], "plot_1_maximum_divesif": [23, 24, 170], "plot_1_maximum_sharpe_ratio": [7, 16, 170], "plot_1_risk_parity_vari": [18, 21, 170], "plot_1_stack": [36, 37, 170], "plot_2_herc_cdar": [30, 34, 170], "plot_2_minimum_cvar": [8, 16, 170], "plot_2_risk_budgeting_cvar": [19, 21, 170], "plot_2_select_best_perform": [40, 41, 170], "plot_3_efficient_fronti": [9, 16, 170], "plot_3_hrp_vs_herc": [31, 34, 170], "plot_3_risk_parity_ledoit_wolf": [20, 21, 170], "plot_4_mean_variance_cdar": [10, 16, 170], "plot_4_nco": [32, 34, 170], "plot_5_nco_grid_search": [33, 34, 170], "plot_5_weight_constraint": [11, 16, 170], "plot_6_transaction_cost": [12, 16, 170], "plot_7_management_fe": [13, 16, 170], "plot_8_regular": [14, 16, 170], "plot_9_uncertainty_set": [15, 16, 170], "plot_composit": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 23, 26, 29, 30, 31, 32, 33, 36, 40, 43, 46, 133, 134, 135, 136, 183, 184], "plot_contribut": [18, 19, 29, 30, 133, 134, 135, 136, 184], "plot_cumulative_return": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 133, 134, 135, 136, 169, 183, 184], "plot_dendrogram": [29, 30, 32, 50], "plot_distribut": [31, 33, 36, 39, 133, 169, 183], "plot_measur": [9, 10, 14, 15, 46, 133, 183], "plot_return": [134, 135, 136], "plot_rolling_measur": [133, 134, 135, 136, 184], "plot_train_test_fold": 97, "plot_train_test_index": 97, "plotli": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 133, 134, 135, 136], "pmb": 173, "point": [40, 51, 64, 65, 66, 67, 68, 101, 103, 104, 105, 107, 110, 111, 112, 113, 117, 129, 133, 162], "polakow": 110, "polar": [137, 138, 139], "politi": [150, 151], "poor": 169, "poorli": [14, 15], "pop": 133, "popul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 99, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 169, 181], "population_test": [9, 10, 14, 29, 30, 32], "population_train": [2, 9, 10, 14, 15], "portfolio": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 58, 60, 62, 63, 74, 95, 98, 99, 110, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 139, 140, 144, 145, 150, 151, 152, 153, 169, 171, 177, 178, 181, 182, 183, 185, 186], "portfolio optim": 169, "portfolio_param": [2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 46, 99, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132], "portfolio_test": 182, "portfolio_train": 182, "portion": 104, "pose": 173, "posit": [12, 36, 40, 51, 64, 65, 66, 67, 68, 101, 103, 104, 105, 107, 110, 112, 113, 117, 119, 120, 121, 123, 124, 126, 127, 129, 131, 145, 162, 164], "possibl": [6, 19, 20, 23, 43, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 177, 182, 186], "posterior": [4, 143, 186], "potenti": 139, "power": [58, 60, 62, 63], "pq": [51, 64, 65, 66, 67, 68, 117, 129], "prabhala": 112, "practic": [173, 177, 184], "prado": [29, 32, 58, 60, 62, 63, 97, 103, 104, 124, 128, 182], "pre": [11, 39, 40, 139, 140], "pre_dispatch": 99, "pre_select": [39, 40, 169, 177, 185], "pre_selection__k": 40, "preced": [14, 15, 31], "precis": [111, 113, 114, 115], "precision_": [111, 113, 114, 115], "pred": [31, 36, 40, 95, 177, 181], "pred1": [12, 13], "pred2": [12, 13], "pred3": 12, "pred_1": 39, "pred_2": 39, "pred_bench": [3, 7, 8, 14, 33, 36, 40, 43], "pred_bl": 4, "pred_empir": 4, "pred_gs_model": 43, "pred_herc": 31, "pred_hrp": 31, "pred_model": [3, 7, 8, 40, 43], "pred_nco": 33, "pred_no_reg": 14, "pred_no_uncertainti": 15, "pred_realised_vols_": 112, "pred_reg": 14, "pred_stack": 36, "pred_uncertainti": 15, "pred_uncertainty_r": 15, "predict": [0, 10, 11, 12, 13, 15, 43, 95, 99, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 146, 177, 182, 183, 184, 185], "prefer": [111, 121, 182], "prefit": 132, "prefix": [51, 64, 65, 66, 67, 68, 117, 129], "premium": 112, "prepar": [7, 8, 46, 140, 144], "preprocess": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 169, 171, 172, 175, 176, 177, 180, 181, 182, 183, 185, 186, 187], "preselect": 139, "present": [33, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 143, 144], "press": [124, 128, 173], "prev": 184, "previou": [6, 12, 31, 33, 36, 40, 43, 98, 119, 120, 123, 124, 126, 127, 131, 136, 184], "previous_weight": [12, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 136], "price": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 95, 98, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 153, 169, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187], "prices_to_return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 169, 171, 172, 175, 176, 177, 180, 181, 182, 183, 185, 186, 187], "principl": 177, "print": [2, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 39, 40, 43, 97, 98, 111, 169, 171, 172, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187], "printabl": [51, 64, 65, 66, 67, 68, 117, 129], "prior": [1, 4, 5, 6, 16, 20, 36, 43, 46, 48, 104, 112, 119, 120, 121, 123, 124, 125, 126, 127, 131, 150, 151, 152, 153, 169, 170, 173, 177, 180], "prior_covariance_estim": [43, 112], "prior_covariance_estimator_": 112, "prior_estim": [3, 4, 5, 6, 20, 29, 36, 43, 46, 119, 120, 121, 123, 124, 125, 126, 127, 131, 143, 148, 149, 150, 151, 152, 153, 169, 177, 180, 182], "prior_estimator_": [5, 119, 120, 121, 125, 126, 127, 131, 143, 150, 151, 152, 153], "prior_estimator__covariance_estimator__prior_covariance_estim": 43, "prior_estimator__covariance_estimator__window_s": 43, "prior_estimator__mu_estimator__alpha": [169, 177], "prior_model": 5, "prior_model_": [5, 6, 143, 144, 145, 186], "priormodel": [3, 4, 5, 29, 119, 120, 121, 123, 124, 125, 126, 127, 131, 143, 144, 145, 182, 186], "probabl": [26, 121, 182], "problem": [0, 5, 12, 13, 26, 40, 100, 101, 103, 104, 105, 107, 110, 112, 113, 119, 120, 121, 123, 124, 126, 127, 131, 136, 145, 162, 182, 184, 186], "problem_": [120, 121, 126, 127, 131], "problem_values_": [120, 121, 126, 127, 131], "procedur": [43, 46, 173], "process": [11, 97, 99, 114, 139, 181], "processor": [99, 111, 128, 132, 146], "produc": [110, 167, 168], "product": [0, 32, 36, 128, 132, 136, 152, 173, 177, 182, 184], "profession": [140, 144, 173], "program": [26, 121, 150, 151, 152, 153, 182], "project": [144, 173], "properli": 173, "properti": [7, 8, 29, 30, 32, 43, 97, 112, 123, 124, 132, 134, 135, 136, 150, 151, 152, 153, 173, 177, 182], "proport": [110, 143], "propos": 114, "prove": [11, 26, 116, 121, 182], "provid": [5, 9, 11, 12, 13, 97, 98, 109, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 140, 143, 144, 145, 147, 173, 177, 186], "psd": 110, "psd_variant": 110, "pseudo": [111, 113, 114, 115, 150, 151], "ptf": [14, 31, 33, 36, 136], "ptf0": 9, "ptf1": [9, 29, 30, 39, 184], "ptf10": 9, "ptf11": 9, "ptf12": 9, "ptf13": 9, "ptf14": 9, "ptf15": 9, "ptf16": 9, "ptf17": 9, "ptf18": 9, "ptf19": 9, "ptf2": [9, 30, 39, 184], "ptf20": 9, "ptf21": 9, "ptf22": 9, "ptf23": 9, "ptf24": 9, "ptf25": 9, "ptf26": 9, "ptf27": 9, "ptf28": 9, "ptf29": 9, "ptf3": [9, 184], "ptf4": 9, "ptf5": 9, "ptf6": 9, "ptf7": 9, "ptf8": 9, "ptf9": 9, "ptf_bench_test": [18, 19, 20, 23, 26], "ptf_bench_train": [18, 19, 23], "ptf_bl_factor_test": 6, "ptf_empirical_test": 5, "ptf_factor_1_test": 5, "ptf_factor_2_test": 5, "ptf_factor_3_test": 5, "ptf_factor_test": 6, "ptf_model1_test": 26, "ptf_model2_test": 26, "ptf_model3_test": 26, "ptf_model4_test": 26, "ptf_model_test": [18, 19, 20, 23], "ptf_model_train": [18, 19, 23], "ptf_no_tracking_test": 2, "ptf_no_tracking_train": 2, "ptf_tracking_test": 2, "ptf_tracking_train": 2, "public": [52, 53, 54, 55, 56, 169, 174], "publish": 110, "pujara": 110, "punctuat": [51, 64, 65, 66, 67, 68, 117, 129], "pure": 113, "purg": [28, 34, 48, 97, 170], "purged_s": [97, 98], "purpos": [5, 145, 182, 186], "put": 143, "px": 43, "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 46, 47, 137, 138, 139, 170], "pypi": [169, 179], "pyportfolioopt": 169, "python": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48, 51, 64, 65, 66, 67, 68, 117, 129, 169], "q": [98, 133, 139, 181, 183], "qu": 139, "quad": [127, 182], "qual": [6, 52, 169, 182, 186], "qualiti": [6, 52], "qualnam": 155, "quant": 173, "quantifi": [74, 136], "quantil": [128, 132, 133, 181, 182, 183], "quantile_measur": [128, 132, 182], "quantit": [103, 104, 124, 128, 169], "quarter": 98, "quarterli": 98, "quick": 43, "quickli": 169, "r": [50, 51, 64, 65, 66, 67, 68, 117, 129, 136, 173, 184], "r2": 43, "r2_scores_": 43, "r_": [127, 129, 153, 182], "r_p": 184, "rac": 133, "radiu": [26, 121], "raffinot": [30, 123, 182], "rais": [51, 53, 54, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 117, 120, 121, 126, 127, 129, 131, 133, 134, 135, 136, 156, 157, 158], "raise_on_failur": [10, 120, 121, 126, 127, 131], "ran": 14, "rand_weight": 183, "randint": 177, "randn": [97, 98], "random": [14, 15, 61, 97, 98, 103, 137, 150, 151, 152, 167, 168, 180, 182, 183], "randomized_search": [14, 15, 169], "randomizedsearchcv": [14, 15, 169, 177], "randomli": 167, "rang": [10, 40, 51, 64, 65, 66, 67, 68, 111, 113, 114, 115, 117, 129, 133, 177, 183], "rank": 139, "rate": [120, 121, 126, 127, 131, 134, 135, 136, 143], "rather": [137, 138, 139], "ratio": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 18, 19, 20, 23, 29, 31, 32, 33, 36, 39, 40, 43, 48, 67, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 170, 177, 182], "ratiomeasur": [9, 10, 14, 15, 31, 33, 36, 39, 40, 43, 128, 132, 133, 134, 135, 136, 138, 169, 177, 181, 183, 184], "ration": [7, 184], "rationmeasur": 95, "ravel": 10, "raw": 0, "rd_search": 177, "re": [6, 12, 13, 43, 111, 113, 114, 115, 178], "reach": 139, "read": [111, 113, 114, 115], "readabl": [11, 12, 13, 43], "real": 164, "realis": [43, 82, 112], "realiz": [4, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 67, 68, 94, 112, 127, 131, 134, 135, 136, 169, 182], "rearrang": [29, 124, 182], "reason": [29, 140], "rebal": [12, 13, 43], "rebalanc": [12, 98, 173, 184], "rebas": [133, 134, 135, 136], "receiv": 169, "recombin": [33, 36, 97], "recombined_path": 97, "recommend": [48, 173, 177], "reconstruct": [43, 97, 100, 112], "recurs": [29, 30, 123, 124, 182], "reduc": [5, 14, 15, 99, 100, 103, 116, 120, 126, 127, 131, 137, 138, 139, 145, 169, 178, 186, 187], "reduce_test": 98, "reduct": 14, "ref1": [11, 120, 121, 126, 127, 131], "ref2": [11, 120, 121, 126, 127, 131], "ref3": [11, 120, 121, 126, 127, 131], "ref_model": 14, "refer": [11, 14, 43, 50, 58, 59, 60, 62, 63, 74, 97, 103, 104, 110, 112, 113, 114, 116, 121, 123, 124, 128, 136, 139, 140, 143, 144, 150, 151, 152, 153, 160, 162, 165, 166, 169, 173, 180, 182], "referenc": [120, 121, 126, 127, 131, 143], "refin": 111, "reform": 173, "reformul": [26, 121, 182], "regard": 184, "regardless": 29, "region": [15, 120, 127, 150, 151, 152, 153, 154], "regist": [51, 64, 65, 66, 67, 68, 117, 129], "register_error": [51, 64, 65, 66, 67, 68, 117, 129], "regress": [43, 112, 146], "regressor": 146, "regular": [1, 15, 16, 36, 48, 51, 64, 65, 66, 67, 68, 115, 117, 120, 121, 126, 127, 129, 169, 170, 182], "regularis": [113, 114], "rel": [4, 6, 29, 73, 76, 100, 134, 135, 136, 143], "relat": [61, 104, 112, 184], "releas": [120, 121, 126, 127, 131, 173, 178], "relev": [111, 112, 113, 114, 115], "reli": 30, "remain": [19, 29, 30, 32, 50, 51, 64, 65, 66, 67, 68, 117, 129, 137, 138, 139, 182], "remov": [39, 51, 64, 65, 66, 67, 68, 97, 104, 117, 129, 132, 133, 135, 136, 137, 138, 139, 181], "removeprefix": [51, 64, 65, 66, 67, 68, 117, 129], "removesuffix": [51, 64, 65, 66, 67, 68, 117, 129], "renam": 43, "render": [7, 8], "reorder": [29, 30, 32, 50], "replac": [32, 40, 51, 64, 65, 66, 67, 68, 101, 103, 104, 105, 107, 110, 112, 113, 117, 120, 121, 126, 127, 129, 131, 160, 162], "replic": 184, "repo": 174, "repr": [51, 64, 65, 66, 67, 68, 117, 129], "repres": [3, 4, 5, 6, 15, 29, 30, 31, 32, 33, 36, 39, 40, 50, 52, 71, 73, 76, 98, 111, 113, 114, 115, 134, 135, 136, 152, 181, 182, 186], "request": [111, 112, 113, 114, 115, 184], "requir": 2, "rerun": [182, 186], "rescal": [80, 111, 113, 114, 115, 125, 133, 134, 135, 136], "research": [52, 53, 54, 55, 56, 110, 150, 151, 152, 153, 174], "reserv": [51, 64, 65, 66, 67, 68, 117, 129], "reset_index": 43, "residu": 145, "residual_vari": 145, "resourc": 169, "respect": [11, 51, 111, 113, 114, 115], "rest": [51, 64, 65, 66, 67, 68, 117, 129, 180], "result": [12, 13, 51, 64, 65, 66, 67, 68, 99, 111, 113, 114, 115, 117, 129, 146, 173], "retain": [111, 112, 113, 114, 115, 137, 138, 139, 177], "retent": [137, 138, 139], "retriev": [12, 120, 121, 126, 127, 131], "return": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 26, 29, 31, 33, 36, 39, 40, 43, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187], "return_train_scor": [14, 40, 43], "returns_df": [134, 135, 136, 184], "reveiz": 173, "revers": [133, 137, 138, 139], "review": [123, 124], "rfind": [51, 64, 65, 66, 67, 68, 117, 129], "rgb": [14, 15, 40], "rgba": [14, 40], "richard": 173, "ridgecv": 5, "right": [51, 64, 65, 66, 67, 68, 117, 120, 121, 126, 127, 129, 131, 134, 135, 136, 150, 151, 152, 153, 154, 187], "right_inequ": [11, 120, 121, 126, 127, 131], "rindex": [51, 64, 65, 66, 67, 68, 117, 129], "risk": [2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 21, 23, 28, 32, 34, 36, 40, 50, 65, 67, 68, 70, 71, 72, 73, 75, 76, 92, 109, 112, 116, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 139, 140, 143, 144, 145, 170, 173, 177, 178, 186], "risk_": [127, 131, 182], "risk_avers": [109, 121, 127, 182], "risk_budget": [19, 131], "risk_free_r": [119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 134, 135, 136, 143], "risk_measur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 29, 30, 31, 32, 33, 36, 46, 119, 120, 123, 124, 127, 131, 169, 177, 182, 183], "riskbudget": [17, 18, 19, 20, 32, 33, 48, 169, 182], "riskfolio": 169, "riskmeasur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 29, 30, 31, 32, 33, 36, 46, 95, 119, 120, 123, 124, 127, 128, 131, 132, 134, 135, 136, 139, 169, 177, 182, 183, 184], "rjust": [51, 64, 65, 66, 67, 68, 117, 129], "rmse": [2, 126, 127], "robert": [143, 173], "robust": [5, 14, 15, 27, 31, 33, 36, 39, 110, 120, 121, 124, 126, 127, 128, 145, 150, 151, 152, 153, 169, 170, 186, 187], "rockafellar": [26, 121], "roll": [14, 15, 31, 33, 36, 39, 40, 133, 134, 135, 136], "rolling_measur": [133, 134, 135, 136, 184], "root": [2, 87, 89, 126, 127, 134, 135, 136, 173], "round": [133, 134, 135, 136], "rout": [44, 50, 57, 58, 59, 60, 61, 62, 63, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 170], "row": [7, 8, 140], "rpartit": [51, 64, 65, 66, 67, 68, 117, 129], "rrc": [43, 46, 169], "rsome": 169, "rsplit": [51, 64, 65, 66, 67, 68, 117, 129], "rstrip": [51, 64, 65, 66, 67, 68, 117, 129], "rule": [134, 135, 136, 165, 166, 173], "run": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 99, 111, 128, 132, 137, 138, 139, 146, 173, 177, 182], "rust": [120, 121, 126, 127, 131], "rv": [43, 112, 177], "rv_": [43, 112], "rvert": 100, "rvert_": [15, 120, 127], "s_": [15, 120, 127, 140, 173], "same": [7, 8, 11, 12, 13, 18, 31, 33, 36, 40, 50, 51, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 117, 119, 120, 121, 123, 124, 126, 127, 129, 131, 132, 139, 143, 169, 172, 175, 176, 177, 182, 185, 186, 187], "sampl": [14, 15, 26, 31, 32, 33, 36, 39, 40, 43, 58, 60, 62, 63, 97, 98, 111, 112, 113, 114, 115, 116, 120, 121, 124, 126, 127, 128, 132, 137, 138, 139, 150, 151, 153, 160, 169, 177, 182], "sara": 112, "sargen": 110, "satisfi": 10, "save": [5, 43, 120, 121, 126, 127, 131, 186], "save_problem": [120, 121, 126, 127, 131], "sc": [120, 121, 126, 127, 131], "scalar": 95, "scale": [15, 111, 113, 114, 115, 120, 121, 126, 127, 131, 133, 134, 135, 136, 139, 173], "scale_constraint": [120, 121, 126, 127, 131], "scale_object": [120, 121, 126, 127, 131], "scatter": [14, 15, 40, 133], "scene_camera": 10, "scheme": [51, 64, 65, 66, 67, 68, 117, 129, 177], "sch\u00f6ttle": [150, 151, 152, 153], "scienc": 110, "scientif": 169, "scikit": [5, 7, 8, 95, 111, 112, 113, 114, 115, 169, 172, 175, 176, 177, 178, 180, 181, 182, 185, 186, 187], "scikit-learn": 169, "scipi": [14, 15, 50, 51, 169, 177], "score": [14, 15, 31, 36, 40, 43, 95, 111, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 177], "score_func": 95, "scorer": [40, 95], "script": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 180], "search": [14, 15, 33, 43, 51, 64, 65, 66, 67, 68, 100, 111, 117, 129], "second": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 68, 82, 87, 88, 89, 93, 98, 127, 134, 135, 136, 137, 177], "secondli": 173, "section": [14, 15, 43, 50, 51], "sector": 11, "secur": [5, 52, 53, 54, 55, 56, 104, 140, 145, 173, 174, 186], "see": [4, 7, 8, 14, 15, 26, 29, 30, 31, 40, 43, 46, 50, 51, 98, 101, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 128, 131, 132, 137, 138, 139, 143, 144, 145, 146, 150, 151, 152, 153, 169, 177], "seed": [150, 151], "seen": [50, 58, 59, 60, 61, 62, 63, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 123, 124, 126, 127, 128, 131, 132, 137, 138, 139, 143, 144, 145, 173], "select": [11, 12, 13, 14, 15, 31, 39, 41, 111, 128, 132, 137, 138, 139, 140, 150, 151, 170, 178, 182, 184], "selectkextrem": [40, 169, 177, 185], "selectnondomin": 185, "self": [50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 182], "sell": [11, 12, 119, 120, 121, 123, 124, 126, 127, 131], "semi": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 67, 68, 87, 88, 98, 110, 120, 127, 131, 134, 135, 136, 145, 169, 177, 182], "semi_devi": [68, 120, 127, 131, 134, 135, 136, 182], "semi_vari": [68, 119, 120, 123, 124, 127, 131, 134, 135, 136, 169, 177, 182], "semimonthend": 98, "sens": [111, 113, 114, 115], "sensit": 169, "sep": [51, 64, 65, 66, 67, 68, 117, 129], "separ": [5, 6, 51, 64, 65, 66, 67, 68, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 186], "sequenti": 137, "seri": [43, 81, 97, 98, 110, 112, 134, 135, 136, 180, 181], "serial": [97, 181], "seriat": [29, 124, 182], "set": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 48, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 162, 167, 170, 173, 174, 177, 181, 182, 183, 184], "set_config": [39, 40, 43, 103, 104, 109, 111, 112, 113, 114, 115, 116, 121, 123, 125, 126, 128, 132, 143, 144, 145, 146, 150, 151, 152, 153, 169, 180, 185], "set_fit_request": [43, 112, 180], "set_output": [137, 138, 139], "set_param": [2, 12, 13, 14, 15, 31, 50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153], "set_portfolio_param": [9, 10, 133, 183], "set_score_request": [111, 113, 114, 115], "shallow": 133, "shape": [6, 9, 10, 12, 13, 14, 15, 29, 30, 31, 32, 33, 36, 39, 43, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 181, 182, 183, 185, 187], "share": 120, "sharp": [1, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 18, 19, 20, 23, 29, 32, 33, 36, 39, 40, 43, 48, 67, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 170, 177, 182, 184], "sharpe_ratio": [39, 67, 128, 132, 133, 134, 135, 136, 138, 169, 181, 182, 183, 184], "short": [2, 14, 15, 36, 119, 120, 121, 123, 124, 126, 127, 131, 173], "shortcom": [137, 169], "shortfal": [7, 8, 68, 71, 127, 134, 135, 136], "should": [12, 33, 57, 101, 102, 111, 112, 113, 114, 115, 140, 141, 142, 148, 149, 173, 177, 184], "show": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 133, 180], "show_front": [133, 183], "showlegend": [14, 40], "shown": [43, 181], "shrink": 116, "shrinkag": [3, 5, 13, 17, 21, 48, 113, 114, 115, 116, 117, 119, 120, 123, 124, 126, 127, 131, 169, 170, 186], "shrinkage_": [113, 114], "shrunk": [113, 114, 115], "shrunkcovari": [20, 172], "shrunkmu": [3, 5, 117, 169, 176, 186], "shrunkmumethod": 116, "shuffl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 98, 169, 177, 181, 182, 183, 185], "sigma": [43, 109, 112, 150, 152, 153, 154, 173, 187], "sigma_": 173, "sign": 95, "signal": [103, 114], "signatur": [95, 177], "significantli": [14, 162], "sim": [152, 153], "similar": [173, 177], "simpl": [6, 50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 173, 182], "simplex": [167, 168], "simpli": [3, 12, 137], "simplifi": [46, 173], "simul": [31, 33, 36, 40], "simultan": 110, "sinc": [12, 29, 97, 169, 181], "singl": [2, 29, 30, 31, 32, 33, 50, 51, 97, 99, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 139, 140, 173, 181, 182], "site": [53, 54], "six": 14, "size": [6, 15, 31, 33, 36, 39, 43, 51, 52, 64, 65, 66, 67, 68, 100, 105, 106, 107, 108, 110, 112, 113, 117, 120, 121, 126, 127, 129, 131, 133, 134, 135, 136, 150, 151, 152, 153, 154, 160, 165, 166, 169, 181, 182, 186, 187], "skew": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 43, 65, 112, 119, 123, 124, 134, 135, 136, 169, 173], "skfolio": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "skfolio_data": [53, 54, 174], "skip": [100, 132], "sklean": 186, "sklearn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 95, 97, 98, 103, 104, 109, 111, 112, 113, 114, 115, 116, 121, 123, 125, 126, 128, 132, 143, 144, 145, 146, 150, 151, 152, 153, 169, 171, 177, 180, 181, 182, 183, 184, 185], "slice": [51, 64, 65, 66, 67, 68, 117, 129, 133, 134, 135, 136], "slightli": [31, 33], "slot": [134, 135, 136, 184], "slow": [101, 103, 104, 105, 107, 110, 112, 113, 162], "slower": [145, 146], "small": [5, 114, 116, 145, 186], "smaller": [40, 101, 103, 104, 105, 107, 110, 112, 113, 162], "smooth": [105, 106], "snippet": 169, "so": [12, 13, 26, 50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 169, 184], "social": 110, "solut": 152, "solv": [131, 182, 187], "solver": [26, 111, 120, 121, 126, 127, 131, 182], "solver_param": [120, 121, 126, 127, 131], "some": [58, 60, 62, 63, 98, 104, 111, 112, 113, 114, 115, 131, 147, 180, 183], "sometim": 173, "sort": [133, 135, 136, 137, 138, 139], "sort_idx": [14, 15], "sort_measur": 133, "sortino": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 67, 134, 135, 136, 177], "sortino_ratio": [67, 134, 135, 136, 169, 177, 183, 184], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "sp500": 56, "space": [14, 26, 51, 64, 65, 66, 67, 68, 100, 117, 121, 129, 133, 134, 135, 136, 182], "span": 29, "spars": 111, "spawn": 99, "spd": 162, "spearman": [63, 169], "spearmandist": [175, 182], "special": 126, "specif": [0, 5, 51, 64, 65, 66, 67, 68, 98, 104, 117, 120, 121, 126, 127, 129, 131, 132, 145, 177, 186], "specifi": [11, 14, 15, 19, 43, 51, 53, 54, 57, 61, 64, 65, 66, 67, 68, 71, 98, 99, 101, 102, 111, 113, 114, 115, 117, 128, 129, 132, 134, 135, 136, 141, 142, 143, 148, 149], "spectral": [111, 113, 114, 115], "speed": 26, "sphinx": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48], "sphx_glr_auto_examples_miscellaneous_plot_set_output": [137, 138, 139], "split": [7, 8, 12, 29, 43, 51, 52, 53, 54, 55, 56, 64, 65, 66, 67, 68, 96, 97, 98, 99, 111, 113, 117, 124, 128, 129, 132, 174, 181, 182], "splitlin": [51, 64, 65, 66, 67, 68, 117, 129], "splitter": [99, 111], "spx": [2, 3, 4, 5, 6, 29, 119, 120, 121, 123, 124, 126, 127, 131, 143, 174], "spx_price": 2, "spx_test": 2, "spx_train": 2, "sqrt": [2, 51, 58, 60, 62, 63, 111, 112, 113, 114, 115, 134, 135, 136, 160], "squar": [2, 29, 30, 32, 50, 58, 60, 62, 63, 87, 89, 111, 113, 114, 115, 126, 127, 134, 135, 136, 150, 151, 152, 153, 157, 173], "sric": 136, "ssrn": [124, 128], "stabil": [14, 31, 120, 121, 126, 127, 131, 160], "stabl": [29, 30, 31, 32, 111, 123, 124, 133, 178, 182], "stack": [35, 37, 48, 132, 169, 170], "stackingoptim": [36, 182], "stake": 36, "standard": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 40, 43, 52, 53, 54, 55, 56, 58, 60, 62, 63, 67, 68, 87, 89, 111, 127, 133, 134, 135, 136, 161, 162, 163, 174, 182], "standard_devi": [68, 120, 127, 131, 134, 135, 136], "starer": 110, "start": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48, 51, 52, 53, 54, 55, 56, 64, 65, 66, 67, 68, 80, 97, 98, 117, 124, 129, 133, 134, 135, 136, 155, 162, 169, 174, 182], "startswith": [51, 64, 65, 66, 67, 68, 117, 129], "stat": [14, 15, 169, 177, 183], "state": 114, "static": [51, 64, 65, 66, 67, 68, 117, 129], "stationari": [150, 151], "statist": [29, 50, 110, 123, 160, 173], "statsmodel": 169, "std": [31, 33, 36, 39, 43, 161, 163], "std_test_scor": [14, 40, 43, 111], "std_train_scor": [14, 40], "stein": [3, 5, 116, 117, 186], "step": [29, 30, 40, 43, 112, 123, 124, 137, 143, 173, 182], "sticker": [7, 8], "still": [8, 178], "stochast": [82, 134, 135, 136], "stock": [2, 13, 112], "stop": [10, 51, 64, 65, 66, 67, 68, 111, 117, 129, 133], "store": [53, 54, 111, 113, 114, 115, 172, 175, 176, 182, 186, 187], "store_precis": [111, 113, 114, 115], "str": [43, 51, 53, 54, 64, 65, 66, 67, 68, 98, 99, 111, 112, 113, 114, 115, 117, 119, 120, 121, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 155, 183], "strategi": [7, 8, 18, 19, 20, 23, 99, 111, 128, 132], "stratifi": 99, "strength": [36, 132, 182], "strict": [51, 64, 65, 66, 67, 68, 117, 129], "strictli": [134, 135, 136], "string": [11, 50, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145], "strip": [51, 64, 65, 66, 67, 68, 117, 129], "structur": [5, 29, 30, 32, 145, 172, 175, 176, 182, 185, 186, 187], "studi": 112, "sub": [29, 36, 51, 64, 65, 66, 67, 68, 111, 112, 113, 114, 115, 117, 124, 129, 132, 133, 182], "subfold": [53, 54], "subobject": [50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153], "suboptim": [137, 173], "subsequ": 98, "subset": 104, "substitut": [51, 64, 65, 66, 67, 68, 117, 129], "substr": [51, 64, 65, 66, 67, 68, 117, 129], "succeq": [150, 152, 154, 187], "success": [12, 13, 162], "suffer": [29, 30, 32], "suffici": 11, "suffix": [51, 64, 65, 66, 67, 68, 117, 129], "suitabl": [51, 64, 65, 66, 67, 68, 98, 117, 129], "sum": [11, 120, 121, 125, 126, 127, 130, 131, 140, 143, 167, 168, 173, 184], "sum_": [12, 13, 14, 51, 119, 120, 123, 124, 126, 127, 131, 136, 160, 173], "summari": [7, 8, 9, 14, 15, 18, 19, 20, 23, 31, 33, 36, 39, 40, 43, 97, 133, 134, 135, 136, 169, 173, 181, 183, 184], "super": 182, "superior": [82, 134, 135, 136], "support": [121, 128, 137, 138, 139, 182, 183], "suppos": [13, 137, 180], "surfac": [1, 16, 48, 133, 170], "swapcas": [51, 64, 65, 66, 67, 68, 117, 129], "swinkel": 112, "sx5e": [119, 120, 121, 123, 124, 126, 127, 131, 143], "sy": 133, "symetri": 100, "symmetr": [134, 135, 136, 158, 162, 164], "syntax": 177, "systemat": [5, 128, 132, 145, 186], "szeke": 59, "t": [11, 12, 13, 15, 29, 43, 51, 64, 65, 66, 67, 68, 100, 109, 111, 112, 113, 114, 115, 117, 119, 120, 123, 124, 126, 127, 129, 131, 140, 143, 150, 151, 152, 153, 154, 160, 173, 182, 184, 187], "tab": [51, 64, 65, 66, 67, 68, 117, 129], "tabl": [51, 64, 65, 66, 67, 68, 117, 129], "tabsiz": [51, 64, 65, 66, 67, 68, 117, 129], "tag": [2, 9, 10, 14, 15, 31, 33, 36, 39, 46, 133, 134, 135, 136], "tag_list": [31, 36, 39, 133], "tail": [71, 79, 134, 135, 136, 169], "tailor": 181, "take": [4, 5, 12, 14, 15, 120, 121, 126, 127, 131, 133, 137, 143, 172, 173, 175, 176, 177, 182, 184, 185, 186, 187], "taken": 18, "target": [2, 15, 77, 79, 85, 87, 88, 97, 99, 100, 116, 125, 126, 127, 128, 132, 137, 138, 139, 140, 181], "target_n_test_path": [31, 33, 36, 39, 100, 181], "target_train_s": [31, 33, 36, 39, 100, 181], "tau": [110, 143], "tc": 12, "technologi": 11, "tend": [14, 39, 110, 120, 126, 127, 169], "tenth": 43, "term": [11, 31, 33, 120, 121, 126, 127, 139, 145, 173], "test": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 51, 59, 64, 65, 66, 67, 68, 96, 97, 98, 99, 100, 111, 113, 114, 115, 117, 128, 129, 132, 162, 181, 183, 184], "test_index": [97, 98], "test_set_index": 97, "test_siz": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 98, 169, 177, 182, 183, 185], "text": [51, 64, 65, 66, 67, 68, 117, 127, 129, 131, 150, 152, 154, 160, 182, 187], "th": 111, "than": [5, 11, 14, 29, 30, 31, 32, 40, 46, 50, 82, 98, 99, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 120, 121, 123, 124, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 162, 173, 182, 184, 186], "thank": 169, "thei": [0, 51, 64, 65, 66, 67, 68, 80, 81, 117, 129, 144, 169, 173, 174, 177, 182, 184], "them": [5, 6, 13, 26, 31, 33, 36, 39, 40, 132, 133, 145, 180, 184, 186], "theori": [61, 110, 165, 169], "therefor": [14, 98, 139, 162, 173], "theta": 75, "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 162, 169, 173, 177, 178, 180, 181, 182, 183, 184, 186], "third": [29, 30, 32, 51, 64, 65, 66, 67, 68, 90, 98, 117, 129], "thoma": [30, 123, 182], "those": [97, 181], "three": [14, 15, 31, 33, 36, 40, 51, 64, 65, 66, 67, 68, 110, 116, 117, 129, 137, 174], "threshold": [39, 50, 59, 101, 103, 104, 105, 107, 110, 112, 113, 137, 139, 140, 162, 185], "through": [5, 75, 111, 134, 135, 136, 145, 173, 182, 186], "tibshirani": 160, "tickformat": [14, 15, 40], "time": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 58, 60, 61, 62, 63, 95, 97, 98, 100, 109, 111, 112, 119, 120, 121, 123, 124, 126, 127, 129, 131, 134, 135, 136, 140, 173, 180, 181, 182], "timedelta": 98, "timeseriessplit": 98, "titl": [14, 15, 40, 43, 51, 64, 65, 66, 67, 68, 117, 129, 133, 169], "titlecas": [51, 64, 65, 66, 67, 68, 117, 129], "tlt": [120, 121, 126, 127, 131, 143, 169], "to_df": [134, 135, 136], "to_keep_": [137, 138, 139], "to_surfac": [10, 133], "togeth": [6, 36, 132, 169, 182, 184], "toi": [7, 8, 33, 43], "tol": 111, "tol_gap_ab": [120, 121, 126, 127, 131], "tol_gap_rel": [120, 121, 126, 127, 131], "toler": 111, "tone": 104, "tonexti": [14, 40], "too": [51, 64, 65, 66, 67, 68, 117, 129], "tool": [7, 8, 169, 177, 181, 184], "top": [29, 30, 40, 123, 124, 169, 178, 182], "topic": 184, "topmost": [29, 124, 182], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 46, 47, 49, 99, 100, 116, 119, 120, 123, 124, 126, 127, 131, 136, 140, 170, 182], "toward": [12, 13, 116], "tr": [111, 113, 114, 115], "trace": [113, 114, 115], "track": [1, 16, 48, 126, 127, 169, 170, 182], "tracking_rms": 2, "tractabl": 121, "trade": [13, 112, 116, 169, 184], "tradeoff": 2, "tradit": 103, "trail": [5, 51, 64, 65, 66, 67, 68, 117, 129], "train": [2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 97, 98, 99, 100, 111, 112, 121, 128, 132, 146, 181, 182, 184], "train_index": [97, 98], "train_siz": [12, 13, 14, 15, 31, 33, 36, 40, 43, 98, 169], "train_spx": 2, "train_test_split": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 169, 177, 181, 182, 183, 185], "transact": [1, 16, 48, 114, 119, 120, 121, 123, 124, 126, 127, 131, 136, 170, 182, 184], "transaction_cost": [12, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 136, 169], "transform": [7, 8, 11, 12, 13, 38, 39, 40, 43, 46, 48, 58, 60, 62, 63, 112, 137, 138, 139, 140, 144, 169, 173], "transform_output": [39, 40, 169, 185], "translat": [51, 64, 65, 66, 67, 68, 117, 129], "travers": [29, 124, 182], "tree": [29, 30, 32, 123, 124, 128, 182], "triangular": [3, 4, 5, 147, 186], "true": [10, 14, 29, 30, 32, 40, 43, 46, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 80, 81, 95, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 162, 164, 169, 173, 177, 180, 183], "truncat": [51, 64, 65, 66, 67, 68, 117, 129], "try": [51, 53, 54, 64, 65, 66, 67, 68, 117, 129], "tune": [169, 178], "tupl": [51, 64, 65, 66, 67, 68, 117, 129, 132, 163], "turnov": [120, 126, 127, 131, 169, 182], "tutori": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 120, 121, 126, 127, 131], "two": [2, 6, 14, 29, 31, 33, 40, 50, 51, 61, 64, 65, 66, 67, 68, 82, 100, 110, 111, 113, 114, 115, 116, 117, 123, 124, 129, 133, 134, 135, 136, 137, 160, 173, 177, 182], "type": [98, 111, 113, 114, 115, 133, 155], "u": [29, 30, 32, 51, 64, 65, 66, 67, 68, 117, 120, 121, 126, 127, 129, 131, 143, 160, 169], "u_": [150, 151, 152, 153, 154, 187], "ulcer": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 67, 68, 91, 127, 131, 134, 135, 136, 169, 182], "ulcer_index": [68, 119, 120, 123, 124, 127, 131, 134, 135, 136], "ulcer_index_ratio": [67, 134, 135, 136], "umbrella": 15, "un": 14, "unbias": [107, 116, 136], "uncas": [51, 64, 65, 66, 67, 68, 117, 129], "uncertain": [13, 119, 120, 123, 124, 126, 127, 131], "uncertainti": [1, 16, 26, 48, 120, 127, 143, 148, 149, 150, 151, 152, 153, 154, 170, 182], "uncertainty_set": [15, 169, 182, 187], "uncertainty_set_": [150, 151, 152, 153, 187], "uncertaintyset": [150, 151, 152, 153, 187], "unchang": [101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 137, 138, 139, 162], "uncommon": 173, "uncompound": [80, 81], "under": [9, 10, 13, 14, 15, 110, 111, 113, 114, 115, 153, 169, 173, 178, 182], "underli": [99, 103, 104, 109, 111, 112, 116, 121, 123, 125, 126, 128, 132, 143, 144, 145, 146, 150, 151, 152, 153, 184], "underperform": [7, 8, 33, 143], "underscor": [5, 15], "unfortun": 169, "unh": [7, 8, 43, 46, 55], "unicod": [51, 64, 65, 66, 67, 68, 117, 129], "unicodeencodeerror": [51, 64, 65, 66, 67, 68, 117, 129], "unifi": 169, "uniform": [14, 15, 26, 121, 167, 168, 177, 182], "uniformli": [14, 15, 177], "unit": [133, 134, 135, 136], "univers": [124, 128, 140, 173, 185], "unless": [51, 64, 65, 66, 67, 68, 99, 111, 117, 128, 129, 132, 146], "unrealist": 12, "unrepresent": [51, 64, 65, 66, 67, 68, 117, 129], "unstack": 43, "unsupervis": [137, 138, 139], "until": [139, 178], "untouch": [51, 64, 65, 66, 67, 68, 117, 129], "unus": 51, "unwant": [13, 119, 120, 123, 124, 126, 127, 131], "up": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 30, 31, 32, 33, 36, 39, 40, 43, 46, 52, 53, 54, 55, 56, 174], "updat": [4, 12, 29, 30, 50, 57, 58, 59, 60, 61, 62, 63, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 182, 186], "update_layout": [10, 14, 15, 40], "update_xax": 15, "update_yax": [14, 15, 40], "upgma": 51, "upgmc": 51, "upper": [14, 15, 51, 64, 65, 66, 67, 68, 73, 76, 117, 119, 120, 121, 123, 124, 126, 127, 129, 131, 134, 135, 136], "uppercas": [51, 64, 65, 66, 67, 68, 117, 129], "upsid": [29, 30, 32, 77, 79, 85, 87, 88, 120, 127, 131, 134, 135, 136], "url": 169, "uryasev": [26, 121], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 38, 39, 40, 42, 44, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 76, 77, 79, 82, 85, 86, 87, 88, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 162, 165, 166, 169, 170, 171, 173, 174, 177, 180, 181, 182, 184, 186, 187], "usabl": [51, 64, 65, 66, 67, 68, 117, 129], "user": [0, 7, 8, 43, 50, 57, 58, 59, 60, 61, 62, 63, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 162, 169, 173, 174], "usmv": [52, 182, 186], "usual": [13, 104, 177], "utf": [51, 64, 65, 66, 67, 68, 117, 129], "util": [12, 13, 29, 36, 75, 111, 112, 113, 114, 115, 121, 127, 129, 134, 135, 136, 169, 182, 183], "v": [28, 34, 43, 48, 51, 140, 144, 160, 170, 173, 181], "valid": [14, 32, 40, 51, 64, 65, 66, 67, 68, 96, 97, 98, 99, 111, 117, 128, 129, 132, 177, 178, 182], "valu": [2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 23, 29, 30, 32, 36, 40, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 160, 162, 164, 169, 177, 182], "value_at_risk": [65, 119, 123, 124, 134, 135, 136], "value_at_risk_beta": [134, 135, 136], "value_at_risk_ratio": [67, 134, 135, 136], "valueerror": [51, 64, 65, 66, 67, 68, 117, 129, 133, 156, 157, 158], "var": [65, 71, 76, 92, 134, 135, 136], "variabl": [5, 14, 15, 61, 82, 97, 120, 121, 126, 127, 131, 134, 135, 136, 137, 145, 152, 174, 177, 182, 186], "varianc": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 29, 30, 32, 33, 36, 39, 40, 43, 46, 48, 50, 51, 68, 82, 88, 101, 103, 104, 105, 107, 110, 112, 113, 116, 119, 120, 123, 124, 127, 128, 131, 134, 135, 136, 139, 145, 147, 150, 151, 152, 153, 162, 170, 173, 177, 182, 183, 184], "variance_from_asset": 136, "variance_upp": 10, "variant": 110, "variat": [61, 169, 177], "variou": 132, "vast": [7, 8], "vec": [150, 152, 154, 187], "vector": [11, 12, 13, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 116, 119, 120, 121, 123, 124, 126, 127, 131, 133, 134, 136, 137, 138, 139, 143, 152, 161, 163, 167, 168, 173, 181, 182, 184], "verbos": [99, 111, 120, 121, 126, 127, 128, 131, 132], "veri": [30, 111, 132, 173, 177, 182], "verifi": 164, "version": [14, 50, 51, 64, 65, 66, 67, 68, 95, 111, 112, 113, 114, 115, 117, 129, 137, 138, 139, 177, 178], "versu": [2, 10], "vert": [14, 74, 120, 126, 127, 136], "vert_": [14, 74, 120, 126, 127, 136], "vertic": 40, "via": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 51, 64, 65, 66, 67, 68, 117, 129, 174], "view": [143, 169, 182, 186], "view_confid": 143, "views_": 143, "vikberg": 112, "visual": [12, 13], "vlue": [6, 52, 169, 182, 186], "vod": 53, "vol": [7, 18, 19, 43, 169], "vol_weighted_target": 116, "volatil": [7, 12, 14, 18, 19, 23, 36, 42, 44, 48, 52, 112, 116, 125, 126, 136, 169, 170, 180, 182], "volatility_risk_premium_adj": 112, "volum": 113, "voor": 51, "vrpa": 112, "w": [11, 12, 13, 14, 15, 74, 109, 119, 120, 121, 123, 124, 126, 127, 129, 131, 136, 152, 173, 182, 184], "w_": [12, 13, 14, 100, 119, 120, 123, 124, 126, 127, 131, 136, 160, 173, 184], "wa": [7, 8, 12, 33, 43, 51, 59, 137, 138, 139], "wai": [40, 126, 127, 177], "walk": [12, 13, 15, 98, 169], "walkforward": [12, 13, 14, 15, 31, 33, 36, 40, 43, 169, 184], "wang": [50, 123, 160], "want": [10, 12, 13, 181, 182], "ward": [29, 30, 31, 32, 33, 50, 51, 123, 124, 182], "warn": [120, 121, 126, 127, 131, 162], "wasserstein": [26, 121, 182], "wasserstein_ball_radiu": [26, 121, 182], "we": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48, 95, 100, 111, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 139, 140, 145, 152, 162, 169, 173, 177, 178, 180, 181, 182, 183, 186], "week": 98, "wei": [50, 123, 160], "weight": [0, 1, 2, 4, 8, 12, 13, 14, 16, 23, 26, 29, 30, 31, 32, 33, 36, 48, 51, 74, 86, 100, 105, 106, 109, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136, 140, 143, 167, 168, 170, 173, 182, 183, 184], "weight_n_test_path": 100, "weight_train_s": 100, "weights_": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 39, 43, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 169, 177, 180, 182, 183, 187], "weights_per_observ": [135, 136], "weir": 53, "well": [50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 169, 181, 182], "were": [4, 6, 169], "werner": [150, 151, 152, 153], "when": [11, 12, 13, 14, 29, 30, 32, 40, 50, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 162, 177, 181, 184], "where": [11, 29, 30, 43, 51, 64, 65, 66, 67, 68, 97, 99, 111, 113, 114, 115, 117, 123, 124, 126, 129, 133, 137, 138, 139, 160, 173, 177, 181, 182, 184], "whether": [51, 64, 65, 66, 67, 68, 111, 113, 114, 115, 117, 129, 164], "which": [4, 5, 6, 11, 12, 13, 14, 15, 23, 26, 29, 30, 32, 43, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 67, 68, 73, 75, 76, 97, 99, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 150, 151, 152, 153, 162, 173, 174, 177, 181, 182, 184, 186], "while": [2, 36, 82, 97, 110, 132, 134, 135, 136, 169, 177, 178], "white": [150, 151], "whitespac": [51, 64, 65, 66, 67, 68, 117, 129], "whole": [32, 128, 182], "whose": [51, 64, 65, 66, 67, 68, 97, 111, 113, 114, 115, 117, 129, 137, 138, 139, 181], "wi": [133, 134, 135, 136], "wide": [58, 60, 62, 63, 177], "width": [14, 40, 51, 64, 65, 66, 67, 68, 117, 129], "wiesel": 114, "william": [74, 136], "window": [43, 105, 106, 107, 108, 110, 112, 133, 134, 135, 136], "window_s": [43, 105, 106, 107, 108, 110, 112], "wise": 173, "wishart": 152, "wit": 173, "within": [26, 30, 51, 64, 65, 66, 67, 68, 117, 121, 123, 129, 132, 160, 177, 182], "without": [2, 5, 6, 7, 8, 12, 13, 14, 15, 20, 39, 40, 120, 121, 126, 127, 131, 134, 135, 136], "wmt": [7, 8, 29, 30, 32, 43, 46, 55], "wolf": [113, 169], "wom": 98, "word": [31, 51, 64, 65, 66, 67, 68, 117, 129], "work": [36, 40, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153], "wors": [134, 135, 136], "worst": [7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 36, 40, 67, 68, 70, 71, 72, 92, 94, 120, 121, 127, 131, 134, 135, 136, 138, 169, 187], "worst_real": [68, 119, 120, 123, 124, 127, 131, 134, 135, 136], "worst_realization_ratio": [67, 134, 135, 136], "would": [11, 13, 14, 36, 119, 120, 123, 124, 126, 127, 131, 137, 138, 139, 169, 173, 182, 184], "wpgma": 51, "wpgmc": 51, "wpp": 53, "wrap": 95, "write": 177, "written": [120, 121, 126, 127, 131], "wtb": 53, "www": [120, 121, 126, 127, 131], "x": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 153, 156, 157, 158, 159, 164, 165, 166, 169, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187], "x0": [136, 137, 138, 139], "x1": [136, 137, 138, 139], "x_new": [137, 138, 139], "x_r": [137, 138, 139], "x_test": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 111, 113, 114, 115, 169, 177, 181, 182, 183, 185], "x_train": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 169, 177, 182, 183, 185], "xaxis_titl": [14, 15, 40], "xmlcharrefreplac": [51, 64, 65, 66, 67, 68, 117, 129], "xom": [7, 8, 43, 46, 55], "y": [2, 5, 6, 9, 10, 14, 15, 29, 40, 43, 46, 50, 51, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 153, 169, 182, 183, 186], "y_test": [2, 5, 6, 29, 169, 182], "y_test_mean": [14, 15], "y_test_std": 14, "y_train": [2, 5, 6, 29, 169, 182], "y_train_mean": 14, "y_train_std": 14, "yahoo": [52, 53, 54, 55, 56, 174], "yaxis_titl": [14, 15, 40], "year": [12, 13, 14, 15, 26, 31, 33, 36, 40, 43, 46, 98, 169, 173], "yearli": [13, 173], "yellow": [29, 30, 32, 50], "yield": [97, 98, 111, 128, 132, 173], "you": [7, 8, 9, 11, 12, 13, 15, 29, 43, 61, 95, 98, 109, 111, 112, 113, 114, 115, 120, 121, 126, 127, 131, 132, 140, 143, 169, 173, 178, 180, 181, 182], "your": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 98, 173, 177, 182], "yue": [50, 123, 160], "z": [10, 51, 64, 65, 66, 67, 68, 117, 129, 133, 137, 183], "zero": [14, 51, 64, 65, 66, 67, 68, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 115, 117, 120, 126, 127, 129, 134, 135, 136, 137, 138, 139, 150, 151, 152, 153, 162, 167, 184], "zfill": [51, 64, 65, 66, 67, 68, 117, 129], "zhou": 139, "zip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 46, 48], "zvra": 54, "zyme": 54, "zyne": 54, "zyxi": 54, "\u00ecn": 177}, "titles": ["API Reference", "Mean-Risk", "Tracking Error", "Empirical Prior", "Black &amp; Litterman", "Factor Model", "Black &amp; Litterman Factor Model", "Maximum Sharpe Ratio", "Minimum CVaR", "Efficient Frontier", "Mean-Variance-CDaR Surface", "Weight Constraints", "Transaction Costs", "Management Fees", "L1 and L2 Regularization", "Uncertainty Set", "Computation times", "Risk Budgeting", "Risk Parity - Variance", "Risk Budgeting - CVaR", "Risk Parity - Covariance shrinkage", "Computation times", "Maximum Diversification", "Maximum Diversification", "Computation times", "Distributionally Robust CVaR", "Distributionally Robust CVaR", "Computation times", "Hierarchical Clustering and NCO", "Hierarchical Risk Parity - CVaR", "Hierarchical Equal Risk Contribution - CDaR", "HRP vs HERC", "Nested Clusters Optimization", "NCO - Combinatorial Purged CV", "Computation times", "Ensemble Optimizations", "Stacking Optimization", "Computation times", "Pre-selection", "Drop Highly Correlated Assets", "Select Best Performers", "Computation times", "Metadata Routing", "Using Implied Volatility with Metadata Routing", "Computation times", "Data Preparation", "Investment Horizon", "Computation times", "Examples", "Computation times", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.cluster</span></code>.HierarchicalClustering", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.cluster</span></code>.LinkageMethod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_factors_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_ftse100_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_nasdaq_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_sp500_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_sp500_index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.BaseDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.CovarianceDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.DistanceCorrelation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.KendallDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.MutualInformation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.PearsonDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.SpearmanDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.BaseMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.ExtraRiskMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.PerfMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.RatioMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.RiskMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.average_drawdown", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.cdar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.cvar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.drawdown_at_risk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.edar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.effective_number_assets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.entropic_risk_measure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.evar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.first_lower_partial_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.fourth_central_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.fourth_lower_partial_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.get_cumulative_returns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.get_drawdowns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.gini_mean_difference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.max_drawdown", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.mean", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.mean_absolute_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.owa_gmd_weights", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.semi_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.semi_variance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.standard_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.third_central_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.ulcer_index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.value_at_risk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.variance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.worst_realization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.metrics</span></code>.make_scorer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.BaseCombinatorialCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.CombinatorialPurgedCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.WalkForward", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.cross_val_predict", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.optimal_folds_number", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.BaseCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.BaseMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.DenoiseCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.DetoneCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EWCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EWMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EmpiricalCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EmpiricalMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EquilibriumMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.GerberCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.GraphicalLassoCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ImpliedCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.LedoitWolf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.OAS", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkMuMethods", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.BaseComposition", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.BaseHierarchicalOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.ConvexOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.DistributionallyRobustCVaR", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.EqualWeighted", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.HierarchicalEqualRiskContribution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.HierarchicalRiskParity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.InverseVolatility", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.MaximumDiversification", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.MeanRisk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.NestedClustersOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.ObjectiveFunction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.Random", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.RiskBudgeting", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.StackingOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.population</span></code>.Population", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.BasePortfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.MultiPeriodPortfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.Portfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.DropCorrelated", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectKExtremes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectNonDominated", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.preprocessing</span></code>.prices_to_returns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BaseLoadingMatrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BasePrior", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BlackLitterman", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.EmpiricalPrior", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.FactorModel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.LoadingMatrixRegression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.PriorModel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BaseCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BaseMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BootstrapCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BootstrapMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.EmpiricalCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.EmpiricalMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.UncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.NBinsMethod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_distance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_square", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_symmetric", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.commutation_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.compute_optimal_n_clusters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.corr_to_cov", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.cov_nearest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.cov_to_corr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.is_cholesky_dec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.n_bins_freedman", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.n_bins_knuth", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.rand_weights", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.rand_weights_dirichlet", "skfolio", "Computation times", "Clustering Estimators", "Covariance Estimator", "Data Preparation", "Datasets", "Distance Estimator", "Expected Return Estimator", "Hyper-Parameters Tuning", "User Guide", "Installation", "Metadata Routing", "Model Selection", "Optimization", "Population", "Portfolio", "Pre-Selection Transformers", "Prior Estimator", "Uncertainty Set Estimator"], "titleterms": {"In": 173, "The": 173, "alloc": 182, "an": 177, "analysi": [5, 7, 8, 9, 10, 18, 19, 20, 23, 26, 31, 33, 36], "analyst": [4, 6], "api": 0, "approach": 173, "assert_is_dist": 156, "assert_is_squar": 157, "assert_is_symmetr": 158, "asset": 39, "attribut": 184, "avail": 169, "average_drawdown": 69, "base": [0, 184], "basecombinatorialcv": 96, "basecomposit": 118, "basecovari": 101, "basecovarianceuncertaintyset": 148, "basedist": 57, "basehierarchicaloptim": 119, "baseloadingmatrix": 141, "basemeasur": 64, "basemu": 102, "basemuuncertaintyset": 149, "baseportfolio": 134, "baseprior": 142, "benchmark": [3, 36], "best": 40, "black": [4, 6, 169, 186], "blacklitterman": 143, "bootstrapcovarianceuncertaintyset": 150, "bootstrapmuuncertaintyset": 151, "bound": 11, "budget": [11, 17, 19, 48, 182], "case": 182, "cdar": [10, 30, 70], "citat": 169, "class": 0, "cluster": [0, 28, 32, 48, 50, 51, 169, 171, 182], "combin": [182, 186], "combinatori": [31, 33, 36, 39, 169, 181], "combinatorialpurgedcv": 97, "commutation_matrix": 159, "composit": [29, 30, 32, 177], "comput": [16, 21, 24, 27, 34, 37, 41, 44, 47, 49, 170], "compute_optimal_n_clust": 160, "concept": 169, "conclus": [7, 8, 33, 36, 43], "constraint": [11, 169], "contribut": [18, 19, 29, 30, 182], "convex": 0, "convexoptim": 120, "corr_to_cov": 161, "correct": 173, "correl": 39, "cost": [12, 169], "cov_nearest": 162, "cov_to_corr": 163, "covari": [0, 20, 43, 169, 172], "covariancedist": 58, "cross": [31, 33, 36, 39, 43, 169, 181], "cross_val_predict": 99, "custom": 182, "cv": 33, "cvar": [8, 19, 25, 26, 29, 48, 71, 169, 182], "data": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 45, 48, 173], "dataclass": 0, "dataset": [0, 43, 52, 53, 54, 55, 56, 169, 174], "dendrogram": [29, 30, 32], "denois": 169, "denoisecovari": 103, "deton": 169, "detonecovari": 104, "distanc": [0, 29, 30, 32, 57, 58, 59, 60, 61, 62, 63, 175], "distancecorrel": 59, "distribut": [31, 33, 36, 39], "distribution": [25, 26, 48, 182], "distributionallyrobustcvar": 121, "diversif": [22, 23, 48, 182], "drawdown_at_risk": 72, "drop": 39, "dropcorrel": 137, "edar": 73, "effective_number_asset": 74, "effici": [9, 14, 15], "embed": 169, "empir": [3, 4, 5, 186], "empiricalcovari": 107, "empiricalcovarianceuncertaintyset": 152, "empiricalmu": 108, "empiricalmuuncertaintyset": 153, "empiricalprior": 144, "ensembl": [0, 35, 48], "entropic_risk_measur": 75, "enum": 0, "equal": [30, 182], "equalweight": 122, "equilibriummu": 109, "error": 2, "estim": [0, 29, 30, 32, 43, 171, 172, 175, 176, 177, 182, 186, 187], "evar": 76, "ewcovari": 105, "ewmu": 106, "exampl": [48, 173], "exhaust": 177, "expect": [169, 176], "extrariskmeasur": 65, "factor": [0, 5, 6, 169, 186], "factormodel": 145, "fee": 13, "first_lower_partial_mo": 77, "fit": 169, "fold": 169, "fourth_central_mo": 78, "fourth_lower_partial_mo": 79, "frontier": [9, 14, 15], "function": 0, "further": [6, 182], "gerber": 169, "gerbercovari": 110, "get_cumulative_return": 80, "get_drawdown": 81, "gini_mean_differ": 82, "go": [6, 182], "graphicallassocv": 111, "grid": [169, 177], "group": 11, "guid": 178, "herc": 31, "hierarch": [28, 29, 30, 48, 182], "hierarchicalclust": 50, "hierarchicalequalriskcontribut": 123, "hierarchicalriskpar": 124, "highli": 39, "horizon": 46, "hrp": 31, "hyper": [14, 15, 43, 177], "impli": 43, "impliedcovari": 112, "import": 169, "inequ": 11, "instal": [169, 179], "invers": 43, "inversevolatil": 125, "invest": 46, "is_cholesky_dec": 164, "k": 169, "kei": 169, "kendalldist": 60, "l1": 14, "l2": [14, 169], "ledoitwolf": 113, "left": 11, "linear": [11, 46, 173], "linkag": [29, 30, 32], "linkagemethod": 51, "litterman": [4, 6, 169, 186], "load": [0, 43, 169], "load_factors_dataset": 52, "load_ftse100_dataset": 53, "load_nasdaq_dataset": 54, "load_sp500_dataset": 55, "load_sp500_index": 56, "loadingmatrixregress": 146, "logarithm": 173, "long": 11, "lower": 11, "make_scor": 95, "manag": 13, "matrix": 0, "max_drawdown": 83, "maximum": [7, 22, 23, 48, 169, 182], "maximumdiversif": 126, "mean": [1, 10, 48, 84, 182], "mean_absolute_devi": 85, "meanrisk": 127, "measur": [0, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "metadata": [42, 43, 48, 180], "method": [29, 30, 32, 184], "metric": [0, 95, 177], "minimum": [8, 169], "model": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 46, 169, 181, 186], "model_select": [0, 96, 97, 98, 99, 100], "moment": [0, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "mu": 0, "multi": [12, 13, 184], "multiperiodportfolio": 135, "multipl": 186, "mutualinform": 61, "n_bins_freedman": 165, "n_bins_knuth": 166, "naiv": [0, 182], "nbinsmethod": 155, "nco": [28, 33, 48], "nest": [32, 169, 182], "nestedclustersoptim": 128, "norm": 169, "oa": 114, "object": 177, "objectivefunct": 129, "optim": [0, 10, 32, 35, 36, 48, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 169, 173, 177, 182], "optimal_folds_numb": 100, "owa_gmd_weight": 86, "parallel": [169, 177], "paramet": [14, 15, 31, 33, 36, 40, 43, 169, 177], "pareto": 10, "pariti": [18, 20, 29, 169, 182], "pearsondist": 62, "perfmeasur": 66, "perform": 40, "period": [12, 13, 184], "pipelin": [39, 40, 169], "pitfal": 173, "popul": [0, 133, 183], "portfolio": [0, 12, 13, 134, 135, 136, 173, 184], "posit": 11, "pre": [0, 38, 48, 169, 185], "pre_select": [0, 137, 138, 139], "predict": [2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 169, 181], "prepar": [45, 48, 173], "preprocess": [0, 140], "price": 46, "prices_to_return": 140, "prior": [0, 3, 29, 141, 142, 143, 144, 145, 146, 147, 182, 186], "priormodel": 147, "purg": [31, 33, 36, 39, 169, 181], "quickstart": 169, "rand_weight": 167, "rand_weights_dirichlet": 168, "random": [130, 169, 177], "ratio": [7, 169], "ratiomeasur": 67, "recognit": 169, "refer": 0, "regular": 14, "return": [46, 169, 173, 176], "right": 11, "risk": [1, 17, 18, 19, 20, 29, 30, 48, 169, 182], "riskbudget": 131, "riskmeasur": 68, "robust": [25, 26, 48, 182], "rout": [42, 43, 48, 180], "search": [169, 177], "select": [0, 38, 40, 48, 169, 181, 185], "selectkextrem": 138, "selectnondomin": 139, "semi_devi": 87, "semi_vari": 88, "set": [0, 15, 169, 187], "sharp": 7, "short": 11, "shrinkag": 20, "shrunk": 169, "shrunkcovari": 115, "shrunkmu": 116, "shrunkmumethod": 117, "skfolio": [0, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "sortino": 169, "space": 177, "spearmandist": 63, "specifi": 177, "split": 169, "stack": [36, 182], "stackingoptim": 132, "standard_devi": 89, "stat": [0, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "stock": 173, "summari": 29, "surfac": 10, "test": 169, "third_central_mo": 90, "time": [16, 21, 24, 27, 34, 37, 41, 44, 47, 49, 170], "tip": 177, "track": 2, "train": 169, "transact": [12, 169], "transform": [0, 185], "tune": [14, 15, 31, 33, 36, 40, 43, 177], "ulcer_index": 91, "uncertainti": [0, 15, 169, 187], "uncertainty_set": [0, 148, 149, 150, 151, 152, 153, 154], "uncertaintyset": 154, "upper": 11, "us": 43, "user": 178, "util": [0, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "v": 31, "valid": [31, 33, 36, 39, 43, 169, 181], "value_at_risk": 92, "varianc": [10, 18, 93, 169], "view": [4, 6], "volatil": 43, "walkforward": 98, "weight": [11, 169], "worst": 182, "worst_real": 94}})