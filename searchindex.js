Search.setIndex({"alltitles": {"API Reference": [[0, "api-reference"]], "Analysis": [[7, "analysis"], [8, "analysis"], [9, "analysis"], [10, "analysis"], [18, "analysis"], [19, "analysis"], [20, "analysis"], [23, "analysis"], [26, "analysis"], [31, "analysis"], [33, "analysis"], [36, "analysis"]], "Analyst views": [[4, "analyst-views"], [6, "analyst-views"]], "Attributes and Methods": [[178, "attributes-and-methods"], [178, "id3"]], "Available models": [[164, "available-models"]], "Base Class": [[0, "base-class"], [0, "id10"], [0, "id12"], [0, "id15"]], "Base Classe": [[0, "base-classe"], [0, "id2"]], "Base Classes": [[0, "base-classes"], [0, "id21"]], "Base Portfolio": [[178, "base-portfolio"]], "Benchmark": [[3, "benchmark"], [36, "benchmark"]], "Black & Litterman": [[4, "black-litterman"], [180, "black-litterman"]], "Black & Litterman Factor Model": [[6, "black-litterman-factor-model"], [6, "id1"], [164, "black-litterman-factor-model"]], "Black & Litterman Model": [[4, "black-litterman-model"], [164, "black-litterman-model"]], "Budget": [[11, "budget"]], "Citation": [[164, "citation"]], "Classes": [[0, "classes"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "id6"], [0, "id7"], [0, "id8"], [0, "id9"], [0, "id11"], [0, "id13"], [0, "id16"], [0, "id17"], [0, "id19"], [0, "id20"], [0, "id22"]], "Clustering Estimator": [[32, "clustering-estimator"]], "Clustering Estimators": [[166, "clustering-estimators"]], "Combinatorial Purged Cross-Validation": [[31, "combinatorial-purged-cross-validation"], [33, "combinatorial-purged-cross-validation"], [36, "combinatorial-purged-cross-validation"], [39, "combinatorial-purged-cross-validation"], [164, "combinatorial-purged-cross-validation"], [175, "combinatorial-purged-cross-validation"]], "Combining Multiple Prior Estimators": [[180, "combining-multiple-prior-estimators"]], "Combining Prior Estimators": [[176, "combining-prior-estimators"]], "Composite Estimators and Parameter Spaces": [[172, "composite-estimators-and-parameter-spaces"]], "Composition": [[29, "composition"], [30, "composition"], [32, "composition"]], "Computation times": [[16, "computation-times"], [21, "computation-times"], [24, "computation-times"], [27, "computation-times"], [34, "computation-times"], [37, "computation-times"], [41, "computation-times"], [44, "computation-times"], [46, "computation-times"], [165, "computation-times"]], "Conclusion": [[7, "conclusion"], [8, "conclusion"], [33, "conclusion"], [36, "conclusion"]], "Covariance Estimator": [[167, "covariance-estimator"]], "Cross-Validation Prediction": [[175, "cross-validation-prediction"]], "Custom Estimator": [[176, "custom-estimator"]], "Data": [[2, "data"], [3, "data"], [4, "data"], [5, "data"], [6, "data"], [7, "data"], [8, "data"], [9, "data"], [10, "data"], [11, "data"], [12, "data"], [13, "data"], [14, "data"], [15, "data"], [18, "data"], [19, "data"], [20, "data"], [23, "data"], [26, "data"], [29, "data"], [30, "data"], [31, "data"], [32, "data"], [33, "data"], [36, "data"], [39, "data"], [40, "data"]], "Data Preparation": [[42, "data-preparation"], [45, "data-preparation"], [168, "data-preparation"]], "Datasets": [[169, "datasets"]], "Dendrogram": [[29, "dendrogram"], [30, "dendrogram"], [32, "dendrogram"]], "Denoised Covariance & Shrunk Expected Returns": [[164, "denoised-covariance-shrunk-expected-returns"]], "Distance Estimator": [[29, "distance-estimator"], [30, "distance-estimator"], [32, "distance-estimator"], [170, "distance-estimator"]], "Distribution": [[31, "distribution"], [33, "distribution"], [36, "distribution"], [39, "distribution"]], "Distributionally Robust CVaR": [[25, "distributionally-robust-cvar"], [26, "distributionally-robust-cvar"], [45, "distributionally-robust-cvar"], [176, "distributionally-robust-cvar"]], "Diversification Analysis": [[23, "diversification-analysis"]], "Drop Highly Correlated Assets": [[39, "drop-highly-correlated-assets"]], "Efficient Frontier": [[9, "efficient-frontier"], [14, "efficient-frontier"], [15, "efficient-frontier"]], "Empirical Model": [[4, "empirical-model"], [5, "empirical-model"]], "Empirical Prior": [[3, "empirical-prior"], [180, "empirical-prior"]], "Ensemble Optimizations": [[35, "ensemble-optimizations"], [45, "ensemble-optimizations"]], "Enum": [[0, "enum"]], "Example for stocks": [[168, "example-for-stocks"]], "Examples": [[45, "examples"]], "Exhaustive Grid Search": [[172, "exhaustive-grid-search"]], "Expected Return Estimator": [[171, "expected-return-estimator"]], "Factor Analysis": [[5, "factor-analysis"]], "Factor Model": [[5, "factor-model"], [5, "id1"], [164, "factor-model"], [180, "factor-model"]], "Factor Model & Covariance Detoning": [[164, "factor-model-covariance-detoning"]], "Fit on training set": [[164, "fit-on-training-set"]], "Functions": [[0, "functions"], [0, "id23"], [0, "id24"], [0, "id25"], [0, "id26"], [0, "id27"]], "Going Further": [[176, "going-further"]], "Grid Search on embedded parameters": [[164, "grid-search-on-embedded-parameters"]], "Group and Linear Constraints": [[11, "group-and-linear-constraints"]], "HRP vs HERC": [[31, "hrp-vs-herc"]], "Hierarchical Clustering and NCO": [[28, "hierarchical-clustering-and-nco"], [45, "hierarchical-clustering-and-nco"]], "Hierarchical Equal Risk Contribution": [[176, "hierarchical-equal-risk-contribution"]], "Hierarchical Equal Risk Contribution - CDaR": [[30, "hierarchical-equal-risk-contribution-cdar"]], "Hierarchical Risk Parity": [[176, "hierarchical-risk-parity"]], "Hierarchical Risk Parity - CVaR": [[29, "hierarchical-risk-parity-cvar"]], "Hyper-Parameter Tuning": [[15, "hyper-parameter-tuning"]], "Hyper-Parameters Tuning": [[172, "hyper-parameters-tuning"]], "Hyper-parameter Tuning": [[14, "hyper-parameter-tuning"]], "Imports": [[164, "imports"]], "In skfolio": [[168, "in-skfolio"]], "Installation": [[164, "installation"], [174, "installation"]], "Investment Horizon": [[43, "investment-horizon"]], "K-fold Cross-Validation": [[164, "k-fold-cross-validation"]], "Key Concepts": [[164, "key-concepts"]], "L1 and L2 Regularization": [[14, "l1-and-l2-regularization"]], "Left and Right Inequalities": [[11, "left-and-right-inequalities"]], "Linear Returns": [[43, "linear-returns"]], "Linear return": [[168, "linear-return"]], "Linkage Methods": [[29, "linkage-methods"], [30, "linkage-methods"], [32, "linkage-methods"]], "Load Dataset": [[164, "load-dataset"]], "Loading Matrix Classes for Factor Models": [[0, "loading-matrix-classes-for-factor-models"]], "Logarithmic return": [[168, "logarithmic-return"]], "Lower and Upper Bounds on Weights": [[11, "lower-and-upper-bounds-on-weights"]], "Management Fees": [[13, "management-fees"], [13, "id1"]], "Maximum Diversification": [[22, "maximum-diversification"], [23, "maximum-diversification"], [45, "maximum-diversification"], [176, "maximum-diversification"]], "Maximum Sharpe Ratio": [[7, "maximum-sharpe-ratio"]], "Maximum Sortino Ratio": [[164, "maximum-sortino-ratio"]], "Mean-Risk": [[1, "mean-risk"], [45, "mean-risk"]], "Mean-Risk Optimization": [[176, "mean-risk-optimization"]], "Mean-Variance-CDaR Surface": [[10, "mean-variance-cdar-surface"]], "Minimum CVaR": [[8, "minimum-cvar"]], "Minimum Variance": [[164, "minimum-variance"]], "Model": [[2, "model"], [3, "model"], [7, "model"], [8, "model"], [9, "model"], [10, "model"], [11, "model"], [12, "model"], [13, "model"], [18, "model"], [19, "model"], [20, "model"], [23, "model"], [26, "model"], [29, "model"], [30, "model"], [31, "model"], [32, "model"], [33, "model"], [39, "model"], [40, "model"], [43, "model"]], "Model Dataclass": [[0, "model-dataclass"], [0, "id18"]], "Model Selection": [[175, "model-selection"]], "Multi Period Portfolio": [[178, "multi-period-portfolio"]], "Multi-period portfolio": [[12, "multi-period-portfolio"], [13, "multi-period-portfolio"]], "NCO - Combinatorial Purged CV": [[33, "nco-combinatorial-purged-cv"]], "Naive Allocation": [[176, "naive-allocation"]], "Nested Cluster Optimization with cross-validation and parallelization": [[164, "nested-cluster-optimization-with-cross-validation-and-parallelization"]], "Nested Clusters Optimization": [[32, "nested-clusters-optimization"], [176, "nested-clusters-optimization"]], "Optimization": [[176, "optimization"]], "Parallelism": [[172, "parallelism"]], "Parameter Tuning": [[31, "parameter-tuning"], [33, "parameter-tuning"], [36, "parameter-tuning"], [40, "parameter-tuning"]], "Pareto Optimal Surface": [[10, "pareto-optimal-surface"]], "Pipeline": [[39, "pipeline"], [40, "pipeline"]], "Pitfall in Portfolio Optimization": [[168, "pitfall-in-portfolio-optimization"]], "Population": [[177, "population"]], "Portfolio": [[178, "portfolio"], [178, "id2"]], "Pre-Selection Pipeline": [[164, "pre-selection-pipeline"]], "Pre-Selection Transformers": [[179, "pre-selection-transformers"]], "Pre-selection": [[38, "pre-selection"], [45, "pre-selection"]], "Predict on test set": [[164, "predict-on-test-set"]], "Prediction": [[2, "prediction"], [3, "prediction"], [4, "prediction"], [5, "prediction"], [6, "prediction"], [7, "prediction"], [8, "prediction"], [9, "prediction"], [14, "prediction"], [18, "prediction"], [19, "prediction"], [20, "prediction"], [23, "prediction"], [26, "prediction"], [29, "prediction"], [30, "prediction"], [31, "prediction"], [32, "prediction"], [33, "prediction"], [36, "prediction"], [39, "prediction"], [40, "prediction"]], "Prices": [[43, "prices"]], "Prior Estimator": [[29, "prior-estimator"], [176, "prior-estimator"], [180, "prior-estimator"]], "Quickstart": [[164, "quickstart"]], "Randomized Parameter Optimization": [[172, "randomized-parameter-optimization"]], "Randomized Search of the L2 Norm": [[164, "randomized-search-of-the-l2-norm"]], "Recognition": [[164, "recognition"]], "Risk Budget": [[19, "risk-budget"]], "Risk Budgeting": [[17, "risk-budgeting"], [45, "risk-budgeting"], [176, "risk-budgeting"]], "Risk Budgeting - CVaR": [[19, "risk-budgeting-cvar"]], "Risk Contribution": [[29, "risk-contribution"], [30, "risk-contribution"]], "Risk Contribution Analysis": [[18, "risk-contribution-analysis"], [19, "risk-contribution-analysis"]], "Risk Parity & Gerber Covariance": [[164, "risk-parity-gerber-covariance"]], "Risk Parity - Covariance shrinkage": [[20, "risk-parity-covariance-shrinkage"]], "Risk Parity - Variance": [[18, "risk-parity-variance"]], "Risk Parity on CVaR": [[164, "risk-parity-on-cvar"]], "Select Best Performers": [[40, "select-best-performers"]], "Short and Long Position Constraints": [[11, "short-and-long-position-constraints"]], "Specifying an Objective Metric": [[172, "specifying-an-objective-metric"]], "Stacking Model": [[36, "stacking-model"]], "Stacking Optimization": [[36, "stacking-optimization"], [176, "stacking-optimization"]], "Summary": [[29, "summary"]], "The correct approach": [[168, "the-correct-approach"]], "Tips for Parameter Search": [[172, "tips-for-parameter-search"]], "Tracking Error": [[2, "tracking-error"]], "Train/Test split": [[164, "train-test-split"]], "Transaction Cost": [[12, "transaction-cost"]], "Transaction Costs": [[12, "transaction-costs"]], "Uncertainty Set": [[15, "uncertainty-set"]], "Uncertainty Set Estimator": [[181, "uncertainty-set-estimator"]], "Uncertainty Set on Expected Returns": [[164, "uncertainty-set-on-expected-returns"]], "User Guide": [[173, "user-guide"]], "Weight Constraints": [[11, "weight-constraints"]], "Weight Constraints & Transaction Costs": [[164, "weight-constraints-transaction-costs"]], "Worst-Case Optimization": [[176, "worst-case-optimization"]], "skfolio": [[164, "skfolio"]], "skfolio.cluster.HierarchicalClustering": [[47, "skfolio-cluster-hierarchicalclustering"]], "skfolio.cluster.LinkageMethod": [[48, "skfolio-cluster-linkagemethod"]], "skfolio.cluster: Cluster Estimators": [[0, "module-3"]], "skfolio.datasets.load_factors_dataset": [[49, "skfolio-datasets-load-factors-dataset"]], "skfolio.datasets.load_ftse100_dataset": [[50, "skfolio-datasets-load-ftse100-dataset"]], "skfolio.datasets.load_nasdaq_dataset": [[51, "skfolio-datasets-load-nasdaq-dataset"]], "skfolio.datasets.load_sp500_dataset": [[52, "skfolio-datasets-load-sp500-dataset"]], "skfolio.datasets.load_sp500_index": [[53, "skfolio-datasets-load-sp500-index"]], "skfolio.datasets: Datasets": [[0, "skfolio-datasets-datasets"]], "skfolio.distance.BaseDistance": [[54, "skfolio-distance-basedistance"]], "skfolio.distance.CovarianceDistance": [[55, "skfolio-distance-covariancedistance"]], "skfolio.distance.DistanceCorrelation": [[56, "skfolio-distance-distancecorrelation"]], "skfolio.distance.KendallDistance": [[57, "skfolio-distance-kendalldistance"]], "skfolio.distance.MutualInformation": [[58, "skfolio-distance-mutualinformation"]], "skfolio.distance.PearsonDistance": [[59, "skfolio-distance-pearsondistance"]], "skfolio.distance.SpearmanDistance": [[60, "skfolio-distance-spearmandistance"]], "skfolio.distance: Distance Estimators": [[0, "module-2"]], "skfolio.measures.BaseMeasure": [[61, "skfolio-measures-basemeasure"]], "skfolio.measures.ExtraRiskMeasure": [[62, "skfolio-measures-extrariskmeasure"]], "skfolio.measures.PerfMeasure": [[63, "skfolio-measures-perfmeasure"]], "skfolio.measures.RatioMeasure": [[64, "skfolio-measures-ratiomeasure"]], "skfolio.measures.RiskMeasure": [[65, "skfolio-measures-riskmeasure"]], "skfolio.measures.average_drawdown": [[66, "skfolio-measures-average-drawdown"]], "skfolio.measures.cdar": [[67, "skfolio-measures-cdar"]], "skfolio.measures.cvar": [[68, "skfolio-measures-cvar"]], "skfolio.measures.drawdown_at_risk": [[69, "skfolio-measures-drawdown-at-risk"]], "skfolio.measures.edar": [[70, "skfolio-measures-edar"]], "skfolio.measures.effective_number_assets": [[71, "skfolio-measures-effective-number-assets"]], "skfolio.measures.entropic_risk_measure": [[72, "skfolio-measures-entropic-risk-measure"]], "skfolio.measures.evar": [[73, "skfolio-measures-evar"]], "skfolio.measures.first_lower_partial_moment": [[74, "skfolio-measures-first-lower-partial-moment"]], "skfolio.measures.fourth_central_moment": [[75, "skfolio-measures-fourth-central-moment"]], "skfolio.measures.fourth_lower_partial_moment": [[76, "skfolio-measures-fourth-lower-partial-moment"]], "skfolio.measures.get_cumulative_returns": [[77, "skfolio-measures-get-cumulative-returns"]], "skfolio.measures.get_drawdowns": [[78, "skfolio-measures-get-drawdowns"]], "skfolio.measures.gini_mean_difference": [[79, "skfolio-measures-gini-mean-difference"]], "skfolio.measures.max_drawdown": [[80, "skfolio-measures-max-drawdown"]], "skfolio.measures.mean": [[81, "skfolio-measures-mean"]], "skfolio.measures.mean_absolute_deviation": [[82, "skfolio-measures-mean-absolute-deviation"]], "skfolio.measures.owa_gmd_weights": [[83, "skfolio-measures-owa-gmd-weights"]], "skfolio.measures.semi_deviation": [[84, "skfolio-measures-semi-deviation"]], "skfolio.measures.semi_variance": [[85, "skfolio-measures-semi-variance"]], "skfolio.measures.standard_deviation": [[86, "skfolio-measures-standard-deviation"]], "skfolio.measures.third_central_moment": [[87, "skfolio-measures-third-central-moment"]], "skfolio.measures.ulcer_index": [[88, "skfolio-measures-ulcer-index"]], "skfolio.measures.value_at_risk": [[89, "skfolio-measures-value-at-risk"]], "skfolio.measures.variance": [[90, "skfolio-measures-variance"]], "skfolio.measures.worst_realization": [[91, "skfolio-measures-worst-realization"]], "skfolio.measures: Measures": [[0, "module-skfolio.measures"]], "skfolio.metrics.make_scorer": [[92, "skfolio-metrics-make-scorer"]], "skfolio.metrics: Metrics": [[0, "module-7"]], "skfolio.model_selection.BaseCombinatorialCV": [[93, "skfolio-model-selection-basecombinatorialcv"]], "skfolio.model_selection.CombinatorialPurgedCV": [[94, "skfolio-model-selection-combinatorialpurgedcv"]], "skfolio.model_selection.WalkForward": [[95, "skfolio-model-selection-walkforward"]], "skfolio.model_selection.cross_val_predict": [[96, "skfolio-model-selection-cross-val-predict"]], "skfolio.model_selection: Model Selection": [[0, "module-6"]], "skfolio.moments.BaseCovariance": [[97, "skfolio-moments-basecovariance"]], "skfolio.moments.BaseMu": [[98, "skfolio-moments-basemu"]], "skfolio.moments.DenoiseCovariance": [[99, "skfolio-moments-denoisecovariance"]], "skfolio.moments.DetoneCovariance": [[100, "skfolio-moments-detonecovariance"]], "skfolio.moments.EWCovariance": [[101, "skfolio-moments-ewcovariance"]], "skfolio.moments.EWMu": [[102, "skfolio-moments-ewmu"]], "skfolio.moments.EmpiricalCovariance": [[103, "skfolio-moments-empiricalcovariance"]], "skfolio.moments.EmpiricalMu": [[104, "skfolio-moments-empiricalmu"]], "skfolio.moments.EquilibriumMu": [[105, "skfolio-moments-equilibriummu"]], "skfolio.moments.GerberCovariance": [[106, "skfolio-moments-gerbercovariance"]], "skfolio.moments.GraphicalLassoCV": [[107, "skfolio-moments-graphicallassocv"]], "skfolio.moments.LedoitWolf": [[108, "skfolio-moments-ledoitwolf"]], "skfolio.moments.OAS": [[109, "skfolio-moments-oas"]], "skfolio.moments.ShrunkCovariance": [[110, "skfolio-moments-shrunkcovariance"]], "skfolio.moments.ShrunkMu": [[111, "skfolio-moments-shrunkmu"]], "skfolio.moments.ShrunkMuMethods": [[112, "skfolio-moments-shrunkmumethods"]], "skfolio.moments.covariance: Covariance Estimators": [[0, "module-1"]], "skfolio.moments.mu: Mu Estimators": [[0, "module-0"]], "skfolio.optimization.BaseComposition": [[113, "skfolio-optimization-basecomposition"]], "skfolio.optimization.BaseHierarchicalOptimization": [[114, "skfolio-optimization-basehierarchicaloptimization"]], "skfolio.optimization.ConvexOptimization": [[115, "skfolio-optimization-convexoptimization"]], "skfolio.optimization.DistributionallyRobustCVaR": [[116, "skfolio-optimization-distributionallyrobustcvar"]], "skfolio.optimization.EqualWeighted": [[117, "skfolio-optimization-equalweighted"]], "skfolio.optimization.HierarchicalEqualRiskContribution": [[118, "skfolio-optimization-hierarchicalequalriskcontribution"]], "skfolio.optimization.HierarchicalRiskParity": [[119, "skfolio-optimization-hierarchicalriskparity"]], "skfolio.optimization.InverseVolatility": [[120, "skfolio-optimization-inversevolatility"]], "skfolio.optimization.MaximumDiversification": [[121, "skfolio-optimization-maximumdiversification"]], "skfolio.optimization.MeanRisk": [[122, "skfolio-optimization-meanrisk"]], "skfolio.optimization.NestedClustersOptimization": [[123, "skfolio-optimization-nestedclustersoptimization"]], "skfolio.optimization.ObjectiveFunction": [[124, "skfolio-optimization-objectivefunction"]], "skfolio.optimization.Random": [[125, "skfolio-optimization-random"]], "skfolio.optimization.RiskBudgeting": [[126, "skfolio-optimization-riskbudgeting"]], "skfolio.optimization.StackingOptimization": [[127, "skfolio-optimization-stackingoptimization"]], "skfolio.optimization.cluster: Clustering Optimization Estimators": [[0, "module-skfolio.optimization.cluster"]], "skfolio.optimization.convex: Convex Optimization Estimators": [[0, "module-skfolio.optimization.convex"]], "skfolio.optimization.ensemble: Ensemble Optimization Estimators": [[0, "module-skfolio.optimization.ensemble"]], "skfolio.optimization.naive: Naive Optimization Estimators": [[0, "module-skfolio.optimization.naive"]], "skfolio.population.Population": [[128, "skfolio-population-population"]], "skfolio.population: Population": [[0, "module-skfolio.population"]], "skfolio.portfolio.BasePortfolio": [[129, "skfolio-portfolio-baseportfolio"]], "skfolio.portfolio.MultiPeriodPortfolio": [[130, "skfolio-portfolio-multiperiodportfolio"]], "skfolio.portfolio.Portfolio": [[131, "skfolio-portfolio-portfolio"]], "skfolio.portfolio: Portfolio": [[0, "module-skfolio.portfolio"]], "skfolio.pre_selection.DropCorrelated": [[132, "skfolio-pre-selection-dropcorrelated"]], "skfolio.pre_selection.SelectKExtremes": [[133, "skfolio-pre-selection-selectkextremes"]], "skfolio.pre_selection.SelectNonDominated": [[134, "skfolio-pre-selection-selectnondominated"]], "skfolio.pre_selection: Pre-selection Transformers": [[0, "module-5"]], "skfolio.preprocessing.prices_to_returns": [[135, "skfolio-preprocessing-prices-to-returns"]], "skfolio.preprocessing: Preprocessing": [[0, "skfolio-preprocessing-preprocessing"]], "skfolio.prior.BaseLoadingMatrix": [[136, "skfolio-prior-baseloadingmatrix"]], "skfolio.prior.BasePrior": [[137, "skfolio-prior-baseprior"]], "skfolio.prior.BlackLitterman": [[138, "skfolio-prior-blacklitterman"]], "skfolio.prior.EmpiricalPrior": [[139, "skfolio-prior-empiricalprior"]], "skfolio.prior.FactorModel": [[140, "skfolio-prior-factormodel"]], "skfolio.prior.LoadingMatrixRegression": [[141, "skfolio-prior-loadingmatrixregression"]], "skfolio.prior.PriorModel": [[142, "skfolio-prior-priormodel"]], "skfolio.prior: Prior Estimators": [[0, "module-skfolio"]], "skfolio.uncertainty_set.BaseCovarianceUncertaintySet": [[143, "skfolio-uncertainty-set-basecovarianceuncertaintyset"]], "skfolio.uncertainty_set.BaseMuUncertaintySet": [[144, "skfolio-uncertainty-set-basemuuncertaintyset"]], "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet": [[145, "skfolio-uncertainty-set-bootstrapcovarianceuncertaintyset"]], "skfolio.uncertainty_set.BootstrapMuUncertaintySet": [[146, "skfolio-uncertainty-set-bootstrapmuuncertaintyset"]], "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet": [[147, "skfolio-uncertainty-set-empiricalcovarianceuncertaintyset"]], "skfolio.uncertainty_set.EmpiricalMuUncertaintySet": [[148, "skfolio-uncertainty-set-empiricalmuuncertaintyset"]], "skfolio.uncertainty_set.UncertaintySet": [[149, "skfolio-uncertainty-set-uncertaintyset"]], "skfolio.uncertainty_set: Uncertainty set Estimators": [[0, "module-4"]], "skfolio.utils.stats.NBinsMethod": [[150, "skfolio-utils-stats-nbinsmethod"]], "skfolio.utils.stats.assert_is_distance": [[151, "skfolio-utils-stats-assert-is-distance"]], "skfolio.utils.stats.assert_is_square": [[152, "skfolio-utils-stats-assert-is-square"]], "skfolio.utils.stats.assert_is_symmetric": [[153, "skfolio-utils-stats-assert-is-symmetric"]], "skfolio.utils.stats.commutation_matrix": [[154, "skfolio-utils-stats-commutation-matrix"]], "skfolio.utils.stats.compute_optimal_n_clusters": [[155, "skfolio-utils-stats-compute-optimal-n-clusters"]], "skfolio.utils.stats.corr_to_cov": [[156, "skfolio-utils-stats-corr-to-cov"]], "skfolio.utils.stats.cov_nearest": [[157, "skfolio-utils-stats-cov-nearest"]], "skfolio.utils.stats.cov_to_corr": [[158, "skfolio-utils-stats-cov-to-corr"]], "skfolio.utils.stats.is_cholesky_dec": [[159, "skfolio-utils-stats-is-cholesky-dec"]], "skfolio.utils.stats.n_bins_freedman": [[160, "skfolio-utils-stats-n-bins-freedman"]], "skfolio.utils.stats.n_bins_knuth": [[161, "skfolio-utils-stats-n-bins-knuth"]], "skfolio.utils.stats.rand_weights": [[162, "skfolio-utils-stats-rand-weights"]], "skfolio.utils.stats.rand_weights_dirichlet": [[163, "skfolio-utils-stats-rand-weights-dirichlet"]], "skfolio.utils.stats: Stats": [[0, "skfolio-utils-stats-stats"]]}, "docnames": ["api", "auto_examples/1_mean_risk/index", "auto_examples/1_mean_risk/plot_10_tracking_error", "auto_examples/1_mean_risk/plot_11_empirical_prior", "auto_examples/1_mean_risk/plot_12_black_and_litterman", "auto_examples/1_mean_risk/plot_13_factor_model", "auto_examples/1_mean_risk/plot_14_black_litterman_factor_model", "auto_examples/1_mean_risk/plot_1_maximum_sharpe_ratio", "auto_examples/1_mean_risk/plot_2_minimum_CVaR", "auto_examples/1_mean_risk/plot_3_efficient_frontier", "auto_examples/1_mean_risk/plot_4_mean_variance_cdar", "auto_examples/1_mean_risk/plot_5_weight_constraints", "auto_examples/1_mean_risk/plot_6_transaction_costs", "auto_examples/1_mean_risk/plot_7_management_fees", "auto_examples/1_mean_risk/plot_8_regularization", "auto_examples/1_mean_risk/plot_9_uncertainty_set", "auto_examples/1_mean_risk/sg_execution_times", "auto_examples/2_risk_budgeting/index", "auto_examples/2_risk_budgeting/plot_1_risk_parity_variance", "auto_examples/2_risk_budgeting/plot_2_risk_busgeting_CVaR", "auto_examples/2_risk_budgeting/plot_3_risk_parity_ledoit_wolf", "auto_examples/2_risk_budgeting/sg_execution_times", "auto_examples/3_maxiumum_diversification/index", "auto_examples/3_maxiumum_diversification/plot_1_maximum_divesification", "auto_examples/3_maxiumum_diversification/sg_execution_times", "auto_examples/4_distributionally_robust_cvar/index", "auto_examples/4_distributionally_robust_cvar/plot_1_distributionally_robust_cvar", "auto_examples/4_distributionally_robust_cvar/sg_execution_times", "auto_examples/5_clustering/index", "auto_examples/5_clustering/plot_1_hrp_cvar", "auto_examples/5_clustering/plot_2_herc_cdar", "auto_examples/5_clustering/plot_3_hrp_vs_herc", "auto_examples/5_clustering/plot_4_nco", "auto_examples/5_clustering/plot_5_nco_grid_search", "auto_examples/5_clustering/sg_execution_times", "auto_examples/6_ensemble/index", "auto_examples/6_ensemble/plot_1_stacking", "auto_examples/6_ensemble/sg_execution_times", "auto_examples/7_pre_selection/index", "auto_examples/7_pre_selection/plot_1_drop_correlated", "auto_examples/7_pre_selection/plot_2_select_best_performers", "auto_examples/7_pre_selection/sg_execution_times", "auto_examples/8_data_preparation/index", "auto_examples/8_data_preparation/plot_1_investment_horizon", "auto_examples/8_data_preparation/sg_execution_times", "auto_examples/index", "auto_examples/sg_execution_times", "generated/skfolio.cluster.HierarchicalClustering", "generated/skfolio.cluster.LinkageMethod", "generated/skfolio.datasets.load_factors_dataset", "generated/skfolio.datasets.load_ftse100_dataset", "generated/skfolio.datasets.load_nasdaq_dataset", "generated/skfolio.datasets.load_sp500_dataset", "generated/skfolio.datasets.load_sp500_index", "generated/skfolio.distance.BaseDistance", "generated/skfolio.distance.CovarianceDistance", "generated/skfolio.distance.DistanceCorrelation", "generated/skfolio.distance.KendallDistance", "generated/skfolio.distance.MutualInformation", "generated/skfolio.distance.PearsonDistance", "generated/skfolio.distance.SpearmanDistance", "generated/skfolio.measures.BaseMeasure", "generated/skfolio.measures.ExtraRiskMeasure", "generated/skfolio.measures.PerfMeasure", "generated/skfolio.measures.RatioMeasure", "generated/skfolio.measures.RiskMeasure", "generated/skfolio.measures.average_drawdown", "generated/skfolio.measures.cdar", "generated/skfolio.measures.cvar", "generated/skfolio.measures.drawdown_at_risk", "generated/skfolio.measures.edar", "generated/skfolio.measures.effective_number_assets", "generated/skfolio.measures.entropic_risk_measure", "generated/skfolio.measures.evar", "generated/skfolio.measures.first_lower_partial_moment", "generated/skfolio.measures.fourth_central_moment", "generated/skfolio.measures.fourth_lower_partial_moment", "generated/skfolio.measures.get_cumulative_returns", "generated/skfolio.measures.get_drawdowns", "generated/skfolio.measures.gini_mean_difference", "generated/skfolio.measures.max_drawdown", "generated/skfolio.measures.mean", "generated/skfolio.measures.mean_absolute_deviation", "generated/skfolio.measures.owa_gmd_weights", "generated/skfolio.measures.semi_deviation", "generated/skfolio.measures.semi_variance", "generated/skfolio.measures.standard_deviation", "generated/skfolio.measures.third_central_moment", "generated/skfolio.measures.ulcer_index", "generated/skfolio.measures.value_at_risk", "generated/skfolio.measures.variance", "generated/skfolio.measures.worst_realization", "generated/skfolio.metrics.make_scorer", "generated/skfolio.model_selection.BaseCombinatorialCV", "generated/skfolio.model_selection.CombinatorialPurgedCV", "generated/skfolio.model_selection.WalkForward", "generated/skfolio.model_selection.cross_val_predict", "generated/skfolio.moments.BaseCovariance", "generated/skfolio.moments.BaseMu", "generated/skfolio.moments.DenoiseCovariance", "generated/skfolio.moments.DetoneCovariance", "generated/skfolio.moments.EWCovariance", "generated/skfolio.moments.EWMu", "generated/skfolio.moments.EmpiricalCovariance", "generated/skfolio.moments.EmpiricalMu", "generated/skfolio.moments.EquilibriumMu", "generated/skfolio.moments.GerberCovariance", "generated/skfolio.moments.GraphicalLassoCV", "generated/skfolio.moments.LedoitWolf", "generated/skfolio.moments.OAS", "generated/skfolio.moments.ShrunkCovariance", "generated/skfolio.moments.ShrunkMu", "generated/skfolio.moments.ShrunkMuMethods", "generated/skfolio.optimization.BaseComposition", "generated/skfolio.optimization.BaseHierarchicalOptimization", "generated/skfolio.optimization.ConvexOptimization", "generated/skfolio.optimization.DistributionallyRobustCVaR", "generated/skfolio.optimization.EqualWeighted", "generated/skfolio.optimization.HierarchicalEqualRiskContribution", "generated/skfolio.optimization.HierarchicalRiskParity", "generated/skfolio.optimization.InverseVolatility", "generated/skfolio.optimization.MaximumDiversification", "generated/skfolio.optimization.MeanRisk", "generated/skfolio.optimization.NestedClustersOptimization", "generated/skfolio.optimization.ObjectiveFunction", "generated/skfolio.optimization.Random", "generated/skfolio.optimization.RiskBudgeting", "generated/skfolio.optimization.StackingOptimization", "generated/skfolio.population.Population", "generated/skfolio.portfolio.BasePortfolio", "generated/skfolio.portfolio.MultiPeriodPortfolio", "generated/skfolio.portfolio.Portfolio", "generated/skfolio.pre_selection.DropCorrelated", "generated/skfolio.pre_selection.SelectKExtremes", "generated/skfolio.pre_selection.SelectNonDominated", "generated/skfolio.preprocessing.prices_to_returns", "generated/skfolio.prior.BaseLoadingMatrix", "generated/skfolio.prior.BasePrior", "generated/skfolio.prior.BlackLitterman", "generated/skfolio.prior.EmpiricalPrior", "generated/skfolio.prior.FactorModel", "generated/skfolio.prior.LoadingMatrixRegression", "generated/skfolio.prior.PriorModel", "generated/skfolio.uncertainty_set.BaseCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.BaseMuUncertaintySet", "generated/skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.BootstrapMuUncertaintySet", "generated/skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet", "generated/skfolio.uncertainty_set.EmpiricalMuUncertaintySet", "generated/skfolio.uncertainty_set.UncertaintySet", "generated/skfolio.utils.stats.NBinsMethod", "generated/skfolio.utils.stats.assert_is_distance", "generated/skfolio.utils.stats.assert_is_square", "generated/skfolio.utils.stats.assert_is_symmetric", "generated/skfolio.utils.stats.commutation_matrix", "generated/skfolio.utils.stats.compute_optimal_n_clusters", "generated/skfolio.utils.stats.corr_to_cov", "generated/skfolio.utils.stats.cov_nearest", "generated/skfolio.utils.stats.cov_to_corr", "generated/skfolio.utils.stats.is_cholesky_dec", "generated/skfolio.utils.stats.n_bins_freedman", "generated/skfolio.utils.stats.n_bins_knuth", "generated/skfolio.utils.stats.rand_weights", "generated/skfolio.utils.stats.rand_weights_dirichlet", "index", "sg_execution_times", "user_guide/cluster", "user_guide/covariance", "user_guide/data_preparation", "user_guide/datasets", "user_guide/distance", "user_guide/expected_returns", "user_guide/hyper_parameters_tuning", "user_guide/index", "user_guide/install", "user_guide/model_selection", "user_guide/optimization", "user_guide/population", "user_guide/portfolio", "user_guide/pre_selection", "user_guide/prior", "user_guide/uncertainty_set"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "auto_examples/1_mean_risk/index.rst", "auto_examples/1_mean_risk/plot_10_tracking_error.rst", "auto_examples/1_mean_risk/plot_11_empirical_prior.rst", "auto_examples/1_mean_risk/plot_12_black_and_litterman.rst", "auto_examples/1_mean_risk/plot_13_factor_model.rst", "auto_examples/1_mean_risk/plot_14_black_litterman_factor_model.rst", "auto_examples/1_mean_risk/plot_1_maximum_sharpe_ratio.rst", "auto_examples/1_mean_risk/plot_2_minimum_CVaR.rst", "auto_examples/1_mean_risk/plot_3_efficient_frontier.rst", "auto_examples/1_mean_risk/plot_4_mean_variance_cdar.rst", "auto_examples/1_mean_risk/plot_5_weight_constraints.rst", "auto_examples/1_mean_risk/plot_6_transaction_costs.rst", "auto_examples/1_mean_risk/plot_7_management_fees.rst", "auto_examples/1_mean_risk/plot_8_regularization.rst", "auto_examples/1_mean_risk/plot_9_uncertainty_set.rst", "auto_examples/1_mean_risk/sg_execution_times.rst", "auto_examples/2_risk_budgeting/index.rst", "auto_examples/2_risk_budgeting/plot_1_risk_parity_variance.rst", "auto_examples/2_risk_budgeting/plot_2_risk_busgeting_CVaR.rst", "auto_examples/2_risk_budgeting/plot_3_risk_parity_ledoit_wolf.rst", "auto_examples/2_risk_budgeting/sg_execution_times.rst", "auto_examples/3_maxiumum_diversification/index.rst", "auto_examples/3_maxiumum_diversification/plot_1_maximum_divesification.rst", "auto_examples/3_maxiumum_diversification/sg_execution_times.rst", "auto_examples/4_distributionally_robust_cvar/index.rst", "auto_examples/4_distributionally_robust_cvar/plot_1_distributionally_robust_cvar.rst", "auto_examples/4_distributionally_robust_cvar/sg_execution_times.rst", "auto_examples/5_clustering/index.rst", "auto_examples/5_clustering/plot_1_hrp_cvar.rst", "auto_examples/5_clustering/plot_2_herc_cdar.rst", "auto_examples/5_clustering/plot_3_hrp_vs_herc.rst", "auto_examples/5_clustering/plot_4_nco.rst", "auto_examples/5_clustering/plot_5_nco_grid_search.rst", "auto_examples/5_clustering/sg_execution_times.rst", "auto_examples/6_ensemble/index.rst", "auto_examples/6_ensemble/plot_1_stacking.rst", "auto_examples/6_ensemble/sg_execution_times.rst", "auto_examples/7_pre_selection/index.rst", "auto_examples/7_pre_selection/plot_1_drop_correlated.rst", "auto_examples/7_pre_selection/plot_2_select_best_performers.rst", "auto_examples/7_pre_selection/sg_execution_times.rst", "auto_examples/8_data_preparation/index.rst", "auto_examples/8_data_preparation/plot_1_investment_horizon.rst", "auto_examples/8_data_preparation/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/sg_execution_times.rst", "generated/skfolio.cluster.HierarchicalClustering.rst", "generated/skfolio.cluster.LinkageMethod.rst", "generated/skfolio.datasets.load_factors_dataset.rst", "generated/skfolio.datasets.load_ftse100_dataset.rst", "generated/skfolio.datasets.load_nasdaq_dataset.rst", "generated/skfolio.datasets.load_sp500_dataset.rst", "generated/skfolio.datasets.load_sp500_index.rst", "generated/skfolio.distance.BaseDistance.rst", "generated/skfolio.distance.CovarianceDistance.rst", "generated/skfolio.distance.DistanceCorrelation.rst", "generated/skfolio.distance.KendallDistance.rst", "generated/skfolio.distance.MutualInformation.rst", "generated/skfolio.distance.PearsonDistance.rst", "generated/skfolio.distance.SpearmanDistance.rst", "generated/skfolio.measures.BaseMeasure.rst", "generated/skfolio.measures.ExtraRiskMeasure.rst", "generated/skfolio.measures.PerfMeasure.rst", "generated/skfolio.measures.RatioMeasure.rst", "generated/skfolio.measures.RiskMeasure.rst", "generated/skfolio.measures.average_drawdown.rst", "generated/skfolio.measures.cdar.rst", "generated/skfolio.measures.cvar.rst", "generated/skfolio.measures.drawdown_at_risk.rst", "generated/skfolio.measures.edar.rst", "generated/skfolio.measures.effective_number_assets.rst", "generated/skfolio.measures.entropic_risk_measure.rst", "generated/skfolio.measures.evar.rst", "generated/skfolio.measures.first_lower_partial_moment.rst", "generated/skfolio.measures.fourth_central_moment.rst", "generated/skfolio.measures.fourth_lower_partial_moment.rst", "generated/skfolio.measures.get_cumulative_returns.rst", "generated/skfolio.measures.get_drawdowns.rst", "generated/skfolio.measures.gini_mean_difference.rst", "generated/skfolio.measures.max_drawdown.rst", "generated/skfolio.measures.mean.rst", "generated/skfolio.measures.mean_absolute_deviation.rst", "generated/skfolio.measures.owa_gmd_weights.rst", "generated/skfolio.measures.semi_deviation.rst", "generated/skfolio.measures.semi_variance.rst", "generated/skfolio.measures.standard_deviation.rst", "generated/skfolio.measures.third_central_moment.rst", "generated/skfolio.measures.ulcer_index.rst", "generated/skfolio.measures.value_at_risk.rst", "generated/skfolio.measures.variance.rst", "generated/skfolio.measures.worst_realization.rst", "generated/skfolio.metrics.make_scorer.rst", "generated/skfolio.model_selection.BaseCombinatorialCV.rst", "generated/skfolio.model_selection.CombinatorialPurgedCV.rst", "generated/skfolio.model_selection.WalkForward.rst", "generated/skfolio.model_selection.cross_val_predict.rst", "generated/skfolio.moments.BaseCovariance.rst", "generated/skfolio.moments.BaseMu.rst", "generated/skfolio.moments.DenoiseCovariance.rst", "generated/skfolio.moments.DetoneCovariance.rst", "generated/skfolio.moments.EWCovariance.rst", "generated/skfolio.moments.EWMu.rst", "generated/skfolio.moments.EmpiricalCovariance.rst", "generated/skfolio.moments.EmpiricalMu.rst", "generated/skfolio.moments.EquilibriumMu.rst", "generated/skfolio.moments.GerberCovariance.rst", "generated/skfolio.moments.GraphicalLassoCV.rst", "generated/skfolio.moments.LedoitWolf.rst", "generated/skfolio.moments.OAS.rst", "generated/skfolio.moments.ShrunkCovariance.rst", "generated/skfolio.moments.ShrunkMu.rst", "generated/skfolio.moments.ShrunkMuMethods.rst", "generated/skfolio.optimization.BaseComposition.rst", "generated/skfolio.optimization.BaseHierarchicalOptimization.rst", "generated/skfolio.optimization.ConvexOptimization.rst", "generated/skfolio.optimization.DistributionallyRobustCVaR.rst", "generated/skfolio.optimization.EqualWeighted.rst", "generated/skfolio.optimization.HierarchicalEqualRiskContribution.rst", "generated/skfolio.optimization.HierarchicalRiskParity.rst", "generated/skfolio.optimization.InverseVolatility.rst", "generated/skfolio.optimization.MaximumDiversification.rst", "generated/skfolio.optimization.MeanRisk.rst", "generated/skfolio.optimization.NestedClustersOptimization.rst", "generated/skfolio.optimization.ObjectiveFunction.rst", "generated/skfolio.optimization.Random.rst", "generated/skfolio.optimization.RiskBudgeting.rst", "generated/skfolio.optimization.StackingOptimization.rst", "generated/skfolio.population.Population.rst", "generated/skfolio.portfolio.BasePortfolio.rst", "generated/skfolio.portfolio.MultiPeriodPortfolio.rst", "generated/skfolio.portfolio.Portfolio.rst", "generated/skfolio.pre_selection.DropCorrelated.rst", "generated/skfolio.pre_selection.SelectKExtremes.rst", "generated/skfolio.pre_selection.SelectNonDominated.rst", "generated/skfolio.preprocessing.prices_to_returns.rst", "generated/skfolio.prior.BaseLoadingMatrix.rst", "generated/skfolio.prior.BasePrior.rst", "generated/skfolio.prior.BlackLitterman.rst", "generated/skfolio.prior.EmpiricalPrior.rst", "generated/skfolio.prior.FactorModel.rst", "generated/skfolio.prior.LoadingMatrixRegression.rst", "generated/skfolio.prior.PriorModel.rst", "generated/skfolio.uncertainty_set.BaseCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.BaseMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.BootstrapMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.rst", "generated/skfolio.uncertainty_set.EmpiricalMuUncertaintySet.rst", "generated/skfolio.uncertainty_set.UncertaintySet.rst", "generated/skfolio.utils.stats.NBinsMethod.rst", "generated/skfolio.utils.stats.assert_is_distance.rst", "generated/skfolio.utils.stats.assert_is_square.rst", "generated/skfolio.utils.stats.assert_is_symmetric.rst", "generated/skfolio.utils.stats.commutation_matrix.rst", "generated/skfolio.utils.stats.compute_optimal_n_clusters.rst", "generated/skfolio.utils.stats.corr_to_cov.rst", "generated/skfolio.utils.stats.cov_nearest.rst", "generated/skfolio.utils.stats.cov_to_corr.rst", "generated/skfolio.utils.stats.is_cholesky_dec.rst", "generated/skfolio.utils.stats.n_bins_freedman.rst", "generated/skfolio.utils.stats.n_bins_knuth.rst", "generated/skfolio.utils.stats.rand_weights.rst", "generated/skfolio.utils.stats.rand_weights_dirichlet.rst", "index.rst", "sg_execution_times.rst", "user_guide/cluster.rst", "user_guide/covariance.rst", "user_guide/data_preparation.rst", "user_guide/datasets.rst", "user_guide/distance.rst", "user_guide/expected_returns.rst", "user_guide/hyper_parameters_tuning.rst", "user_guide/index.rst", "user_guide/install.rst", "user_guide/model_selection.rst", "user_guide/optimization.rst", "user_guide/population.rst", "user_guide/portfolio.rst", "user_guide/pre_selection.rst", "user_guide/prior.rst", "user_guide/uncertainty_set.rst"], "indexentries": {"annualized_factor (skfolio.portfolio.baseportfolio property)": [[129, "skfolio.portfolio.BasePortfolio.annualized_factor", false]], "annualized_factor (skfolio.portfolio.multiperiodportfolio property)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.annualized_factor", false]], "annualized_factor (skfolio.portfolio.portfolio property)": [[131, "skfolio.portfolio.Portfolio.annualized_factor", false]], "append() (skfolio.population.population method)": [[128, "skfolio.population.Population.append", false]], "append() (skfolio.portfolio.multiperiodportfolio method)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.append", false]], "assert_is_distance() (in module skfolio.utils.stats)": [[151, "skfolio.utils.stats.assert_is_distance", false]], "assert_is_square() (in module skfolio.utils.stats)": [[152, "skfolio.utils.stats.assert_is_square", false]], "assert_is_symmetric() (in module skfolio.utils.stats)": [[153, "skfolio.utils.stats.assert_is_symmetric", false]], "assets (skfolio.portfolio.multiperiodportfolio property)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.assets", false]], "average_drawdown() (in module skfolio.measures)": [[66, "skfolio.measures.average_drawdown", false]], "basecombinatorialcv (class in skfolio.model_selection)": [[93, "skfolio.model_selection.BaseCombinatorialCV", false]], "basecomposition (class in skfolio.optimization)": [[113, "skfolio.optimization.BaseComposition", false]], "basecovariance (class in skfolio.moments)": [[97, "skfolio.moments.BaseCovariance", false]], "basecovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[143, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet", false]], "basedistance (class in skfolio.distance)": [[54, "skfolio.distance.BaseDistance", false]], "basehierarchicaloptimization (class in skfolio.optimization)": [[114, "skfolio.optimization.BaseHierarchicalOptimization", false]], "baseloadingmatrix (class in skfolio.prior)": [[136, "skfolio.prior.BaseLoadingMatrix", false]], "basemeasure (class in skfolio.measures)": [[61, "skfolio.measures.BaseMeasure", false]], "basemu (class in skfolio.moments)": [[98, "skfolio.moments.BaseMu", false]], "basemuuncertaintyset (class in skfolio.uncertainty_set)": [[144, "skfolio.uncertainty_set.BaseMuUncertaintySet", false]], "baseportfolio (class in skfolio.portfolio)": [[129, "skfolio.portfolio.BasePortfolio", false]], "baseprior (class in skfolio.prior)": [[137, "skfolio.prior.BasePrior", false]], "binary_train_test_sets (skfolio.model_selection.combinatorialpurgedcv property)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.binary_train_test_sets", false]], "blacklitterman (class in skfolio.prior)": [[138, "skfolio.prior.BlackLitterman", false]], "bootstrapcovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[145, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet", false]], "bootstrapmuuncertaintyset (class in skfolio.uncertainty_set)": [[146, "skfolio.uncertainty_set.BootstrapMuUncertaintySet", false]], "capitalize() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.capitalize", false]], "capitalize() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.capitalize", false]], "capitalize() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.capitalize", false]], "capitalize() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.capitalize", false]], "capitalize() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.capitalize", false]], "capitalize() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.capitalize", false]], "capitalize() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.capitalize", false]], "capitalize() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.capitalize", false]], "casefold() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.casefold", false]], "casefold() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.casefold", false]], "casefold() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.casefold", false]], "casefold() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.casefold", false]], "casefold() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.casefold", false]], "casefold() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.casefold", false]], "casefold() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.casefold", false]], "casefold() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.casefold", false]], "cdar() (in module skfolio.measures)": [[67, "skfolio.measures.cdar", false]], "center() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.center", false]], "center() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.center", false]], "center() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.center", false]], "center() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.center", false]], "center() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.center", false]], "center() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.center", false]], "center() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.center", false]], "center() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.center", false]], "clear() (skfolio.population.population method)": [[128, "skfolio.population.Population.clear", false]], "clear() (skfolio.portfolio.baseportfolio method)": [[129, "skfolio.portfolio.BasePortfolio.clear", false]], "clear() (skfolio.portfolio.multiperiodportfolio method)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.clear", false]], "clear() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.clear", false]], "combinatorialpurgedcv (class in skfolio.model_selection)": [[94, "skfolio.model_selection.CombinatorialPurgedCV", false]], "commutation_matrix() (in module skfolio.utils.stats)": [[154, "skfolio.utils.stats.commutation_matrix", false]], "composition (skfolio.portfolio.baseportfolio property)": [[129, "skfolio.portfolio.BasePortfolio.composition", false]], "composition (skfolio.portfolio.multiperiodportfolio property)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.composition", false]], "composition (skfolio.portfolio.portfolio property)": [[131, "skfolio.portfolio.Portfolio.composition", false]], "composition() (skfolio.population.population method)": [[128, "skfolio.population.Population.composition", false]], "compute_optimal_n_clusters() (in module skfolio.utils.stats)": [[155, "skfolio.utils.stats.compute_optimal_n_clusters", false]], "contribution() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.contribution", false]], "convexoptimization (class in skfolio.optimization)": [[115, "skfolio.optimization.ConvexOptimization", false]], "copy() (skfolio.population.population method)": [[128, "skfolio.population.Population.copy", false]], "copy() (skfolio.portfolio.baseportfolio method)": [[129, "skfolio.portfolio.BasePortfolio.copy", false]], "copy() (skfolio.portfolio.multiperiodportfolio method)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.copy", false]], "copy() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.copy", false]], "corr_to_cov() (in module skfolio.utils.stats)": [[156, "skfolio.utils.stats.corr_to_cov", false]], "count() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.count", false]], "count() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.count", false]], "count() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.count", false]], "count() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.count", false]], "count() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.count", false]], "count() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.count", false]], "count() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.count", false]], "count() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.count", false]], "count() (skfolio.population.population method)": [[128, "skfolio.population.Population.count", false]], "cov_nearest() (in module skfolio.utils.stats)": [[157, "skfolio.utils.stats.cov_nearest", false]], "cov_to_corr() (in module skfolio.utils.stats)": [[158, "skfolio.utils.stats.cov_to_corr", false]], "covariancedistance (class in skfolio.distance)": [[55, "skfolio.distance.CovarianceDistance", false]], "cross_val_predict() (in module skfolio.model_selection)": [[96, "skfolio.model_selection.cross_val_predict", false]], "cumulative_returns (skfolio.portfolio.baseportfolio attribute)": [[129, "skfolio.portfolio.BasePortfolio.cumulative_returns", false]], "cumulative_returns (skfolio.portfolio.multiperiodportfolio attribute)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.cumulative_returns", false]], "cumulative_returns (skfolio.portfolio.portfolio attribute)": [[131, "skfolio.portfolio.Portfolio.cumulative_returns", false]], "cumulative_returns_df (skfolio.portfolio.baseportfolio property)": [[129, "skfolio.portfolio.BasePortfolio.cumulative_returns_df", false]], "cumulative_returns_df (skfolio.portfolio.multiperiodportfolio property)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.cumulative_returns_df", false]], "cumulative_returns_df (skfolio.portfolio.portfolio property)": [[131, "skfolio.portfolio.Portfolio.cumulative_returns_df", false]], "cvar() (in module skfolio.measures)": [[68, "skfolio.measures.cvar", false]], "denoisecovariance (class in skfolio.moments)": [[99, "skfolio.moments.DenoiseCovariance", false]], "detonecovariance (class in skfolio.moments)": [[100, "skfolio.moments.DetoneCovariance", false]], "distancecorrelation (class in skfolio.distance)": [[56, "skfolio.distance.DistanceCorrelation", false]], "distributionallyrobustcvar (class in skfolio.optimization)": [[116, "skfolio.optimization.DistributionallyRobustCVaR", false]], "diversification (skfolio.portfolio.portfolio property)": [[131, "skfolio.portfolio.Portfolio.diversification", false]], "dominates() (skfolio.portfolio.baseportfolio method)": [[129, "skfolio.portfolio.BasePortfolio.dominates", false]], "dominates() (skfolio.portfolio.multiperiodportfolio method)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.dominates", false]], "dominates() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.dominates", false]], "drawdown_at_risk() (in module skfolio.measures)": [[69, "skfolio.measures.drawdown_at_risk", false]], "drawdowns (skfolio.portfolio.baseportfolio attribute)": [[129, "skfolio.portfolio.BasePortfolio.drawdowns", false]], "drawdowns (skfolio.portfolio.multiperiodportfolio attribute)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.drawdowns", false]], "drawdowns (skfolio.portfolio.portfolio attribute)": [[131, "skfolio.portfolio.Portfolio.drawdowns", false]], "dropcorrelated (class in skfolio.pre_selection)": [[132, "skfolio.pre_selection.DropCorrelated", false]], "edar() (in module skfolio.measures)": [[70, "skfolio.measures.edar", false]], "effective_number_assets (skfolio.portfolio.portfolio property)": [[131, "skfolio.portfolio.Portfolio.effective_number_assets", false]], "effective_number_assets() (in module skfolio.measures)": [[71, "skfolio.measures.effective_number_assets", false]], "empiricalcovariance (class in skfolio.moments)": [[103, "skfolio.moments.EmpiricalCovariance", false]], "empiricalcovarianceuncertaintyset (class in skfolio.uncertainty_set)": [[147, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet", false]], "empiricalmu (class in skfolio.moments)": [[104, "skfolio.moments.EmpiricalMu", false]], "empiricalmuuncertaintyset (class in skfolio.uncertainty_set)": [[148, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet", false]], "empiricalprior (class in skfolio.prior)": [[139, "skfolio.prior.EmpiricalPrior", false]], "encode() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.encode", false]], "encode() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.encode", false]], "encode() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.encode", false]], "encode() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.encode", false]], "encode() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.encode", false]], "encode() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.encode", false]], "encode() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.encode", false]], "encode() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.encode", false]], "endswith() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.endswith", false]], "endswith() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.endswith", false]], "endswith() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.endswith", false]], "endswith() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.endswith", false]], "endswith() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.endswith", false]], "endswith() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.endswith", false]], "endswith() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.endswith", false]], "endswith() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.endswith", false]], "entropic_risk_measure() (in module skfolio.measures)": [[72, "skfolio.measures.entropic_risk_measure", false]], "equalweighted (class in skfolio.optimization)": [[117, "skfolio.optimization.EqualWeighted", false]], "equilibriummu (class in skfolio.moments)": [[105, "skfolio.moments.EquilibriumMu", false]], "error_norm() (skfolio.moments.graphicallassocv method)": [[107, "skfolio.moments.GraphicalLassoCV.error_norm", false]], "error_norm() (skfolio.moments.ledoitwolf method)": [[108, "skfolio.moments.LedoitWolf.error_norm", false]], "error_norm() (skfolio.moments.oas method)": [[109, "skfolio.moments.OAS.error_norm", false]], "error_norm() (skfolio.moments.shrunkcovariance method)": [[110, "skfolio.moments.ShrunkCovariance.error_norm", false]], "evar() (in module skfolio.measures)": [[73, "skfolio.measures.evar", false]], "ewcovariance (class in skfolio.moments)": [[101, "skfolio.moments.EWCovariance", false]], "ewmu (class in skfolio.moments)": [[102, "skfolio.moments.EWMu", false]], "expandtabs() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.expandtabs", false]], "expandtabs() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.expandtabs", false]], "expandtabs() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.expandtabs", false]], "expandtabs() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.expandtabs", false]], "expandtabs() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.expandtabs", false]], "expected_returns_from_assets() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.expected_returns_from_assets", false]], "extend() (skfolio.population.population method)": [[128, "skfolio.population.Population.extend", false]], "extrariskmeasure (class in skfolio.measures)": [[62, "skfolio.measures.ExtraRiskMeasure", false]], "factormodel (class in skfolio.prior)": [[140, "skfolio.prior.FactorModel", false]], "filter() (skfolio.population.population method)": [[128, "skfolio.population.Population.filter", false]], "find() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.find", false]], "find() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.find", false]], "find() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.find", false]], "find() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.find", false]], "find() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.find", false]], "find() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.find", false]], "find() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.find", false]], "find() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.find", false]], "first_lower_partial_moment() (in module skfolio.measures)": [[74, "skfolio.measures.first_lower_partial_moment", false]], "fit() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.fit", false]], "fit() (skfolio.distance.basedistance method)": [[54, "skfolio.distance.BaseDistance.fit", false]], "fit() (skfolio.distance.covariancedistance method)": [[55, "skfolio.distance.CovarianceDistance.fit", false]], "fit() (skfolio.distance.distancecorrelation method)": [[56, "skfolio.distance.DistanceCorrelation.fit", false]], "fit() (skfolio.distance.kendalldistance method)": [[57, "skfolio.distance.KendallDistance.fit", false]], "fit() (skfolio.distance.mutualinformation method)": [[58, "skfolio.distance.MutualInformation.fit", false]], "fit() (skfolio.distance.pearsondistance method)": [[59, "skfolio.distance.PearsonDistance.fit", false]], "fit() (skfolio.distance.spearmandistance method)": [[60, "skfolio.distance.SpearmanDistance.fit", false]], "fit() (skfolio.moments.denoisecovariance method)": [[99, "skfolio.moments.DenoiseCovariance.fit", false]], "fit() (skfolio.moments.detonecovariance method)": [[100, "skfolio.moments.DetoneCovariance.fit", false]], "fit() (skfolio.moments.empiricalcovariance method)": [[103, "skfolio.moments.EmpiricalCovariance.fit", false]], "fit() (skfolio.moments.empiricalmu method)": [[104, "skfolio.moments.EmpiricalMu.fit", false]], "fit() (skfolio.moments.equilibriummu method)": [[105, "skfolio.moments.EquilibriumMu.fit", false]], "fit() (skfolio.moments.ewcovariance method)": [[101, "skfolio.moments.EWCovariance.fit", false]], "fit() (skfolio.moments.ewmu method)": [[102, "skfolio.moments.EWMu.fit", false]], "fit() (skfolio.moments.gerbercovariance method)": [[106, "skfolio.moments.GerberCovariance.fit", false]], "fit() (skfolio.moments.graphicallassocv method)": [[107, "skfolio.moments.GraphicalLassoCV.fit", false]], "fit() (skfolio.moments.ledoitwolf method)": [[108, "skfolio.moments.LedoitWolf.fit", false]], "fit() (skfolio.moments.oas method)": [[109, "skfolio.moments.OAS.fit", false]], "fit() (skfolio.moments.shrunkcovariance method)": [[110, "skfolio.moments.ShrunkCovariance.fit", false]], "fit() (skfolio.moments.shrunkmu method)": [[111, "skfolio.moments.ShrunkMu.fit", false]], "fit() (skfolio.optimization.distributionallyrobustcvar method)": [[116, "skfolio.optimization.DistributionallyRobustCVaR.fit", false]], "fit() (skfolio.optimization.equalweighted method)": [[117, "skfolio.optimization.EqualWeighted.fit", false]], "fit() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[118, "skfolio.optimization.HierarchicalEqualRiskContribution.fit", false]], "fit() (skfolio.optimization.hierarchicalriskparity method)": [[119, "skfolio.optimization.HierarchicalRiskParity.fit", false]], "fit() (skfolio.optimization.inversevolatility method)": [[120, "skfolio.optimization.InverseVolatility.fit", false]], "fit() (skfolio.optimization.maximumdiversification method)": [[121, "skfolio.optimization.MaximumDiversification.fit", false]], "fit() (skfolio.optimization.meanrisk method)": [[122, "skfolio.optimization.MeanRisk.fit", false]], "fit() (skfolio.optimization.nestedclustersoptimization method)": [[123, "skfolio.optimization.NestedClustersOptimization.fit", false]], "fit() (skfolio.optimization.random method)": [[125, "skfolio.optimization.Random.fit", false]], "fit() (skfolio.optimization.riskbudgeting method)": [[126, "skfolio.optimization.RiskBudgeting.fit", false]], "fit() (skfolio.optimization.stackingoptimization method)": [[127, "skfolio.optimization.StackingOptimization.fit", false]], "fit() (skfolio.pre_selection.dropcorrelated method)": [[132, "skfolio.pre_selection.DropCorrelated.fit", false]], "fit() (skfolio.pre_selection.selectkextremes method)": [[133, "skfolio.pre_selection.SelectKExtremes.fit", false]], "fit() (skfolio.pre_selection.selectnondominated method)": [[134, "skfolio.pre_selection.SelectNonDominated.fit", false]], "fit() (skfolio.prior.blacklitterman method)": [[138, "skfolio.prior.BlackLitterman.fit", false]], "fit() (skfolio.prior.empiricalprior method)": [[139, "skfolio.prior.EmpiricalPrior.fit", false]], "fit() (skfolio.prior.factormodel method)": [[140, "skfolio.prior.FactorModel.fit", false]], "fit() (skfolio.prior.loadingmatrixregression method)": [[141, "skfolio.prior.LoadingMatrixRegression.fit", false]], "fit() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[145, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[146, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[147, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.fit", false]], "fit() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[148, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.fit", false]], "fit_predict() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.fit_predict", false]], "fit_predict() (skfolio.optimization.basehierarchicaloptimization method)": [[114, "skfolio.optimization.BaseHierarchicalOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.convexoptimization method)": [[115, "skfolio.optimization.ConvexOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.distributionallyrobustcvar method)": [[116, "skfolio.optimization.DistributionallyRobustCVaR.fit_predict", false]], "fit_predict() (skfolio.optimization.equalweighted method)": [[117, "skfolio.optimization.EqualWeighted.fit_predict", false]], "fit_predict() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[118, "skfolio.optimization.HierarchicalEqualRiskContribution.fit_predict", false]], "fit_predict() (skfolio.optimization.hierarchicalriskparity method)": [[119, "skfolio.optimization.HierarchicalRiskParity.fit_predict", false]], "fit_predict() (skfolio.optimization.inversevolatility method)": [[120, "skfolio.optimization.InverseVolatility.fit_predict", false]], "fit_predict() (skfolio.optimization.maximumdiversification method)": [[121, "skfolio.optimization.MaximumDiversification.fit_predict", false]], "fit_predict() (skfolio.optimization.meanrisk method)": [[122, "skfolio.optimization.MeanRisk.fit_predict", false]], "fit_predict() (skfolio.optimization.nestedclustersoptimization method)": [[123, "skfolio.optimization.NestedClustersOptimization.fit_predict", false]], "fit_predict() (skfolio.optimization.random method)": [[125, "skfolio.optimization.Random.fit_predict", false]], "fit_predict() (skfolio.optimization.riskbudgeting method)": [[126, "skfolio.optimization.RiskBudgeting.fit_predict", false]], "fit_predict() (skfolio.optimization.stackingoptimization method)": [[127, "skfolio.optimization.StackingOptimization.fit_predict", false]], "fit_transform() (skfolio.pre_selection.dropcorrelated method)": [[132, "skfolio.pre_selection.DropCorrelated.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectkextremes method)": [[133, "skfolio.pre_selection.SelectKExtremes.fit_transform", false]], "fit_transform() (skfolio.pre_selection.selectnondominated method)": [[134, "skfolio.pre_selection.SelectNonDominated.fit_transform", false]], "fitness (skfolio.portfolio.baseportfolio attribute)": [[129, "skfolio.portfolio.BasePortfolio.fitness", false]], "fitness (skfolio.portfolio.multiperiodportfolio attribute)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.fitness", false]], "fitness (skfolio.portfolio.portfolio attribute)": [[131, "skfolio.portfolio.Portfolio.fitness", false]], "fitness_measures (skfolio.portfolio.baseportfolio property)": [[129, "skfolio.portfolio.BasePortfolio.fitness_measures", false]], "fitness_measures (skfolio.portfolio.multiperiodportfolio property)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.fitness_measures", false]], "fitness_measures (skfolio.portfolio.portfolio property)": [[131, "skfolio.portfolio.Portfolio.fitness_measures", false]], "format() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.format", false]], "format() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.format", false]], "format() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.format", false]], "format() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.format", false]], "format() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.format", false]], "format() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.format", false]], "format() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.format", false]], "format() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.format", false]], "format_map() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.format_map", false]], "format_map() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.format_map", false]], "format_map() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.format_map", false]], "format_map() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.format_map", false]], "format_map() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.format_map", false]], "format_map() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.format_map", false]], "format_map() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.format_map", false]], "format_map() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.format_map", false]], "fourth_central_moment() (in module skfolio.measures)": [[75, "skfolio.measures.fourth_central_moment", false]], "fourth_lower_partial_moment() (in module skfolio.measures)": [[76, "skfolio.measures.fourth_lower_partial_moment", false]], "gerbercovariance (class in skfolio.moments)": [[106, "skfolio.moments.GerberCovariance", false]], "get_cumulative_returns() (in module skfolio.measures)": [[77, "skfolio.measures.get_cumulative_returns", false]], "get_drawdowns() (in module skfolio.measures)": [[78, "skfolio.measures.get_drawdowns", false]], "get_feature_names_out() (skfolio.pre_selection.dropcorrelated method)": [[132, "skfolio.pre_selection.DropCorrelated.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectkextremes method)": [[133, "skfolio.pre_selection.SelectKExtremes.get_feature_names_out", false]], "get_feature_names_out() (skfolio.pre_selection.selectnondominated method)": [[134, "skfolio.pre_selection.SelectNonDominated.get_feature_names_out", false]], "get_measure() (skfolio.portfolio.baseportfolio method)": [[129, "skfolio.portfolio.BasePortfolio.get_measure", false]], "get_measure() (skfolio.portfolio.multiperiodportfolio method)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.get_measure", false]], "get_measure() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.get_measure", false]], "get_metadata_routing() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.basedistance method)": [[54, "skfolio.distance.BaseDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.covariancedistance method)": [[55, "skfolio.distance.CovarianceDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.distancecorrelation method)": [[56, "skfolio.distance.DistanceCorrelation.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.kendalldistance method)": [[57, "skfolio.distance.KendallDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.mutualinformation method)": [[58, "skfolio.distance.MutualInformation.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.pearsondistance method)": [[59, "skfolio.distance.PearsonDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.distance.spearmandistance method)": [[60, "skfolio.distance.SpearmanDistance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.model_selection.walkforward method)": [[95, "skfolio.model_selection.WalkForward.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.basecovariance method)": [[97, "skfolio.moments.BaseCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.basemu method)": [[98, "skfolio.moments.BaseMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.denoisecovariance method)": [[99, "skfolio.moments.DenoiseCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.detonecovariance method)": [[100, "skfolio.moments.DetoneCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.empiricalcovariance method)": [[103, "skfolio.moments.EmpiricalCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.empiricalmu method)": [[104, "skfolio.moments.EmpiricalMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.equilibriummu method)": [[105, "skfolio.moments.EquilibriumMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ewcovariance method)": [[101, "skfolio.moments.EWCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ewmu method)": [[102, "skfolio.moments.EWMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.gerbercovariance method)": [[106, "skfolio.moments.GerberCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.graphicallassocv method)": [[107, "skfolio.moments.GraphicalLassoCV.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.ledoitwolf method)": [[108, "skfolio.moments.LedoitWolf.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.oas method)": [[109, "skfolio.moments.OAS.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.shrunkcovariance method)": [[110, "skfolio.moments.ShrunkCovariance.get_metadata_routing", false]], "get_metadata_routing() (skfolio.moments.shrunkmu method)": [[111, "skfolio.moments.ShrunkMu.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.basecomposition method)": [[113, "skfolio.optimization.BaseComposition.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.basehierarchicaloptimization method)": [[114, "skfolio.optimization.BaseHierarchicalOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.convexoptimization method)": [[115, "skfolio.optimization.ConvexOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.distributionallyrobustcvar method)": [[116, "skfolio.optimization.DistributionallyRobustCVaR.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.equalweighted method)": [[117, "skfolio.optimization.EqualWeighted.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[118, "skfolio.optimization.HierarchicalEqualRiskContribution.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.hierarchicalriskparity method)": [[119, "skfolio.optimization.HierarchicalRiskParity.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.inversevolatility method)": [[120, "skfolio.optimization.InverseVolatility.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.maximumdiversification method)": [[121, "skfolio.optimization.MaximumDiversification.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.meanrisk method)": [[122, "skfolio.optimization.MeanRisk.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.nestedclustersoptimization method)": [[123, "skfolio.optimization.NestedClustersOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.random method)": [[125, "skfolio.optimization.Random.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.riskbudgeting method)": [[126, "skfolio.optimization.RiskBudgeting.get_metadata_routing", false]], "get_metadata_routing() (skfolio.optimization.stackingoptimization method)": [[127, "skfolio.optimization.StackingOptimization.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.dropcorrelated method)": [[132, "skfolio.pre_selection.DropCorrelated.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectkextremes method)": [[133, "skfolio.pre_selection.SelectKExtremes.get_metadata_routing", false]], "get_metadata_routing() (skfolio.pre_selection.selectnondominated method)": [[134, "skfolio.pre_selection.SelectNonDominated.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.baseloadingmatrix method)": [[136, "skfolio.prior.BaseLoadingMatrix.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.baseprior method)": [[137, "skfolio.prior.BasePrior.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.blacklitterman method)": [[138, "skfolio.prior.BlackLitterman.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.empiricalprior method)": [[139, "skfolio.prior.EmpiricalPrior.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.factormodel method)": [[140, "skfolio.prior.FactorModel.get_metadata_routing", false]], "get_metadata_routing() (skfolio.prior.loadingmatrixregression method)": [[141, "skfolio.prior.LoadingMatrixRegression.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[143, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[144, "skfolio.uncertainty_set.BaseMuUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[145, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[146, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[147, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.get_metadata_routing", false]], "get_metadata_routing() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[148, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.get_metadata_routing", false]], "get_n_splits() (skfolio.model_selection.walkforward method)": [[95, "skfolio.model_selection.WalkForward.get_n_splits", false]], "get_params() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.get_params", false]], "get_params() (skfolio.distance.basedistance method)": [[54, "skfolio.distance.BaseDistance.get_params", false]], "get_params() (skfolio.distance.covariancedistance method)": [[55, "skfolio.distance.CovarianceDistance.get_params", false]], "get_params() (skfolio.distance.distancecorrelation method)": [[56, "skfolio.distance.DistanceCorrelation.get_params", false]], "get_params() (skfolio.distance.kendalldistance method)": [[57, "skfolio.distance.KendallDistance.get_params", false]], "get_params() (skfolio.distance.mutualinformation method)": [[58, "skfolio.distance.MutualInformation.get_params", false]], "get_params() (skfolio.distance.pearsondistance method)": [[59, "skfolio.distance.PearsonDistance.get_params", false]], "get_params() (skfolio.distance.spearmandistance method)": [[60, "skfolio.distance.SpearmanDistance.get_params", false]], "get_params() (skfolio.moments.basecovariance method)": [[97, "skfolio.moments.BaseCovariance.get_params", false]], "get_params() (skfolio.moments.basemu method)": [[98, "skfolio.moments.BaseMu.get_params", false]], "get_params() (skfolio.moments.denoisecovariance method)": [[99, "skfolio.moments.DenoiseCovariance.get_params", false]], "get_params() (skfolio.moments.detonecovariance method)": [[100, "skfolio.moments.DetoneCovariance.get_params", false]], "get_params() (skfolio.moments.empiricalcovariance method)": [[103, "skfolio.moments.EmpiricalCovariance.get_params", false]], "get_params() (skfolio.moments.empiricalmu method)": [[104, "skfolio.moments.EmpiricalMu.get_params", false]], "get_params() (skfolio.moments.equilibriummu method)": [[105, "skfolio.moments.EquilibriumMu.get_params", false]], "get_params() (skfolio.moments.ewcovariance method)": [[101, "skfolio.moments.EWCovariance.get_params", false]], "get_params() (skfolio.moments.ewmu method)": [[102, "skfolio.moments.EWMu.get_params", false]], "get_params() (skfolio.moments.gerbercovariance method)": [[106, "skfolio.moments.GerberCovariance.get_params", false]], "get_params() (skfolio.moments.graphicallassocv method)": [[107, "skfolio.moments.GraphicalLassoCV.get_params", false]], "get_params() (skfolio.moments.ledoitwolf method)": [[108, "skfolio.moments.LedoitWolf.get_params", false]], "get_params() (skfolio.moments.oas method)": [[109, "skfolio.moments.OAS.get_params", false]], "get_params() (skfolio.moments.shrunkcovariance method)": [[110, "skfolio.moments.ShrunkCovariance.get_params", false]], "get_params() (skfolio.moments.shrunkmu method)": [[111, "skfolio.moments.ShrunkMu.get_params", false]], "get_params() (skfolio.optimization.basecomposition method)": [[113, "skfolio.optimization.BaseComposition.get_params", false]], "get_params() (skfolio.optimization.basehierarchicaloptimization method)": [[114, "skfolio.optimization.BaseHierarchicalOptimization.get_params", false]], "get_params() (skfolio.optimization.convexoptimization method)": [[115, "skfolio.optimization.ConvexOptimization.get_params", false]], "get_params() (skfolio.optimization.distributionallyrobustcvar method)": [[116, "skfolio.optimization.DistributionallyRobustCVaR.get_params", false]], "get_params() (skfolio.optimization.equalweighted method)": [[117, "skfolio.optimization.EqualWeighted.get_params", false]], "get_params() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[118, "skfolio.optimization.HierarchicalEqualRiskContribution.get_params", false]], "get_params() (skfolio.optimization.hierarchicalriskparity method)": [[119, "skfolio.optimization.HierarchicalRiskParity.get_params", false]], "get_params() (skfolio.optimization.inversevolatility method)": [[120, "skfolio.optimization.InverseVolatility.get_params", false]], "get_params() (skfolio.optimization.maximumdiversification method)": [[121, "skfolio.optimization.MaximumDiversification.get_params", false]], "get_params() (skfolio.optimization.meanrisk method)": [[122, "skfolio.optimization.MeanRisk.get_params", false]], "get_params() (skfolio.optimization.nestedclustersoptimization method)": [[123, "skfolio.optimization.NestedClustersOptimization.get_params", false]], "get_params() (skfolio.optimization.random method)": [[125, "skfolio.optimization.Random.get_params", false]], "get_params() (skfolio.optimization.riskbudgeting method)": [[126, "skfolio.optimization.RiskBudgeting.get_params", false]], "get_params() (skfolio.optimization.stackingoptimization method)": [[127, "skfolio.optimization.StackingOptimization.get_params", false]], "get_params() (skfolio.pre_selection.dropcorrelated method)": [[132, "skfolio.pre_selection.DropCorrelated.get_params", false]], "get_params() (skfolio.pre_selection.selectkextremes method)": [[133, "skfolio.pre_selection.SelectKExtremes.get_params", false]], "get_params() (skfolio.pre_selection.selectnondominated method)": [[134, "skfolio.pre_selection.SelectNonDominated.get_params", false]], "get_params() (skfolio.prior.baseloadingmatrix method)": [[136, "skfolio.prior.BaseLoadingMatrix.get_params", false]], "get_params() (skfolio.prior.baseprior method)": [[137, "skfolio.prior.BasePrior.get_params", false]], "get_params() (skfolio.prior.blacklitterman method)": [[138, "skfolio.prior.BlackLitterman.get_params", false]], "get_params() (skfolio.prior.empiricalprior method)": [[139, "skfolio.prior.EmpiricalPrior.get_params", false]], "get_params() (skfolio.prior.factormodel method)": [[140, "skfolio.prior.FactorModel.get_params", false]], "get_params() (skfolio.prior.loadingmatrixregression method)": [[141, "skfolio.prior.LoadingMatrixRegression.get_params", false]], "get_params() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[143, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[144, "skfolio.uncertainty_set.BaseMuUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[145, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[146, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[147, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.get_params", false]], "get_params() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[148, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.get_params", false]], "get_path_ids() (skfolio.model_selection.basecombinatorialcv method)": [[93, "skfolio.model_selection.BaseCombinatorialCV.get_path_ids", false]], "get_path_ids() (skfolio.model_selection.combinatorialpurgedcv method)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.get_path_ids", false]], "get_precision() (skfolio.moments.graphicallassocv method)": [[107, "skfolio.moments.GraphicalLassoCV.get_precision", false]], "get_precision() (skfolio.moments.ledoitwolf method)": [[108, "skfolio.moments.LedoitWolf.get_precision", false]], "get_precision() (skfolio.moments.oas method)": [[109, "skfolio.moments.OAS.get_precision", false]], "get_precision() (skfolio.moments.shrunkcovariance method)": [[110, "skfolio.moments.ShrunkCovariance.get_precision", false]], "get_support() (skfolio.pre_selection.dropcorrelated method)": [[132, "skfolio.pre_selection.DropCorrelated.get_support", false]], "get_support() (skfolio.pre_selection.selectkextremes method)": [[133, "skfolio.pre_selection.SelectKExtremes.get_support", false]], "get_support() (skfolio.pre_selection.selectnondominated method)": [[134, "skfolio.pre_selection.SelectNonDominated.get_support", false]], "get_weight() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.get_weight", false]], "gini_mean_difference() (in module skfolio.measures)": [[79, "skfolio.measures.gini_mean_difference", false]], "graphicallassocv (class in skfolio.moments)": [[107, "skfolio.moments.GraphicalLassoCV", false]], "has() (skfolio.cluster.linkagemethod class method)": [[48, "skfolio.cluster.LinkageMethod.has", false]], "has() (skfolio.measures.basemeasure class method)": [[61, "skfolio.measures.BaseMeasure.has", false]], "has() (skfolio.measures.extrariskmeasure class method)": [[62, "skfolio.measures.ExtraRiskMeasure.has", false]], "has() (skfolio.measures.perfmeasure class method)": [[63, "skfolio.measures.PerfMeasure.has", false]], "has() (skfolio.measures.ratiomeasure class method)": [[64, "skfolio.measures.RatioMeasure.has", false]], "has() (skfolio.measures.riskmeasure class method)": [[65, "skfolio.measures.RiskMeasure.has", false]], "has() (skfolio.moments.shrunkmumethods class method)": [[112, "skfolio.moments.ShrunkMuMethods.has", false]], "has() (skfolio.optimization.objectivefunction class method)": [[124, "skfolio.optimization.ObjectiveFunction.has", false]], "hierarchicalclustering (class in skfolio.cluster)": [[47, "skfolio.cluster.HierarchicalClustering", false]], "hierarchicalequalriskcontribution (class in skfolio.optimization)": [[118, "skfolio.optimization.HierarchicalEqualRiskContribution", false]], "hierarchicalriskparity (class in skfolio.optimization)": [[119, "skfolio.optimization.HierarchicalRiskParity", false]], "index() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.index", false]], "index() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.index", false]], "index() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.index", false]], "index() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.index", false]], "index() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.index", false]], "index() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.index", false]], "index() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.index", false]], "index() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.index", false]], "index() (skfolio.population.population method)": [[128, "skfolio.population.Population.index", false]], "insert() (skfolio.population.population method)": [[128, "skfolio.population.Population.insert", false]], "inverse_transform() (skfolio.pre_selection.dropcorrelated method)": [[132, "skfolio.pre_selection.DropCorrelated.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectkextremes method)": [[133, "skfolio.pre_selection.SelectKExtremes.inverse_transform", false]], "inverse_transform() (skfolio.pre_selection.selectnondominated method)": [[134, "skfolio.pre_selection.SelectNonDominated.inverse_transform", false]], "inversevolatility (class in skfolio.optimization)": [[120, "skfolio.optimization.InverseVolatility", false]], "is_cholesky_dec() (in module skfolio.utils.stats)": [[159, "skfolio.utils.stats.is_cholesky_dec", false]], "isalnum() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isalnum", false]], "isalnum() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isalnum", false]], "isalnum() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isalnum", false]], "isalnum() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isalnum", false]], "isalnum() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isalnum", false]], "isalnum() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isalnum", false]], "isalnum() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.isalnum", false]], "isalnum() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.isalnum", false]], "isalpha() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isalpha", false]], "isalpha() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isalpha", false]], "isalpha() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isalpha", false]], "isalpha() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isalpha", false]], "isalpha() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isalpha", false]], "isalpha() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isalpha", false]], "isalpha() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.isalpha", false]], "isalpha() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.isalpha", false]], "isascii() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isascii", false]], "isascii() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isascii", false]], "isascii() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isascii", false]], "isascii() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isascii", false]], "isascii() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isascii", false]], "isascii() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isascii", false]], "isascii() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.isascii", false]], "isascii() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.isascii", false]], "isdecimal() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isdecimal", false]], "isdecimal() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isdecimal", false]], "isdecimal() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isdecimal", false]], "isdecimal() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.isdecimal", false]], "isdecimal() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.isdecimal", false]], "isdigit() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isdigit", false]], "isdigit() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isdigit", false]], "isdigit() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isdigit", false]], "isdigit() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isdigit", false]], "isdigit() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isdigit", false]], "isdigit() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isdigit", false]], "isdigit() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.isdigit", false]], "isdigit() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.isdigit", false]], "isidentifier() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isidentifier", false]], "isidentifier() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isidentifier", false]], "isidentifier() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isidentifier", false]], "isidentifier() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.isidentifier", false]], "isidentifier() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.isidentifier", false]], "islower() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.islower", false]], "islower() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.islower", false]], "islower() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.islower", false]], "islower() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.islower", false]], "islower() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.islower", false]], "islower() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.islower", false]], "islower() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.islower", false]], "islower() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.islower", false]], "isnumeric() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isnumeric", false]], "isnumeric() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isnumeric", false]], "isnumeric() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isnumeric", false]], "isnumeric() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.isnumeric", false]], "isnumeric() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.isnumeric", false]], "isprintable() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isprintable", false]], "isprintable() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isprintable", false]], "isprintable() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isprintable", false]], "isprintable() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isprintable", false]], "isprintable() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isprintable", false]], "isprintable() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isprintable", false]], "isprintable() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.isprintable", false]], "isprintable() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.isprintable", false]], "isspace() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isspace", false]], "isspace() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isspace", false]], "isspace() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isspace", false]], "isspace() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isspace", false]], "isspace() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isspace", false]], "isspace() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isspace", false]], "isspace() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.isspace", false]], "isspace() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.isspace", false]], "istitle() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.istitle", false]], "istitle() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.istitle", false]], "istitle() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.istitle", false]], "istitle() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.istitle", false]], "istitle() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.istitle", false]], "istitle() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.istitle", false]], "istitle() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.istitle", false]], "istitle() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.istitle", false]], "isupper() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.isupper", false]], "isupper() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.isupper", false]], "isupper() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.isupper", false]], "isupper() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.isupper", false]], "isupper() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.isupper", false]], "isupper() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.isupper", false]], "isupper() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.isupper", false]], "isupper() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.isupper", false]], "join() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.join", false]], "join() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.join", false]], "join() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.join", false]], "join() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.join", false]], "join() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.join", false]], "join() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.join", false]], "join() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.join", false]], "join() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.join", false]], "kendalldistance (class in skfolio.distance)": [[57, "skfolio.distance.KendallDistance", false]], "ledoitwolf (class in skfolio.moments)": [[108, "skfolio.moments.LedoitWolf", false]], "linkagemethod (class in skfolio.cluster)": [[48, "skfolio.cluster.LinkageMethod", false]], "ljust() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.ljust", false]], "ljust() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.ljust", false]], "ljust() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.ljust", false]], "ljust() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.ljust", false]], "ljust() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.ljust", false]], "ljust() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.ljust", false]], "ljust() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.ljust", false]], "ljust() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.ljust", false]], "load_factors_dataset() (in module skfolio.datasets)": [[49, "skfolio.datasets.load_factors_dataset", false]], "load_ftse100_dataset() (in module skfolio.datasets)": [[50, "skfolio.datasets.load_ftse100_dataset", false]], "load_nasdaq_dataset() (in module skfolio.datasets)": [[51, "skfolio.datasets.load_nasdaq_dataset", false]], "load_sp500_dataset() (in module skfolio.datasets)": [[52, "skfolio.datasets.load_sp500_dataset", false]], "load_sp500_index() (in module skfolio.datasets)": [[53, "skfolio.datasets.load_sp500_index", false]], "loadingmatrixregression (class in skfolio.prior)": [[141, "skfolio.prior.LoadingMatrixRegression", false]], "lower() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.lower", false]], "lower() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.lower", false]], "lower() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.lower", false]], "lower() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.lower", false]], "lower() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.lower", false]], "lower() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.lower", false]], "lower() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.lower", false]], "lower() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.lower", false]], "lstrip() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.lstrip", false]], "lstrip() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.lstrip", false]], "lstrip() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.lstrip", false]], "lstrip() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.lstrip", false]], "lstrip() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.lstrip", false]], "lstrip() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.lstrip", false]], "lstrip() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.lstrip", false]], "lstrip() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.lstrip", false]], "mahalanobis() (skfolio.moments.graphicallassocv method)": [[107, "skfolio.moments.GraphicalLassoCV.mahalanobis", false]], "mahalanobis() (skfolio.moments.ledoitwolf method)": [[108, "skfolio.moments.LedoitWolf.mahalanobis", false]], "mahalanobis() (skfolio.moments.oas method)": [[109, "skfolio.moments.OAS.mahalanobis", false]], "mahalanobis() (skfolio.moments.shrunkcovariance method)": [[110, "skfolio.moments.ShrunkCovariance.mahalanobis", false]], "make_scorer() (in module skfolio.metrics)": [[92, "skfolio.metrics.make_scorer", false]], "maketrans() (skfolio.cluster.linkagemethod static method)": [[48, "skfolio.cluster.LinkageMethod.maketrans", false]], "maketrans() (skfolio.measures.basemeasure static method)": [[61, "skfolio.measures.BaseMeasure.maketrans", false]], "maketrans() (skfolio.measures.extrariskmeasure static method)": [[62, "skfolio.measures.ExtraRiskMeasure.maketrans", false]], "maketrans() (skfolio.measures.perfmeasure static method)": [[63, "skfolio.measures.PerfMeasure.maketrans", false]], "maketrans() (skfolio.measures.ratiomeasure static method)": [[64, "skfolio.measures.RatioMeasure.maketrans", false]], "maketrans() (skfolio.measures.riskmeasure static method)": [[65, "skfolio.measures.RiskMeasure.maketrans", false]], "maketrans() (skfolio.moments.shrunkmumethods static method)": [[112, "skfolio.moments.ShrunkMuMethods.maketrans", false]], "maketrans() (skfolio.optimization.objectivefunction static method)": [[124, "skfolio.optimization.ObjectiveFunction.maketrans", false]], "max_drawdown() (in module skfolio.measures)": [[80, "skfolio.measures.max_drawdown", false]], "max_measure() (skfolio.population.population method)": [[128, "skfolio.population.Population.max_measure", false]], "maximumdiversification (class in skfolio.optimization)": [[121, "skfolio.optimization.MaximumDiversification", false]], "mean() (in module skfolio.measures)": [[81, "skfolio.measures.mean", false]], "mean_absolute_deviation() (in module skfolio.measures)": [[82, "skfolio.measures.mean_absolute_deviation", false]], "meanrisk (class in skfolio.optimization)": [[122, "skfolio.optimization.MeanRisk", false]], "measures() (skfolio.population.population method)": [[128, "skfolio.population.Population.measures", false]], "measures_df (skfolio.portfolio.baseportfolio property)": [[129, "skfolio.portfolio.BasePortfolio.measures_df", false]], "measures_df (skfolio.portfolio.multiperiodportfolio property)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.measures_df", false]], "measures_df (skfolio.portfolio.portfolio property)": [[131, "skfolio.portfolio.Portfolio.measures_df", false]], "measures_mean() (skfolio.population.population method)": [[128, "skfolio.population.Population.measures_mean", false]], "measures_std() (skfolio.population.population method)": [[128, "skfolio.population.Population.measures_std", false]], "min_measure() (skfolio.population.population method)": [[128, "skfolio.population.Population.min_measure", false]], "module": [[0, "module-0", false], [0, "module-1", false], [0, "module-2", false], [0, "module-3", false], [0, "module-4", false], [0, "module-5", false], [0, "module-6", false], [0, "module-7", false], [0, "module-skfolio", false], [0, "module-skfolio.measures", false], [0, "module-skfolio.optimization.cluster", false], [0, "module-skfolio.optimization.convex", false], [0, "module-skfolio.optimization.ensemble", false], [0, "module-skfolio.optimization.naive", false], [0, "module-skfolio.population", false], [0, "module-skfolio.portfolio", false]], "multiperiodportfolio (class in skfolio.portfolio)": [[130, "skfolio.portfolio.MultiPeriodPortfolio", false]], "mutualinformation (class in skfolio.distance)": [[58, "skfolio.distance.MutualInformation", false]], "n_bins_freedman() (in module skfolio.utils.stats)": [[160, "skfolio.utils.stats.n_bins_freedman", false]], "n_bins_knuth() (in module skfolio.utils.stats)": [[161, "skfolio.utils.stats.n_bins_knuth", false]], "n_observations (skfolio.portfolio.baseportfolio property)": [[129, "skfolio.portfolio.BasePortfolio.n_observations", false]], "n_observations (skfolio.portfolio.multiperiodportfolio property)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.n_observations", false]], "n_observations (skfolio.portfolio.portfolio property)": [[131, "skfolio.portfolio.Portfolio.n_observations", false]], "n_splits (skfolio.model_selection.combinatorialpurgedcv property)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.n_splits", false]], "n_test_paths (skfolio.model_selection.combinatorialpurgedcv property)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.n_test_paths", false]], "named_estimators (skfolio.optimization.stackingoptimization property)": [[127, "skfolio.optimization.StackingOptimization.named_estimators", false]], "nbinsmethod() (in module skfolio.utils.stats)": [[150, "skfolio.utils.stats.NBinsMethod", false]], "nestedclustersoptimization (class in skfolio.optimization)": [[123, "skfolio.optimization.NestedClustersOptimization", false]], "non_denominated_sort() (skfolio.population.population method)": [[128, "skfolio.population.Population.non_denominated_sort", false]], "nonzero_assets (skfolio.portfolio.portfolio attribute)": [[131, "skfolio.portfolio.Portfolio.nonzero_assets", false]], "nonzero_assets_index (skfolio.portfolio.portfolio attribute)": [[131, "skfolio.portfolio.Portfolio.nonzero_assets_index", false]], "oas (class in skfolio.moments)": [[109, "skfolio.moments.OAS", false]], "objectivefunction (class in skfolio.optimization)": [[124, "skfolio.optimization.ObjectiveFunction", false]], "owa_gmd_weights() (in module skfolio.measures)": [[83, "skfolio.measures.owa_gmd_weights", false]], "partition() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.partition", false]], "partition() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.partition", false]], "partition() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.partition", false]], "partition() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.partition", false]], "partition() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.partition", false]], "partition() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.partition", false]], "partition() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.partition", false]], "partition() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.partition", false]], "pearsondistance (class in skfolio.distance)": [[59, "skfolio.distance.PearsonDistance", false]], "perfmeasure (class in skfolio.measures)": [[63, "skfolio.measures.PerfMeasure", false]], "plot_composition() (skfolio.population.population method)": [[128, "skfolio.population.Population.plot_composition", false]], "plot_composition() (skfolio.portfolio.baseportfolio method)": [[129, "skfolio.portfolio.BasePortfolio.plot_composition", false]], "plot_composition() (skfolio.portfolio.multiperiodportfolio method)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.plot_composition", false]], "plot_composition() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.plot_composition", false]], "plot_contribution() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.plot_contribution", false]], "plot_cumulative_returns() (skfolio.population.population method)": [[128, "skfolio.population.Population.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.baseportfolio method)": [[129, "skfolio.portfolio.BasePortfolio.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.multiperiodportfolio method)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.plot_cumulative_returns", false]], "plot_cumulative_returns() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.plot_cumulative_returns", false]], "plot_dendrogram() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.plot_dendrogram", false]], "plot_distribution() (skfolio.population.population method)": [[128, "skfolio.population.Population.plot_distribution", false]], "plot_measures() (skfolio.population.population method)": [[128, "skfolio.population.Population.plot_measures", false]], "plot_returns() (skfolio.portfolio.baseportfolio method)": [[129, "skfolio.portfolio.BasePortfolio.plot_returns", false]], "plot_returns() (skfolio.portfolio.multiperiodportfolio method)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.plot_returns", false]], "plot_returns() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.plot_returns", false]], "plot_rolling_measure() (skfolio.portfolio.baseportfolio method)": [[129, "skfolio.portfolio.BasePortfolio.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.multiperiodportfolio method)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.plot_rolling_measure", false]], "plot_rolling_measure() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.plot_rolling_measure", false]], "plot_train_test_folds() (skfolio.model_selection.combinatorialpurgedcv method)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.plot_train_test_folds", false]], "plot_train_test_index() (skfolio.model_selection.combinatorialpurgedcv method)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.plot_train_test_index", false]], "pop() (skfolio.population.population method)": [[128, "skfolio.population.Population.pop", false]], "population (class in skfolio.population)": [[128, "skfolio.population.Population", false]], "portfolio (class in skfolio.portfolio)": [[131, "skfolio.portfolio.Portfolio", false]], "portfolios (skfolio.portfolio.multiperiodportfolio property)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.portfolios", false]], "predict() (skfolio.optimization.basehierarchicaloptimization method)": [[114, "skfolio.optimization.BaseHierarchicalOptimization.predict", false]], "predict() (skfolio.optimization.convexoptimization method)": [[115, "skfolio.optimization.ConvexOptimization.predict", false]], "predict() (skfolio.optimization.distributionallyrobustcvar method)": [[116, "skfolio.optimization.DistributionallyRobustCVaR.predict", false]], "predict() (skfolio.optimization.equalweighted method)": [[117, "skfolio.optimization.EqualWeighted.predict", false]], "predict() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[118, "skfolio.optimization.HierarchicalEqualRiskContribution.predict", false]], "predict() (skfolio.optimization.hierarchicalriskparity method)": [[119, "skfolio.optimization.HierarchicalRiskParity.predict", false]], "predict() (skfolio.optimization.inversevolatility method)": [[120, "skfolio.optimization.InverseVolatility.predict", false]], "predict() (skfolio.optimization.maximumdiversification method)": [[121, "skfolio.optimization.MaximumDiversification.predict", false]], "predict() (skfolio.optimization.meanrisk method)": [[122, "skfolio.optimization.MeanRisk.predict", false]], "predict() (skfolio.optimization.nestedclustersoptimization method)": [[123, "skfolio.optimization.NestedClustersOptimization.predict", false]], "predict() (skfolio.optimization.random method)": [[125, "skfolio.optimization.Random.predict", false]], "predict() (skfolio.optimization.riskbudgeting method)": [[126, "skfolio.optimization.RiskBudgeting.predict", false]], "predict() (skfolio.optimization.stackingoptimization method)": [[127, "skfolio.optimization.StackingOptimization.predict", false]], "prices_to_returns() (in module skfolio.preprocessing)": [[135, "skfolio.preprocessing.prices_to_returns", false]], "priormodel (class in skfolio.prior)": [[142, "skfolio.prior.PriorModel", false]], "quantile() (skfolio.population.population method)": [[128, "skfolio.population.Population.quantile", false]], "rand_weights() (in module skfolio.utils.stats)": [[162, "skfolio.utils.stats.rand_weights", false]], "rand_weights_dirichlet() (in module skfolio.utils.stats)": [[163, "skfolio.utils.stats.rand_weights_dirichlet", false]], "random (class in skfolio.optimization)": [[125, "skfolio.optimization.Random", false]], "ratiomeasure (class in skfolio.measures)": [[64, "skfolio.measures.RatioMeasure", false]], "recombined_paths (skfolio.model_selection.combinatorialpurgedcv property)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.recombined_paths", false]], "remove() (skfolio.population.population method)": [[128, "skfolio.population.Population.remove", false]], "removeprefix() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.removeprefix", false]], "removeprefix() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.removeprefix", false]], "removeprefix() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.removeprefix", false]], "removeprefix() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.removeprefix", false]], "removeprefix() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.removeprefix", false]], "removesuffix() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.removesuffix", false]], "removesuffix() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.removesuffix", false]], "removesuffix() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.removesuffix", false]], "removesuffix() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.removesuffix", false]], "removesuffix() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.removesuffix", false]], "replace() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.replace", false]], "replace() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.replace", false]], "replace() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.replace", false]], "replace() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.replace", false]], "replace() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.replace", false]], "replace() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.replace", false]], "replace() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.replace", false]], "replace() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.replace", false]], "returns_df (skfolio.portfolio.baseportfolio property)": [[129, "skfolio.portfolio.BasePortfolio.returns_df", false]], "returns_df (skfolio.portfolio.multiperiodportfolio property)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.returns_df", false]], "returns_df (skfolio.portfolio.portfolio property)": [[131, "skfolio.portfolio.Portfolio.returns_df", false]], "reverse() (skfolio.population.population method)": [[128, "skfolio.population.Population.reverse", false]], "rfind() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rfind", false]], "rfind() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rfind", false]], "rfind() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rfind", false]], "rfind() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rfind", false]], "rfind() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rfind", false]], "rfind() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rfind", false]], "rfind() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.rfind", false]], "rfind() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.rfind", false]], "rindex() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rindex", false]], "rindex() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rindex", false]], "rindex() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rindex", false]], "rindex() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rindex", false]], "rindex() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rindex", false]], "rindex() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rindex", false]], "rindex() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.rindex", false]], "rindex() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.rindex", false]], "riskbudgeting (class in skfolio.optimization)": [[126, "skfolio.optimization.RiskBudgeting", false]], "riskmeasure (class in skfolio.measures)": [[65, "skfolio.measures.RiskMeasure", false]], "rjust() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rjust", false]], "rjust() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rjust", false]], "rjust() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rjust", false]], "rjust() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rjust", false]], "rjust() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rjust", false]], "rjust() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rjust", false]], "rjust() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.rjust", false]], "rjust() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.rjust", false]], "rolling_measure() (skfolio.portfolio.baseportfolio method)": [[129, "skfolio.portfolio.BasePortfolio.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.multiperiodportfolio method)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.rolling_measure", false]], "rolling_measure() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.rolling_measure", false]], "rpartition() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rpartition", false]], "rpartition() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rpartition", false]], "rpartition() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rpartition", false]], "rpartition() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rpartition", false]], "rpartition() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rpartition", false]], "rpartition() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rpartition", false]], "rpartition() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.rpartition", false]], "rpartition() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.rpartition", false]], "rsplit() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rsplit", false]], "rsplit() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rsplit", false]], "rsplit() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rsplit", false]], "rsplit() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rsplit", false]], "rsplit() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rsplit", false]], "rsplit() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rsplit", false]], "rsplit() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.rsplit", false]], "rsplit() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.rsplit", false]], "rstrip() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.rstrip", false]], "rstrip() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.rstrip", false]], "rstrip() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.rstrip", false]], "rstrip() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.rstrip", false]], "rstrip() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.rstrip", false]], "rstrip() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.rstrip", false]], "rstrip() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.rstrip", false]], "rstrip() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.rstrip", false]], "score() (skfolio.moments.graphicallassocv method)": [[107, "skfolio.moments.GraphicalLassoCV.score", false]], "score() (skfolio.moments.ledoitwolf method)": [[108, "skfolio.moments.LedoitWolf.score", false]], "score() (skfolio.moments.oas method)": [[109, "skfolio.moments.OAS.score", false]], "score() (skfolio.moments.shrunkcovariance method)": [[110, "skfolio.moments.ShrunkCovariance.score", false]], "score() (skfolio.optimization.basehierarchicaloptimization method)": [[114, "skfolio.optimization.BaseHierarchicalOptimization.score", false]], "score() (skfolio.optimization.convexoptimization method)": [[115, "skfolio.optimization.ConvexOptimization.score", false]], "score() (skfolio.optimization.distributionallyrobustcvar method)": [[116, "skfolio.optimization.DistributionallyRobustCVaR.score", false]], "score() (skfolio.optimization.equalweighted method)": [[117, "skfolio.optimization.EqualWeighted.score", false]], "score() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[118, "skfolio.optimization.HierarchicalEqualRiskContribution.score", false]], "score() (skfolio.optimization.hierarchicalriskparity method)": [[119, "skfolio.optimization.HierarchicalRiskParity.score", false]], "score() (skfolio.optimization.inversevolatility method)": [[120, "skfolio.optimization.InverseVolatility.score", false]], "score() (skfolio.optimization.maximumdiversification method)": [[121, "skfolio.optimization.MaximumDiversification.score", false]], "score() (skfolio.optimization.meanrisk method)": [[122, "skfolio.optimization.MeanRisk.score", false]], "score() (skfolio.optimization.nestedclustersoptimization method)": [[123, "skfolio.optimization.NestedClustersOptimization.score", false]], "score() (skfolio.optimization.random method)": [[125, "skfolio.optimization.Random.score", false]], "score() (skfolio.optimization.riskbudgeting method)": [[126, "skfolio.optimization.RiskBudgeting.score", false]], "score() (skfolio.optimization.stackingoptimization method)": [[127, "skfolio.optimization.StackingOptimization.score", false]], "selectkextremes (class in skfolio.pre_selection)": [[133, "skfolio.pre_selection.SelectKExtremes", false]], "selectnondominated (class in skfolio.pre_selection)": [[134, "skfolio.pre_selection.SelectNonDominated", false]], "semi_deviation() (in module skfolio.measures)": [[84, "skfolio.measures.semi_deviation", false]], "semi_variance() (in module skfolio.measures)": [[85, "skfolio.measures.semi_variance", false]], "set_output() (skfolio.pre_selection.dropcorrelated method)": [[132, "skfolio.pre_selection.DropCorrelated.set_output", false]], "set_output() (skfolio.pre_selection.selectkextremes method)": [[133, "skfolio.pre_selection.SelectKExtremes.set_output", false]], "set_output() (skfolio.pre_selection.selectnondominated method)": [[134, "skfolio.pre_selection.SelectNonDominated.set_output", false]], "set_params() (skfolio.cluster.hierarchicalclustering method)": [[47, "skfolio.cluster.HierarchicalClustering.set_params", false]], "set_params() (skfolio.distance.basedistance method)": [[54, "skfolio.distance.BaseDistance.set_params", false]], "set_params() (skfolio.distance.covariancedistance method)": [[55, "skfolio.distance.CovarianceDistance.set_params", false]], "set_params() (skfolio.distance.distancecorrelation method)": [[56, "skfolio.distance.DistanceCorrelation.set_params", false]], "set_params() (skfolio.distance.kendalldistance method)": [[57, "skfolio.distance.KendallDistance.set_params", false]], "set_params() (skfolio.distance.mutualinformation method)": [[58, "skfolio.distance.MutualInformation.set_params", false]], "set_params() (skfolio.distance.pearsondistance method)": [[59, "skfolio.distance.PearsonDistance.set_params", false]], "set_params() (skfolio.distance.spearmandistance method)": [[60, "skfolio.distance.SpearmanDistance.set_params", false]], "set_params() (skfolio.moments.basecovariance method)": [[97, "skfolio.moments.BaseCovariance.set_params", false]], "set_params() (skfolio.moments.basemu method)": [[98, "skfolio.moments.BaseMu.set_params", false]], "set_params() (skfolio.moments.denoisecovariance method)": [[99, "skfolio.moments.DenoiseCovariance.set_params", false]], "set_params() (skfolio.moments.detonecovariance method)": [[100, "skfolio.moments.DetoneCovariance.set_params", false]], "set_params() (skfolio.moments.empiricalcovariance method)": [[103, "skfolio.moments.EmpiricalCovariance.set_params", false]], "set_params() (skfolio.moments.empiricalmu method)": [[104, "skfolio.moments.EmpiricalMu.set_params", false]], "set_params() (skfolio.moments.equilibriummu method)": [[105, "skfolio.moments.EquilibriumMu.set_params", false]], "set_params() (skfolio.moments.ewcovariance method)": [[101, "skfolio.moments.EWCovariance.set_params", false]], "set_params() (skfolio.moments.ewmu method)": [[102, "skfolio.moments.EWMu.set_params", false]], "set_params() (skfolio.moments.gerbercovariance method)": [[106, "skfolio.moments.GerberCovariance.set_params", false]], "set_params() (skfolio.moments.graphicallassocv method)": [[107, "skfolio.moments.GraphicalLassoCV.set_params", false]], "set_params() (skfolio.moments.ledoitwolf method)": [[108, "skfolio.moments.LedoitWolf.set_params", false]], "set_params() (skfolio.moments.oas method)": [[109, "skfolio.moments.OAS.set_params", false]], "set_params() (skfolio.moments.shrunkcovariance method)": [[110, "skfolio.moments.ShrunkCovariance.set_params", false]], "set_params() (skfolio.moments.shrunkmu method)": [[111, "skfolio.moments.ShrunkMu.set_params", false]], "set_params() (skfolio.optimization.basecomposition method)": [[113, "skfolio.optimization.BaseComposition.set_params", false]], "set_params() (skfolio.optimization.basehierarchicaloptimization method)": [[114, "skfolio.optimization.BaseHierarchicalOptimization.set_params", false]], "set_params() (skfolio.optimization.convexoptimization method)": [[115, "skfolio.optimization.ConvexOptimization.set_params", false]], "set_params() (skfolio.optimization.distributionallyrobustcvar method)": [[116, "skfolio.optimization.DistributionallyRobustCVaR.set_params", false]], "set_params() (skfolio.optimization.equalweighted method)": [[117, "skfolio.optimization.EqualWeighted.set_params", false]], "set_params() (skfolio.optimization.hierarchicalequalriskcontribution method)": [[118, "skfolio.optimization.HierarchicalEqualRiskContribution.set_params", false]], "set_params() (skfolio.optimization.hierarchicalriskparity method)": [[119, "skfolio.optimization.HierarchicalRiskParity.set_params", false]], "set_params() (skfolio.optimization.inversevolatility method)": [[120, "skfolio.optimization.InverseVolatility.set_params", false]], "set_params() (skfolio.optimization.maximumdiversification method)": [[121, "skfolio.optimization.MaximumDiversification.set_params", false]], "set_params() (skfolio.optimization.meanrisk method)": [[122, "skfolio.optimization.MeanRisk.set_params", false]], "set_params() (skfolio.optimization.nestedclustersoptimization method)": [[123, "skfolio.optimization.NestedClustersOptimization.set_params", false]], "set_params() (skfolio.optimization.random method)": [[125, "skfolio.optimization.Random.set_params", false]], "set_params() (skfolio.optimization.riskbudgeting method)": [[126, "skfolio.optimization.RiskBudgeting.set_params", false]], "set_params() (skfolio.optimization.stackingoptimization method)": [[127, "skfolio.optimization.StackingOptimization.set_params", false]], "set_params() (skfolio.pre_selection.dropcorrelated method)": [[132, "skfolio.pre_selection.DropCorrelated.set_params", false]], "set_params() (skfolio.pre_selection.selectkextremes method)": [[133, "skfolio.pre_selection.SelectKExtremes.set_params", false]], "set_params() (skfolio.pre_selection.selectnondominated method)": [[134, "skfolio.pre_selection.SelectNonDominated.set_params", false]], "set_params() (skfolio.prior.baseloadingmatrix method)": [[136, "skfolio.prior.BaseLoadingMatrix.set_params", false]], "set_params() (skfolio.prior.baseprior method)": [[137, "skfolio.prior.BasePrior.set_params", false]], "set_params() (skfolio.prior.blacklitterman method)": [[138, "skfolio.prior.BlackLitterman.set_params", false]], "set_params() (skfolio.prior.empiricalprior method)": [[139, "skfolio.prior.EmpiricalPrior.set_params", false]], "set_params() (skfolio.prior.factormodel method)": [[140, "skfolio.prior.FactorModel.set_params", false]], "set_params() (skfolio.prior.loadingmatrixregression method)": [[141, "skfolio.prior.LoadingMatrixRegression.set_params", false]], "set_params() (skfolio.uncertainty_set.basecovarianceuncertaintyset method)": [[143, "skfolio.uncertainty_set.BaseCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.basemuuncertaintyset method)": [[144, "skfolio.uncertainty_set.BaseMuUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.bootstrapcovarianceuncertaintyset method)": [[145, "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.bootstrapmuuncertaintyset method)": [[146, "skfolio.uncertainty_set.BootstrapMuUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.empiricalcovarianceuncertaintyset method)": [[147, "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet.set_params", false]], "set_params() (skfolio.uncertainty_set.empiricalmuuncertaintyset method)": [[148, "skfolio.uncertainty_set.EmpiricalMuUncertaintySet.set_params", false]], "set_portfolio_params() (skfolio.population.population method)": [[128, "skfolio.population.Population.set_portfolio_params", false]], "set_score_request() (skfolio.moments.graphicallassocv method)": [[107, "skfolio.moments.GraphicalLassoCV.set_score_request", false]], "set_score_request() (skfolio.moments.ledoitwolf method)": [[108, "skfolio.moments.LedoitWolf.set_score_request", false]], "set_score_request() (skfolio.moments.oas method)": [[109, "skfolio.moments.OAS.set_score_request", false]], "set_score_request() (skfolio.moments.shrunkcovariance method)": [[110, "skfolio.moments.ShrunkCovariance.set_score_request", false]], "shrunkcovariance (class in skfolio.moments)": [[110, "skfolio.moments.ShrunkCovariance", false]], "shrunkmu (class in skfolio.moments)": [[111, "skfolio.moments.ShrunkMu", false]], "shrunkmumethods (class in skfolio.moments)": [[112, "skfolio.moments.ShrunkMuMethods", false]], "skfolio": [[0, "module-0", false], [0, "module-1", false], [0, "module-2", false], [0, "module-3", false], [0, "module-4", false], [0, "module-5", false], [0, "module-6", false], [0, "module-7", false], [0, "module-skfolio", false]], "skfolio.measures": [[0, "module-skfolio.measures", false]], "skfolio.optimization.cluster": [[0, "module-skfolio.optimization.cluster", false]], "skfolio.optimization.convex": [[0, "module-skfolio.optimization.convex", false]], "skfolio.optimization.ensemble": [[0, "module-skfolio.optimization.ensemble", false]], "skfolio.optimization.naive": [[0, "module-skfolio.optimization.naive", false]], "skfolio.population": [[0, "module-skfolio.population", false]], "skfolio.portfolio": [[0, "module-skfolio.portfolio", false]], "sort() (skfolio.population.population method)": [[128, "skfolio.population.Population.sort", false]], "sort_measure() (skfolio.population.population method)": [[128, "skfolio.population.Population.sort_measure", false]], "spearmandistance (class in skfolio.distance)": [[60, "skfolio.distance.SpearmanDistance", false]], "split() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.split", false]], "split() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.split", false]], "split() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.split", false]], "split() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.split", false]], "split() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.split", false]], "split() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.split", false]], "split() (skfolio.model_selection.combinatorialpurgedcv method)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.split", false]], "split() (skfolio.model_selection.walkforward method)": [[95, "skfolio.model_selection.WalkForward.split", false]], "split() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.split", false]], "split() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.split", false]], "splitlines() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.splitlines", false]], "splitlines() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.splitlines", false]], "splitlines() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.splitlines", false]], "splitlines() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.splitlines", false]], "splitlines() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.splitlines", false]], "splitlines() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.splitlines", false]], "splitlines() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.splitlines", false]], "splitlines() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.splitlines", false]], "sric (skfolio.portfolio.portfolio property)": [[131, "skfolio.portfolio.Portfolio.sric", false]], "stackingoptimization (class in skfolio.optimization)": [[127, "skfolio.optimization.StackingOptimization", false]], "standard_deviation() (in module skfolio.measures)": [[86, "skfolio.measures.standard_deviation", false]], "startswith() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.startswith", false]], "startswith() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.startswith", false]], "startswith() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.startswith", false]], "startswith() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.startswith", false]], "startswith() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.startswith", false]], "startswith() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.startswith", false]], "startswith() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.startswith", false]], "startswith() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.startswith", false]], "strip() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.strip", false]], "strip() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.strip", false]], "strip() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.strip", false]], "strip() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.strip", false]], "strip() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.strip", false]], "strip() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.strip", false]], "strip() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.strip", false]], "strip() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.strip", false]], "summary() (skfolio.population.population method)": [[128, "skfolio.population.Population.summary", false]], "summary() (skfolio.portfolio.baseportfolio method)": [[129, "skfolio.portfolio.BasePortfolio.summary", false]], "summary() (skfolio.portfolio.multiperiodportfolio method)": [[130, "skfolio.portfolio.MultiPeriodPortfolio.summary", false]], "summary() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.summary", false]], "swapcase() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.swapcase", false]], "swapcase() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.swapcase", false]], "swapcase() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.swapcase", false]], "swapcase() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.swapcase", false]], "swapcase() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.swapcase", false]], "swapcase() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.swapcase", false]], "swapcase() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.swapcase", false]], "swapcase() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.swapcase", false]], "test_set_index (skfolio.model_selection.combinatorialpurgedcv property)": [[94, "skfolio.model_selection.CombinatorialPurgedCV.test_set_index", false]], "third_central_moment() (in module skfolio.measures)": [[87, "skfolio.measures.third_central_moment", false]], "title() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.title", false]], "title() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.title", false]], "title() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.title", false]], "title() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.title", false]], "title() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.title", false]], "title() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.title", false]], "title() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.title", false]], "title() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.title", false]], "transform() (skfolio.pre_selection.dropcorrelated method)": [[132, "skfolio.pre_selection.DropCorrelated.transform", false]], "transform() (skfolio.pre_selection.selectkextremes method)": [[133, "skfolio.pre_selection.SelectKExtremes.transform", false]], "transform() (skfolio.pre_selection.selectnondominated method)": [[134, "skfolio.pre_selection.SelectNonDominated.transform", false]], "translate() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.translate", false]], "translate() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.translate", false]], "translate() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.translate", false]], "translate() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.translate", false]], "translate() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.translate", false]], "translate() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.translate", false]], "translate() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.translate", false]], "translate() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.translate", false]], "ulcer_index() (in module skfolio.measures)": [[88, "skfolio.measures.ulcer_index", false]], "uncertaintyset (class in skfolio.uncertainty_set)": [[149, "skfolio.uncertainty_set.UncertaintySet", false]], "upper() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.upper", false]], "upper() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.upper", false]], "upper() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.upper", false]], "upper() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.upper", false]], "upper() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.upper", false]], "upper() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.upper", false]], "upper() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.upper", false]], "upper() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.upper", false]], "value_at_risk() (in module skfolio.measures)": [[89, "skfolio.measures.value_at_risk", false]], "variance() (in module skfolio.measures)": [[90, "skfolio.measures.variance", false]], "variance_from_assets() (skfolio.portfolio.portfolio method)": [[131, "skfolio.portfolio.Portfolio.variance_from_assets", false]], "walkforward (class in skfolio.model_selection)": [[95, "skfolio.model_selection.WalkForward", false]], "worst_realization() (in module skfolio.measures)": [[91, "skfolio.measures.worst_realization", false]], "zfill() (skfolio.cluster.linkagemethod method)": [[48, "skfolio.cluster.LinkageMethod.zfill", false]], "zfill() (skfolio.measures.basemeasure method)": [[61, "skfolio.measures.BaseMeasure.zfill", false]], "zfill() (skfolio.measures.extrariskmeasure method)": [[62, "skfolio.measures.ExtraRiskMeasure.zfill", false]], "zfill() (skfolio.measures.perfmeasure method)": [[63, "skfolio.measures.PerfMeasure.zfill", false]], "zfill() (skfolio.measures.ratiomeasure method)": [[64, "skfolio.measures.RatioMeasure.zfill", false]], "zfill() (skfolio.measures.riskmeasure method)": [[65, "skfolio.measures.RiskMeasure.zfill", false]], "zfill() (skfolio.moments.shrunkmumethods method)": [[112, "skfolio.moments.ShrunkMuMethods.zfill", false]], "zfill() (skfolio.optimization.objectivefunction method)": [[124, "skfolio.optimization.ObjectiveFunction.zfill", false]]}, "objects": {"": [[0, 0, 0, "module-7", "skfolio"]], "skfolio": [[0, 0, 0, "-", "measures"], [0, 0, 0, "-", "population"], [0, 0, 0, "-", "portfolio"]], "skfolio.cluster": [[47, 1, 1, "", "HierarchicalClustering"], [48, 1, 1, "", "LinkageMethod"]], "skfolio.cluster.HierarchicalClustering": [[47, 2, 1, "", "fit"], [47, 2, 1, "", "fit_predict"], [47, 2, 1, "", "get_metadata_routing"], [47, 2, 1, "", "get_params"], [47, 2, 1, "", "plot_dendrogram"], [47, 2, 1, "", "set_params"]], "skfolio.cluster.LinkageMethod": [[48, 2, 1, "", "capitalize"], [48, 2, 1, "", "casefold"], [48, 2, 1, "", "center"], [48, 2, 1, "", "count"], [48, 2, 1, "", "encode"], [48, 2, 1, "", "endswith"], [48, 2, 1, "", "expandtabs"], [48, 2, 1, "", "find"], [48, 2, 1, "", "format"], [48, 2, 1, "", "format_map"], [48, 2, 1, "", "has"], [48, 2, 1, "", "index"], [48, 2, 1, "", "isalnum"], [48, 2, 1, "", "isalpha"], [48, 2, 1, "", "isascii"], [48, 2, 1, "", "isdecimal"], [48, 2, 1, "", "isdigit"], [48, 2, 1, "", "isidentifier"], [48, 2, 1, "", "islower"], [48, 2, 1, "", "isnumeric"], [48, 2, 1, "", "isprintable"], [48, 2, 1, "", "isspace"], [48, 2, 1, "", "istitle"], [48, 2, 1, "", "isupper"], [48, 2, 1, "", "join"], [48, 2, 1, "", "ljust"], [48, 2, 1, "", "lower"], [48, 2, 1, "", "lstrip"], [48, 2, 1, "", "maketrans"], [48, 2, 1, "", "partition"], [48, 2, 1, "", "removeprefix"], [48, 2, 1, "", "removesuffix"], [48, 2, 1, "", "replace"], [48, 2, 1, "", "rfind"], [48, 2, 1, "", "rindex"], [48, 2, 1, "", "rjust"], [48, 2, 1, "", "rpartition"], [48, 2, 1, "", "rsplit"], [48, 2, 1, "", "rstrip"], [48, 2, 1, "", "split"], [48, 2, 1, "", "splitlines"], [48, 2, 1, "", "startswith"], [48, 2, 1, "", "strip"], [48, 2, 1, "", "swapcase"], [48, 2, 1, "", "title"], [48, 2, 1, "", "translate"], [48, 2, 1, "", "upper"], [48, 2, 1, "", "zfill"]], "skfolio.datasets": [[49, 3, 1, "", "load_factors_dataset"], [50, 3, 1, "", "load_ftse100_dataset"], [51, 3, 1, "", "load_nasdaq_dataset"], [52, 3, 1, "", "load_sp500_dataset"], [53, 3, 1, "", "load_sp500_index"]], "skfolio.distance": [[54, 1, 1, "", "BaseDistance"], [55, 1, 1, "", "CovarianceDistance"], [56, 1, 1, "", "DistanceCorrelation"], [57, 1, 1, "", "KendallDistance"], [58, 1, 1, "", "MutualInformation"], [59, 1, 1, "", "PearsonDistance"], [60, 1, 1, "", "SpearmanDistance"]], "skfolio.distance.BaseDistance": [[54, 2, 1, "", "fit"], [54, 2, 1, "", "get_metadata_routing"], [54, 2, 1, "", "get_params"], [54, 2, 1, "", "set_params"]], "skfolio.distance.CovarianceDistance": [[55, 2, 1, "", "fit"], [55, 2, 1, "", "get_metadata_routing"], [55, 2, 1, "", "get_params"], [55, 2, 1, "", "set_params"]], "skfolio.distance.DistanceCorrelation": [[56, 2, 1, "", "fit"], [56, 2, 1, "", "get_metadata_routing"], [56, 2, 1, "", "get_params"], [56, 2, 1, "", "set_params"]], "skfolio.distance.KendallDistance": [[57, 2, 1, "", "fit"], [57, 2, 1, "", "get_metadata_routing"], [57, 2, 1, "", "get_params"], [57, 2, 1, "", "set_params"]], "skfolio.distance.MutualInformation": [[58, 2, 1, "", "fit"], [58, 2, 1, "", "get_metadata_routing"], [58, 2, 1, "", "get_params"], [58, 2, 1, "", "set_params"]], "skfolio.distance.PearsonDistance": [[59, 2, 1, "", "fit"], [59, 2, 1, "", "get_metadata_routing"], [59, 2, 1, "", "get_params"], [59, 2, 1, "", "set_params"]], "skfolio.distance.SpearmanDistance": [[60, 2, 1, "", "fit"], [60, 2, 1, "", "get_metadata_routing"], [60, 2, 1, "", "get_params"], [60, 2, 1, "", "set_params"]], "skfolio.measures": [[61, 1, 1, "", "BaseMeasure"], [62, 1, 1, "", "ExtraRiskMeasure"], [63, 1, 1, "", "PerfMeasure"], [64, 1, 1, "", "RatioMeasure"], [65, 1, 1, "", "RiskMeasure"], [66, 3, 1, "", "average_drawdown"], [67, 3, 1, "", "cdar"], [68, 3, 1, "", "cvar"], [69, 3, 1, "", "drawdown_at_risk"], [70, 3, 1, "", "edar"], [71, 3, 1, "", "effective_number_assets"], [72, 3, 1, "", "entropic_risk_measure"], [73, 3, 1, "", "evar"], [74, 3, 1, "", "first_lower_partial_moment"], [75, 3, 1, "", "fourth_central_moment"], [76, 3, 1, "", "fourth_lower_partial_moment"], [77, 3, 1, "", "get_cumulative_returns"], [78, 3, 1, "", "get_drawdowns"], [79, 3, 1, "", "gini_mean_difference"], [80, 3, 1, "", "max_drawdown"], [81, 3, 1, "", "mean"], [82, 3, 1, "", "mean_absolute_deviation"], [83, 3, 1, "", "owa_gmd_weights"], [84, 3, 1, "", "semi_deviation"], [85, 3, 1, "", "semi_variance"], [86, 3, 1, "", "standard_deviation"], [87, 3, 1, "", "third_central_moment"], [88, 3, 1, "", "ulcer_index"], [89, 3, 1, "", "value_at_risk"], [90, 3, 1, "", "variance"], [91, 3, 1, "", "worst_realization"]], "skfolio.measures.BaseMeasure": [[61, 2, 1, "", "capitalize"], [61, 2, 1, "", "casefold"], [61, 2, 1, "", "center"], [61, 2, 1, "", "count"], [61, 2, 1, "", "encode"], [61, 2, 1, "", "endswith"], [61, 2, 1, "", "expandtabs"], [61, 2, 1, "", "find"], [61, 2, 1, "", "format"], [61, 2, 1, "", "format_map"], [61, 2, 1, "", "has"], [61, 2, 1, "", "index"], [61, 2, 1, "", "isalnum"], [61, 2, 1, "", "isalpha"], [61, 2, 1, "", "isascii"], [61, 2, 1, "", "isdecimal"], [61, 2, 1, "", "isdigit"], [61, 2, 1, "", "isidentifier"], [61, 2, 1, "", "islower"], [61, 2, 1, "", "isnumeric"], [61, 2, 1, "", "isprintable"], [61, 2, 1, "", "isspace"], [61, 2, 1, "", "istitle"], [61, 2, 1, "", "isupper"], [61, 2, 1, "", "join"], [61, 2, 1, "", "ljust"], [61, 2, 1, "", "lower"], [61, 2, 1, "", "lstrip"], [61, 2, 1, "", "maketrans"], [61, 2, 1, "", "partition"], [61, 2, 1, "", "removeprefix"], [61, 2, 1, "", "removesuffix"], [61, 2, 1, "", "replace"], [61, 2, 1, "", "rfind"], [61, 2, 1, "", "rindex"], [61, 2, 1, "", "rjust"], [61, 2, 1, "", "rpartition"], [61, 2, 1, "", "rsplit"], [61, 2, 1, "", "rstrip"], [61, 2, 1, "", "split"], [61, 2, 1, "", "splitlines"], [61, 2, 1, "", "startswith"], [61, 2, 1, "", "strip"], [61, 2, 1, "", "swapcase"], [61, 2, 1, "", "title"], [61, 2, 1, "", "translate"], [61, 2, 1, "", "upper"], [61, 2, 1, "", "zfill"]], "skfolio.measures.ExtraRiskMeasure": [[62, 2, 1, "", "capitalize"], [62, 2, 1, "", "casefold"], [62, 2, 1, "", "center"], [62, 2, 1, "", "count"], [62, 2, 1, "", "encode"], [62, 2, 1, "", "endswith"], [62, 2, 1, "", "expandtabs"], [62, 2, 1, "", "find"], [62, 2, 1, "", "format"], [62, 2, 1, "", "format_map"], [62, 2, 1, "", "has"], [62, 2, 1, "", "index"], [62, 2, 1, "", "isalnum"], [62, 2, 1, "", "isalpha"], [62, 2, 1, "", "isascii"], [62, 2, 1, "", "isdecimal"], [62, 2, 1, "", "isdigit"], [62, 2, 1, "", "isidentifier"], [62, 2, 1, "", "islower"], [62, 2, 1, "", "isnumeric"], [62, 2, 1, "", "isprintable"], [62, 2, 1, "", "isspace"], [62, 2, 1, "", "istitle"], [62, 2, 1, "", "isupper"], [62, 2, 1, "", "join"], [62, 2, 1, "", "ljust"], [62, 2, 1, "", "lower"], [62, 2, 1, "", "lstrip"], [62, 2, 1, "", "maketrans"], [62, 2, 1, "", "partition"], [62, 2, 1, "", "removeprefix"], [62, 2, 1, "", "removesuffix"], [62, 2, 1, "", "replace"], [62, 2, 1, "", "rfind"], [62, 2, 1, "", "rindex"], [62, 2, 1, "", "rjust"], [62, 2, 1, "", "rpartition"], [62, 2, 1, "", "rsplit"], [62, 2, 1, "", "rstrip"], [62, 2, 1, "", "split"], [62, 2, 1, "", "splitlines"], [62, 2, 1, "", "startswith"], [62, 2, 1, "", "strip"], [62, 2, 1, "", "swapcase"], [62, 2, 1, "", "title"], [62, 2, 1, "", "translate"], [62, 2, 1, "", "upper"], [62, 2, 1, "", "zfill"]], "skfolio.measures.PerfMeasure": [[63, 2, 1, "", "capitalize"], [63, 2, 1, "", "casefold"], [63, 2, 1, "", "center"], [63, 2, 1, "", "count"], [63, 2, 1, "", "encode"], [63, 2, 1, "", "endswith"], [63, 2, 1, "", "expandtabs"], [63, 2, 1, "", "find"], [63, 2, 1, "", "format"], [63, 2, 1, "", "format_map"], [63, 2, 1, "", "has"], [63, 2, 1, "", "index"], [63, 2, 1, "", "isalnum"], [63, 2, 1, "", "isalpha"], [63, 2, 1, "", "isascii"], [63, 2, 1, "", "isdecimal"], [63, 2, 1, "", "isdigit"], [63, 2, 1, "", "isidentifier"], [63, 2, 1, "", "islower"], [63, 2, 1, "", "isnumeric"], [63, 2, 1, "", "isprintable"], [63, 2, 1, "", "isspace"], [63, 2, 1, "", "istitle"], [63, 2, 1, "", "isupper"], [63, 2, 1, "", "join"], [63, 2, 1, "", "ljust"], [63, 2, 1, "", "lower"], [63, 2, 1, "", "lstrip"], [63, 2, 1, "", "maketrans"], [63, 2, 1, "", "partition"], [63, 2, 1, "", "removeprefix"], [63, 2, 1, "", "removesuffix"], [63, 2, 1, "", "replace"], [63, 2, 1, "", "rfind"], [63, 2, 1, "", "rindex"], [63, 2, 1, "", "rjust"], [63, 2, 1, "", "rpartition"], [63, 2, 1, "", "rsplit"], [63, 2, 1, "", "rstrip"], [63, 2, 1, "", "split"], [63, 2, 1, "", "splitlines"], [63, 2, 1, "", "startswith"], [63, 2, 1, "", "strip"], [63, 2, 1, "", "swapcase"], [63, 2, 1, "", "title"], [63, 2, 1, "", "translate"], [63, 2, 1, "", "upper"], [63, 2, 1, "", "zfill"]], "skfolio.measures.RatioMeasure": [[64, 2, 1, "", "capitalize"], [64, 2, 1, "", "casefold"], [64, 2, 1, "", "center"], [64, 2, 1, "", "count"], [64, 2, 1, "", "encode"], [64, 2, 1, "", "endswith"], [64, 2, 1, "", "expandtabs"], [64, 2, 1, "", "find"], [64, 2, 1, "", "format"], [64, 2, 1, "", "format_map"], [64, 2, 1, "", "has"], [64, 2, 1, "", "index"], [64, 2, 1, "", "isalnum"], [64, 2, 1, "", "isalpha"], [64, 2, 1, "", "isascii"], [64, 2, 1, "", "isdecimal"], [64, 2, 1, "", "isdigit"], [64, 2, 1, "", "isidentifier"], [64, 2, 1, "", "islower"], [64, 2, 1, "", "isnumeric"], [64, 2, 1, "", "isprintable"], [64, 2, 1, "", "isspace"], [64, 2, 1, "", "istitle"], [64, 2, 1, "", "isupper"], [64, 2, 1, "", "join"], [64, 2, 1, "", "ljust"], [64, 2, 1, "", "lower"], [64, 2, 1, "", "lstrip"], [64, 2, 1, "", "maketrans"], [64, 2, 1, "", "partition"], [64, 2, 1, "", "removeprefix"], [64, 2, 1, "", "removesuffix"], [64, 2, 1, "", "replace"], [64, 2, 1, "", "rfind"], [64, 2, 1, "", "rindex"], [64, 2, 1, "", "rjust"], [64, 2, 1, "", "rpartition"], [64, 2, 1, "", "rsplit"], [64, 2, 1, "", "rstrip"], [64, 2, 1, "", "split"], [64, 2, 1, "", "splitlines"], [64, 2, 1, "", "startswith"], [64, 2, 1, "", "strip"], [64, 2, 1, "", "swapcase"], [64, 2, 1, "", "title"], [64, 2, 1, "", "translate"], [64, 2, 1, "", "upper"], [64, 2, 1, "", "zfill"]], "skfolio.measures.RiskMeasure": [[65, 2, 1, "", "capitalize"], [65, 2, 1, "", "casefold"], [65, 2, 1, "", "center"], [65, 2, 1, "", "count"], [65, 2, 1, "", "encode"], [65, 2, 1, "", "endswith"], [65, 2, 1, "", "expandtabs"], [65, 2, 1, "", "find"], [65, 2, 1, "", "format"], [65, 2, 1, "", "format_map"], [65, 2, 1, "", "has"], [65, 2, 1, "", "index"], [65, 2, 1, "", "isalnum"], [65, 2, 1, "", "isalpha"], [65, 2, 1, "", "isascii"], [65, 2, 1, "", "isdecimal"], [65, 2, 1, "", "isdigit"], [65, 2, 1, "", "isidentifier"], [65, 2, 1, "", "islower"], [65, 2, 1, "", "isnumeric"], [65, 2, 1, "", "isprintable"], [65, 2, 1, "", "isspace"], [65, 2, 1, "", "istitle"], [65, 2, 1, "", "isupper"], [65, 2, 1, "", "join"], [65, 2, 1, "", "ljust"], [65, 2, 1, "", "lower"], [65, 2, 1, "", "lstrip"], [65, 2, 1, "", "maketrans"], [65, 2, 1, "", "partition"], [65, 2, 1, "", "removeprefix"], [65, 2, 1, "", "removesuffix"], [65, 2, 1, "", "replace"], [65, 2, 1, "", "rfind"], [65, 2, 1, "", "rindex"], [65, 2, 1, "", "rjust"], [65, 2, 1, "", "rpartition"], [65, 2, 1, "", "rsplit"], [65, 2, 1, "", "rstrip"], [65, 2, 1, "", "split"], [65, 2, 1, "", "splitlines"], [65, 2, 1, "", "startswith"], [65, 2, 1, "", "strip"], [65, 2, 1, "", "swapcase"], [65, 2, 1, "", "title"], [65, 2, 1, "", "translate"], [65, 2, 1, "", "upper"], [65, 2, 1, "", "zfill"]], "skfolio.metrics": [[92, 3, 1, "", "make_scorer"]], "skfolio.model_selection": [[93, 1, 1, "", "BaseCombinatorialCV"], [94, 1, 1, "", "CombinatorialPurgedCV"], [95, 1, 1, "", "WalkForward"], [96, 3, 1, "", "cross_val_predict"]], "skfolio.model_selection.BaseCombinatorialCV": [[93, 2, 1, "", "get_path_ids"]], "skfolio.model_selection.CombinatorialPurgedCV": [[94, 4, 1, "", "binary_train_test_sets"], [94, 2, 1, "", "get_path_ids"], [94, 4, 1, "", "n_splits"], [94, 4, 1, "", "n_test_paths"], [94, 2, 1, "", "plot_train_test_folds"], [94, 2, 1, "", "plot_train_test_index"], [94, 4, 1, "", "recombined_paths"], [94, 2, 1, "", "split"], [94, 4, 1, "", "test_set_index"]], "skfolio.model_selection.WalkForward": [[95, 2, 1, "", "get_metadata_routing"], [95, 2, 1, "", "get_n_splits"], [95, 2, 1, "", "split"]], "skfolio.moments": [[97, 1, 1, "", "BaseCovariance"], [98, 1, 1, "", "BaseMu"], [99, 1, 1, "", "DenoiseCovariance"], [100, 1, 1, "", "DetoneCovariance"], [101, 1, 1, "", "EWCovariance"], [102, 1, 1, "", "EWMu"], [103, 1, 1, "", "EmpiricalCovariance"], [104, 1, 1, "", "EmpiricalMu"], [105, 1, 1, "", "EquilibriumMu"], [106, 1, 1, "", "GerberCovariance"], [107, 1, 1, "", "GraphicalLassoCV"], [108, 1, 1, "", "LedoitWolf"], [109, 1, 1, "", "OAS"], [110, 1, 1, "", "ShrunkCovariance"], [111, 1, 1, "", "ShrunkMu"], [112, 1, 1, "", "ShrunkMuMethods"]], "skfolio.moments.BaseCovariance": [[97, 2, 1, "", "get_metadata_routing"], [97, 2, 1, "", "get_params"], [97, 2, 1, "", "set_params"]], "skfolio.moments.BaseMu": [[98, 2, 1, "", "get_metadata_routing"], [98, 2, 1, "", "get_params"], [98, 2, 1, "", "set_params"]], "skfolio.moments.DenoiseCovariance": [[99, 2, 1, "", "fit"], [99, 2, 1, "", "get_metadata_routing"], [99, 2, 1, "", "get_params"], [99, 2, 1, "", "set_params"]], "skfolio.moments.DetoneCovariance": [[100, 2, 1, "", "fit"], [100, 2, 1, "", "get_metadata_routing"], [100, 2, 1, "", "get_params"], [100, 2, 1, "", "set_params"]], "skfolio.moments.EWCovariance": [[101, 2, 1, "", "fit"], [101, 2, 1, "", "get_metadata_routing"], [101, 2, 1, "", "get_params"], [101, 2, 1, "", "set_params"]], "skfolio.moments.EWMu": [[102, 2, 1, "", "fit"], [102, 2, 1, "", "get_metadata_routing"], [102, 2, 1, "", "get_params"], [102, 2, 1, "", "set_params"]], "skfolio.moments.EmpiricalCovariance": [[103, 2, 1, "", "fit"], [103, 2, 1, "", "get_metadata_routing"], [103, 2, 1, "", "get_params"], [103, 2, 1, "", "set_params"]], "skfolio.moments.EmpiricalMu": [[104, 2, 1, "", "fit"], [104, 2, 1, "", "get_metadata_routing"], [104, 2, 1, "", "get_params"], [104, 2, 1, "", "set_params"]], "skfolio.moments.EquilibriumMu": [[105, 2, 1, "", "fit"], [105, 2, 1, "", "get_metadata_routing"], [105, 2, 1, "", "get_params"], [105, 2, 1, "", "set_params"]], "skfolio.moments.GerberCovariance": [[106, 2, 1, "", "fit"], [106, 2, 1, "", "get_metadata_routing"], [106, 2, 1, "", "get_params"], [106, 2, 1, "", "set_params"]], "skfolio.moments.GraphicalLassoCV": [[107, 2, 1, "", "error_norm"], [107, 2, 1, "", "fit"], [107, 2, 1, "", "get_metadata_routing"], [107, 2, 1, "", "get_params"], [107, 2, 1, "", "get_precision"], [107, 2, 1, "", "mahalanobis"], [107, 2, 1, "", "score"], [107, 2, 1, "", "set_params"], [107, 2, 1, "", "set_score_request"]], "skfolio.moments.LedoitWolf": [[108, 2, 1, "", "error_norm"], [108, 2, 1, "", "fit"], [108, 2, 1, "", "get_metadata_routing"], [108, 2, 1, "", "get_params"], [108, 2, 1, "", "get_precision"], [108, 2, 1, "", "mahalanobis"], [108, 2, 1, "", "score"], [108, 2, 1, "", "set_params"], [108, 2, 1, "", "set_score_request"]], "skfolio.moments.OAS": [[109, 2, 1, "", "error_norm"], [109, 2, 1, "", "fit"], [109, 2, 1, "", "get_metadata_routing"], [109, 2, 1, "", "get_params"], [109, 2, 1, "", "get_precision"], [109, 2, 1, "", "mahalanobis"], [109, 2, 1, "", "score"], [109, 2, 1, "", "set_params"], [109, 2, 1, "", "set_score_request"]], "skfolio.moments.ShrunkCovariance": [[110, 2, 1, "", "error_norm"], [110, 2, 1, "", "fit"], [110, 2, 1, "", "get_metadata_routing"], [110, 2, 1, "", "get_params"], [110, 2, 1, "", "get_precision"], [110, 2, 1, "", "mahalanobis"], [110, 2, 1, "", "score"], [110, 2, 1, "", "set_params"], [110, 2, 1, "", "set_score_request"]], "skfolio.moments.ShrunkMu": [[111, 2, 1, "", "fit"], [111, 2, 1, "", "get_metadata_routing"], [111, 2, 1, "", "get_params"], [111, 2, 1, "", "set_params"]], "skfolio.moments.ShrunkMuMethods": [[112, 2, 1, "", "capitalize"], [112, 2, 1, "", "casefold"], [112, 2, 1, "", "center"], [112, 2, 1, "", "count"], [112, 2, 1, "", "encode"], [112, 2, 1, "", "endswith"], [112, 2, 1, "", "expandtabs"], [112, 2, 1, "", "find"], [112, 2, 1, "", "format"], [112, 2, 1, "", "format_map"], [112, 2, 1, "", "has"], [112, 2, 1, "", "index"], [112, 2, 1, "", "isalnum"], [112, 2, 1, "", "isalpha"], [112, 2, 1, "", "isascii"], [112, 2, 1, "", "isdecimal"], [112, 2, 1, "", "isdigit"], [112, 2, 1, "", "isidentifier"], [112, 2, 1, "", "islower"], [112, 2, 1, "", "isnumeric"], [112, 2, 1, "", "isprintable"], [112, 2, 1, "", "isspace"], [112, 2, 1, "", "istitle"], [112, 2, 1, "", "isupper"], [112, 2, 1, "", "join"], [112, 2, 1, "", "ljust"], [112, 2, 1, "", "lower"], [112, 2, 1, "", "lstrip"], [112, 2, 1, "", "maketrans"], [112, 2, 1, "", "partition"], [112, 2, 1, "", "removeprefix"], [112, 2, 1, "", "removesuffix"], [112, 2, 1, "", "replace"], [112, 2, 1, "", "rfind"], [112, 2, 1, "", "rindex"], [112, 2, 1, "", "rjust"], [112, 2, 1, "", "rpartition"], [112, 2, 1, "", "rsplit"], [112, 2, 1, "", "rstrip"], [112, 2, 1, "", "split"], [112, 2, 1, "", "splitlines"], [112, 2, 1, "", "startswith"], [112, 2, 1, "", "strip"], [112, 2, 1, "", "swapcase"], [112, 2, 1, "", "title"], [112, 2, 1, "", "translate"], [112, 2, 1, "", "upper"], [112, 2, 1, "", "zfill"]], "skfolio.optimization": [[113, 1, 1, "", "BaseComposition"], [114, 1, 1, "", "BaseHierarchicalOptimization"], [115, 1, 1, "", "ConvexOptimization"], [116, 1, 1, "", "DistributionallyRobustCVaR"], [117, 1, 1, "", "EqualWeighted"], [118, 1, 1, "", "HierarchicalEqualRiskContribution"], [119, 1, 1, "", "HierarchicalRiskParity"], [120, 1, 1, "", "InverseVolatility"], [121, 1, 1, "", "MaximumDiversification"], [122, 1, 1, "", "MeanRisk"], [123, 1, 1, "", "NestedClustersOptimization"], [124, 1, 1, "", "ObjectiveFunction"], [125, 1, 1, "", "Random"], [126, 1, 1, "", "RiskBudgeting"], [127, 1, 1, "", "StackingOptimization"], [0, 0, 0, "-", "cluster"], [0, 0, 0, "-", "convex"], [0, 0, 0, "-", "ensemble"], [0, 0, 0, "-", "naive"]], "skfolio.optimization.BaseComposition": [[113, 2, 1, "", "get_metadata_routing"], [113, 2, 1, "", "get_params"], [113, 2, 1, "", "set_params"]], "skfolio.optimization.BaseHierarchicalOptimization": [[114, 2, 1, "", "fit_predict"], [114, 2, 1, "", "get_metadata_routing"], [114, 2, 1, "", "get_params"], [114, 2, 1, "", "predict"], [114, 2, 1, "", "score"], [114, 2, 1, "", "set_params"]], "skfolio.optimization.ConvexOptimization": [[115, 2, 1, "", "fit_predict"], [115, 2, 1, "", "get_metadata_routing"], [115, 2, 1, "", "get_params"], [115, 2, 1, "", "predict"], [115, 2, 1, "", "score"], [115, 2, 1, "", "set_params"]], "skfolio.optimization.DistributionallyRobustCVaR": [[116, 2, 1, "", "fit"], [116, 2, 1, "", "fit_predict"], [116, 2, 1, "", "get_metadata_routing"], [116, 2, 1, "", "get_params"], [116, 2, 1, "", "predict"], [116, 2, 1, "", "score"], [116, 2, 1, "", "set_params"]], "skfolio.optimization.EqualWeighted": [[117, 2, 1, "", "fit"], [117, 2, 1, "", "fit_predict"], [117, 2, 1, "", "get_metadata_routing"], [117, 2, 1, "", "get_params"], [117, 2, 1, "", "predict"], [117, 2, 1, "", "score"], [117, 2, 1, "", "set_params"]], "skfolio.optimization.HierarchicalEqualRiskContribution": [[118, 2, 1, "", "fit"], [118, 2, 1, "", "fit_predict"], [118, 2, 1, "", "get_metadata_routing"], [118, 2, 1, "", "get_params"], [118, 2, 1, "", "predict"], [118, 2, 1, "", "score"], [118, 2, 1, "", "set_params"]], "skfolio.optimization.HierarchicalRiskParity": [[119, 2, 1, "", "fit"], [119, 2, 1, "", "fit_predict"], [119, 2, 1, "", "get_metadata_routing"], [119, 2, 1, "", "get_params"], [119, 2, 1, "", "predict"], [119, 2, 1, "", "score"], [119, 2, 1, "", "set_params"]], "skfolio.optimization.InverseVolatility": [[120, 2, 1, "", "fit"], [120, 2, 1, "", "fit_predict"], [120, 2, 1, "", "get_metadata_routing"], [120, 2, 1, "", "get_params"], [120, 2, 1, "", "predict"], [120, 2, 1, "", "score"], [120, 2, 1, "", "set_params"]], "skfolio.optimization.MaximumDiversification": [[121, 2, 1, "", "fit"], [121, 2, 1, "", "fit_predict"], [121, 2, 1, "", "get_metadata_routing"], [121, 2, 1, "", "get_params"], [121, 2, 1, "", "predict"], [121, 2, 1, "", "score"], [121, 2, 1, "", "set_params"]], "skfolio.optimization.MeanRisk": [[122, 2, 1, "", "fit"], [122, 2, 1, "", "fit_predict"], [122, 2, 1, "", "get_metadata_routing"], [122, 2, 1, "", "get_params"], [122, 2, 1, "", "predict"], [122, 2, 1, "", "score"], [122, 2, 1, "", "set_params"]], "skfolio.optimization.NestedClustersOptimization": [[123, 2, 1, "", "fit"], [123, 2, 1, "", "fit_predict"], [123, 2, 1, "", "get_metadata_routing"], [123, 2, 1, "", "get_params"], [123, 2, 1, "", "predict"], [123, 2, 1, "", "score"], [123, 2, 1, "", "set_params"]], "skfolio.optimization.ObjectiveFunction": [[124, 2, 1, "", "capitalize"], [124, 2, 1, "", "casefold"], [124, 2, 1, "", "center"], [124, 2, 1, "", "count"], [124, 2, 1, "", "encode"], [124, 2, 1, "", "endswith"], [124, 2, 1, "", "expandtabs"], [124, 2, 1, "", "find"], [124, 2, 1, "", "format"], [124, 2, 1, "", "format_map"], [124, 2, 1, "", "has"], [124, 2, 1, "", "index"], [124, 2, 1, "", "isalnum"], [124, 2, 1, "", "isalpha"], [124, 2, 1, "", "isascii"], [124, 2, 1, "", "isdecimal"], [124, 2, 1, "", "isdigit"], [124, 2, 1, "", "isidentifier"], [124, 2, 1, "", "islower"], [124, 2, 1, "", "isnumeric"], [124, 2, 1, "", "isprintable"], [124, 2, 1, "", "isspace"], [124, 2, 1, "", "istitle"], [124, 2, 1, "", "isupper"], [124, 2, 1, "", "join"], [124, 2, 1, "", "ljust"], [124, 2, 1, "", "lower"], [124, 2, 1, "", "lstrip"], [124, 2, 1, "", "maketrans"], [124, 2, 1, "", "partition"], [124, 2, 1, "", "removeprefix"], [124, 2, 1, "", "removesuffix"], [124, 2, 1, "", "replace"], [124, 2, 1, "", "rfind"], [124, 2, 1, "", "rindex"], [124, 2, 1, "", "rjust"], [124, 2, 1, "", "rpartition"], [124, 2, 1, "", "rsplit"], [124, 2, 1, "", "rstrip"], [124, 2, 1, "", "split"], [124, 2, 1, "", "splitlines"], [124, 2, 1, "", "startswith"], [124, 2, 1, "", "strip"], [124, 2, 1, "", "swapcase"], [124, 2, 1, "", "title"], [124, 2, 1, "", "translate"], [124, 2, 1, "", "upper"], [124, 2, 1, "", "zfill"]], "skfolio.optimization.Random": [[125, 2, 1, "", "fit"], [125, 2, 1, "", "fit_predict"], [125, 2, 1, "", "get_metadata_routing"], [125, 2, 1, "", "get_params"], [125, 2, 1, "", "predict"], [125, 2, 1, "", "score"], [125, 2, 1, "", "set_params"]], "skfolio.optimization.RiskBudgeting": [[126, 2, 1, "", "fit"], [126, 2, 1, "", "fit_predict"], [126, 2, 1, "", "get_metadata_routing"], [126, 2, 1, "", "get_params"], [126, 2, 1, "", "predict"], [126, 2, 1, "", "score"], [126, 2, 1, "", "set_params"]], "skfolio.optimization.StackingOptimization": [[127, 2, 1, "", "fit"], [127, 2, 1, "", "fit_predict"], [127, 2, 1, "", "get_metadata_routing"], [127, 2, 1, "", "get_params"], [127, 4, 1, "", "named_estimators"], [127, 2, 1, "", "predict"], [127, 2, 1, "", "score"], [127, 2, 1, "", "set_params"]], "skfolio.population": [[128, 1, 1, "", "Population"]], "skfolio.population.Population": [[128, 2, 1, "", "append"], [128, 2, 1, "", "clear"], [128, 2, 1, "", "composition"], [128, 2, 1, "", "copy"], [128, 2, 1, "", "count"], [128, 2, 1, "", "extend"], [128, 2, 1, "", "filter"], [128, 2, 1, "", "index"], [128, 2, 1, "", "insert"], [128, 2, 1, "", "max_measure"], [128, 2, 1, "", "measures"], [128, 2, 1, "", "measures_mean"], [128, 2, 1, "", "measures_std"], [128, 2, 1, "", "min_measure"], [128, 2, 1, "", "non_denominated_sort"], [128, 2, 1, "", "plot_composition"], [128, 2, 1, "", "plot_cumulative_returns"], [128, 2, 1, "", "plot_distribution"], [128, 2, 1, "", "plot_measures"], [128, 2, 1, "", "pop"], [128, 2, 1, "", "quantile"], [128, 2, 1, "", "remove"], [128, 2, 1, "", "reverse"], [128, 2, 1, "", "set_portfolio_params"], [128, 2, 1, "", "sort"], [128, 2, 1, "", "sort_measure"], [128, 2, 1, "", "summary"]], "skfolio.portfolio": [[129, 1, 1, "", "BasePortfolio"], [130, 1, 1, "", "MultiPeriodPortfolio"], [131, 1, 1, "", "Portfolio"]], "skfolio.portfolio.BasePortfolio": [[129, 4, 1, "", "annualized_factor"], [129, 2, 1, "", "clear"], [129, 4, 1, "", "composition"], [129, 2, 1, "", "copy"], [129, 5, 1, "", "cumulative_returns"], [129, 4, 1, "", "cumulative_returns_df"], [129, 2, 1, "", "dominates"], [129, 5, 1, "", "drawdowns"], [129, 5, 1, "", "fitness"], [129, 4, 1, "", "fitness_measures"], [129, 2, 1, "", "get_measure"], [129, 4, 1, "", "measures_df"], [129, 4, 1, "", "n_observations"], [129, 2, 1, "", "plot_composition"], [129, 2, 1, "", "plot_cumulative_returns"], [129, 2, 1, "", "plot_returns"], [129, 2, 1, "", "plot_rolling_measure"], [129, 4, 1, "", "returns_df"], [129, 2, 1, "", "rolling_measure"], [129, 2, 1, "", "summary"]], "skfolio.portfolio.MultiPeriodPortfolio": [[130, 4, 1, "", "annualized_factor"], [130, 2, 1, "", "append"], [130, 4, 1, "", "assets"], [130, 2, 1, "", "clear"], [130, 4, 1, "", "composition"], [130, 2, 1, "", "copy"], [130, 5, 1, "", "cumulative_returns"], [130, 4, 1, "", "cumulative_returns_df"], [130, 2, 1, "", "dominates"], [130, 5, 1, "", "drawdowns"], [130, 5, 1, "", "fitness"], [130, 4, 1, "", "fitness_measures"], [130, 2, 1, "", "get_measure"], [130, 4, 1, "", "measures_df"], [130, 4, 1, "", "n_observations"], [130, 2, 1, "", "plot_composition"], [130, 2, 1, "", "plot_cumulative_returns"], [130, 2, 1, "", "plot_returns"], [130, 2, 1, "", "plot_rolling_measure"], [130, 4, 1, "", "portfolios"], [130, 4, 1, "", "returns_df"], [130, 2, 1, "", "rolling_measure"], [130, 2, 1, "", "summary"]], "skfolio.portfolio.Portfolio": [[131, 4, 1, "", "annualized_factor"], [131, 2, 1, "", "clear"], [131, 4, 1, "", "composition"], [131, 2, 1, "", "contribution"], [131, 2, 1, "", "copy"], [131, 5, 1, "", "cumulative_returns"], [131, 4, 1, "", "cumulative_returns_df"], [131, 4, 1, "", "diversification"], [131, 2, 1, "", "dominates"], [131, 5, 1, "", "drawdowns"], [131, 4, 1, "", "effective_number_assets"], [131, 2, 1, "", "expected_returns_from_assets"], [131, 5, 1, "", "fitness"], [131, 4, 1, "", "fitness_measures"], [131, 2, 1, "", "get_measure"], [131, 2, 1, "", "get_weight"], [131, 4, 1, "", "measures_df"], [131, 4, 1, "", "n_observations"], [131, 5, 1, "", "nonzero_assets"], [131, 5, 1, "", "nonzero_assets_index"], [131, 2, 1, "", "plot_composition"], [131, 2, 1, "", "plot_contribution"], [131, 2, 1, "", "plot_cumulative_returns"], [131, 2, 1, "", "plot_returns"], [131, 2, 1, "", "plot_rolling_measure"], [131, 4, 1, "", "returns_df"], [131, 2, 1, "", "rolling_measure"], [131, 4, 1, "", "sric"], [131, 2, 1, "", "summary"], [131, 2, 1, "", "variance_from_assets"]], "skfolio.pre_selection": [[132, 1, 1, "", "DropCorrelated"], [133, 1, 1, "", "SelectKExtremes"], [134, 1, 1, "", "SelectNonDominated"]], "skfolio.pre_selection.DropCorrelated": [[132, 2, 1, "", "fit"], [132, 2, 1, "", "fit_transform"], [132, 2, 1, "", "get_feature_names_out"], [132, 2, 1, "", "get_metadata_routing"], [132, 2, 1, "", "get_params"], [132, 2, 1, "", "get_support"], [132, 2, 1, "", "inverse_transform"], [132, 2, 1, "", "set_output"], [132, 2, 1, "", "set_params"], [132, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectKExtremes": [[133, 2, 1, "", "fit"], [133, 2, 1, "", "fit_transform"], [133, 2, 1, "", "get_feature_names_out"], [133, 2, 1, "", "get_metadata_routing"], [133, 2, 1, "", "get_params"], [133, 2, 1, "", "get_support"], [133, 2, 1, "", "inverse_transform"], [133, 2, 1, "", "set_output"], [133, 2, 1, "", "set_params"], [133, 2, 1, "", "transform"]], "skfolio.pre_selection.SelectNonDominated": [[134, 2, 1, "", "fit"], [134, 2, 1, "", "fit_transform"], [134, 2, 1, "", "get_feature_names_out"], [134, 2, 1, "", "get_metadata_routing"], [134, 2, 1, "", "get_params"], [134, 2, 1, "", "get_support"], [134, 2, 1, "", "inverse_transform"], [134, 2, 1, "", "set_output"], [134, 2, 1, "", "set_params"], [134, 2, 1, "", "transform"]], "skfolio.preprocessing": [[135, 3, 1, "", "prices_to_returns"]], "skfolio.prior": [[136, 1, 1, "", "BaseLoadingMatrix"], [137, 1, 1, "", "BasePrior"], [138, 1, 1, "", "BlackLitterman"], [139, 1, 1, "", "EmpiricalPrior"], [140, 1, 1, "", "FactorModel"], [141, 1, 1, "", "LoadingMatrixRegression"], [142, 1, 1, "", "PriorModel"]], "skfolio.prior.BaseLoadingMatrix": [[136, 2, 1, "", "get_metadata_routing"], [136, 2, 1, "", "get_params"], [136, 2, 1, "", "set_params"]], "skfolio.prior.BasePrior": [[137, 2, 1, "", "get_metadata_routing"], [137, 2, 1, "", "get_params"], [137, 2, 1, "", "set_params"]], "skfolio.prior.BlackLitterman": [[138, 2, 1, "", "fit"], [138, 2, 1, "", "get_metadata_routing"], [138, 2, 1, "", "get_params"], [138, 2, 1, "", "set_params"]], "skfolio.prior.EmpiricalPrior": [[139, 2, 1, "", "fit"], [139, 2, 1, "", "get_metadata_routing"], [139, 2, 1, "", "get_params"], [139, 2, 1, "", "set_params"]], "skfolio.prior.FactorModel": [[140, 2, 1, "", "fit"], [140, 2, 1, "", "get_metadata_routing"], [140, 2, 1, "", "get_params"], [140, 2, 1, "", "set_params"]], "skfolio.prior.LoadingMatrixRegression": [[141, 2, 1, "", "fit"], [141, 2, 1, "", "get_metadata_routing"], [141, 2, 1, "", "get_params"], [141, 2, 1, "", "set_params"]], "skfolio.uncertainty_set": [[143, 1, 1, "", "BaseCovarianceUncertaintySet"], [144, 1, 1, "", "BaseMuUncertaintySet"], [145, 1, 1, "", "BootstrapCovarianceUncertaintySet"], [146, 1, 1, "", "BootstrapMuUncertaintySet"], [147, 1, 1, "", "EmpiricalCovarianceUncertaintySet"], [148, 1, 1, "", "EmpiricalMuUncertaintySet"], [149, 1, 1, "", "UncertaintySet"]], "skfolio.uncertainty_set.BaseCovarianceUncertaintySet": [[143, 2, 1, "", "get_metadata_routing"], [143, 2, 1, "", "get_params"], [143, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BaseMuUncertaintySet": [[144, 2, 1, "", "get_metadata_routing"], [144, 2, 1, "", "get_params"], [144, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BootstrapCovarianceUncertaintySet": [[145, 2, 1, "", "fit"], [145, 2, 1, "", "get_metadata_routing"], [145, 2, 1, "", "get_params"], [145, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.BootstrapMuUncertaintySet": [[146, 2, 1, "", "fit"], [146, 2, 1, "", "get_metadata_routing"], [146, 2, 1, "", "get_params"], [146, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.EmpiricalCovarianceUncertaintySet": [[147, 2, 1, "", "fit"], [147, 2, 1, "", "get_metadata_routing"], [147, 2, 1, "", "get_params"], [147, 2, 1, "", "set_params"]], "skfolio.uncertainty_set.EmpiricalMuUncertaintySet": [[148, 2, 1, "", "fit"], [148, 2, 1, "", "get_metadata_routing"], [148, 2, 1, "", "get_params"], [148, 2, 1, "", "set_params"]], "skfolio.utils.stats": [[150, 3, 1, "", "NBinsMethod"], [151, 3, 1, "", "assert_is_distance"], [152, 3, 1, "", "assert_is_square"], [153, 3, 1, "", "assert_is_symmetric"], [154, 3, 1, "", "commutation_matrix"], [155, 3, 1, "", "compute_optimal_n_clusters"], [156, 3, 1, "", "corr_to_cov"], [157, 3, 1, "", "cov_nearest"], [158, 3, 1, "", "cov_to_corr"], [159, 3, 1, "", "is_cholesky_dec"], [160, 3, 1, "", "n_bins_freedman"], [161, 3, 1, "", "n_bins_knuth"], [162, 3, 1, "", "rand_weights"], [163, 3, 1, "", "rand_weights_dirichlet"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute"}, "terms": {"": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 155, 161, 164, 167, 168, 169, 170, 171, 176, 177, 178, 179, 180, 181], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 46, 52, 55, 56, 57, 59, 60, 67, 68, 69, 70, 72, 73, 77, 89, 94, 95, 96, 101, 102, 103, 105, 106, 107, 108, 109, 110, 114, 115, 116, 118, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 145, 146, 147, 148, 149, 162, 164, 165, 168, 172, 173, 175, 176, 177, 178, 179, 180, 181], "00": [7, 8, 9, 14, 15, 16, 18, 19, 20, 21, 23, 24, 27, 29, 34, 36, 40, 41, 44, 46, 165], "000": [43, 46], "0000": [48, 52, 61, 62, 63, 64, 65, 112, 124], "000000": [7, 8], "0000000000000002": 11, "000000000000002": 11, "0000001319361242": 9, "000005": 40, "000006": [9, 40], "000007": [9, 40], "000008": [8, 9], "000009": [9, 15, 23], "000010": [9, 19, 36], "000011": [7, 9, 18, 19, 20], "000012": [9, 20], "000013": [8, 9, 14, 15, 23], "000014": [9, 15, 36], "000015": [9, 36], "000016": [8, 9], "000017": 9, "000018": 9, "000019": 9, "000020": [9, 14], "000021": [9, 14, 19], "000022": [7, 9, 18, 19], "000023": [9, 18, 20], "000024": 9, "000025": 20, "000026": 9, "000027": [8, 23], "000028": [9, 23], "000029": [7, 9], "000031": 9, "000033": 9, "000034": 9, "000035": 9, "000037": [9, 29], "000038": 9, "000039": 29, "000040": [9, 29], "000041": [9, 29], "000043": [9, 29], "000045": 9, "000046": 9, "000050": 9, "000054": 9, "000055": 9, "000056": 9, "000057": 9, "000058": 9, "000062": 9, "00007": 6, "000070": 9, "000073": 29, "000074": 29, "000078": 29, "000079": [9, 29], "000082": 15, "000088": 9, "000090": 29, "000096": 40, "000097": 9, "000098": 9, "0001": [26, 107, 164, 172], "00010": [15, 138], "00011": [6, 9, 40], "00012": [9, 10], "00013": 14, "00014": 9, "00015": 138, "00016": 9, "00017": [8, 9, 36], "00018": 9, "00019": 9, "0002": [138, 164, 178], "00020": 9, "00021": [7, 9, 18, 19], "00022": [9, 18, 20], "00023": [8, 9, 14, 19, 20, 23], "00024": [7, 9, 23], "00025": [9, 15], "00026": [9, 29], "00027": [9, 29], "00028": [9, 29], "00029": 9, "0003": [176, 180], "00030": 9, "00031": 9, "00032": 9, "00033": 9, "00034": 9, "00035": 9, "00035714285714285714": 14, "00036": 9, "00037": 9, "00038": 9, "00039": [6, 9, 138], "0004": [138, 176, 180], "00040": 9, "00041": 9, "00042": 9, "00043": 9, "00044": 9, "00045": 9, "00046": 9, "00047": 9, "00048": 9, "0005": 31, "00059": [4, 9], "0006": [176, 180], "00062": 15, "00068": 15, "00071": 14, "00074": 15, "00075": 15, "00077": 9, "00079": [14, 15], "00080": 15, "00081": 14, "00084": 14, "00085": 9, "00086": [4, 14], "00087": 14, "00092": 15, "00094": 14, "00097": 40, "00098": 4, "001": [14, 26, 36, 131, 172, 178], "0010": 178, "00105085": 8, "0011": [9, 40], "0012": [9, 14, 15, 36], "00122": 36, "00125": 36, "0013": [8, 11, 14, 15, 40, 115, 116, 121, 122, 126], "00139632": 2, "0014": [9, 178], "0015": [8, 9, 40, 178], "00152747": 7, "0016": [9, 15, 40], "0017": [9, 14, 15], "00175085e": 5, "0018": [7, 9, 14, 18, 19, 40], "0019": [9, 15, 18, 20, 36], "00199173": 7, "002": [12, 178], "0020": [8, 9, 20, 23, 40], "0021": [9, 14, 15, 19], "0022": [7, 9, 15], "0023": [9, 14, 29, 40], "0024": [9, 23, 29], "0025": [8, 9, 178], "0026": [9, 36], "00263": 36, "0027": [9, 14, 15], "0028": [9, 14], "0029": [9, 15, 31], "003": [2, 178], "0030": [9, 178], "00305": 36, "0031": [9, 36], "0032": [7, 9, 18, 19], "00322793": 2, "0033": [8, 9, 15, 18, 20, 23, 29], "00331177e": 32, "0034": [9, 15, 29, 40], "00342423": 8, "0035": [8, 9], "00354605": 8, "00356473": 9, "0036": [9, 19], "0036976120249752": 7, "0037": [7, 9, 14], "00370324": 2, "003731": [7, 8], "003745": [7, 8], "003759": [7, 8], "0038": [9, 40], "0039": [9, 23], "004": 178, "0040": [9, 15, 36, 40], "0041": [9, 14, 40], "0042": 40, "0043": [9, 15], "0044": [9, 14], "0045": [9, 15, 29], "0046": [8, 9, 29], "0047": [9, 29, 36], "0048": [9, 36, 40], "0049": [9, 23], "005": 12, "0050": 9, "0051": [8, 9, 15, 23], "0052": [7, 9, 18, 19, 20, 36], "005201": [7, 8], "005267": [7, 8], "0053": [7, 9, 14, 18, 19, 20], "0054": [9, 14, 18, 20, 36], "00542224": 8, "0055": [9, 15], "0056": [9, 19], "005633": [7, 8], "0057": [15, 36], "0058": [9, 20], "0059": 9, "006": 15, "0060": [8, 9, 23], "0061": [7, 8, 9, 18, 19], "0062": [9, 23], "0063": [7, 9, 14, 15, 18, 20, 40], "0064": [8, 9, 15, 23], "00648530e": 32, "0065": 9, "0066": [9, 40], "0067": [9, 19], "0068": 9, "0069": [9, 15], "0070": [9, 29, 40], "0071": [7, 9, 14], "0072": [8, 9, 14, 23, 29], "0073": [7, 9, 18, 19, 20, 29, 40], "0074": [9, 29, 40], "007435": [7, 8], "0075": [9, 40], "007576": [7, 8], "0076": [9, 14, 29], "00765283": 19, "0077": [9, 19, 29], "0078": [9, 14, 29], "0079": [9, 23], "007f": [48, 61, 62, 63, 64, 65, 112, 124], "0080": [9, 29], "008045": [7, 8], "00805152": 7, "0081": [9, 36], "0082": 9, "00827991": 30, "0083": 9, "0084": 9, "0085": [9, 14], "0086": 9, "0087": 9, "0088": [9, 14], "0089": 9, "0090": [8, 9], "0091": 9, "0092": 9, "0093": 9, "00930168": 19, "00932275": 7, "0094": 9, "0095": [9, 36], "00959883e": 39, "0096": [9, 36], "0097": [9, 15], "0098": [9, 15, 36], "009868": [7, 8], "0099": [9, 15], "00992555": 9, "009933": [7, 8], "01": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 26, 30, 31, 32, 33, 34, 36, 39, 40, 43, 49, 50, 51, 52, 53, 138, 165, 169, 172, 176, 178], "010": [7, 8, 9, 15, 18, 19, 20], "0100": 9, "010079": [7, 8], "01024013e": 8, "01028137": 2, "01069377": 8, "010732": [7, 8], "01084089": 7, "011": [8, 9, 20, 29, 36], "01100645": 2, "01140416": 30, "012": [7, 8, 9, 14, 18, 19, 20, 23, 29], "01217676": 8, "01241175": 9, "013": [8, 9, 14, 15, 19, 20, 23, 29, 36], "013630": [7, 8], "014": [7, 9, 14, 23, 29, 40, 51], "0141": 31, "0149": 31, "015": [7, 8, 9, 14, 15, 23, 29, 138], "015381": [7, 8], "015500": [7, 8], "01562655e": 5, "0157": 31, "0159": 31, "016": [7, 9, 15, 18, 19, 20, 36, 40], "016527": [7, 8], "017": [8, 9, 19], "01757816": 30, "01787286": 7, "018": 9, "019": [9, 14], "01910610e": 26, "019355": [7, 8], "01943433": 9, "01946192e": 32, "02": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 37, 39, 40, 43, 49, 51, 52, 53, 116, 138, 165, 169, 178], "020": [9, 14], "020114": [7, 8], "020193584925389": 9, "020833": [7, 8], "02092595": 9, "021": [9, 15, 36, 43], "02117437": 2, "021355": [7, 8], "02155918": 2, "02170548": 30, "021741551637176403": 8, "021821": [7, 8], "022": [9, 15, 23, 29, 36], "022087577333468": 9, "02231082e": 4, "022653255671641413": 14, "023": [9, 14, 29, 40, 43], "02313728e": 6, "02335296e": 39, "0235": 33, "02374444": 2, "024": [7, 8, 9, 14, 15, 29, 43], "02409012": 30, "02428936": 30, "024823": [7, 8], "02483767": 29, "025": [9, 19, 29], "025061083134673378": 8, "02548697": [7, 18, 19], "02564642": [7, 18, 19], "02575021": 30, "02596219": 29, "026": [8, 9, 14, 20, 23, 29, 40], "026619": [7, 8], "027": [7, 8, 9, 14, 18, 19, 20, 23, 29, 43], "02702131": 9, "02730592": 30, "02737024e": 23, "02773558": 29, "028": [8, 9, 23], "029": [7, 9, 19, 23, 40], "02943678": 9, "0296872": [7, 18, 19], "0298146": 2, "02983878": 30, "03": [2, 4, 5, 6, 7, 8, 9, 13, 15, 16, 19, 23, 29, 32, 36, 39, 40, 43, 49, 51, 52, 53, 164, 165, 178], "030": 9, "030303": [7, 8], "031": [9, 15], "03133290e": [5, 6], "03144452": 29, "031996": [7, 8], "032": [9, 15, 40, 43], "03210798": [18, 20], "0325744": 19, "032813": 9, "033": [9, 40], "03306735": [7, 18, 19], "03319698": 30, "03336025": 19, "03372651": [18, 20], "034": [9, 14, 40], "03431023e": 39, "03451835": [18, 20], "03497807": 29, "035": [9, 14, 15, 36], "03551377": [7, 18, 19], "03632272": 29, "03676195": 2, "037": [9, 14, 20, 36, 40], "03704654": 9, "0373302": 2, "0376": 33, "03774863": 9, "03785032": [18, 20], "03790179": 29, "038": [9, 40], "03882539": [7, 18, 19], "039": [8, 9, 29, 50, 138], "0393462": 29, "03970752": [7, 18, 19], "03993049": 9, "03994727": 19, "0399564198202886": 7, "04": [2, 3, 4, 7, 8, 9, 14, 15, 16, 20, 21, 31, 36, 39, 40, 43, 50, 51, 52, 53, 138, 164, 165], "040": [7, 9, 14, 18, 19, 29], "04046571": [18, 20], "04094166": 29, "041": [9, 18, 20, 29, 43], "0413538": [18, 20], "04158213": 9, "04183614e": 6, "042": [9, 15, 50], "04203502": 178, "04203503": 178, "04204356": 9, "04230966": 19, "04252121": [18, 20], "04289017": 9, "042905188108048": 9, "043": [9, 20], "0430764": 9, "043189": [7, 8], "04370262": 20, "044": [7, 8, 9, 15, 18, 19, 23], "04421773": 29, "04432829": [18, 20], "045": [8, 9, 15, 18, 20, 23, 40], "04503192": 20, "04535287": [18, 20], "04539423": 20, "04579238": 19, "04585759e": 8, "046": [9, 29, 50], "04647661": 20, "04667685": [18, 20], "047": [7, 9, 14, 19], "04723274": [7, 18, 19], "04726087": 30, "04742354": [7, 18, 19], "04755055": 20, "04774369": 20, "048": [7, 9, 40, 50], "04807705": 29, "04828169": 19, "04852997": 20, "04863941e": 3, "04893332": 12, "04897376": 19, "049": [9, 36], "04907272": 20, "04927095": 20, "04927288": 30, "04988132": 20, "05": [7, 8, 9, 10, 14, 15, 16, 18, 19, 23, 26, 29, 30, 31, 32, 36, 39, 40, 43, 50, 51, 52, 53, 115, 116, 121, 122, 126, 138, 164], "050": [8, 9, 14, 36], "05033705": 29, "0507476631082548": 33, "051": [9, 23, 36, 40], "05103901": [18, 20], "05112862": 20, "05137849": 20, "05150748e": 13, "05178561": 20, "05199178": 20, "052": [8, 9, 29, 36], "05201907e": 39, "05209546": [18, 20], "05284765": 20, "05289115": 29, "05293035": 20, "053": [9, 29], "05360779": 20, "05371219": 19, "05374008": 20, "05375844": 20, "054": [9, 29, 40, 49], "0541766": 20, "0541895": [18, 20], "05430778": 19, "05434705": [7, 18, 19], "055": [8, 9, 14, 29], "05537244": 19, "05570808": [7, 18, 19], "05576851": [7, 18, 19], "05581397": [7, 18, 19], "056": [8, 9, 29], "05627134": [18, 20], "05685439e": 5, "057": [9, 18, 20, 29], "05717669e": 3, "05726203": 30, "05744543": [7, 18, 19], "058": [9, 29], "05814153": 30, "05865087e": 12, "05865225e": 12, "059": 9, "059202": 29, "06": [7, 8, 9, 13, 18, 19, 20, 23, 29, 49, 50, 164], "060": 9, "061": 9, "06105326": [18, 20], "06119293": [18, 20], "06173109": 19, "062": 9, "06210401": 11, "06251597": 19, "063": [7, 9, 14, 18, 19, 29, 36], "06308422": 29, "06310889": 29, "06348992": 19, "06351213": [7, 18, 19], "06358463": [7, 18, 19], "064": [7, 8, 9, 18, 19, 20, 23], "06469404": [18, 20], "065": [7, 9, 18, 19, 20, 23], "06560167": 19, "06568125": [18, 20], "06593503": [18, 20], "066": [7, 9], "06610498": [7, 18, 19], "06656721": 30, "06697905": [7, 18, 19], "067": [9, 19, 40, 49], "06700223": 19, "06751700747046248": 10, "0676481": [7, 18, 19], "068": [9, 14, 19, 20, 36, 40, 43], "06832987": 11, "06858182": 2, "06880723": 19, "06892884": 19, "06894629": [18, 20], "069": [8, 9, 15, 23], "06982611e": 26, "07": [8, 9, 12, 15, 16, 23, 29, 41, 49, 50, 165], "070": [9, 15, 36], "07033671": 19, "07049715": [7, 18, 19], "07087663e": 26, "071": 9, "07120393e": 39, "072": [9, 23], "073": [7, 9, 14, 36], "07317879": 2, "074": [9, 15, 29], "07464383": 29, "075": [9, 14, 29], "07596741": 29, "076": [8, 9, 29], "077": [9, 29, 36], "078": 9, "079": [9, 29], "07941073": 2, "08": [2, 4, 5, 7, 8, 9, 13, 14, 19, 23, 36, 40, 43, 49, 51, 52, 53], "080": [9, 50], "08070112": 30, "08083036": 30, "08086158e": 23, "081": [9, 29], "0810491": 2, "082": 9, "08277551": 29, "083": 9, "083026522037701": 9, "084": [9, 29], "085": [8, 9, 29], "086": [9, 29], "08622477": 29, "087": [9, 29], "08797657e": 39, "088": [7, 8, 9, 18, 19, 23], "089": [9, 18, 20], "08919173e": 39, "09": [3, 4, 5, 6, 7, 8, 9, 12, 13, 26, 40], "090": [9, 15], "091": 9, "092": [7, 9, 23], "09226948e": [3, 4, 7], "093": [9, 19], "0933616": 30, "094": 9, "09420898": 30, "09425878e": 39, "095": 9, "09507654e": [3, 4, 7], "096": [9, 23], "09690756e": 39, "097": [8, 9, 20, 23, 40], "09718550832245014": 10, "0972": 10, "098": [7, 9, 18, 19, 20], "09849875e": [5, 6], "099": [7, 9], "1": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 24, 26, 27, 29, 30, 31, 32, 33, 36, 37, 39, 40, 43, 44, 47, 48, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 89, 92, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 145, 146, 147, 148, 149, 150, 155, 157, 160, 161, 164, 168, 172, 173, 176, 177, 178, 181], "10": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 36, 39, 40, 43, 50, 94, 109, 115, 116, 121, 122, 126, 133, 164, 172], "100": [9, 11, 14, 15, 31, 36, 39, 40, 50, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 114, 115, 116, 118, 119, 121, 122, 126, 140, 157, 177], "1000": [77, 108, 128, 129, 130, 131, 145, 146], "1006": 33, "10083470e": 5, "102": 43, "10292071071001885": 10, "103": 51, "10319630e": 8, "10362386": 11, "105": 31, "10584830e": 5, "106": [9, 26, 27, 165], "107": 15, "10752495e": 39, "10847215e": 23, "109": [9, 16, 29, 34, 165], "10y": 43, "11": [3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 26, 29, 31, 34, 36, 39, 40, 52, 94, 165], "11063384e": 32, "11093659": 2, "112": 49, "113": 43, "11391513": 11, "11421641e": 4, "11477958e": 39, "11478008e": 23, "115": 50, "117": 43, "118": 50, "11868007e": 12, "11892006e": 23, "119": [14, 40, 50], "11970704e": 39, "12": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 39, 43, 49, 51, 52, 53, 94, 164, 169], "120": 31, "12051211e": 39, "121": [43, 50], "12141020e": 39, "124": 50, "12489362e": 39, "12492676e": 5, "125": 43, "1250": 52, "12558991e": 39, "126": 39, "128": 43, "12895735e": [5, 6], "13": [5, 7, 8, 9, 14, 15, 16, 20, 23, 29, 36, 40, 51, 97, 99, 100, 101, 103, 106, 108, 157], "13001762e": [5, 6], "132": 9, "13239659e": 39, "13346758e": [5, 6], "13473236e": 32, "13607836e": 8, "1362": 51, "13672756e": 32, "13696569e": [5, 6], "13808863e": 39, "14": [7, 8, 9, 14, 15, 16, 23, 29, 31, 40, 43], "14316461e": 39, "144": 43, "1455": 51, "147": 43, "14733606e": 8, "14759387e": 6, "148": 43, "14895433": 30, "14940375e": 39, "15": [4, 7, 8, 9, 14, 15, 18, 19, 23, 26, 27, 29, 36, 40, 165], "150": 11, "159": 43, "15980287": 2, "16": [7, 8, 9, 14, 15, 18, 19, 20, 29, 31, 36, 40], "161": 43, "16112642e": 26, "16206284e": 5, "16248113e": 39, "16368341e": [3, 4, 7], "16461176e": 32, "165": [14, 15, 40], "16513980e": 32, "16562529e": 8, "16676619e": 32, "16956647": 11, "17": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 40], "1700238781664583": 10, "171": 36, "17183301e": 39, "172": [3, 16, 165], "17212380e": 39, "17341817e": 11, "17359260e": 39, "174": 43, "17510456": 2, "17733231e": [12, 13], "178": [30, 34, 165], "18": [7, 9, 14, 15, 16, 18, 19, 20, 23, 29, 33, 36, 40, 165], "180": [14, 40], "181": 43, "182061194357152": 9, "18289085e": 8, "18408031e": 5, "18441126e": [3, 4, 7], "185": 50, "18538495e": 5, "1875": 52, "18803064e": 26, "18843086e": 39, "19": [7, 8, 9, 14, 18, 20, 23, 29, 36, 40, 41, 165], "190": 36, "192": 43, "19327658e": 32, "1952": 164, "1955": 111, "19657594e": [5, 6], "1967": [31, 39], "19789402e": 6, "1981": 160, "1986": 111, "19871439e": [3, 4, 7], "1988": [71, 131], "1990": [3, 4, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 32, 43, 52, 53, 169], "1991": 138, "1_mean_risk": [16, 165], "1d": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127], "1e": [14, 97, 99, 100, 101, 103, 106, 107, 108, 115, 116, 121, 122, 126, 157, 164], "1y": 43, "2": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 23, 26, 29, 31, 32, 36, 39, 40, 41, 43, 47, 48, 51, 55, 57, 58, 59, 60, 71, 94, 95, 96, 101, 102, 106, 108, 109, 111, 115, 116, 118, 119, 121, 122, 123, 126, 128, 131, 132, 134, 138, 145, 146, 147, 148, 149, 155, 164, 168, 172, 176, 177, 178, 181], "20": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 39, 43, 52, 53, 115, 116, 121, 122, 126, 165, 169], "200": [11, 115, 116, 121, 122, 126], "2000": [14, 15, 31, 36, 39, 40, 50, 116], "200105310175214": 9, "2002": [97, 99, 100, 101, 103, 106, 108, 140, 157], "2004": [108, 145, 146], "2005": [56, 111], "200575932248872": 9, "2007": [138, 164], "2009": [47, 118, 145, 146, 147, 148, 155], "2010": [109, 135, 139, 168], "20106233e": 8, "2014": [2, 5, 6, 29, 49], "2015": [10, 33, 106], "2016": [55, 57, 59, 60, 119, 123], "2017": [118, 134, 168], "2018": [26, 51, 94, 116, 118], "2019": [106, 111, 119, 123, 131], "202": [7, 16, 165], "2020": [26, 30, 99, 100, 118, 119, 123, 176, 181], "202081924170507": 9, "20210608e": 39, "2022": [3, 4, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 30, 32, 33, 43, 49, 52, 53, 106, 169, 178], "20227491": 2, "2023": [14, 15, 31, 36, 39, 40, 50, 51, 106, 164], "2024": 173, "203": 43, "20495386e": 39, "205": 50, "20549958e": 39, "20563054e": 39, "20663228": 11, "20664617": 11, "20670474": 11, "20671539": 11, "20898034e": [3, 4, 7], "209": 50, "21": [7, 8, 9, 12, 14, 15, 18, 19, 29, 36, 37, 39, 40, 165], "210": 39, "21327461e": 5, "215": 43, "21580436": 2, "22": [4, 7, 9, 14, 15, 18, 19, 20, 29], "220": [43, 50], "22116860e": 32, "22188511e": [5, 6], "222": 50, "223": 33, "22380709e": 5, "224": 50, "2264": 49, "22729906e": 39, "22768876": 11, "22770146": 11, "22770271": 11, "22788246": 11, "229": [43, 50], "23": [7, 8, 9, 18, 20, 29, 109], "23117943e": 39, "23352411e": 3, "235": 43, "23719260e": 5, "24": [9, 14, 23, 29, 36, 40], "240": 50, "24004576e": 5, "24120028e": [3, 4, 7], "24355699e": 4, "245": 31, "24556425e": 6, "246": [2, 16, 165], "247": 51, "249": 50, "24959219e": [5, 6], "25": [4, 9, 14, 15, 31, 33, 36, 40, 114, 118, 119], "2500": 52, "25000": 52, "25072628e": 32, "252": [9, 12, 13, 14, 15, 31, 33, 36, 39, 40, 43, 129, 130, 131, 164, 168], "25212125e": 13, "253": 49, "254": 50, "25426519e": 39, "255": [14, 15, 40], "256": 49, "26": [8, 9, 15, 36, 40], "26134346e": 5, "26155697e": 8, "263": 49, "264": 43, "266": 43, "267": 43, "268": 43, "26897574e": 32, "269": 43, "27": [9, 15, 29, 36, 41], "27194222e": 3, "272263586429105": 29, "27250993e": 4, "273": [20, 21, 165], "27306716e": 39, "27962284e": 4, "27967880e": [5, 6], "28": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 36, 40, 43, 49, 52, 53, 165, 169], "28133405e": 39, "282": 43, "28246101": 11, "283": [43, 50], "28439988": 12, "28498817e": [3, 4, 7], "285": 50, "28522027e": [3, 4, 7], "288": 43, "289": 50, "28922429e": 32, "29": [7, 9, 14, 18, 19, 23, 29, 40, 49], "292": [13, 16, 165], "29453598e": 13, "29453703e": 13, "29516263e": 32, "296356964248307": 9, "298": 36, "2980": 36, "2_": [145, 146, 147, 148], "2_risk_budget": [21, 165], "2d": [5, 11, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 138, 180], "2f": [2, 14, 23, 33, 36, 39, 40], "2h": 131, "2x3x3": 15, "3": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 26, 29, 31, 32, 36, 39, 40, 43, 48, 52, 61, 62, 63, 64, 65, 94, 95, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 121, 122, 123, 124, 126, 132, 145, 146, 164, 168, 172, 178, 179], "30": [2, 7, 8, 9, 14, 15, 18, 20, 23, 29, 33, 36, 40, 43, 129, 130, 131, 177], "30000034617916516": 11, "301": 43, "30105753780178": 29, "303": 51, "30314924e": 3, "304": 43, "30530766e": [3, 4, 7], "305664213686036": 9, "30675668e": 39, "30720714e": 32, "30767706e": 39, "31": [8, 9, 14, 15, 31, 36, 39, 40, 50, 51], "310": [43, 51], "31092783e": 5, "31250": 52, "313": 50, "31550592e": 39, "316": 51, "31667795e": 32, "31737525e": [5, 6], "32": [7, 8, 9, 14, 15, 18, 19, 23, 29], "32124541e": 5, "322": 43, "322661810340446": 9, "32493866e": 6, "32678922e": 39, "33": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 32, 36, 39, 40, 164, 172, 176, 177], "330": 49, "332589": 52, "3333332": 12, "33333333e": 11, "33333336": 12, "33333345": 12, "33456624e": 23, "334821": 52, "335938": 52, "336": 51, "337": 50, "337054": 52, "338": 49, "339286": 52, "33953561e": 5, "34": [7, 8, 9, 15, 18, 19, 20, 23, 29], "34073945e": 4, "34097308e": 6, "345087054431556": 10, "34583417e": 32, "347656": 52, "34862950e": [3, 4, 7], "34908730e": 32, "34914228e": 26, "35": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 51], "35005322e": 3, "351": 49, "352": 53, "35228602e": 5, "353": 53, "354": 50, "355": 53, "355469": 52, "35632022e": 23, "35652050e": [5, 6], "35710067e": [3, 4, 7], "358": 53, "359": 53, "35927671e": 8, "36": [9, 14, 18, 20, 29, 33, 51], "36085745e": 39, "36241349e": 26, "36336705e": [5, 6], "364": 43, "36401076e": 4, "365": [5, 16, 108, 165], "368": [11, 16, 165], "368335377715717": 9, "37": [7, 9, 14, 15, 18, 20, 23, 29, 33, 34, 51, 165], "371094": 52, "37192080e": 12, "3750": 52, "375000": 52, "37539449e": 32, "38": [9, 15, 29, 40, 51], "38087390e": 5, "381": 50, "382": 50, "382813": 52, "384": 43, "38460704e": 26, "38469617e": 39, "38515810e": 39, "386": [43, 50], "387": 43, "39": [2, 7, 9, 14, 15, 18, 19, 20, 29, 36, 40], "391": 43, "392": 50, "393": 43, "394": 43, "397": 43, "399360341488464": 9, "3_maxiumum_diversif": [24, 165], "3d": 128, "3f": 15, "3m": 43, "3x3": 14, "4": [3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 23, 26, 32, 36, 39, 40, 43, 47, 51, 52, 94, 95, 106, 107, 118, 119, 122, 132, 133, 134, 155, 168, 176, 178], "40": [8, 9, 14, 18, 20, 23, 29, 36, 39, 50, 178], "400": 51, "40097067e": 39, "40239485319279": 9, "40287802e": 39, "40429482e": 4, "405": 50, "40597193e": 4, "407690290599575": 9, "40812344e": 3, "40973224e": 39, "40979832e": 12, "41": [9, 14, 18, 20, 29, 51, 108], "41147667e": 23, "41661311e": 39, "41726679e": 8, "41742527e": 8, "42": [9, 14, 15, 29, 36], "422": 49, "42282444e": 5, "423": 43, "42391438e": 5, "42685508e": 6, "42766417e": 39, "42768380e": 26, "42845847e": 39, "42882219e": 26, "43": [7, 8, 9, 14, 15, 19, 23, 29, 36], "430": [49, 51], "43028265e": 13, "431": 41, "43231855e": [3, 4, 7], "437": 49, "43758398806516": 9, "438": 43, "43855248e": [3, 4, 7], "43876113e": 5, "44": [9, 15, 29, 31, 40], "44128512e": [5, 6], "44532312e": 5, "44687699e": 5, "44938306e": 3, "45": [7, 9, 14, 15, 18, 19, 23, 31, 36], "45171911e": 23, "452": [43, 50], "454": [23, 24, 165], "455": 49, "45574521e": 5, "457": [18, 21, 165], "458": 50, "45803069e": 4, "459": 43, "46": [9, 14, 15, 18, 20, 23, 29, 36, 39, 40, 49], "460": 51, "460872007821077": [7, 18, 19], "461275191312059": 8, "462": 50, "463": 43, "46436338e": [5, 6], "468": [4, 16, 165], "47": [7, 9, 20, 29, 49], "47134961e": 5, "47358386e": 8, "474123745524875": 9, "475": 50, "476": 50, "48": [8, 9, 14, 19, 23, 29, 36, 49], "481": 43, "48139841e": 39, "48213167e": 39, "48283750e": 5, "483": 50, "48338528e": 32, "48490337e": 32, "48598568e": 5, "48699105e": 23, "48850261e": 5, "49": [7, 8, 9, 15, 18, 19, 23, 29, 36, 40], "495": 51, "49645166e": 5, "498": 50, "49938736e": [3, 4, 7], "49999867": 11, "4_distributionally_robust_cvar": [27, 165], "4f": [31, 33], "5": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 33, 34, 36, 39, 40, 49, 52, 55, 56, 57, 59, 60, 94, 95, 96, 106, 107, 114, 115, 116, 118, 119, 121, 122, 123, 126, 127, 134, 164, 168, 179, 181], "50": [9, 11, 12, 14, 15, 19, 29, 31, 36, 40, 51, 114, 118, 119], "500": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 33, 43, 52, 53, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 169], "5000": 52, "50000": 52, "5016": 109, "502": 49, "5029": 109, "50514320e": 5, "50727312e": 23, "508": 43, "51": [8, 9, 14, 15, 20, 23, 29, 39, 51], "512": 50, "51323607e": 23, "51376159e": 4, "51475217e": 39, "5152184941723748": 9, "516": 21, "51844546e": 3, "52": [8, 9, 15, 23, 49], "52171782e": 39, "522": 43, "52217700e": 39, "523": [14, 16, 165], "52708811e": 8, "53": [7, 8, 9, 14, 15, 36, 40, 49], "53270264e": 39, "533289375090764": 29, "53379955e": 26, "53398775": 9, "535": 50, "536": [16, 43], "53601183e": 39, "537": 43, "54": [7, 8, 9, 14, 18, 19, 23, 29, 40], "540": [40, 41, 50, 165], "54382763e": 39, "54482537e": 39, "54697151e": 5, "547": [6, 16, 165], "548": 50, "549": [43, 165], "55": [9, 14, 15, 23, 34], "550": 51, "55247336e": 32, "553": 50, "55455742": 9, "55871070e": 32, "56": [7, 9, 15, 18, 19, 29], "56000809e": 6, "560177235001134": 29, "562": 50, "56214479e": 6, "56311233e": 39, "56548525": 11, "56558315": 11, "56559255": 11, "56566507": 11, "568": [33, 34, 165], "56967308e": 26, "57": [9, 14, 19, 23], "572": 50, "57560762e": 23, "578": 50, "57851861e": 5, "5798056188194143": 9, "58": [2, 7, 9, 14, 15, 20, 29, 109], "581": [43, 50], "58133679e": 32, "58269647e": 3, "58312606e": 39, "58350612e": 8, "59": [9, 14, 15, 23, 40], "590": 50, "591675649894958": 9, "59482204e": 5, "595": 43, "5960": 50, "59687833e": 39, "59789920e": 5, "59858003": 9, "59880563e": 5, "599": 43, "5_cluster": [34, 165], "5f": 36, "6": [3, 5, 6, 8, 9, 11, 12, 13, 15, 23, 26, 29, 32, 39, 43, 51, 94, 95, 168, 178], "60": [2, 8, 9, 12, 13, 14, 15, 23, 31, 33, 36, 40, 164], "60031507e": 32, "6008387080754516": 9, "60306246e": 39, "61": [8, 9, 14, 40], "61481439e": 5, "61513792e": 5, "62": [8, 9, 14, 15, 29], "62035863e": 39, "621": [43, 51], "62233910e": 32, "62545194e": 26, "62632716e": 5, "63": [9, 15, 18, 20, 29], "63365545e": 39, "634": 43, "63432134e": [5, 6], "636": 43, "63900807e": 32, "64": [9, 14, 15, 29, 31, 36, 39, 40, 50], "64005580e": 6, "64220700e": 5, "644": 43, "64582189e": 5, "646": 43, "64696218e": 39, "64772972e": [3, 4, 7], "648": 51, "64823756e": 3, "64841618e": 39, "64888981e": 8, "65": [7, 9, 14, 15, 18, 19, 29, 36, 40], "65046123e": 39, "65079997e": 39, "653": 43, "65451603e": 4, "65625": 52, "658": 43, "66": [9, 15, 18, 20, 23, 29, 40, 50, 51], "66255502e": 5, "66381941e": 32, "664": 43, "66647584e": 4, "66666667e": 11, "66785730e": 5, "669076363622692": 9, "67": [8, 9, 23, 53], "67249461e": 26, "67279164e": 39, "674": [8, 16, 165], "677": 49, "67810934e": 39, "68": [8, 9, 36], "681": 51, "68197345e": 5, "68205225e": 32, "685": 50, "685271602584908": 23, "68550154": 9, "68739416e": 5, "68742795e": 39, "687782011560027": 9, "69": [9, 14, 15, 20, 29, 36, 50, 53], "692": 43, "693": 34, "69581067e": 6, "69632764e": 6, "6_ensembl": [37, 165], "7": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 23, 26, 32, 33, 39, 40, 51, 94, 115, 116, 121, 122, 126, 168], "70": [8, 9, 15, 23, 29, 36, 47, 50, 115, 116, 121, 122, 126], "700": 51, "704": 49, "70440099e": [5, 6], "709": 43, "71": [8, 9, 14, 23, 29, 40], "71097312e": 32, "711": 50, "716": 50, "72": [7, 9, 10, 14, 15, 19, 29, 36, 40, 50, 51], "722": 49, "72248235e": 5, "72469426e": 6, "725": 50, "72770463e": 39, "72794158e": 5, "72810558608303": 19, "729": 50, "72965814e": 32, "72985253e": 4, "73": [7, 9, 14, 15, 18, 19, 20, 40], "731": 49, "73658093e": 39, "73670065e": 4, "73718908e": 4, "738": 43, "73909314e": [3, 4, 7], "74": [7, 9, 14, 15, 50], "74138185e": 23, "74197781": 11, "74253021e": [5, 6], "74283462e": 32, "74340049e": 39, "74361693e": 5, "74499181e": 39, "74507544e": 39, "74787861e": 13, "74823262e": 5, "74856659e": [3, 4, 7], "75": [9, 11, 14, 15, 23, 29, 36, 40], "750": [12, 16, 165], "75000": 52, "75009861e": 32, "75757760e": 39, "75792540e": 32, "75802352": 11, "75907600e": 39, "75985334e": 32, "76": [8, 9, 15, 20, 53], "76926114e": 39, "77": [8, 9, 14, 23, 29, 51], "77006663e": 5, "77319466e": 39, "775": 43, "777": 43, "77784307e": 5, "77910456e": 4, "78": [2, 8, 9, 14, 19, 23, 29, 40, 51], "780": 51, "78010014e": [3, 4, 7], "78013891e": 6, "78090544": 9, "78413867e": 3, "786": [19, 21, 39, 165], "78708311e": 3, "78775169e": [12, 13], "788185892520897": 9, "78965839e": 5, "79": [7, 9, 14, 18, 19, 23, 36, 53], "79050966e": 23, "79104637e": [5, 6], "792": 49, "79312466e": 32, "79558938e": 39, "79623520e": 39, "796875": 52, "79844555e": 8, "79851683e": 4, "7_pre_select": [41, 165], "8": [3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 18, 19, 20, 23, 26, 31, 32, 33, 36, 39, 40, 48, 51, 61, 62, 63, 64, 65, 94, 112, 124, 155, 164], "80": [9, 15, 19, 40], "800": 39, "80653860e": 39, "80823151e": 39, "809": 51, "81": [7, 8, 9, 14, 15, 19, 29, 40], "811": 51, "81108516e": 39, "81161325e": 3, "81176235e": 5, "812": 43, "8125": 52, "81629430e": 26, "82": [9, 15, 23, 29, 36, 51], "820": 43, "82266765e": [12, 13], "825": 51, "82564384e": 39, "82592031e": 23, "82822281e": 39, "829": 50, "83": [7, 9, 15, 18, 19, 36], "8313": [52, 53], "83522508e": 6, "83697624e": 39, "84": [9, 14, 20, 29, 36], "84021249e": [3, 4, 7], "84053635e": 39, "843069929154527": 9, "84348572e": 26, "84365114e": 39, "84470288e": 39, "84531907e": 26, "847": 43, "84876780e": 39, "84916828e": 39, "84980192e": 4, "85": [9, 14, 15, 40], "852": 50, "853": 43, "85394928e": 39, "855": [36, 37, 165], "85688593e": 6, "859375": 52, "85983398e": 26, "86": [9, 14, 18, 20, 29, 33, 40], "860": 43, "864764715990296": 9, "869": 51, "87": [8, 9, 14, 29], "87281428e": 32, "875000": 52, "876": [10, 16, 165], "87866505e": 3, "87986871": 9, "88": [9, 33, 36, 40, 108], "88131852e": 12, "88142338e": [5, 6], "88210632e": 5, "885": 50, "89": [7, 9, 15, 29, 40, 51], "890625": 52, "891": [39, 41, 165], "89116954e": 5, "89240131e": 39, "89248471e": 39, "89322196e": 3, "894001701422519": 9, "89793803e": 8, "8_data_prepar": [44, 165], "9": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 20, 23, 26, 32, 33, 36, 39, 94, 115, 116, 121, 122, 126, 176, 179], "90": [9, 15, 29], "90123331e": 26, "90340137e": 23, "9038840095066056": 10, "907": [32, 34, 50, 165], "90879685e": 3, "91": [9, 15, 29, 40, 51], "910": 43, "91035768e": 8, "912975728797552": 7, "913": 51, "914061803583557": 9, "91471166e": 39, "91741539e": 39, "91785162": 9, "91802980e": 5, "91846109e": 39, "92": [8, 9, 15, 23, 29, 50], "921023753343427": 20, "92149669e": 39, "922": 51, "926": 50, "92817471e": 8, "92866673e": 39, "92880653e": 39, "92984902e": 32, "93": [9, 14, 29], "930": [31, 34, 165], "93000375": 9, "93188830e": 6, "933": 51, "936428254316073": 9, "93749217": 9, "9375": 52, "93771054e": 3, "938": 43, "93952573e": 23, "94": [8, 9, 15, 23, 29, 36], "9401232": 9, "943": [15, 16, 165], "94502152e": 39, "94746608e": 5, "94836568e": 39, "95": [2, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 50, 67, 68, 69, 70, 72, 73, 89, 115, 116, 122, 126, 129, 130, 131, 132, 145, 146, 147, 148, 175, 177], "950": 50, "95027284": 9, "95048460e": 23, "95142106e": 5, "959": [43, 44, 165], "96": [9, 14, 50], "96049980e": 39, "965": 51, "966": 43, "967": 51, "96861483": 9, "96891040e": 39, "96895546e": 3, "97": [9, 14, 15, 18, 20, 29, 36, 50], "972": 50, "97503410e": 26, "97776252e": 5, "97964062": 9, "97994501e": 6, "98": [7, 9, 18, 19, 36], "98154300e": 23, "98213665e": 3, "98242729e": 6, "98247368e": 39, "98298183e": 5, "98356116e": 32, "98391244e": 39, "98463685": 9, "98558904e": 39, "986": 49, "987": 43, "99": [9, 15, 19, 29], "991": [43, 49], "99284245e": 39, "995": 51, "995820707977355": [18, 20], "99610901e": 4, "99620661e": 39, "99627408e": 39, "9983657": 9, "999": 49, "999999999999993": [8, 23, 29], "A": [2, 3, 4, 5, 11, 12, 14, 29, 40, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 167, 168, 170, 172, 176, 177, 178, 179, 180], "And": [18, 19, 30, 111, 126, 176], "As": [2, 12, 13, 18, 19, 23], "At": [129, 130, 131], "By": [4, 6, 11, 12, 13, 14, 15, 32, 40, 50, 51, 169, 172, 180], "For": [2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 58, 94, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 135, 140, 164, 168, 172, 175, 176, 177, 178, 180], "IN": 128, "If": [11, 12, 13, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 157, 164, 168, 169], "In": [2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 29, 30, 31, 32, 33, 39, 40, 48, 58, 61, 62, 63, 64, 65, 92, 95, 107, 109, 112, 124, 127, 142, 172, 175, 177, 178], "It": [3, 4, 5, 7, 8, 11, 15, 26, 29, 30, 32, 71, 74, 76, 79, 82, 84, 85, 99, 114, 115, 116, 118, 119, 121, 122, 123, 126, 129, 130, 131, 138, 140, 155, 164, 166, 167, 168, 170, 171, 172, 176, 178, 179, 180, 181], "Its": [14, 15, 123], "No": [2, 14, 15, 159], "Not": [47, 54, 55, 56, 57, 58, 59, 60, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 138, 139], "On": [135, 160, 164], "One": [107, 123, 175], "That": [14, 115], "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 79, 82, 84, 85, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 166, 169, 172, 175, 176, 178, 180, 181], "Then": [2, 12, 13, 14, 31, 32, 39, 40, 123, 139, 157, 176], "There": [111, 168], "These": [14, 15, 168, 180], "To": [5, 7, 8, 10, 12, 18, 19, 20, 23, 26, 29, 30, 32, 36, 40, 94, 123, 127, 131, 132, 175, 176, 180], "With": [48, 61, 62, 63, 64, 65, 112, 115, 116, 121, 122, 124, 126, 135, 138, 164, 176], "_": [115, 168], "_2": 48, "__": [47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 172], "__getitem__": [48, 61, 62, 63, 64, 65, 112, 124], "__init__": [54, 97, 98, 136, 137, 143, 144, 176], "_asset": [145, 146, 147, 148], "_avers": 105, "_coef": [14, 115, 121, 122], "_cost": [12, 114, 115, 118, 119, 121, 122, 126, 131], "_cvx_cach": 115, "_deviat": [129, 130, 131], "_factor": [129, 130, 131], "_fee": [13, 114, 115, 118, 119, 121, 122, 126, 131], "_prev_": [12, 114, 115, 118, 119, 121, 122, 126, 131], "_ratio": [129, 130, 131], "_return": [12, 13, 114, 115, 118, 119, 121, 122, 126, 131, 176], "_risk": 115, "_risk_": [122, 176], "_set_covari": 176, "_test_scor": 107, "_validate_data": 176, "_varianc": [129, 130, 131], "aal": [50, 51], "aaoi": 51, "aaon": 51, "aapl": [4, 7, 8, 11, 12, 13, 19, 43, 51, 52, 164, 180], "ab": [48, 61, 62, 63, 64, 65, 112, 124, 131], "abf": 50, "abl": [4, 6, 14, 15, 33], "about": [3, 4, 5, 6, 26, 29, 42, 45, 115, 116, 121, 122, 126, 138, 173, 176, 180], "abov": [11, 12, 13, 14, 15, 32, 47, 97, 99, 100, 101, 103, 106, 108, 114, 115, 116, 118, 119, 121, 122, 126, 132, 135, 157, 164, 168, 172], "absolut": [4, 6, 7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 29, 30, 32, 36, 40, 55, 57, 59, 60, 64, 65, 79, 82, 115, 116, 121, 122, 126, 129, 130, 131, 132, 138, 164, 176], "abstract": [54, 93, 129], "accept": [74, 76, 82, 84, 85, 115, 122, 126, 128, 129, 130, 131], "access": [5, 26, 127], "accord": [12, 40, 96, 123, 127, 128, 132, 133, 134, 175, 176], "account": [12, 18], "accur": [4, 6, 140], "accuraci": [107, 115, 116, 121, 122, 126], "achiev": [2, 12, 14, 15, 31, 168], "across": [0, 107, 135, 168], "activ": 173, "ad": [47, 107, 108, 109, 110, 122, 126, 132, 133, 134, 140, 164, 172, 175, 177], "add": [9, 11, 12, 13, 31, 33, 36, 39, 40, 114, 115, 116, 118, 119, 121, 122, 126], "add_constraint": [115, 116, 121, 122, 126], "add_object": [115, 116, 121, 122, 126], "add_vlin": [14, 15, 40], "addit": [92, 96, 122, 126, 127, 128, 132, 133, 134, 164, 166, 168, 175, 178], "addition": 172, "adher": [49, 50, 51, 52, 53, 169], "adjust": [49, 50, 51, 52, 53, 131, 169], "advanc": [7, 8, 11, 45, 94, 115, 116, 121, 122, 126], "advantag": [14, 15, 172], "advis": [26, 173], "af": [12, 13, 114, 115, 118, 119, 121, 122, 126, 131], "affect": [29, 30, 32, 100, 108, 109], "after": [48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 94, 95, 112, 123, 124, 169, 172], "again": [107, 127], "against": [5, 111, 132, 140, 180], "aggreg": [135, 168], "aht": 50, "ai": 164, "al": 106, "alejandro": 168, "algorithm": [29, 30, 32, 47, 48, 97, 99, 100, 101, 103, 106, 108, 109, 118, 119, 123, 132, 134, 140, 145, 146, 157, 176], "alia": [107, 108, 109, 110], "align": [122, 126, 155, 176], "all": [0, 5, 8, 11, 12, 14, 15, 26, 29, 32, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 164, 165, 168, 169, 172, 175, 176, 178], "allevi": 164, "alloc": [4, 12, 14, 15, 26, 29, 30, 31, 111, 116, 118, 119, 126, 164, 168], "allow": [11, 36, 100, 107, 108, 109, 110, 114, 118, 119, 127, 172, 176], "almost": [107, 108, 109, 110], "along": 14, "alpha": [48, 61, 62, 63, 64, 65, 101, 102, 107, 111, 112, 124, 164, 172], "alpha_": [107, 111], "alphabet": [48, 61, 62, 63, 64, 65, 112, 124], "alreadi": [30, 127, 169], "also": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 29, 30, 31, 32, 40, 48, 61, 62, 63, 64, 65, 112, 115, 116, 121, 122, 123, 124, 126, 127, 132, 134, 135, 140, 164, 168, 175, 176, 178, 180], "alter": 106, "altern": [10, 169], "alwai": [95, 157, 172], "amd": [7, 8, 43, 52], "among": [14, 15, 115, 122, 123, 126, 127, 176], "amount": 13, "amplitud": 106, "an": [4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 18, 19, 23, 26, 29, 30, 31, 32, 33, 36, 39, 48, 50, 51, 61, 62, 63, 64, 65, 70, 73, 94, 96, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 148, 149, 151, 152, 153, 162, 171, 175, 176, 178, 181], "analysi": [12, 13, 15, 39, 40, 108, 111, 157, 177, 178], "analyst": [138, 176, 180], "analyst_view": [4, 180], "analyz": [10, 14, 15, 18, 19, 23, 29, 30, 31, 32, 36], "angular": [55, 57, 59, 60], "ani": [32, 47, 48, 61, 62, 63, 64, 65, 112, 114, 115, 116, 118, 119, 121, 122, 124, 126, 127, 128, 164, 167, 170, 171, 172, 176, 178, 179, 180, 181], "ann": 33, "annual": [4, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 63, 64, 65, 129, 130, 131, 168], "annualized_factor": [39, 129, 130, 131], "annualized_mean": [9, 10, 14, 15, 43, 63, 129, 130, 131, 177], "annualized_semi_devi": [65, 129, 130, 131], "annualized_semi_vari": [65, 129, 130, 131], "annualized_sharpe_ratio": [7, 9, 10, 14, 15, 31, 33, 36, 39, 40, 64, 129, 130, 131, 164, 175, 176, 178, 179], "annualized_sortino_ratio": [9, 10, 14, 15, 31, 64, 129, 130, 131], "annualized_standard_devi": [14, 65, 129, 130, 131], "annualized_vari": [9, 10, 18, 43, 65, 129, 130, 131, 177], "annum": 13, "anoth": [13, 14, 50, 51, 114, 115, 118, 119, 121, 122, 126, 131, 168, 172, 178, 180], "anthoni": [71, 131], "anto": 50, "anymor": 12, "api": [5, 8, 33, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 138, 139, 164, 167, 169, 170, 171, 172, 176, 179, 180, 181], "append": [12, 29, 30, 32, 128, 130, 177], "appl": [4, 11, 12, 13, 19], "appli": [11, 12, 13, 55, 57, 59, 60, 114, 115, 116, 118, 119, 121, 122, 123, 126, 128, 131, 142, 155, 159, 168, 172], "applic": [47, 49, 50, 51, 52, 53, 100, 118, 155, 169, 172], "appreci": 164, "approach": [13, 14, 15, 114, 115, 118, 119, 121, 122, 126, 132, 138, 164, 172, 176, 180], "appropri": [30, 49, 50, 51, 52, 53, 132, 133, 134, 169], "approxim": [31, 33, 36, 39, 109, 164, 168], "ar": [0, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 29, 30, 31, 32, 33, 36, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 157, 164, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180], "arg": [48, 54, 61, 62, 63, 64, 65, 97, 98, 112, 124, 136, 137, 143, 144], "argsort": [14, 15], "argument": [47, 48, 54, 61, 62, 63, 64, 65, 92, 97, 98, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 136, 137, 143, 144, 172], "aris": [15, 115, 122, 176, 181], "arma": [94, 175], "around": [14, 107], "arrai": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 39, 47, 54, 55, 56, 57, 58, 59, 60, 92, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 145, 146, 147, 148, 160, 161, 167, 170, 171, 176, 178, 179, 180, 181], "articl": 109, "asarrai": [7, 8, 14, 15, 92, 175, 178], "ascend": 128, "ascii": [48, 61, 62, 63, 64, 65, 112, 124], "assembl": 40, "asset": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 38, 40, 41, 43, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 145, 146, 147, 148, 164, 165, 167, 168, 169, 170, 171, 176, 178, 179, 180, 181], "asset_i": 138, "asset_j": 138, "asset_nam": 19, "assets_covari": 131, "assets_expected_return": 131, "assign": [11, 48, 94, 114, 115, 116, 118, 119, 121, 122, 126, 134], "associ": [73, 99, 107, 108, 109, 110], "assum": [4, 6, 10, 12, 13, 48, 61, 62, 63, 64, 65, 107, 108, 109, 110, 112, 124, 127], "assume_cent": [107, 108, 109, 110], "assumpt": [148, 168], "astyp": [14, 15], "attent": 164, "attilio": [111, 135, 139], "attribut": [47, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 167, 170, 171, 176, 180, 181], "author": 164, "auto": [32, 176], "auto_exampl": [16, 21, 24, 27, 34, 37, 41, 44, 46], "auto_examples_jupyt": 45, "auto_examples_python": 45, "automat": [145, 146, 169], "auxiliari": [126, 176], "avail": [50, 51, 107, 108, 109, 110, 115, 116, 121, 122, 126, 167, 169, 170, 171, 174, 176, 178, 179, 181], "averag": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 39, 40, 48, 64, 65, 66, 103, 122, 126, 129, 130, 131, 132, 135, 164, 176], "average_drawdown": [65, 114, 115, 118, 119, 122, 126, 129, 130, 131], "average_drawdown_ratio": [64, 129, 130, 131], "avers": [12, 13, 72, 73, 105, 116, 122, 129, 130, 131, 176], "avg": [14, 15, 36, 40], "avoid": [7, 8, 32, 36, 94, 96, 115, 123, 127, 132, 175, 176], "axi": [29, 30, 32, 128, 129, 130, 131], "b": [11, 12, 106, 115, 116, 121, 122, 126, 134, 138, 176, 178], "bac": [7, 8, 43, 52], "back": 157, "ball": [26, 116, 176], "bank": [71, 131], "bar": 111, "barrier": [126, 176], "base": [28, 29, 36, 40, 45, 47, 54, 61, 93, 94, 97, 98, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 134, 136, 137, 143, 144, 147, 148, 155, 161, 164], "basecombinatorialcv": [123, 127], "basecovari": [55, 99, 100, 105, 111, 139, 176], "basecovarianceuncertaintyset": [115, 122], "basecrossvalid": [123, 127], "basedist": [114, 118, 119, 123], "baseestim": [123, 141], "baseloadingmatrix": [5, 140], "basemu": 139, "basemuuncertaintyset": [115, 122], "baseoptim": [96, 123, 127], "baseportfolio": [128, 130, 131, 178], "baseprior": [114, 115, 116, 118, 119, 120, 121, 122, 126, 138, 140, 145, 146, 147, 148], "basic": 20, "bay": [111, 112], "bayes_stein": [111, 112], "bayesian": [138, 164, 180], "bby": [43, 164, 180], "becaus": [4, 6, 12, 18, 30, 109, 134, 168, 175], "becom": [12, 123, 127, 178], "been": [29, 30, 48, 61, 62, 63, 64, 65, 106, 112, 124, 127, 132, 133, 134, 155, 164], "befor": [39, 40, 45, 48, 61, 62, 63, 64, 65, 94, 95, 107, 108, 109, 110, 112, 124, 128, 134, 178], "begin": [48, 61, 62, 63, 64, 65, 112, 122, 124, 126, 155, 176], "behav": 168, "behind": 164, "being": [94, 109, 172], "belief": [3, 4, 5, 29, 176, 180], "bellow": 29, "belong": [9, 10, 177], "below": [4, 9, 11, 12, 13, 14, 15, 29, 30, 32, 33, 36, 47, 74, 76, 85, 106, 107, 114, 115, 116, 118, 119, 121, 122, 126, 129, 130, 131, 132, 134, 164, 168, 172, 176], "bench": [3, 18, 19, 20, 23, 26, 29, 30, 32], "benchmark": [7, 8, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 40, 120, 121, 122, 123, 127, 176], "benefit": 172, "best": [38, 41, 45, 107, 133, 164, 165, 172], "best_estimator_": [14, 15, 31, 33, 36, 40, 164, 172], "best_model": [14, 15, 164, 172], "best_model_r": 15, "best_model_rd": 14, "best_params_": [14, 15, 40], "beta": [5, 67, 68, 69, 70, 72, 73, 89, 111, 129, 130, 131, 140, 145, 146, 147, 148, 180], "beta_": 111, "better": [14, 15, 29, 30, 31, 32, 115, 116, 118, 119, 121, 122, 126, 129, 130, 131, 176], "between": [2, 12, 14, 15, 29, 30, 32, 43, 47, 48, 58, 61, 62, 63, 64, 65, 79, 107, 108, 109, 110, 112, 119, 121, 122, 124, 129, 130, 131, 135, 138, 155, 172, 176], "bia": [13, 111, 114, 115, 118, 119, 121, 122, 126, 131], "bibtex": 164, "big": 11, "biggl": [135, 168], "biggr": [135, 168], "bigl": 155, "bigr": 155, "bin": [58, 128, 150, 160, 161], "binary_train_test_set": 94, "binder": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "binom": 47, "bisect": [29, 30, 118, 119, 176], "bi\u0144kowski": [118, 119], "black": [1, 16, 45, 138, 165, 176], "blacklitterman": [4, 6, 164, 176, 180], "block": [108, 145, 146], "block_siz": [108, 145, 146], "blue": [29, 30, 32, 47], "bodnar": [111, 112], "bodnar_okhrin": [111, 112], "bond": [115, 116, 121, 122, 126, 138, 164, 168], "bool": [47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 157, 159], "boolean": [132, 133, 134], "bootstrap": [145, 146, 164], "bootstrapcovarianceuncertaintyset": 181, "bootstrapmuuncertaintyset": [15, 164, 176, 181], "both": [2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 31, 33, 36, 39, 94, 109, 128, 131, 149, 157, 168, 176, 177, 181], "bound": [9, 14, 70, 73, 114, 115, 116, 118, 119, 121, 122, 126, 129, 130, 131], "boundari": [48, 61, 62, 63, 64, 65, 112, 124], "brace": [48, 61, 62, 63, 64, 65, 112, 124], "break": [48, 61, 62, 63, 64, 65, 112, 124, 173], "bring": 26, "browser": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "bsd": 164, "budget": [21, 115, 116, 121, 122, 126, 164, 165, 172], "bui": 12, "build": [3, 4, 5, 6, 19, 55, 57, 59, 60, 119, 123, 164, 173, 177, 181], "built": 164, "bunch": 127, "busi": [12, 14, 15, 31, 33, 36, 40, 168], "c": [109, 126, 155, 176, 178], "c_": [12, 48, 114, 115, 118, 119, 121, 122, 126, 131, 155], "c_t": 48, "cach": [50, 51, 115, 169, 178], "calcul": [47, 48, 107], "call": [7, 8, 14, 29, 30, 32, 48, 58, 61, 62, 63, 64, 65, 96, 112, 115, 122, 123, 124, 135, 172, 177, 178], "callabl": [92, 115, 116, 121, 122, 126], "calmar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 129, 130, 131], "calmar_ratio": [36, 64, 129, 130, 131, 164], "cambridg": [119, 123], "can": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 48, 54, 58, 61, 62, 63, 64, 65, 70, 73, 79, 92, 94, 96, 97, 98, 99, 100, 101, 103, 106, 107, 108, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 138, 140, 141, 143, 144, 149, 157, 159, 164, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181], "candid": 172, "cannot": [12, 79, 129, 130, 131, 168], "cap": [11, 105], "capit": [11, 48, 61, 62, 63, 64, 65, 112, 124], "captur": 56, "cardin": [14, 48, 115, 121, 122, 155], "carlo": [164, 168], "case": [11, 15, 26, 48, 61, 62, 63, 64, 65, 92, 96, 112, 115, 116, 121, 122, 124, 126, 142, 155, 168, 178, 181], "casefold": [48, 61, 62, 63, 64, 65, 112, 124], "caseless": [48, 61, 62, 63, 64, 65, 112, 124], "cd": 107, "cdar": [1, 7, 8, 9, 14, 15, 16, 18, 19, 20, 23, 28, 29, 34, 36, 40, 45, 65, 70, 114, 115, 118, 119, 122, 126, 129, 130, 131, 164, 165, 176, 178], "cdar_beta": [115, 122, 126, 129, 130, 131], "cdar_ratio": [36, 64, 129, 130, 131, 176], "cdot": [11, 12, 13, 105, 114, 115, 116, 118, 119, 121, 122, 126, 131, 178], "center": [26, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 107, 108, 109, 110, 112, 116, 124, 169, 176], "central": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 75, 87, 129, 130, 131, 164], "centroid": 48, "certain": [106, 176], "chain": [29, 30, 32], "challeng": 107, "chanc": 33, "chang": [5, 7, 8, 12, 13, 14, 29, 30, 32, 40, 107, 108, 109, 110, 168, 173], "char": [48, 61, 62, 63, 64, 65, 112, 124], "charact": [48, 61, 62, 63, 64, 65, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "characterist": 168, "check": [7, 8, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 157, 159, 176], "check_observations_ord": 130, "chen": 109, "chernoff": [70, 73, 129, 130, 131], "chi": [145, 146, 147, 148], "choic": [29, 30, 32, 107, 111, 168, 172], "choleski": [3, 4, 5, 97, 99, 100, 101, 103, 106, 108, 115, 116, 120, 121, 122, 126, 138, 142, 157, 159, 176, 180], "choos": [31, 33, 36, 39, 115, 116, 121, 122, 126], "chose": 19, "chosen": [29, 31, 33, 36, 40, 55, 123, 127, 172, 176], "chronolog": 130, "circ": 168, "circular": [145, 146, 164], "clarabel": [26, 115, 116, 121, 122, 126], "class": [7, 8, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 172, 176, 177, 178, 181], "classifi": 99, "classmethod": [48, 61, 62, 63, 64, 65, 112, 124], "claus": 164, "clear": [14, 128, 129, 130, 131], "clearli": 14, "clip": [97, 99, 100, 101, 103, 106, 108, 140, 157], "clone": [2, 14, 15], "close": [29, 49, 50, 51, 52, 53, 107, 147, 168, 169], "closer": 26, "cluster": [29, 30, 31, 33, 34, 100, 114, 118, 119, 123, 127, 155, 165], "clustering_estim": [32, 33, 123, 176], "clustering_estimator_": [32, 123], "clustering_estimator__linkage_method": 33, "co": 106, "code": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 48, 61, 62, 63, 64, 65, 112, 124, 164], "codec": [48, 61, 62, 63, 64, 65, 112, 124], "codepend": [54, 55, 56, 57, 58, 59, 60, 114, 118, 119, 123, 170, 176], "codependence_": [54, 55, 56, 57, 58, 59, 60, 170], "coef": 14, "coeffici": [14, 108, 109, 110, 115, 121, 122], "coher": [47, 70, 73, 129, 130, 131, 164, 178], "collect": [96, 123, 127, 175, 176], "color": [14, 15, 29, 30, 32, 40, 47, 128], "color_scal": [9, 10, 14, 15, 128], "column": [7, 8, 11, 12, 13, 19, 96, 107, 114, 115, 116, 118, 119, 121, 122, 126, 131, 132, 133, 134, 138, 178], "column_indic": 96, "com": [7, 8, 164], "combin": [31, 33, 36, 39, 94, 108, 109, 110, 127, 138, 172, 175], "combinatori": [28, 34, 45, 93, 94, 96, 165, 176], "combinatorialcv": [123, 127], "combinatorialpurgecv": 175, "combinatorialpurgedcv": [31, 33, 36, 39, 96, 123, 127, 164, 175, 176], "come": [49, 50, 51, 52, 53, 107, 169], "common": [5, 6, 29, 49, 135, 138, 139, 140, 168, 176, 180], "commonli": 176, "commut": [147, 154], "comp_cov": [107, 108, 109, 110], "compar": [2, 7, 8, 10, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 48, 61, 62, 63, 64, 65, 94, 95, 107, 108, 109, 110, 112, 121, 122, 124, 130, 134, 138, 142, 175, 176, 178], "comparison": [2, 3, 4, 5, 6, 31, 48, 61, 62, 63, 64, 65, 112, 124], "compat": [5, 7, 8, 95, 164, 175, 178, 179, 180], "complement": 166, "complet": [31, 48], "complex": [128, 176], "compon": [5, 47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 168, 180], "compos": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 49, 50, 51, 52, 53, 114, 115, 118, 119, 121, 122, 126, 128, 130, 131, 164, 169, 178], "composit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 31, 33, 36, 39, 40, 43, 50, 51, 52, 128, 129, 130, 131, 169, 177, 178], "compound": [77, 78, 128, 129, 130, 131, 135, 139, 168, 177], "comput": [4, 14, 15, 29, 30, 32, 47, 48, 55, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 114, 115, 118, 119, 120, 121, 122, 123, 126, 129, 130, 131, 134, 138, 145, 146, 147, 148, 154, 155, 157, 159, 160, 161, 168, 172, 176, 178, 180], "concaten": [9, 48, 61, 62, 63, 64, 65, 112, 124], "concentr": [30, 71, 131, 164], "concept": [7, 8, 70, 73, 129, 130, 131], "concern": [17, 22, 25, 28, 35, 45, 173], "conclud": 30, "condens": 47, "condensed_distance_": 47, "condit": [2, 8, 10, 64, 65, 67, 68, 79, 99, 107, 108, 115, 116, 122, 126, 129, 130, 131, 164, 176], "confid": [15, 67, 68, 69, 70, 72, 73, 89, 115, 116, 122, 126, 129, 130, 131, 138, 145, 146, 147, 148, 149], "confidence_level": [15, 145, 146, 147, 148, 176, 181], "configur": [132, 133, 134], "confirm": 30, "conjunct": 96, "consecut": 172, "consid": [14, 15, 31, 48, 61, 62, 63, 64, 65, 112, 124, 131, 134, 147, 172], "consider": 164, "consist": [5, 8, 36, 47, 48, 54, 55, 56, 57, 58, 59, 60, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 138, 139, 172, 175, 176, 180], "constant": [99, 111], "constrain": [14, 15, 176], "constraint": [1, 2, 9, 10, 14, 15, 16, 26, 45, 115, 116, 121, 122, 126, 165, 176], "construct": [26, 106, 116, 172, 176], "constructor": [127, 172], "consumpt": 96, "contain": [2, 3, 4, 5, 7, 8, 29, 30, 32, 47, 48, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 172, 176, 177, 178, 180], "context": [96, 107, 123, 127, 141], "conting": 58, "continu": [14, 15, 36, 135, 168, 172], "contribut": [28, 34, 36, 45, 47, 118, 126, 131, 134, 164, 165, 178], "contributor": 164, "control": [11, 26, 95, 96, 107, 121, 122, 138, 178], "convent": [47, 54, 55, 56, 57, 58, 59, 60, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 138, 139], "converg": [26, 107, 115, 142], "convers": 168, "convert": [4, 6, 12, 13, 48, 61, 62, 63, 64, 65, 92, 112, 124, 138, 139, 156, 157, 158, 168], "convex": [26, 62, 108, 109, 110, 115, 116, 126, 131, 164, 176, 178], "cookbook": 168, "coordin": 107, "cophenet": [29, 30, 32, 47], "copi": [48, 61, 62, 63, 64, 65, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "core": 172, "corr": [55, 57, 59, 60, 132, 156, 158], "correct": [145, 146], "correl": [12, 18, 29, 30, 32, 38, 41, 45, 55, 56, 57, 59, 60, 94, 106, 118, 119, 132, 134, 156, 157, 158, 164, 165, 175], "correspond": [10, 47, 76, 96, 100, 107, 123, 127, 128, 129, 130, 131, 132, 133, 134, 175, 178], "cost": [1, 16, 45, 114, 115, 116, 118, 119, 121, 122, 126, 131, 165, 176, 178], "coul": 2, "could": 168, "count": [48, 61, 62, 63, 64, 65, 106, 112, 124, 128], "coupl": 6, "cov": [108, 109, 110, 147, 156, 157, 158, 168, 176], "cov_nearest": [97, 99, 100, 101, 103, 106, 108, 140], "covari": [3, 4, 5, 17, 21, 40, 45, 55, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 126, 131, 138, 139, 140, 142, 143, 145, 146, 147, 148, 149, 156, 157, 158, 165, 168, 176, 180, 181], "covariance_": [97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 167], "covariance_estim": [3, 5, 20, 36, 40, 55, 99, 100, 105, 111, 139, 164, 176, 180], "covariance_estimator_": [55, 99, 100, 105, 111, 139], "covariance_uncertainty_set_estim": [115, 122, 181], "covariance_uncertainty_set_estimator_": [115, 122], "covariancedist": [170, 176], "cp": [115, 116, 121, 122, 126], "cpu": 96, "creat": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 96, 169, 177, 180], "criterion": 131, "cross": [14, 32, 40, 93, 94, 95, 96, 107, 123, 127, 172, 176], "cross_val_predict": [12, 13, 14, 15, 31, 33, 36, 39, 40, 127, 164, 175, 178], "cross_val_scor": 92, "crsp": [49, 50, 51, 52, 53, 169], "crucial": 12, "ct": [129, 130, 131], "cumul": [7, 8, 12, 13, 18, 19, 20, 26, 31, 33, 36, 39, 40, 77, 78, 128, 129, 130, 131, 145, 146, 147, 148], "cumulative_return": [129, 130, 131, 178], "cumulative_returns_df": [129, 130, 131, 178], "current": [107, 108, 109, 110, 129, 130, 131, 134, 172], "custom": [40, 92, 115, 116, 121, 122, 126, 168, 172], "custom_scor": 172, "cv": [12, 13, 14, 15, 28, 31, 34, 36, 39, 40, 45, 94, 95, 96, 107, 123, 127, 164, 165, 172, 175, 176], "cv_result": [14, 15, 40], "cv_results_": [14, 15, 40, 107, 172], "cvar": [1, 2, 7, 9, 14, 15, 16, 17, 18, 20, 21, 23, 27, 28, 30, 31, 32, 33, 34, 36, 40, 65, 73, 114, 115, 116, 118, 119, 122, 123, 126, 129, 130, 131, 165, 172, 178], "cvar_beta": [15, 115, 116, 122, 126, 129, 130, 131], "cvar_ratio": [2, 15, 31, 33, 64, 129, 130, 131], "cvpxy": [115, 116, 121, 122, 126], "cvx": [43, 115, 164, 180], "cvxpy": [115, 116, 121, 122, 126, 164], "d": [47, 48, 58, 106, 148, 155], "d_": 155, "dai": [12, 13, 14, 15, 31, 33, 36, 39, 40, 168], "daili": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 49, 50, 51, 52, 53, 114, 115, 118, 119, 121, 122, 126, 131, 138, 168, 169], "dar": [69, 70, 129, 130, 131], "dash": [14, 15, 40], "data": [43, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 94, 95, 96, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 116, 123, 124, 127, 132, 133, 134, 135, 139, 140, 161, 164, 169, 172, 173, 175, 176, 178, 180], "data_hom": [50, 51], "dataclass": [3, 4, 5, 142, 149, 180], "datafram": [11, 12, 13, 49, 50, 51, 52, 53, 114, 115, 116, 118, 119, 121, 122, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 167, 170, 171, 176, 178, 179, 180, 181], "dataset": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 94, 96, 97, 99, 100, 101, 103, 106, 108, 157, 166, 167, 170, 171, 172, 175, 176, 177, 179, 180, 181], "date": [7, 8, 43, 49, 50, 51, 53, 178], "datetim": 178, "ddof": [103, 176], "de": [29, 32, 55, 57, 59, 60, 94, 99, 100, 119, 123, 176], "decad": [118, 119], "decim": [48, 61, 62, 63, 64, 65, 112, 124], "declar": 107, "decomposit": [5, 97, 99, 100, 101, 103, 106, 108, 115, 116, 120, 121, 122, 126, 138, 140, 142, 157, 159, 176, 180], "deconstruct": 106, "decreas": [40, 172], "dedic": 172, "deep": [47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 164, 172], "def": [48, 61, 62, 63, 64, 65, 112, 124, 172, 176], "default": [3, 4, 5, 7, 8, 11, 12, 13, 14, 26, 29, 30, 32, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 82, 84, 85, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 157, 162, 168, 169, 172, 176, 178, 180], "defin": [2, 11, 12, 47, 55, 56, 57, 58, 59, 60, 71, 72, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 149, 155, 168, 181], "definit": [40, 97, 99, 100, 101, 103, 106, 108, 140, 157, 159], "deform": 10, "degre": [79, 129, 130, 131, 138, 145, 146, 147, 148], "delai": 96, "delatt": 164, "delet": [48, 61, 62, 63, 64, 65, 112, 124], "delimit": [48, 61, 62, 63, 64, 65, 112, 124], "demand": 96, "demiguel": 164, "demonstr": [36, 40, 168, 176], "dendrogram": [47, 118, 119, 176], "denois": [3, 99, 176, 180], "denoisecovari": [3, 164, 167, 176, 180], "denomin": [106, 109, 134], "denot": [147, 168], "densiti": [155, 160], "depend": [12, 33, 56, 58, 72, 92, 106, 115, 116, 121, 122, 126, 129, 130, 131, 132, 145, 146, 164, 168], "deriv": [120, 168], "descend": 128, "descent": 107, "describ": [108, 138, 172], "descript": [47, 48, 122, 126], "design": [164, 176], "detail": [0, 97, 99, 100, 101, 103, 106, 107, 108, 115, 116, 121, 122, 126, 164, 172], "determin": [33, 96, 107, 111, 123, 127, 130, 155, 168], "determinist": [13, 114, 115, 118, 119, 121, 122, 126], "deton": 100, "detonecovari": [164, 167], "develop": [29, 30, 32, 118, 119, 123, 155, 164, 173, 176], "deviat": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 40, 64, 65, 76, 82, 84, 86, 107, 115, 122, 126, 128, 129, 130, 131, 156, 157, 158, 164, 176], "df": [49, 50, 51, 52, 53], "diaconi": 160, "diag": 168, "diagon": [138, 140, 145, 146, 147, 148], "dict": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 54, 55, 56, 57, 58, 59, 60, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "dictionari": [11, 12, 13, 48, 61, 62, 63, 64, 65, 112, 114, 115, 116, 118, 119, 121, 122, 124, 126, 127, 131, 138, 172], "differ": [2, 7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 33, 36, 39, 40, 43, 47, 64, 65, 79, 83, 109, 118, 121, 122, 126, 128, 129, 130, 131, 155, 164, 168, 176], "differenti": 99, "digit": [48, 61, 62, 63, 64, 65, 112, 124], "dimens": 142, "dimension": [5, 40, 97, 99, 100, 101, 103, 106, 108, 111, 140, 180], "direcli": 13, "direct": [107, 164], "directli": [2, 11, 58, 114, 115, 118, 119, 121, 122, 126, 127, 142, 168, 172, 178], "directori": 169, "dirichlet": [125, 163, 164], "dirk": 131, "discard": [48, 61, 62, 63, 64, 65, 112, 124], "discret": [26, 116, 172, 176], "dispatch": 96, "dispers": 155, "displai": [7, 8, 29, 30, 32, 36, 40, 47, 128, 129, 130, 131], "display_sub_ptf_nam": [31, 33, 36, 40, 128], "dist": [48, 107, 108, 109, 110], "distanc": [31, 33, 47, 48, 107, 108, 109, 110, 114, 118, 119, 123, 151, 155, 164, 166, 176], "distance_": [54, 55, 56, 57, 58, 59, 60, 166, 170], "distance_estim": [29, 30, 31, 32, 33, 47, 114, 118, 119, 123, 166, 176], "distance_estimator_": [114, 118, 119, 123], "distancecorrel": [170, 176], "distinct": [29, 30, 32, 47], "distinguish": [74, 76, 82, 84, 85, 115, 122, 126, 129, 130, 131], "distribut": [3, 4, 5, 14, 15, 26, 29, 49, 50, 51, 52, 53, 79, 107, 108, 109, 110, 116, 125, 128, 129, 130, 131, 145, 146, 147, 148, 155, 162, 163, 164, 168, 169, 172, 176, 180, 181], "distribution": [27, 116, 164, 165], "distributionallyrobustcvar": [25, 26, 45, 176], "diverg": 43, "diversif": [14, 24, 36, 115, 121, 122, 131, 164, 165], "diversifi": [55, 57, 59, 60, 71, 119, 123, 131], "divid": [12, 64, 107, 108, 109, 110, 129, 130, 131], "dividend": [49, 50, 51, 52, 53, 169], "divis": [30, 118, 176], "do": [31, 172], "docstr": 107, "document": [7, 8, 115, 116, 121, 122, 126], "doe": [14, 107, 108, 169, 172], "doesn": [29, 109], "domin": [79, 128, 129, 130, 131, 134, 164, 178], "don": 11, "done": [48, 61, 62, 63, 64, 65, 107, 112, 124, 172], "donnat": [118, 119], "dot": [0, 32, 36, 123, 127, 131, 176, 178], "doubl": 15, "down": [14, 29, 30, 32, 118, 119, 176], "download": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 50, 51, 169], "download_if_miss": [50, 51], "downsid": [65, 74, 76, 82, 84, 85, 115, 122, 126, 129, 130, 131, 176], "drawdown": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 64, 65, 66, 67, 69, 70, 78, 80, 88, 115, 122, 126, 129, 130, 131, 164, 176, 178], "drawdown_at_risk": [62, 114, 118, 119, 129, 130, 131], "drawdown_at_risk_beta": [129, 130, 131], "drawdown_at_risk_ratio": [64, 129, 130, 131], "drawn": [107, 108, 109, 110, 125], "drift": 178, "driven": 116, "drop": [38, 41, 45, 127, 132, 135, 164, 165], "dropcorrel": [39, 179], "dt": 178, "dtype": [29, 31, 33, 36, 39, 47, 107], "dual": 107, "dualiti": 107, "due": [12, 33, 40, 96, 97, 99, 100, 101, 103, 106, 108, 141, 157, 178], "duplic": 115, "durat": 12, "dure": [13, 30, 47, 55, 56, 57, 58, 59, 60, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 121, 122, 123, 126, 127, 132, 133, 134, 138, 139, 140, 176], "dynam": 115, "e": [5, 96, 107, 108, 109, 110, 127, 128, 140, 168, 180], "each": [5, 7, 8, 11, 12, 13, 14, 18, 19, 20, 23, 29, 30, 31, 32, 33, 36, 39, 40, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 172, 175, 176, 178, 180], "earlier": 29, "easi": 168, "eco": [115, 116, 121, 122, 126], "edar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 65, 114, 115, 118, 119, 122, 126, 129, 130, 131, 164, 176], "edar_beta": [115, 122, 126, 129, 130, 131], "edar_ratio": [64, 129, 130, 131], "eff": [71, 131], "effect": [7, 8, 9, 18, 19, 20, 23, 29, 30, 32, 71, 106, 107, 108, 109, 110, 131, 132], "effective_number_asset": 131, "effici": [1, 10, 16, 43, 45, 119, 123, 165, 168, 172, 177], "efficient_frontier_s": [9, 14, 15, 43, 122, 177], "eigenvalu": [97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 157], "eigenvector": [99, 100], "either": [132, 172], "elast": 107, "eldar": 109, "electr": [4, 11, 12, 13, 19], "electron": [119, 123], "element": [99, 100, 115, 116, 119, 121, 122, 123, 126, 127, 128, 132, 133, 134, 145, 146, 147, 148, 168], "ellipsoid": [15, 115, 122, 145, 146, 147, 148, 149, 176, 181], "elsewher": 107, "embargo": [31, 33, 36, 39, 94, 175], "embargo_s": 94, "embed": 15, "empir": [1, 16, 45, 99, 103, 104, 139, 147, 148, 164, 165], "empiricalcovari": [36, 40, 99, 100, 105, 111, 139, 167], "empiricalcovarianceuncertaintyset": [145, 181], "empiricalmu": [139, 171], "empiricalmuuncertaintyset": [15, 181], "empiricalprior": [3, 5, 20, 29, 36, 40, 43, 114, 115, 116, 118, 119, 120, 121, 122, 126, 138, 140, 145, 146, 147, 148, 164, 168, 172, 176, 180], "emploi": [29, 31, 119, 176], "empti": [48, 61, 62, 63, 64, 65, 112, 124, 128, 130], "enable_metadata_rout": [107, 108, 109, 110], "encapsul": [47, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "encod": [48, 61, 62, 63, 64, 65, 112, 124], "end": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 48, 61, 62, 63, 64, 65, 94, 95, 97, 99, 100, 101, 103, 106, 108, 112, 122, 124, 126, 128, 134, 155, 176], "endswith": [48, 61, 62, 63, 64, 65, 112, 124], "enet_tol": 107, "enhanc": [92, 99, 106, 175, 178], "enough": [0, 31, 33, 36, 39, 178], "ensembl": [9, 10, 36, 113, 127, 164, 176], "ensur": [106, 126, 135, 175, 176], "entir": [9, 14, 107], "entri": [48, 164], "entrop": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 64, 65, 70, 72, 73, 115, 122, 126, 129, 130, 131, 164, 176], "entropi": [58, 70, 73, 129, 130, 131], "entropic_risk_measur": [62, 114, 118, 119, 129, 130, 131], "entropic_risk_measure_beta": [129, 130, 131], "entropic_risk_measure_ratio": [64, 129, 130, 131], "entropic_risk_measure_theta": [129, 130, 131], "enum": [48, 61, 62, 63, 64, 65, 112, 124], "enumer": [62, 63, 64, 65, 94, 95, 124, 150], "environ": 169, "eq": 109, "equal": [8, 12, 14, 18, 23, 26, 28, 29, 31, 32, 33, 34, 36, 45, 47, 48, 61, 62, 63, 64, 65, 105, 112, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 128, 164, 165], "equalweight": [2, 8, 14, 23, 26, 29, 30, 31, 32, 33, 36, 125, 176], "equat": 14, "equilibrium": [105, 138, 164, 176], "equilibriummu": [138, 171, 176], "equiti": [115, 116, 121, 122, 126, 138, 164], "equival": [11, 14, 29, 114, 115, 116, 118, 119, 121, 122, 126, 172], "error": [1, 5, 15, 16, 45, 48, 61, 62, 63, 64, 65, 107, 108, 109, 110, 111, 112, 115, 116, 121, 122, 124, 126, 130, 131, 140, 151, 152, 153, 157, 164, 165, 176, 180, 181], "error_norm": [107, 108, 109, 110], "esfahani": [26, 116, 176], "estim": [3, 4, 5, 6, 7, 13, 14, 15, 18, 19, 20, 23, 26, 31, 33, 36, 40, 47, 54, 55, 56, 57, 58, 59, 60, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 160, 164, 168, 175, 179], "estimators_": [36, 127], "et": 106, "etc": [32, 123, 164, 167, 168, 170, 171, 176, 178, 179, 180, 181], "etf": [5, 6, 29, 49], "europ": [115, 116, 121, 122, 126, 138, 164], "european": 138, "evalu": [7, 8, 9, 14, 18, 19, 20, 23, 31, 33, 36, 40, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 172], "evar": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 65, 114, 115, 118, 119, 122, 126, 129, 130, 131, 164, 176], "evar_beta": [115, 122, 126, 129, 130, 131], "evar_ratio": [64, 129, 130, 131], "even": [5, 8, 95, 168, 180], "everi": [7, 8, 11, 12, 13, 175, 176], "evolutionari": 134, "ewcovari": 167, "ewm": 102, "ewmu": [164, 171, 172], "exacerb": 14, "exact": 96, "exactli": [107, 108, 109, 110], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 94, 95, 96, 112, 114, 115, 116, 118, 119, 121, 122, 123, 124, 126, 131, 132, 133, 134, 138, 142, 164, 165, 166, 167, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181], "exce": 106, "except": [8, 128, 129, 130, 131], "excess": [64, 129, 130, 131], "exclud": [12, 94, 95], "execut": [16, 21, 24, 27, 34, 37, 41, 44, 46, 96, 165], "exhibit": [94, 175], "exist": [47, 95, 107, 108, 109, 110, 115, 116, 121, 122, 126, 169], "exp": 168, "expand": [48, 61, 62, 63, 64, 65, 112, 124], "expandtab": [48, 61, 62, 63, 64, 65, 112, 124], "expect": [2, 3, 4, 5, 6, 9, 12, 13, 15, 18, 19, 23, 65, 67, 68, 79, 98, 102, 104, 105, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 126, 129, 130, 131, 138, 139, 140, 142, 146, 148, 149, 168, 176, 180, 181], "expected_returns_from_asset": 131, "expend_train": 95, "explain": [5, 12, 13, 29, 43, 100, 140, 180], "explicit": [54, 97, 98, 107, 136, 137, 143, 144], "exploit": [30, 33, 118, 176], "explor": [43, 107, 172, 176, 177], "explos": 96, "expon": [55, 57, 59, 60, 172], "exponenti": [72, 101, 102, 129, 130, 131, 164], "expos": 123, "express": [12, 13, 48, 61, 62, 63, 64, 65, 96, 112, 114, 115, 116, 118, 119, 121, 122, 124, 126, 131, 138], "extend": [36, 43, 106, 128, 175, 177], "extrariskmeasur": [92, 114, 118, 119, 123, 127, 129, 130, 131], "extrem": [76, 106, 129, 130, 131, 164], "ey": 10, "f": [2, 14, 23, 31, 33, 36, 39, 43, 48, 61, 62, 63, 64, 65, 94, 95, 112, 122, 124, 176, 178], "f_": [13, 114, 115, 118, 119, 121, 122, 126, 131], "face": [107, 164], "fact": 164, "factor": [1, 3, 4, 16, 29, 45, 49, 96, 101, 102, 105, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 135, 140, 141, 142, 145, 146, 147, 148, 165, 176], "factor_pric": [5, 6, 29, 164, 176, 180], "factor_prior_estim": [5, 6, 140, 164, 176, 180], "factor_prior_estimator_": 140, "factor_view": [6, 164, 176], "factori": 92, "factormodel": [5, 6, 29, 164, 176, 180], "fail": [97, 99, 100, 101, 103, 106, 107, 108, 115, 116, 121, 122, 126, 157], "failur": [48, 61, 62, 63, 64, 65, 112, 124], "fall": [15, 176], "fals": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 48, 50, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 95, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 115, 116, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 157, 159, 164, 172, 175, 176, 177, 179], "farthest": 48, "fast": [96, 128, 141], "faster": 157, "fat": [76, 129, 130, 131], "favor": 172, "feasibl": [10, 11], "featur": [58, 94, 101, 107, 108, 109, 110, 132, 133, 134, 138, 139, 140, 164, 175], "feature_names_in_": [47, 55, 56, 57, 58, 59, 60, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 121, 122, 123, 126, 127, 132, 133, 134, 138, 139, 140], "feature_names_out": [132, 133, 134], "februari": 108, "fee": [1, 16, 45, 114, 115, 118, 119, 121, 122, 126, 131, 164, 165, 176, 178], "field": [48, 61, 62, 63, 64, 65, 112, 124], "fig": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47], "figur": [7, 8, 14, 15, 40, 47, 128, 129, 130, 131], "file": [16, 21, 24, 27, 34, 37, 41, 44, 46, 165], "fill": [14, 40, 48, 61, 62, 63, 64, 65, 112, 124], "fillchar": [48, 61, 62, 63, 64, 65, 112, 124], "fillcolor": [14, 40], "filter": [14, 128], "final": [2, 7, 8, 9, 11, 12, 14, 15, 18, 19, 20, 23, 29, 30, 31, 32, 36, 106, 118, 119, 123, 127, 134, 176, 178], "final_estim": [36, 127, 176], "final_estimator_": [36, 127], "financ": [99, 100, 119, 123, 157], "financi": [5, 11, 71, 94, 100, 118, 119, 131, 138, 140, 175, 180], "find": [7, 8, 9, 10, 18, 23, 26, 31, 33, 36, 40, 47, 48, 61, 62, 63, 64, 65, 97, 99, 100, 101, 103, 106, 108, 111, 112, 116, 124, 140, 157, 168, 172, 176, 177], "fine": 164, "finer": 172, "finit": [26, 116, 131, 176], "first": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 29, 36, 39, 40, 43, 48, 61, 62, 63, 64, 65, 74, 95, 100, 107, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 157, 164, 168, 173, 176], "first_front_onli": 128, "first_lower_partial_mo": [65, 114, 115, 118, 119, 122, 126, 129, 130, 131], "first_lower_partial_moment_ratio": [64, 129, 130, 131], "fischer": 138, "fit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 54, 55, 56, 57, 58, 59, 60, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 166, 167, 168, 170, 171, 172, 175, 176, 177, 179, 180, 181], "fit_intercept": [5, 141], "fit_param": [96, 132, 133, 134], "fit_predict": [9, 10, 33, 43, 47, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127], "fit_transform": [132, 133, 134, 179], "fitness_measur": [129, 130, 131, 134, 178], "fitting_period": [12, 13], "fix": [12, 107, 138], "flag": 128, "flat": 47, "flint": 106, "flip": 92, "float": [11, 12, 13, 14, 15, 40, 55, 56, 57, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 145, 146, 147, 148, 149, 157], "fluctuat": 106, "fold": [12, 31, 33, 36, 39, 94, 95, 96, 107, 123, 127, 172, 175, 178], "folder": [50, 51, 169], "follow": [11, 19, 40, 48, 61, 62, 63, 64, 65, 94, 112, 115, 116, 121, 122, 124, 126, 132, 133, 134, 138, 164, 166, 167, 168, 170, 171, 172, 175, 176, 179, 180, 181], "font": 9, "foral": [122, 176], "forc": [145, 146, 148], "forecast": 138, "forest": 48, "form": [32, 47, 48, 54, 55, 56, 57, 58, 59, 60, 79, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 166], "format": [48, 61, 62, 63, 64, 65, 112, 124, 128, 129, 130, 131, 132, 133, 134], "format_map": [48, 61, 62, 63, 64, 65, 112, 124], "formul": [109, 115, 178], "formula": [12, 105, 108, 109, 111, 114, 115, 118, 119, 121, 122, 126], "forward": [12, 13, 15, 95, 164], "found": [48, 61, 62, 63, 64, 65, 107, 112, 124], "four": 26, "fourth": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 75, 76, 129, 130, 131, 164], "fourth_central_mo": [62, 114, 118, 119, 129, 130, 131], "fourth_lower_partial_mo": [62, 114, 118, 119, 129, 130, 131], "frac": [15, 48, 58, 71, 115, 122, 124, 131, 135, 147, 148, 155, 168, 176], "framework": [164, 173], "frank": [118, 119], "free": [115, 116, 121, 122, 126, 129, 130, 131, 138], "freedman": [58, 150, 160], "freedom": [145, 146, 147, 148], "frequenc": [138, 168], "frequent": [168, 178], "frobeniu": [107, 108, 109, 110], "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 65, 70, 73, 77, 78, 92, 94, 95, 99, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181], "front": [48, 61, 62, 63, 64, 65, 112, 124, 128, 134, 177], "frontier": [1, 10, 16, 43, 45, 119, 123, 165, 168, 177], "ftse": [14, 15, 31, 36, 39, 40, 50], "full": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 48, 127, 172, 178], "fulli": [11, 115, 116, 121, 122, 179, 180], "function": [12, 14, 15, 26, 40, 72, 92, 96, 107, 115, 116, 121, 122, 124, 126, 128, 129, 130, 131, 145, 146, 147, 148, 164, 168, 172, 176, 177], "fund": 164, "further": [0, 33], "futur": [4, 6, 115, 116, 121, 122, 126, 168], "g": [96, 107, 108, 109, 110, 127, 164], "galleri": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 165], "gamma": 172, "gap": [47, 107, 118, 155], "garp": [135, 139, 168], "gaussian": [107, 108, 109, 110], "gautier": [118, 119, 164], "ge": [4, 11, 12, 13, 19, 43, 122, 126, 155, 176], "ge0": 176, "gener": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 94, 95, 96, 107, 119, 123, 127, 132, 133, 134, 145, 146, 168, 172, 175, 176], "gerber": [5, 106], "gerbercovari": [5, 55, 164, 167], "get": [4, 6, 26, 47, 54, 55, 56, 57, 58, 59, 60, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 168, 180], "get_feature_names_out": [132, 133, 134], "get_measur": [129, 130, 131], "get_metadata_rout": [47, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "get_n_split": 95, "get_param": [47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 164, 172], "get_path_id": [93, 94], "get_precis": [107, 108, 109, 110], "get_summari": 164, "get_support": [132, 133, 134], "get_weight": [131, 178], "getter": [107, 108, 109, 110], "gini": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 65, 79, 83, 122, 126, 129, 130, 131, 164, 176], "gini_mean_differ": [36, 65, 129, 130, 131], "gini_mean_difference_ratio": [64, 114, 115, 118, 119, 122, 126, 129, 130, 131], "github": [164, 169], "give": [0, 7, 8, 96, 107, 168], "given": [40, 48, 61, 62, 63, 64, 65, 69, 72, 89, 107, 108, 109, 110, 112, 123, 124, 127, 128, 129, 130, 131, 133, 138, 148, 156, 168, 172], "gmd": [79, 83, 129, 130, 131], "go": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 168], "goal": 99, "goe": [107, 176], "good": [92, 134], "grand": 111, "graph": [107, 128], "graph_obj": 40, "graph_object": [14, 15], "graphic": 164, "graphicallasso": 107, "graphicallassocv": 167, "greater": [30, 76, 100, 107, 115, 116, 121, 122, 126, 129, 130, 131], "greater_is_bett": 92, "greatli": [29, 30, 32], "green": [14, 15, 40], "grid": [14, 15, 107], "grid_search": [14, 15, 36, 40, 172], "grid_search_herc": 31, "grid_search_hrp": [31, 33], "gridsearch": 33, "gridsearchcv": [14, 15, 31, 33, 36, 40, 92, 164, 172], "group": [94, 95, 96, 115, 116, 121, 122, 126, 129, 130, 131, 138, 164, 176], "groupkfold": 96, "groups_": 138, "guarante": 116, "guid": [0, 7, 8, 47, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 164, 168], "guidelin": 0, "g\u00e1bor": 56, "h": [58, 106, 131], "ha": [8, 12, 14, 18, 19, 23, 29, 30, 31, 32, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 121, 122, 123, 124, 126, 127, 132, 133, 134, 138, 139, 140, 155, 164, 172, 176], "hadamard": 168, "hand": 135, "handl": [12, 26, 48, 61, 62, 63, 64, 65, 112, 113, 116, 124, 176], "hat": [15, 111, 115, 122, 145, 146, 147, 148, 149, 181], "have": [2, 4, 6, 10, 11, 12, 14, 30, 36, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 164, 168, 172], "hd": [29, 30, 32, 43], "head": [7, 8, 43, 49, 50, 51, 52, 53, 169], "heatmap": [29, 30, 32, 47], "heavi": [76, 129, 130, 131], "hee": 48, "height": [29, 30, 32], "help": [5, 140, 180], "herc": [28, 30, 34, 45, 165, 176], "here": [7, 8, 29, 32, 107, 109, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 168, 172, 176], "herfindahl": [71, 131], "hermitian": 159, "hero": 109, "hierarch": [32, 34, 36, 47, 114, 118, 119, 123, 164, 165, 166], "hierarchi": [47, 48, 118, 119], "hierarchical_clustering_estim": [29, 30, 31, 114, 118, 119], "hierarchical_clustering_estimator_": [29, 30, 114, 118, 119], "hierarchical_clustering_estimator__linkage_method": 31, "hierarchicalclust": [29, 30, 31, 32, 33, 114, 118, 119, 123, 166], "hierarchicalequalriskcontribut": [30, 31, 36, 166, 176], "hierarchicalriskpar": [29, 31, 166, 176], "high": [26, 40, 92, 97, 99, 100, 101, 103, 106, 108, 111, 116, 123, 127, 134, 138, 164, 176], "higham": [97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 140, 157], "higham_max_iter": [97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 157], "higher": [2, 12, 13, 14, 31, 71, 76, 95, 129, 130, 131, 133, 164], "highest": [14, 15, 23, 31, 48, 61, 62, 63, 64, 65, 112, 124, 132, 133, 164, 172], "highli": [30, 38, 41, 45, 132, 164, 165, 168], "highlight": 128, "histogram": [160, 161], "histor": [31, 33, 36, 39, 67, 68, 89, 101, 104, 129, 130, 131], "holding_period": [12, 13], "home": 169, "homogen": [0, 4, 6, 12, 114, 115, 118, 119, 121, 122, 126, 131, 178], "horizon": [42, 44, 45, 139, 165, 168], "horizont": [29, 30, 32], "hous": 176, "hover": 128, "hover_measur": [9, 10, 14, 15, 128], "how": [2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 20, 36, 40, 47, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 172, 176], "howev": [12, 13, 14, 29, 33, 40, 97, 99, 100, 101, 103, 106, 108, 114, 115, 118, 119, 121, 122, 126, 168], "hrp": [28, 29, 30, 32, 34, 45, 123, 165, 176], "html": [115, 116, 121, 122, 126], "http": [7, 8, 115, 116, 121, 122, 126, 164], "hugo": 164, "hyper": 164, "hyperparamet": 33, "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 72, 73, 74, 76, 77, 78, 79, 82, 84, 85, 89, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 159, 164, 166, 168, 169, 172, 173, 174, 175, 176, 177, 178, 180, 181], "i_": 147, "id": [93, 94, 129, 130, 131], "idea": 10, "ident": [108, 109, 110, 126, 135, 168], "identifi": [48, 61, 62, 63, 64, 65, 94, 112, 124], "idx": [128, 129, 130, 131], "idzorek": 138, "ieee": 109, "iff": [132, 133, 134], "ignor": [47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 138, 139], "ij": 48, "ill": [99, 168], "ima": 157, "immedi": [94, 96, 175], "impact": [8, 12, 13, 14, 30, 114, 115, 118, 119, 121, 122, 126, 131], "implement": [48, 61, 62, 63, 64, 65, 93, 106, 109, 112, 124, 131, 132, 168, 172, 175, 176, 178], "import": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 49, 50, 51, 52, 53, 94, 95, 166, 167, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181], "impos": [5, 126, 140, 176, 180], "improv": [7, 8, 9, 18, 19, 20, 23, 31, 33, 36, 39, 40, 115, 142, 155, 177, 178], "inaccuraci": [40, 97, 99, 100, 101, 103, 106, 108], "inappropri": 95, "includ": [0, 7, 48, 61, 62, 63, 64, 65, 94, 107, 108, 109, 110, 112, 124, 126, 128, 132, 134, 164, 166, 175, 178], "incom": 138, "incorpor": [2, 6, 11, 12, 13, 14, 15, 20, 94, 100, 138, 175, 176, 180], "incorrect": 168, "increas": [14, 26, 39, 40, 115, 116, 121, 122, 126, 172], "increment": 48, "incur": 12, "independ": [36, 56, 168, 172], "index": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 48, 50, 51, 52, 53, 61, 62, 63, 64, 65, 71, 88, 94, 95, 112, 115, 116, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 164, 176, 178], "index_train_test_": 94, "indexerror": 128, "indic": [29, 30, 32, 71, 94, 95, 96, 107, 129, 130, 131, 132, 133, 134], "indict": 14, "individu": [36, 127, 134, 141, 145, 146, 176], "induc": [12, 13], "industri": 11, "inequ": [70, 73, 115, 116, 121, 122, 126, 129, 130, 131], "inf": [11, 107, 114, 115, 116, 118, 119, 121, 122, 126], "influenc": 172, "inform": [33, 47, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 164, 176], "inherit": [177, 178], "initi": [130, 132, 145, 146, 157, 179], "inner": [32, 123, 127, 176], "inner_estim": [32, 33, 123, 164, 176], "inner_estimator__risk_measur": 33, "inner_estimators_": 123, "input": [4, 6, 11, 12, 13, 36, 47, 48, 61, 62, 63, 64, 65, 96, 107, 112, 114, 115, 116, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 160, 161, 164, 168, 176, 178, 180], "input_featur": [132, 133, 134], "insert": [48, 61, 62, 63, 64, 65, 112, 124, 128, 132, 133, 134], "insid": [107, 108, 109, 110, 123, 168], "inspir": 164, "instabl": [15, 39, 115, 122, 176, 181], "instanc": [47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 172], "instead": [9, 10, 14, 30, 48, 50, 51, 58, 61, 62, 63, 64, 65, 95, 96, 107, 108, 109, 110, 112, 118, 123, 124, 127, 135, 138, 172, 175, 176], "institut": [71, 131], "insuffici": 134, "int": [47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 83, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 145, 146, 155, 157, 160, 161, 162, 163], "int64": [31, 33, 36, 39, 47], "integ": [48, 61, 62, 63, 64, 65, 107, 112, 123, 124, 127, 132, 133, 134], "integr": 175, "intend": [176, 178], "intention": [48, 61, 62, 63, 64, 65, 112, 124], "inter": [32, 123], "intercept": [5, 141], "intercepts_": 141, "interchang": 168, "interest": [115, 116, 121, 122, 126], "interfac": 164, "interpret": [48, 61, 62, 63, 64, 65, 112, 124], "intersect": 128, "intra": [32, 123], "introduc": [6, 26, 29, 30, 32, 33, 36, 39, 40, 56, 164], "invari": 168, "invers": [7, 18, 19, 29, 30, 36, 71, 107, 108, 109, 110, 118, 119, 120, 131, 138, 145, 146, 147, 148, 157, 164, 176], "inverse_transform": [132, 133, 134], "inversevolatil": [7, 18, 19, 36, 176], "invest": [11, 12, 42, 44, 45, 115, 116, 121, 122, 131, 139, 165, 168], "investment_horizon": [43, 139, 168], "investor": [3, 4, 5, 29, 72, 129, 130, 131, 138, 176, 178, 180], "invok": 96, "io": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "ipynb": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "is_log_norm": [43, 139, 168], "isalnum": [48, 61, 62, 63, 64, 65, 112, 124], "isalpha": [48, 61, 62, 63, 64, 65, 112, 124], "isascii": [48, 61, 62, 63, 64, 65, 112, 124], "isdecim": [48, 61, 62, 63, 64, 65, 112, 124], "isdigit": [48, 61, 62, 63, 64, 65, 112, 124], "isidentifi": [48, 61, 62, 63, 64, 65, 112, 124], "iskeyword": [48, 61, 62, 63, 64, 65, 112, 124], "islow": [48, 61, 62, 63, 64, 65, 112, 124], "isnumer": [48, 61, 62, 63, 64, 65, 112, 124], "isprint": [48, 61, 62, 63, 64, 65, 112, 124], "isspac": [48, 61, 62, 63, 64, 65, 112, 124], "issu": 108, "istitl": [48, 61, 62, 63, 64, 65, 112, 124], "isupp": [48, 61, 62, 63, 64, 65, 112, 124], "item": 128, "iter": [48, 61, 62, 63, 64, 65, 95, 96, 97, 99, 100, 101, 103, 106, 107, 108, 112, 123, 124, 127, 128, 140, 157, 172], "its": [11, 12, 13, 14, 15, 40, 48, 58, 61, 62, 63, 64, 65, 73, 107, 108, 109, 110, 112, 114, 115, 116, 118, 119, 120, 121, 122, 124, 126, 129, 130, 131, 132, 133, 134, 138, 149, 155, 156, 167, 168, 170, 171, 176, 178, 180, 181], "itself": [2, 48, 61, 62, 63, 64, 65, 112, 124, 128], "j": [48, 56, 94, 122, 168, 176], "jame": [3, 5, 111, 112, 180], "james_stein": [111, 112], "japan": 164, "javid": 106, "jnj": 43, "job": [96, 107, 123, 127, 141], "joblib": [96, 107, 123, 127, 141], "join": [48, 61, 62, 63, 64, 65, 112, 124, 135], "joint": [58, 168], "jorion": 111, "journal": [55, 57, 59, 60, 106, 108, 118, 119, 123, 138, 145, 146, 147, 148, 157], "jpm": [4, 11, 12, 13, 19, 43, 164], "jpmorgan": [4, 11, 12, 13, 19], "jupyt": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45], "just": 40, "justifi": [48, 61, 62, 63, 64, 65, 112, 124], "k": [40, 94, 96, 107, 133, 135, 145, 147, 149, 154, 155, 168, 172, 175, 181], "k_": 147, "kappa": [15, 115, 122, 145, 146, 147, 148, 149, 181], "kappa_": [15, 115, 122], "keep": [132, 133, 135], "keepend": [48, 61, 62, 63, 64, 65, 112, 124], "kei": [11, 12, 13, 48, 61, 62, 63, 64, 65, 107, 112, 114, 115, 116, 118, 119, 121, 122, 124, 126, 127, 128, 131, 138], "kendal": [29, 30, 32, 57, 60, 106, 164, 176], "kendalldist": [29, 30, 31, 32, 33, 170, 176], "keyword": [48, 54, 61, 62, 63, 64, 65, 97, 98, 112, 124, 127, 136, 137, 143, 144, 172], "kfold": [32, 94, 96, 107, 123, 127, 164, 172, 175, 176], "kmean": [32, 123, 176], "know": 11, "known": [15, 48, 58, 164, 176], "knuth": [58, 150, 161], "ko": [43, 164, 180], "kroneck": 147, "kuhn": [26, 116, 176], "kurtosi": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 114, 118, 119, 129, 130, 131, 164, 168], "kwarg": [47, 48, 54, 61, 62, 63, 64, 65, 92, 97, 98, 112, 124, 128, 136, 137, 143, 144], "l": 50, "l1": [1, 16, 36, 45, 107, 115, 121, 122, 164, 165, 176], "l1_coef": [14, 36, 115, 121, 122, 172], "l2": [1, 16, 45, 115, 121, 122, 160, 165, 176], "l2_coef": [14, 115, 121, 122, 164, 172], "label": [47, 94, 96, 175], "labels_": [47, 123], "lambda": [40, 122, 124, 168, 176], "lar": 107, "larg": [14, 97, 99, 100, 101, 103, 106, 108, 109, 134, 157, 164, 178], "larger": 169, "lasso": [107, 164], "lassocv": [5, 140, 141, 180], "last": [95, 101, 102, 103, 104, 106, 128, 130], "latest": [12, 13], "latter": [47, 54, 55, 56, 57, 58, 59, 60, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "law": [71, 131], "le": [122, 176], "lead": [13, 48, 61, 62, 63, 64, 65, 112, 114, 115, 118, 119, 121, 122, 123, 124, 126, 127, 168, 172, 175], "leaf": [29, 119, 176], "leakag": [7, 8, 32, 36, 94, 123, 127, 164, 173, 175, 176], "learn": [5, 7, 8, 92, 94, 99, 100, 107, 108, 109, 110, 119, 123, 164, 167, 170, 171, 172, 173, 175, 176, 179, 180, 181], "learnt": 172, "least": [48, 61, 62, 63, 64, 65, 94, 112, 124, 129, 130, 131], "ledoit": [108, 164], "ledoitwolf": [36, 167], "left": [48, 61, 62, 63, 64, 65, 97, 99, 100, 101, 103, 106, 107, 108, 112, 115, 116, 121, 122, 124, 126, 145, 146, 147, 148, 149, 157, 164, 168, 178, 181], "left_inequ": [11, 115, 116, 121, 122, 126], "len": [14, 48, 61, 62, 63, 64, 65, 112, 124], "length": [48, 61, 62, 63, 64, 65, 112, 124, 145, 146], "leq": [11, 101, 102, 115, 116, 121, 122, 126, 145, 146, 147, 148, 149, 181], "less": [11, 19, 31, 95, 115, 116, 121, 122, 126, 138, 142, 168], "let": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 132, 177], "level": [15, 54, 67, 68, 69, 70, 72, 73, 89, 96, 97, 98, 115, 116, 122, 123, 126, 127, 128, 129, 130, 131, 136, 137, 143, 144, 145, 146, 147, 148], "leverag": 11, "le\u00f3n": 168, "lib": 164, "librari": 164, "licens": 164, "lightweight": 96, "like": [11, 12, 13, 26, 29, 47, 48, 54, 55, 56, 57, 58, 59, 60, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 134, 138, 139, 140, 141, 145, 146, 147, 148, 164, 167, 168, 170, 171, 175, 176, 179, 180, 181], "likelihood": [107, 108, 109, 110], "limit": [48, 61, 62, 63, 64, 65, 106, 112, 124, 126, 176], "lin": 168, "line": [14, 15, 29, 30, 32, 40, 47, 48, 61, 62, 63, 64, 65, 112, 124], "line_color": [14, 15, 40], "line_dash": [14, 15, 40], "line_width": [14, 15, 40], "linear": [7, 8, 12, 13, 26, 56, 114, 115, 116, 118, 119, 121, 122, 126, 131, 135, 139, 141, 176], "linear_constraint": [11, 115, 116, 121, 122, 126, 164], "linear_model": [5, 180], "linear_regressor": [5, 141], "link": [29, 30, 32], "linkag": [47, 48, 114, 118, 119, 123, 155, 176], "linkage_matrix": 155, "linkage_matrix_": [47, 166], "linkage_method": [29, 30, 31, 32, 47], "linkagemethod": [29, 30, 31, 32, 33, 47], "linspac": 10, "list": [0, 11, 40, 48, 61, 62, 63, 64, 65, 107, 112, 115, 116, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 138, 172, 177, 178], "literatur": 138, "litterman": [1, 16, 45, 138, 165, 176], "ljust": [48, 61, 62, 63, 64, 65, 112, 124], "lly": 43, "ln": [135, 168], "load": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 49, 50, 51, 52, 53, 136, 140, 141, 169, 180], "load_factors_dataset": [5, 6, 29, 164, 169, 176, 180], "load_ftse100_dataset": [14, 15, 31, 36, 39, 40, 169], "load_nasdaq_dataset": 169, "load_sp500_dataset": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 32, 33, 43, 164, 166, 167, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181], "load_sp500_index": [2, 169], "loading_matrix": 5, "loading_matrix_": [5, 141], "loading_matrix_estim": [5, 140, 180], "loading_matrix_estimator_": [5, 140], "loadingmatrixestim": 140, "loadingmatrixregress": [5, 140, 180], "loc": [15, 29], "local": [50, 51, 169], "locat": [94, 107, 108, 109, 110], "location_": [107, 108, 109, 110], "log": [14, 107, 108, 109, 110, 126, 168, 172, 176], "log_return": 135, "log_scal": [128, 129, 130, 131], "logarithm": [128, 129, 130, 131, 135, 139], "logic": [95, 172], "loguniform": [14, 164, 172], "long": [2, 14, 15, 114, 115, 116, 118, 119, 121, 122, 126, 168, 176], "longer": [43, 129, 130, 131], "lookup": [48, 61, 62, 63, 64, 65, 112, 115, 124], "lookuperror": [48, 61, 62, 63, 64, 65, 112, 124], "lopez": [29, 32, 119, 123, 176], "lopsided": [129, 130, 131], "loss": [15, 89, 92, 129, 130, 131], "lost": 33, "loud": 100, "lovett": [71, 131], "low": [49, 92, 134, 138], "lower": [2, 3, 4, 5, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 48, 61, 62, 63, 64, 65, 74, 76, 84, 85, 112, 114, 115, 116, 118, 119, 121, 122, 124, 126, 129, 130, 131, 142, 164, 176, 180], "lowercas": [5, 48, 61, 62, 63, 64, 65, 112, 124, 180], "lowest": [14, 15, 48, 61, 62, 63, 64, 65, 112, 124, 132, 133], "lstrip": [48, 61, 62, 63, 64, 65, 112, 124], "lvert": [15, 115, 122], "l\u00f2pez": [55, 57, 59, 60, 99, 100], "l\u00f3pez": [94, 119, 123], "m": [108, 128, 153, 154, 159], "machin": [94, 99, 100, 119, 123, 164], "mad": [82, 129, 130, 131], "made": 14, "mahalanobi": [107, 108, 109, 110], "mai": [0, 7, 8, 14, 31, 33, 36, 39, 48, 61, 62, 63, 64, 65, 107, 112, 124, 172, 176], "main": 172, "mainli": [48, 61, 62, 63, 64, 65, 112, 124], "maintain": 128, "make": [5, 7, 8, 11, 12, 13, 48, 61, 62, 63, 64, 65, 92, 95, 112, 124, 140, 176, 178, 180], "make_scor": [14, 15, 31, 36, 40, 172], "maketran": [48, 61, 62, 63, 64, 65, 112, 124], "manag": [1, 16, 45, 55, 57, 59, 60, 99, 100, 106, 113, 114, 115, 118, 119, 121, 122, 123, 126, 131, 135, 139, 164, 165, 168, 176, 178], "management_fe": [13, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 131], "mani": 172, "manipul": [129, 130, 131, 177], "manner": [29, 119, 172, 176], "map": [10, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 168], "marco": [29, 32, 94, 119, 123, 176], "margin": 58, "market": [4, 11, 100, 105, 115, 116, 118, 119, 121, 122, 138, 168, 176], "markowitz": [106, 164], "marti": [118, 119, 164], "mar\u010denko": 99, "mask": [132, 133, 134], "match": [115, 116, 121, 122, 126, 132, 133, 134, 138], "math": 48, "mathbb": 168, "mathemat": [145, 146, 147, 148], "matric": [100, 106, 108], "matrix": [3, 4, 5, 11, 29, 30, 32, 40, 47, 48, 54, 55, 56, 57, 58, 59, 60, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 114, 115, 116, 118, 119, 120, 121, 122, 123, 126, 131, 136, 138, 139, 140, 141, 142, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 166, 167, 168, 170, 175, 176, 178, 180, 181], "matur": 168, "max": [3, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 48, 107, 108, 109, 110, 122, 155, 176], "max_": [122, 155, 168, 176], "max_average_drawdown": 122, "max_budget": [11, 115, 116, 121, 122], "max_cdar": [10, 122], "max_clust": 47, "max_cvar": [15, 122], "max_drawdown": [9, 10, 14, 15, 65, 114, 115, 118, 119, 122, 126, 129, 130, 131, 177, 178], "max_edar": 122, "max_evar": 122, "max_first_lower_partial_mo": 122, "max_gini_mean_differ": 122, "max_it": 107, "max_iter": 140, "max_long": [11, 115, 116, 121, 122], "max_max_drawdown": 122, "max_mean_absolute_devi": 122, "max_measur": [10, 128], "max_semi_devi": 122, "max_semi_vari": 122, "max_short": [11, 115, 116, 121, 122], "max_standard_devi": 122, "max_tracking_error": [2, 121, 122], "max_turnov": [121, 122], "max_ulcer_index": 122, "max_vari": [10, 14, 122], "max_weight": [11, 114, 115, 116, 118, 119, 121, 122, 126, 164], "max_worst_r": 122, "maxim": [10, 14, 15, 23, 31, 32, 33, 36, 40, 47, 121, 122, 124, 164, 176], "maximize_ratio": [3, 4, 5, 6, 7, 10, 32, 39, 122, 124, 164, 172, 176, 181], "maximize_return": [10, 14, 15, 122, 124], "maximize_util": [12, 13, 36, 122, 124], "maximum": [1, 3, 4, 5, 6, 10, 11, 12, 13, 16, 24, 36, 39, 40, 47, 48, 61, 62, 63, 64, 65, 69, 80, 89, 97, 99, 100, 101, 103, 106, 107, 108, 112, 114, 115, 116, 118, 119, 121, 122, 124, 126, 128, 129, 130, 131, 140, 157, 165], "maximumdiversif": [22, 23, 36, 45, 176], "maxsiz": 128, "maxsplit": [48, 61, 62, 63, 64, 65, 112, 124], "mb": [16, 21, 24, 27, 34, 37, 41, 44, 46, 165], "mean": [0, 2, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 29, 31, 32, 36, 39, 40, 43, 48, 61, 62, 63, 64, 65, 68, 74, 76, 79, 82, 83, 84, 85, 92, 96, 102, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 138, 141, 142, 145, 146, 147, 148, 164, 165, 168, 172, 178], "mean_absolute_devi": [65, 114, 115, 118, 119, 122, 126, 129, 130, 131], "mean_absolute_deviation_ratio": [64, 129, 130, 131], "mean_risk": 179, "mean_test_scor": [14, 15, 40, 107], "mean_train_scor": [14, 40], "meanrisk": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33, 36, 39, 40, 43, 45, 121, 123, 127, 164, 172, 175, 176, 177, 179, 181], "meantim": 168, "measur": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 30, 31, 32, 33, 36, 39, 40, 56, 58, 92, 106, 115, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 164, 172, 175, 176, 177, 178], "measure_list": [31, 33, 36, 39, 128, 164, 177], "measures_df": [129, 130, 131], "measures_mean": [10, 14, 31, 33, 36, 39, 128], "measures_std": [10, 31, 33, 36, 39, 128], "mechan": [47, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "median": [48, 123, 127], "mega": 11, "mem": [16, 21, 24, 27, 34, 37, 41, 44, 46, 165], "memori": [96, 108], "merg": [6, 31, 39], "meshgrid": 10, "meta": [107, 108, 109, 110, 176], "metadata": [47, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "metadata_rout": [107, 108, 109, 110], "metadatarequest": [47, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "method": [0, 5, 7, 8, 9, 11, 12, 13, 14, 18, 36, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 157, 164, 167, 168, 170, 171, 172, 175, 176, 177, 179, 180, 181], "methodologi": 168, "metric": [14, 15, 29, 30, 31, 32, 36, 40, 58, 116], "meucci": [111, 135, 139, 168], "mf": 13, "michaud": 168, "micropredict": 164, "mid": 173, "miko\u0142aj": [118, 119], "min": [8, 48, 122, 126, 176], "min_": [122, 126, 176], "min_acceptable_return": [74, 76, 82, 84, 85, 115, 122, 126, 129, 130, 131], "min_budget": [11, 115, 116, 121, 122], "min_measur": 128, "min_n_asset": 134, "min_return": [9, 121, 122, 126], "min_weight": [2, 11, 14, 15, 36, 114, 115, 116, 118, 119, 121, 122, 126, 164, 172], "minim": [2, 9, 26, 29, 30, 31, 32, 47, 48, 116, 118, 119, 122, 124, 164, 176], "minimize_risk": [2, 8, 122, 124], "minimum": [1, 2, 9, 10, 11, 16, 29, 32, 40, 45, 47, 74, 76, 82, 84, 85, 114, 115, 116, 118, 119, 121, 122, 123, 126, 128, 129, 130, 131, 134, 165, 176], "minium": [114, 115, 116, 118, 119, 121, 122, 126], "minu": 178, "minut": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "mirror": [14, 172], "misc": 164, "miskolczi": 168, "miss": [107, 135], "mitig": 176, "mix": [11, 13, 114, 115, 116, 118, 119, 121, 122, 126], "mmp": 164, "mmse": 109, "mn": 128, "mode": [14, 15, 40, 107], "model": [1, 14, 15, 16, 45, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 138, 140, 142, 165, 166, 167, 170, 171, 172, 173, 176, 177, 178, 179, 181], "model1": [26, 29, 30, 32, 36, 39, 176], "model2": [26, 29, 30, 32, 36, 39, 176], "model2__prior_estimator__covariance_estim": 36, "model3": [26, 29, 30, 32, 36], "model3__l1_coef": 36, "model4": [26, 29, 32, 36], "model4__risk_measur": 36, "model_bl": 4, "model_bl_factor": 6, "model_empir": [4, 5], "model_factor": 6, "model_factor_1": 5, "model_factor_2": 5, "model_factor_3": 5, "model_herc": 31, "model_hrp": 31, "model_l1": 14, "model_l2": 14, "model_mf": 13, "model_nam": 36, "model_nco": 33, "model_no_track": 2, "model_no_uncertainti": 15, "model_select": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 92, 123, 164, 172, 175, 176, 177, 178, 179], "model_spx": 2, "model_stack": 36, "model_tc": 12, "model_tc2": 12, "model_track": 2, "model_uncertainti": 15, "model_valid": 94, "modern": [106, 164], "modifi": [92, 128], "modul": [0, 48, 61, 62, 63, 64, 65, 112, 124, 150, 166, 172, 175, 176], "mohajerin": 26, "moment": [3, 5, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 64, 65, 74, 75, 76, 84, 85, 86, 87, 90, 114, 115, 118, 119, 122, 126, 129, 130, 131, 139, 164, 167, 168, 171, 172, 176, 180, 181], "momentum": [6, 49], "month": [12, 14, 15, 31, 33, 36, 40], "more": [4, 5, 7, 8, 11, 12, 13, 14, 19, 29, 30, 31, 32, 33, 36, 39, 45, 47, 48, 61, 62, 63, 64, 65, 71, 95, 96, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 112, 115, 116, 118, 119, 121, 122, 123, 124, 126, 131, 132, 140, 164, 172, 176, 178, 180], "mosek": [26, 116, 168, 176], "most": [168, 172], "move": [45, 178], "movement": 106, "mrk": 43, "msft": [43, 164, 180], "mtum": [6, 49, 164, 176, 180], "mu": [3, 4, 5, 12, 13, 15, 102, 104, 105, 108, 109, 110, 111, 114, 115, 116, 118, 119, 121, 122, 124, 126, 142, 144, 146, 148, 149, 168, 171, 176, 180, 181], "mu_": [102, 104, 105, 111, 168, 171], "mu_estim": [3, 5, 138, 139, 164, 172, 176, 180], "mu_estimator_": 139, "mu_target_": 111, "mu_uncertainty_set_estim": [15, 115, 122, 164, 176, 181], "mu_uncertainty_set_estimator_": [115, 122], "mu_uncertainty_set_estimator__confidence_level": 15, "multi": [14, 15, 94, 106, 128, 130, 134, 177], "multi_output_regressor_": 141, "multioutput": 141, "multioutputregressor": 141, "multiperiodportfolio": [0, 12, 13, 14, 15, 31, 33, 36, 39, 40, 96, 128, 164, 175, 177, 178], "multipl": [29, 31, 33, 36, 39, 94, 96, 115, 119, 123, 127, 175, 176, 178], "multipli": [49, 50, 51, 52, 53, 109, 169], "multivari": [26, 108, 116, 168, 176], "must": [11, 12, 13, 48, 61, 62, 63, 64, 65, 92, 93, 94, 95, 105, 112, 114, 115, 116, 118, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 138, 139, 159, 168], "mutli": 130, "mutual": [58, 176], "mutualinform": [170, 176], "mvo": 164, "my_param": 176, "my_portfolio": 178, "mycustomcovari": 176, "n": [2, 12, 13, 14, 31, 33, 36, 46, 48, 61, 62, 63, 64, 65, 105, 112, 114, 115, 118, 119, 121, 122, 124, 126, 128, 131, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 168, 177], "n_": [71, 131], "n_alpha": 107, "n_asset": [12, 13, 39, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 177], "n_bin": [31, 36, 39, 58, 128, 160, 161], "n_bins_method": 58, "n_bootstrap_sampl": [145, 146], "n_clusters_": 47, "n_constraint": [115, 116, 121, 122, 126], "n_factor": [116, 126, 140, 141, 145, 146, 147, 148], "n_featur": [47, 94, 107, 108, 109, 110, 132, 133, 134], "n_features_in_": [47, 55, 56, 57, 58, 59, 60, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 121, 122, 123, 126, 127, 132, 133, 134, 138, 139, 140], "n_features_new": [132, 133, 134], "n_fold": [31, 33, 36, 39, 94, 95, 164], "n_group": [115, 116, 121, 122, 126, 138], "n_init": [32, 176], "n_iter": [14, 15, 172], "n_iter_": 107, "n_job": [5, 12, 13, 14, 15, 31, 32, 33, 36, 39, 40, 96, 107, 123, 127, 141, 164, 172, 176], "n_market": 100, "n_observ": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 145, 146, 147, 148, 160, 161], "n_optim": [115, 116, 117, 120, 121, 122, 125, 126], "n_original_featur": [132, 133, 134], "n_output": [132, 133, 134], "n_refin": 107, "n_sampl": [47, 94, 107, 108, 109, 110, 132, 133, 134], "n_selected_featur": [132, 133, 134], "n_split": [94, 164], "n_target": [95, 96, 120, 121, 122, 123, 127], "n_test_fold": [31, 33, 36, 39, 94, 164], "n_test_path": 94, "n_view": 138, "naiv": [30, 118, 132, 164], "name": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 169, 172, 176, 177, 178], "named_estim": 127, "named_estimators_": 127, "named_step": 39, "nan": 50, "nan_threshold": 135, "nasdaq": 51, "nativ": 169, "natur": [48, 61, 62, 63, 64, 65, 112, 124], "nb": [14, 15, 36, 40], "nbinsmethod": 58, "nco": [32, 34, 123, 165, 176], "ndarrai": [47, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 138, 139, 140, 141, 142, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "ndrrai": 131, "ne": [122, 176], "nearest": [40, 48, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 140, 157], "necessari": [79, 129, 130, 131, 132], "necessarili": 14, "need": [0, 7, 8, 12, 13, 15, 114, 115, 116, 118, 119, 121, 122, 123, 126, 131, 157, 164, 168], "neg": [11, 114, 115, 116, 118, 119, 121, 122, 132, 134], "neglig": [12, 178], "nest": [28, 34, 45, 47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 165, 172], "nestedclustersoptim": [32, 33, 164, 166, 176], "net": [13, 107, 114, 115, 118, 119, 121, 122, 126], "network": [106, 118, 119], "neutral": [11, 115, 116, 121, 122], "never": [48, 61, 62, 63, 64, 65, 112, 124], "new": [29, 32, 48, 61, 62, 63, 64, 65, 107, 112, 124, 128, 177, 179, 180], "new_portfolio": 12, "new_valu": 127, "new_x": 179, "newli": 48, "nick": [97, 99, 100, 101, 103, 106, 108, 140, 157], "nicolini": 164, "nielsen": [118, 119], "nn": 147, "nois": [5, 99, 131, 140, 180], "non": [12, 14, 18, 26, 33, 36, 40, 48, 56, 61, 62, 63, 64, 65, 77, 79, 96, 97, 99, 100, 101, 103, 106, 108, 112, 115, 116, 121, 122, 124, 128, 129, 130, 131, 134, 145, 146, 147, 148, 157, 162, 164, 175, 176], "non_denominated_sort": [128, 177], "none": [11, 12, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 74, 76, 82, 84, 85, 92, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 145, 146, 147, 148, 150, 176], "nonzero_asset": [14, 131], "nonzero_assets_index": 131, "nor": 168, "norm": [14, 107, 108, 109, 110, 115, 121, 122], "normal": [58, 79, 103, 129, 130, 131, 168], "notat": [48, 61, 62, 63, 64, 65, 112, 124, 147], "note": [2, 5, 11, 12, 13, 14, 15, 40, 48, 54, 61, 62, 63, 64, 65, 92, 97, 98, 103, 107, 108, 109, 110, 112, 115, 116, 121, 122, 123, 124, 126, 127, 136, 137, 143, 144, 168, 178, 180], "notebook": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45], "notic": [12, 13, 29, 30], "notimplementederror": 107, "notion": [12, 168], "now": [2, 10, 12, 14, 15, 36, 40], "np": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 47, 92, 94, 95, 108, 109, 110, 114, 115, 116, 118, 119, 121, 122, 126, 175, 176, 178], "nugget": 168, "null": 155, "num": 10, "number": [5, 7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 31, 33, 36, 39, 40, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 83, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 145, 146, 150, 155, 157, 162, 163, 164, 172, 176, 180], "numer": [48, 61, 62, 63, 64, 65, 107, 109, 112, 115, 116, 121, 122, 124, 126, 157, 164], "numpi": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 92, 94, 95, 167, 170, 171, 175, 176, 178, 179, 180, 181], "nutshel": [71, 131], "o": [108, 109, 128], "oa": 167, "object": [0, 7, 8, 14, 18, 26, 29, 31, 33, 36, 39, 40, 47, 54, 55, 56, 57, 58, 59, 60, 92, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 164, 175, 176], "objective_funct": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 32, 36, 39, 122, 164, 172, 176, 181], "objectivefunct": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 32, 36, 39, 122, 164, 172, 176, 181], "observ": [31, 33, 36, 39, 47, 49, 50, 51, 52, 53, 67, 68, 69, 83, 89, 94, 95, 101, 102, 103, 104, 106, 107, 108, 109, 110, 128, 129, 130, 131, 135, 138, 175, 178], "obtain": [31, 33, 36, 39, 70, 73, 129, 130, 131, 139, 142], "occur": [40, 97, 99, 100, 101, 103, 106, 108], "occurr": [48, 61, 62, 63, 64, 65, 112, 124, 128], "offer": 164, "often": [40, 94, 97, 99, 100, 101, 103, 106, 108, 175], "okhrin": [111, 112], "old": [48, 61, 62, 63, 64, 65, 112, 124], "omega": 138, "omit": [7, 8, 109], "onc": [107, 128], "one": [5, 11, 12, 13, 29, 30, 31, 32, 33, 36, 39, 43, 47, 48, 61, 62, 63, 64, 65, 94, 95, 96, 112, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 141, 142, 162, 163, 168, 172, 175, 176, 180], "ones": [12, 14, 15, 48, 61, 62, 63, 64, 65, 112, 124], "onli": [7, 8, 11, 12, 13, 14, 26, 29, 31, 33, 36, 39, 43, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 138, 139, 140, 168, 176, 178, 179], "open": [26, 164], "oper": [48, 61, 62, 63, 64, 65, 109, 112, 124, 132, 133, 134, 145, 146, 147, 148], "oppos": [30, 139], "optim": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 30, 31, 33, 34, 37, 39, 40, 43, 62, 96, 106, 107, 108, 111, 131, 134, 135, 140, 142, 145, 146, 147, 148, 155, 160, 161, 165, 166, 173, 175, 177, 178, 179, 180, 181], "optimization__risk_measur": 172, "optimum": 107, "option": [3, 4, 5, 47, 48, 50, 51, 55, 58, 61, 62, 63, 64, 65, 74, 76, 82, 84, 85, 92, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 145, 146, 147, 148, 168, 180], "oracl": [109, 164], "order": [12, 13, 29, 47, 114, 115, 118, 119, 121, 122, 126, 128, 130, 132, 155], "ordin": [48, 61, 62, 63, 64, 65, 112, 124], "org": [115, 116, 121, 122, 126], "origin": [29, 32, 47, 48, 61, 62, 63, 64, 65, 107, 108, 109, 110, 112, 119, 123, 124, 176], "oserror": [50, 51], "other": [7, 8, 11, 15, 19, 29, 31, 48, 61, 62, 63, 64, 65, 107, 108, 109, 110, 112, 124, 128, 129, 130, 131, 132, 135, 138, 172], "other_portfolio": 178, "otherwis": [47, 48, 61, 62, 63, 64, 65, 77, 78, 92, 95, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 115, 116, 121, 122, 124, 126, 128, 129, 130, 131, 133, 157, 159], "otim": 147, "our": [4, 6, 7, 8, 12, 13, 36, 164, 175], "out": [14, 15, 31, 32, 33, 36, 39, 40, 55, 57, 59, 60, 107, 115, 119, 121, 122, 123, 127, 128, 164, 176], "outcom": 92, "outer": [32, 36, 123, 127, 135, 176], "outer_estim": [32, 33, 123, 164, 176], "outer_estimator_": 123, "outlin": [29, 30, 32, 47], "outperform": [4, 6, 7, 8, 12, 13, 31, 33, 36, 55, 57, 59, 60, 119, 123, 138, 164], "output": [36, 96, 123, 127, 132, 133, 134, 175, 176, 177], "over": [15, 23, 26, 107, 116, 121, 129, 130, 131, 135, 162, 163, 168, 172, 176], "overal": 107, "overcom": [5, 140, 180], "overfit": [14, 15, 123, 127, 164, 173], "overhead": 141, "overlap": [48, 61, 62, 63, 64, 65, 94, 112, 124, 175], "overwrit": [115, 116, 122, 126], "overwrite_expected_return": [115, 116, 122, 126], "owa": 83, "own": [168, 172, 175], "oxford": 168, "p": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 23, 26, 29, 30, 32, 33, 43, 52, 53, 94, 106, 109, 169], "packag": [0, 173], "pad": [48, 61, 62, 63, 64, 65, 112, 124], "page": 108, "pair": [11, 12, 13, 96, 114, 115, 116, 118, 119, 121, 122, 126, 131, 132, 134, 138, 175], "panda": [39, 40, 128, 129, 130, 131, 132, 133, 134, 164, 167, 170, 171, 176, 178, 179, 180, 181], "panna": 168, "paper": [29, 32, 106, 119, 123, 176], "parallel": [5, 12, 96, 107, 123, 127, 141, 176], "parallel_backend": [96, 107, 123, 127, 141], "param": [47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "param_dist": 172, "param_distribut": [14, 15, 164, 172], "param_grid": [14, 15, 31, 33, 36, 40, 164, 172], "param_l2_coef": 14, "param_mu_uncertainty_set_estimator__confidence_level": 15, "param_pre_selection__k": 40, "paramet": [5, 7, 8, 9, 11, 12, 13, 26, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 173, 175, 176, 177, 180], "parameter_nam": 127, "parametr": 168, "pareto": [9, 128, 134], "pariti": [17, 21, 28, 30, 32, 34, 45, 118, 119, 126, 165], "parolya": [111, 112], "part": [48, 61, 62, 63, 64, 65, 112, 124, 172], "partial": [7, 8, 9, 11, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 65, 74, 76, 84, 85, 95, 115, 122, 126, 129, 130, 131, 164, 176], "particular": 108, "partit": [48, 61, 62, 63, 64, 65, 112, 124], "pass": [7, 8, 13, 47, 92, 96, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 172], "past": 95, "pastur": 99, "path": [31, 33, 36, 39, 93, 94, 96, 123, 127, 175, 176], "pattern": [11, 115, 116, 121, 122, 126, 138], "patton": [145, 146], "paulsen": 131, "pd": 178, "pearson": [29, 30, 32, 59, 164], "pearsondist": [31, 33, 114, 118, 119, 123, 166, 170, 176], "penal": [14, 107, 115, 121, 122], "penalti": 107, "pep": 43, "per": [13, 14, 15, 36, 40, 123, 128, 141, 164], "percentag": 135, "perfectli": 178, "perfmeasur": [9, 10, 14, 15, 43, 92, 123, 127, 129, 130, 131, 134, 177, 178], "perform": [14, 15, 31, 33, 36, 38, 41, 45, 47, 63, 94, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 135, 141, 142, 155, 159, 164, 165, 168, 172, 173, 175, 178, 179], "period": [14, 15, 114, 115, 118, 119, 121, 122, 126, 128, 130, 131, 135, 168], "permit": 116, "pfe": 43, "pg": 43, "philipp": [111, 118, 119], "pick": 138, "picking_matrix_": 138, "piecewis": [26, 116, 176], "pin": 173, "pip": [164, 174], "pipe": 179, "pipelin": [11, 38, 45, 47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 172, 179], "pipeplin": [39, 40], "pitfal": [135, 139], "place": 128, "plan": 173, "pleas": [0, 47, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "plot": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 94, 128, 129, 130, 131, 178], "plot_10_tracking_error": [2, 16, 165], "plot_11_empirical_prior": [3, 16, 165], "plot_12_black_and_litterman": [4, 16, 165], "plot_13_factor_model": [5, 16, 165], "plot_14_black_litterman_factor_model": [6, 16, 165], "plot_1_distributionally_robust_cvar": [26, 27, 165], "plot_1_drop_correl": [39, 41, 165], "plot_1_hrp_cvar": [29, 34, 165], "plot_1_investment_horizon": [43, 44, 165], "plot_1_maximum_divesif": [23, 24, 165], "plot_1_maximum_sharpe_ratio": [7, 16, 165], "plot_1_risk_parity_vari": [18, 21, 165], "plot_1_stack": [36, 37, 165], "plot_2_herc_cdar": [30, 34, 165], "plot_2_minimum_cvar": [8, 16, 165], "plot_2_risk_busgeting_cvar": [19, 21, 165], "plot_2_select_best_perform": [40, 41, 165], "plot_3_efficient_fronti": [9, 16, 165], "plot_3_hrp_vs_herc": [31, 34, 165], "plot_3_risk_parity_ledoit_wolf": [20, 21, 165], "plot_4_mean_variance_cdar": [10, 16, 165], "plot_4_nco": [32, 34, 165], "plot_5_nco_grid_search": [33, 34, 165], "plot_5_weight_constraint": [11, 16, 165], "plot_6_transaction_cost": [12, 16, 165], "plot_7_management_fe": [13, 16, 165], "plot_8_regular": [14, 16, 165], "plot_9_uncertainty_set": [15, 16, 165], "plot_composit": [4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 23, 26, 29, 30, 31, 32, 33, 36, 40, 43, 128, 129, 130, 131, 177, 178], "plot_contribut": [18, 19, 29, 30, 131, 178], "plot_cumulative_return": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 128, 129, 130, 131, 164, 177, 178], "plot_dendrogram": [29, 30, 32, 47], "plot_distribut": [31, 33, 36, 39, 128, 164, 177], "plot_measur": [9, 10, 14, 15, 43, 128, 177], "plot_return": [129, 130, 131], "plot_rolling_measur": [129, 130, 131, 178], "plot_train_test_fold": 94, "plot_train_test_index": 94, "plotli": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 128, 131], "pmb": 168, "point": [40, 48, 61, 62, 63, 64, 65, 97, 99, 100, 101, 103, 106, 107, 108, 112, 124, 128, 157], "polakow": 106, "polar": [132, 133, 134], "politi": [145, 146], "poor": 164, "poorli": [14, 15], "pop": 128, "popul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 96, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 164, 175], "population_test": [9, 10, 14, 29, 30, 32], "population_train": [2, 9, 10, 14, 15], "portfolio": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 55, 57, 59, 60, 71, 92, 95, 96, 106, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 134, 135, 139, 140, 145, 146, 147, 148, 164, 166, 172, 173, 175, 176, 177, 179, 180], "portfolio optim": 164, "portfolio_param": [2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 18, 19, 20, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 96, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127], "portfolio_test": 176, "portfolio_train": 176, "portion": 100, "pose": 168, "posit": [12, 36, 40, 48, 61, 62, 63, 64, 65, 97, 99, 100, 101, 103, 106, 108, 112, 114, 115, 116, 118, 119, 121, 122, 124, 126, 140, 157, 159], "possibl": [19, 20, 23, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 172, 176, 180], "posterior": [4, 138, 180], "potenti": 134, "power": [55, 57, 59, 60], "pq": [48, 61, 62, 63, 64, 65, 112, 124], "practic": [168, 172, 178], "prado": [29, 32, 55, 57, 59, 60, 94, 99, 100, 119, 123, 176], "pre": [11, 39, 40, 134], "pre_dispatch": 96, "pre_select": [39, 40, 164, 172, 179], "pre_selection__k": 40, "preced": [14, 15, 31], "precis": [107, 108, 109, 110], "precision_": [107, 108, 109, 110], "pred": [31, 36, 40, 92, 172, 175], "pred1": [12, 13], "pred2": [12, 13], "pred3": 12, "pred_1": 39, "pred_2": 39, "pred_bench": [3, 7, 8, 14, 33, 36, 40], "pred_bl": 4, "pred_empir": 4, "pred_herc": 31, "pred_hrp": 31, "pred_model": [3, 7, 8, 40], "pred_nco": 33, "pred_no_reg": 14, "pred_no_uncertainti": 15, "pred_reg": 14, "pred_stack": 36, "pred_uncertainti": 15, "pred_uncertainty_r": 15, "predict": [0, 10, 11, 12, 13, 15, 92, 96, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 141, 172, 176, 177, 178, 179], "prefer": [107, 116, 176], "prefit": 127, "prefix": [48, 61, 62, 63, 64, 65, 112, 124], "prepar": [7, 8, 43, 135, 139], "preprocess": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 164, 166, 167, 170, 171, 172, 175, 176, 177, 179, 180, 181], "preselect": 134, "present": [33, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 138, 139], "press": [119, 123, 168], "prev": 178, "previou": [6, 12, 31, 33, 36, 40, 114, 115, 118, 119, 121, 122, 126, 131, 178], "previous_weight": [12, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 131], "price": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181], "prices_to_return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 164, 166, 167, 170, 171, 172, 175, 176, 177, 179, 180, 181], "principl": 172, "print": [2, 7, 8, 9, 10, 11, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 39, 40, 94, 95, 107, 164, 166, 167, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181], "printabl": [48, 61, 62, 63, 64, 65, 112, 124], "prior": [1, 4, 5, 6, 16, 20, 36, 40, 43, 45, 100, 114, 115, 116, 118, 119, 120, 121, 122, 126, 145, 146, 147, 148, 164, 165, 168, 172], "prior_estim": [3, 4, 5, 6, 20, 29, 36, 40, 43, 114, 115, 116, 118, 119, 120, 121, 122, 126, 138, 145, 146, 147, 148, 164, 172, 176], "prior_estimator_": [5, 114, 115, 116, 120, 121, 122, 126, 138, 145, 146, 147, 148], "prior_estimator__mu_estimator__alpha": [164, 172], "prior_model": 5, "prior_model_": [5, 138, 139, 140, 180], "priormodel": [3, 4, 5, 29, 114, 115, 116, 118, 119, 120, 121, 122, 126, 138, 139, 140, 176, 180], "probabl": [26, 116, 176], "problem": [0, 5, 12, 13, 26, 40, 97, 99, 100, 101, 103, 106, 108, 114, 115, 116, 118, 119, 121, 122, 126, 131, 140, 157, 176, 178, 180], "problem_": [115, 116, 121, 122, 126], "problem_values_": [115, 116, 121, 122, 126], "procedur": [43, 168], "process": [11, 94, 96, 109, 134, 175], "processor": [96, 107, 123, 127, 141], "produc": [106, 162, 163], "product": [0, 32, 36, 123, 127, 131, 147, 168, 172, 176, 178], "profession": [135, 139, 168], "program": [26, 116, 145, 146, 147, 148, 176], "project": [139, 168], "properli": 168, "properti": [7, 8, 29, 30, 32, 94, 118, 119, 127, 129, 130, 131, 145, 146, 147, 148, 168, 172, 176], "proport": [106, 138], "propos": 109, "prove": [11, 26, 111, 116, 176], "provid": [5, 9, 11, 12, 13, 94, 95, 105, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 135, 138, 139, 140, 142, 168, 172, 180], "psd": [40, 97, 99, 100, 101, 103, 106, 108], "psd_variant": 106, "pseudo": [107, 108, 109, 110, 145, 146], "ptf": [14, 31, 33, 36, 131], "ptf0": 9, "ptf1": [9, 29, 30, 39, 178], "ptf10": 9, "ptf11": 9, "ptf12": 9, "ptf13": 9, "ptf14": 9, "ptf15": 9, "ptf16": 9, "ptf17": 9, "ptf18": 9, "ptf19": 9, "ptf2": [9, 30, 39, 178], "ptf20": 9, "ptf21": 9, "ptf22": 9, "ptf23": 9, "ptf24": 9, "ptf25": 9, "ptf26": 9, "ptf27": 9, "ptf28": 9, "ptf29": 9, "ptf3": [9, 178], "ptf4": 9, "ptf5": 9, "ptf6": 9, "ptf7": 9, "ptf8": 9, "ptf9": 9, "ptf_bench_test": [18, 19, 20, 23, 26], "ptf_bench_train": [18, 19, 23], "ptf_bl_factor_test": 6, "ptf_empirical_test": 5, "ptf_factor_1_test": 5, "ptf_factor_2_test": 5, "ptf_factor_3_test": 5, "ptf_factor_test": 6, "ptf_model1_test": 26, "ptf_model2_test": 26, "ptf_model3_test": 26, "ptf_model4_test": 26, "ptf_model_test": [18, 19, 20, 23], "ptf_model_train": [18, 19, 23], "ptf_no_tracking_test": 2, "ptf_no_tracking_train": 2, "ptf_tracking_test": 2, "ptf_tracking_train": 2, "public": [49, 50, 51, 52, 53, 164, 169], "publish": 106, "pujara": 106, "punctuat": [48, 61, 62, 63, 64, 65, 112, 124], "pure": 108, "purg": [28, 34, 45, 94, 165], "purged_s": [94, 95], "purpos": [5, 140, 176, 180], "put": 138, "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 132, 133, 134, 165], "pypi": [164, 174], "pyportfolioopt": 164, "python": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 48, 61, 62, 63, 64, 65, 112, 124, 164], "q": [128, 134, 175, 177], "qu": 134, "quad": [122, 176], "qual": [6, 49, 164, 176, 180], "qualiti": 6, "qualnam": 150, "quanliti": 49, "quant": 168, "quantifi": [71, 131], "quantil": [123, 127, 128, 175, 176, 177], "quantile_measur": [123, 127, 176], "quantit": [99, 100, 119, 123, 164], "quickli": 164, "r": [47, 48, 61, 62, 63, 64, 65, 112, 124, 131, 168, 178], "r_": [122, 124, 148, 176], "r_p": 178, "radiu": [26, 116], "raffinot": [30, 118, 176], "rais": [48, 50, 51, 61, 62, 63, 64, 65, 107, 108, 109, 110, 112, 115, 116, 121, 122, 124, 126, 128, 129, 130, 131, 151, 152, 153], "raise_on_failur": [10, 115, 116, 121, 122, 126], "ran": 14, "rand_weight": 177, "randint": 172, "randn": [94, 95], "random": [14, 15, 58, 94, 95, 99, 132, 145, 146, 147, 162, 163, 176, 177], "randomized_search": [14, 15, 164], "randomizedsearchcv": [14, 15, 164, 172], "randomli": 162, "rang": [10, 40, 48, 61, 62, 63, 64, 65, 107, 108, 109, 110, 112, 124, 128, 172, 177], "rank": 134, "rate": [115, 116, 121, 122, 126, 129, 130, 131, 138], "rather": [132, 133, 134], "ratio": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 18, 19, 20, 23, 29, 31, 32, 33, 36, 39, 40, 45, 64, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 165, 172, 176], "ratiomeasur": [9, 10, 14, 15, 31, 33, 36, 39, 40, 123, 127, 129, 130, 131, 133, 164, 172, 175, 177, 178], "ration": [7, 178], "rationmeasur": 92, "ravel": 10, "raw": 0, "rd_search": 172, "re": [12, 13, 107, 108, 109, 110, 173], "reach": 134, "read": [107, 108, 109, 110], "readabl": [11, 12, 13], "real": 159, "realis": 79, "realiz": [4, 6, 7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 65, 91, 122, 126, 129, 130, 131, 164, 176], "rearrang": [29, 119, 176], "reason": [29, 135], "rebal": [12, 13], "rebalanc": [12, 168, 178], "rebas": [128, 129, 130, 131], "receiv": 164, "recombin": [33, 36, 94], "recombined_path": 94, "recommend": [45, 168, 172], "reconstruct": 94, "recurs": [29, 30, 118, 119, 176], "reduc": [5, 14, 15, 96, 99, 111, 115, 121, 122, 126, 132, 133, 134, 140, 164, 173, 180, 181], "reduce_test": 95, "reduct": 14, "ref1": [11, 115, 116, 121, 122, 126], "ref2": [11, 115, 116, 121, 122, 126], "ref3": [11, 115, 116, 121, 122, 126], "ref_model": 14, "refer": [11, 14, 47, 55, 56, 57, 59, 60, 71, 94, 99, 100, 106, 108, 109, 111, 116, 118, 119, 123, 131, 134, 135, 138, 139, 145, 146, 147, 148, 155, 157, 160, 161, 164, 168, 176], "referenc": [115, 116, 121, 122, 126, 138], "refin": 107, "reform": 168, "reformul": [26, 116, 176], "regard": 178, "regardless": 29, "region": [15, 115, 122, 145, 146, 147, 148, 149], "regist": [48, 61, 62, 63, 64, 65, 112, 124], "register_error": [48, 61, 62, 63, 64, 65, 112, 124], "regress": 141, "regressor": 141, "regular": [1, 15, 16, 36, 45, 48, 61, 62, 63, 64, 65, 110, 112, 115, 116, 121, 122, 124, 164, 165, 176], "regularis": [108, 109], "rel": [4, 6, 29, 70, 73, 129, 130, 131, 138], "relat": [58, 100, 178], "releas": [115, 116, 121, 122, 126, 168, 173], "relev": [107, 108, 109, 110], "reli": 30, "remain": [19, 29, 30, 32, 47, 48, 61, 62, 63, 64, 65, 112, 124, 132, 133, 134, 176], "remov": [39, 48, 61, 62, 63, 64, 65, 94, 100, 112, 124, 127, 128, 132, 133, 134, 175], "removeprefix": [48, 61, 62, 63, 64, 65, 112, 124], "removesuffix": [48, 61, 62, 63, 64, 65, 112, 124], "render": [7, 8], "reorder": [29, 30, 32, 47], "replac": [32, 40, 48, 61, 62, 63, 64, 65, 97, 99, 100, 101, 103, 106, 108, 112, 115, 116, 121, 122, 124, 126, 155], "replic": 178, "repo": 169, "repr": [48, 61, 62, 63, 64, 65, 112, 124], "repres": [3, 4, 5, 6, 15, 29, 30, 31, 32, 33, 36, 39, 40, 47, 49, 68, 70, 73, 107, 108, 109, 110, 129, 130, 131, 147, 175, 176, 180], "request": [107, 108, 109, 110, 178], "requir": 2, "rerun": [176, 180], "rescal": [77, 107, 108, 109, 110, 120, 128, 129, 130, 131], "research": [49, 50, 51, 52, 53, 106, 145, 146, 147, 148, 169], "reserv": [48, 61, 62, 63, 64, 65, 112, 124], "residu": 140, "residual_vari": 140, "resourc": 164, "respect": [11, 48, 107, 108, 109, 110], "rest": [48, 61, 62, 63, 64, 65, 112, 124], "result": [12, 13, 48, 61, 62, 63, 64, 65, 96, 107, 108, 109, 110, 112, 124, 141, 168], "retain": [107, 108, 109, 110, 132, 133, 134, 172], "retent": [132, 133, 134], "retriev": [12, 115, 116, 121, 122, 126], "return": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 18, 19, 20, 26, 29, 31, 33, 36, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 170, 172, 175, 176, 177, 178, 179, 180, 181], "return_train_scor": [14, 40], "returns_df": [129, 130, 131, 178], "reveiz": 168, "revers": [128, 132, 133, 134], "review": [118, 119], "rfind": [48, 61, 62, 63, 64, 65, 112, 124], "rgb": [14, 15, 40], "rgba": [14, 40], "richard": 168, "ridgecv": 5, "right": [48, 61, 62, 63, 64, 65, 112, 115, 116, 121, 122, 124, 126, 129, 130, 131, 145, 146, 147, 148, 149, 181], "right_inequ": [11, 115, 116, 121, 122, 126], "rindex": [48, 61, 62, 63, 64, 65, 112, 124], "risk": [2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 21, 23, 28, 32, 34, 36, 40, 47, 62, 64, 65, 67, 68, 69, 70, 72, 73, 89, 105, 111, 114, 115, 116, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 134, 135, 138, 139, 140, 165, 168, 172, 173, 180], "risk_": [122, 126, 176], "risk_avers": [105, 116, 122, 176], "risk_budget": [19, 126], "risk_free_r": [114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 129, 130, 131, 138], "risk_measur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 29, 30, 31, 32, 33, 36, 43, 114, 115, 118, 119, 122, 126, 164, 172, 176, 177], "riskbudget": [17, 18, 19, 20, 32, 33, 45, 164, 176], "riskfolio": 164, "riskmeasur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 29, 30, 31, 32, 33, 36, 43, 92, 114, 115, 118, 119, 122, 123, 126, 127, 129, 130, 131, 134, 164, 172, 176, 177, 178], "rjust": [48, 61, 62, 63, 64, 65, 112, 124], "rmse": [2, 121, 122], "robert": [138, 168], "robust": [5, 14, 15, 27, 31, 33, 36, 39, 106, 115, 116, 119, 121, 122, 123, 140, 145, 146, 147, 148, 164, 165, 180, 181], "rockafellar": [26, 116], "roll": [14, 15, 31, 33, 36, 39, 40, 129, 130, 131], "rolling_measur": [129, 130, 131, 178], "root": [2, 84, 86, 121, 122, 129, 130, 131, 168], "round": [128, 129, 130, 131], "rout": [47, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "row": [7, 8, 135], "rpartit": [48, 61, 62, 63, 64, 65, 112, 124], "rrc": [43, 164], "rsome": 164, "rsplit": [48, 61, 62, 63, 64, 65, 112, 124], "rstrip": [48, 61, 62, 63, 64, 65, 112, 124], "rule": [129, 130, 131, 160, 161, 168], "run": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 96, 107, 123, 127, 132, 133, 134, 141, 168, 172, 176], "rust": [115, 116, 121, 122, 126], "rv": 172, "rvert_": [15, 115, 122], "s_": [15, 115, 122, 135, 168], "same": [7, 8, 11, 12, 13, 18, 31, 33, 36, 40, 47, 48, 61, 62, 63, 64, 65, 107, 108, 109, 110, 112, 114, 115, 116, 118, 119, 121, 122, 124, 126, 127, 134, 138, 164, 167, 170, 171, 172, 176, 179, 180, 181], "sampl": [14, 15, 26, 31, 32, 33, 36, 39, 40, 55, 57, 59, 60, 94, 95, 96, 107, 108, 109, 110, 111, 115, 116, 119, 121, 122, 123, 127, 132, 133, 134, 145, 146, 148, 155, 164, 172, 176], "sargen": 106, "satisfi": 10, "save": [5, 115, 116, 121, 122, 126, 180], "save_problem": [115, 116, 121, 122, 126], "sc": [115, 116, 121, 122, 126], "scalar": 92, "scale": [15, 107, 108, 109, 110, 115, 116, 121, 122, 126, 128, 129, 130, 131, 134, 168], "scale_constraint": [115, 116, 121, 122, 126], "scale_object": [115, 116, 121, 122, 126], "scatter": [14, 15, 40, 128], "scene_camera": 10, "scheme": [48, 61, 62, 63, 64, 65, 112, 124, 172], "sch\u00f6ttle": [145, 146, 147, 148], "scienc": 106, "scientif": 164, "scikit": [5, 7, 8, 92, 107, 108, 109, 110, 164, 167, 170, 171, 172, 173, 175, 176, 179, 180, 181], "scikit-learn": 164, "scipi": [14, 15, 47, 48, 164, 172], "score": [14, 15, 31, 36, 40, 92, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 172], "score_func": 92, "scorer": [40, 92], "script": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43], "search": [14, 15, 33, 48, 61, 62, 63, 64, 65, 107, 112, 124], "second": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 65, 79, 84, 85, 86, 90, 122, 129, 130, 131, 132, 172], "secondli": 168, "section": [14, 15, 47, 48], "sector": 11, "secur": [5, 49, 50, 51, 52, 53, 100, 135, 140, 168, 169, 180], "see": [4, 7, 8, 14, 15, 26, 29, 30, 31, 43, 47, 48, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 114, 115, 118, 119, 121, 122, 123, 126, 127, 132, 133, 134, 140, 164, 172], "seed": [145, 146], "seen": [47, 55, 56, 57, 58, 59, 60, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 121, 122, 123, 126, 127, 132, 133, 134, 138, 139, 140, 168], "select": [11, 12, 13, 14, 15, 31, 39, 41, 107, 123, 127, 132, 133, 134, 145, 146, 165, 173, 176, 178], "selectkextrem": [40, 164, 172, 179], "selectnondomin": 179, "self": [47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 176], "sell": [11, 12, 114, 115, 116, 118, 119, 121, 122, 126], "semi": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 65, 84, 85, 106, 115, 122, 126, 129, 130, 131, 140, 164, 172, 176], "semi_devi": [65, 115, 122, 126, 129, 130, 131, 176], "semi_vari": [65, 114, 115, 118, 119, 122, 126, 129, 130, 131, 164, 172, 176], "sens": [107, 108, 109, 110], "sensit": 164, "sep": [48, 61, 62, 63, 64, 65, 112, 124], "separ": [5, 6, 48, 61, 62, 63, 64, 65, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 180], "sequenti": 132, "seri": [78, 94, 95, 106, 129, 130, 131, 175], "serial": [94, 175], "seriat": [29, 119, 176], "set": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 45, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 157, 162, 165, 168, 169, 172, 175, 176, 177, 178], "set_config": [39, 40, 107, 108, 109, 110, 164, 179], "set_output": [132, 133, 134], "set_param": [2, 12, 13, 14, 15, 31, 47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "set_portfolio_param": [9, 10, 128, 177], "set_score_request": [107, 108, 109, 110], "shallow": 128, "shape": [9, 10, 12, 13, 14, 15, 29, 30, 32, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 134, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 176, 177, 179, 181], "share": 115, "sharp": [1, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 18, 19, 20, 23, 29, 32, 33, 36, 39, 40, 45, 64, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 133, 165, 172, 176, 178], "sharpe_ratio": [39, 64, 123, 127, 129, 130, 131, 133, 164, 175, 176, 177, 178], "short": [2, 14, 15, 36, 114, 115, 116, 118, 119, 121, 122, 126, 168], "shortcom": [132, 164], "shortfal": [7, 8, 65, 68, 122, 129, 130, 131], "should": [12, 33, 54, 97, 98, 107, 108, 109, 110, 135, 136, 137, 143, 144, 168, 172, 178], "show": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 128], "show_front": [128, 177], "showlegend": [14, 40], "shrink": 111, "shrinkag": [3, 5, 13, 17, 21, 45, 108, 109, 110, 111, 112, 114, 115, 118, 119, 121, 122, 126, 164, 165, 180], "shrinkage_": [108, 109], "shrunk": [108, 109, 110], "shrunkcovari": [20, 167], "shrunkmu": [3, 5, 112, 164, 171, 180], "shrunkmumethod": 111, "shuffl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 95, 164, 172, 175, 176, 177, 179], "sigma": [105, 145, 147, 148, 149, 168, 181], "sigma_": 168, "sign": 92, "signal": [99, 109], "signatur": [92, 172], "significantli": [14, 157], "sim": [147, 148], "similar": [168, 172], "simpl": [6, 47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 168, 176], "simplex": [162, 163], "simpli": [3, 12, 132], "simplifi": [43, 168], "simul": [31, 33, 36, 40], "simultan": 106, "sinc": [12, 29, 94, 164, 175], "singl": [2, 29, 30, 31, 32, 33, 47, 48, 94, 96, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 134, 135, 168, 175, 176], "site": [50, 51], "six": 14, "size": [6, 15, 31, 33, 36, 39, 48, 49, 61, 62, 63, 64, 65, 101, 102, 103, 104, 106, 108, 112, 115, 116, 121, 122, 124, 126, 129, 130, 131, 145, 146, 147, 148, 149, 155, 160, 161, 164, 176, 180, 181], "skew": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 62, 114, 118, 119, 129, 130, 131, 164, 168], "skfolio": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "skfolio_data": [50, 51, 169], "skip": 127, "sklean": 180, "sklearn": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 92, 94, 95, 107, 108, 109, 110, 123, 141, 164, 166, 172, 175, 176, 177, 178, 179], "slice": [48, 61, 62, 63, 64, 65, 112, 124, 128, 129, 130, 131], "slightli": [31, 33, 40, 97, 99, 100, 101, 103, 106, 108], "slot": [129, 130, 131, 178], "slow": [97, 99, 100, 101, 103, 106, 108, 157], "slower": [140, 141], "small": [5, 109, 111, 140, 180], "smooth": [101, 102], "snippet": 164, "so": [12, 13, 26, 47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 164, 178], "social": 106, "solut": 147, "solv": [126, 176, 181], "solver": [26, 107, 115, 116, 121, 122, 126, 176], "solver_param": [115, 116, 121, 122, 126], "some": [55, 57, 59, 60, 100, 107, 108, 109, 110, 126, 142, 177], "sometim": 168, "sort": [128, 130, 132, 133, 134], "sort_idx": [14, 15], "sort_measur": 128, "sortino": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 129, 130, 131, 172], "sortino_ratio": [64, 129, 130, 131, 164, 172, 177, 178], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "sp500": 53, "space": [14, 26, 48, 61, 62, 63, 64, 65, 112, 116, 124, 131, 176], "span": 29, "spars": 107, "spawn": 96, "spd": 157, "spearman": [60, 164], "spearmandist": [170, 176], "special": 121, "specif": [0, 5, 48, 61, 62, 63, 64, 65, 100, 112, 115, 116, 121, 122, 124, 126, 127, 140, 172, 180], "specifi": [11, 14, 15, 19, 48, 50, 51, 54, 58, 61, 62, 63, 64, 65, 68, 96, 97, 98, 107, 108, 109, 110, 112, 123, 124, 127, 129, 130, 131, 136, 137, 138, 143, 144], "spectral": [107, 108, 109, 110], "speed": 26, "sphinx": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45], "sphx_glr_auto_examples_miscellaneous_plot_set_output": [132, 133, 134], "split": [7, 8, 12, 29, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 93, 94, 95, 96, 107, 108, 112, 119, 123, 124, 127, 169, 175, 176], "splitlin": [48, 61, 62, 63, 64, 65, 112, 124], "splitter": [96, 107], "spx": [2, 3, 4, 5, 6, 29, 114, 115, 116, 118, 119, 121, 122, 126, 138, 169], "spx_price": 2, "spx_test": 2, "spx_train": 2, "sqrt": [2, 48, 55, 57, 59, 60, 107, 108, 109, 110, 129, 130, 131, 155], "squar": [2, 29, 30, 32, 47, 55, 57, 59, 60, 84, 86, 107, 108, 109, 110, 121, 122, 129, 130, 131, 145, 146, 147, 148, 152, 168], "sric": 131, "ssrn": [119, 123], "stabil": [14, 31, 115, 116, 121, 122, 126, 155], "stabl": [29, 30, 31, 32, 107, 118, 119, 128, 173, 176], "stack": [35, 37, 45, 127, 164, 165], "stackingoptim": [36, 176], "stake": 36, "standard": [7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 29, 31, 33, 36, 40, 49, 50, 51, 52, 53, 55, 57, 59, 60, 64, 65, 84, 86, 107, 122, 128, 129, 130, 131, 156, 157, 158, 169, 176], "standard_devi": [65, 115, 122, 126, 129, 130, 131], "starer": 106, "start": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 77, 94, 112, 119, 124, 128, 129, 130, 131, 150, 157, 164, 169, 176], "startswith": [48, 61, 62, 63, 64, 65, 112, 124], "stat": [14, 15, 164, 172, 177], "state": 109, "static": [48, 61, 62, 63, 64, 65, 112, 124], "stationari": [145, 146], "statist": [29, 47, 106, 118, 155, 168], "statsmodel": 164, "std": [31, 33, 36, 39, 156, 158], "std_test_scor": [14, 40, 107], "std_train_scor": [14, 40], "stein": [3, 5, 111, 112, 180], "step": [29, 30, 40, 118, 119, 132, 138, 168, 176], "sticker": [7, 8], "still": [8, 173], "stochast": [79, 129, 130, 131], "stock": [2, 13], "stop": [10, 48, 61, 62, 63, 64, 65, 107, 112, 124, 128], "store": [50, 51, 107, 108, 109, 110, 167, 170, 171, 176, 180, 181], "store_precis": [107, 108, 109, 110], "str": [48, 50, 51, 61, 62, 63, 64, 65, 96, 107, 108, 109, 110, 112, 114, 115, 116, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 150, 177], "strategi": [7, 8, 18, 19, 20, 23, 96, 107, 123, 127], "stratifi": 96, "strength": [36, 127, 176], "strict": [48, 61, 62, 63, 64, 65, 112, 124], "strictli": [129, 130, 131], "string": [11, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140], "strip": [48, 61, 62, 63, 64, 65, 112, 124], "structur": [5, 29, 30, 32, 140, 167, 170, 171, 176, 179, 180, 181], "sub": [29, 36, 48, 61, 62, 63, 64, 65, 107, 108, 109, 110, 112, 119, 124, 127, 128, 176], "subfold": [50, 51], "subobject": [47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "suboptim": [132, 168], "subsequ": 95, "subset": 100, "substitut": [48, 61, 62, 63, 64, 65, 112, 124], "substr": [48, 61, 62, 63, 64, 65, 112, 124], "succeq": [145, 147, 149, 181], "success": [12, 13, 157], "suffer": [29, 30, 32], "suffici": 11, "suffix": [48, 61, 62, 63, 64, 65, 112, 124], "suitabl": [48, 61, 62, 63, 64, 65, 95, 112, 124], "sum": [11, 115, 116, 120, 121, 122, 125, 126, 135, 138, 162, 163, 168, 178], "sum_": [12, 13, 14, 48, 114, 115, 118, 119, 121, 122, 126, 131, 155, 168], "summari": [7, 8, 9, 14, 15, 18, 19, 20, 23, 31, 33, 36, 39, 40, 94, 128, 129, 130, 131, 164, 168, 175, 177, 178], "super": 176, "superior": [79, 129, 130, 131], "support": [107, 116, 123, 132, 133, 134, 176, 177], "suppos": [13, 132], "surfac": [1, 16, 45, 128, 165], "swapcas": [48, 61, 62, 63, 64, 65, 112, 124], "sx5e": [114, 115, 116, 118, 119, 121, 122, 126, 138], "sy": 128, "symmetr": [129, 130, 131, 153, 157, 159], "syntax": 172, "systemat": [5, 123, 127, 140, 180], "szeke": 56, "t": [11, 12, 13, 15, 29, 48, 61, 62, 63, 64, 65, 105, 107, 108, 109, 110, 112, 114, 115, 118, 119, 121, 122, 124, 126, 135, 138, 145, 146, 147, 148, 149, 155, 168, 176, 178, 181], "tab": [48, 61, 62, 63, 64, 65, 112, 124], "tabl": [48, 61, 62, 63, 64, 65, 112, 124], "tabsiz": [48, 61, 62, 63, 64, 65, 112, 124], "tag": [2, 9, 10, 14, 15, 31, 33, 36, 39, 43, 128, 129, 130, 131], "tag_list": [31, 36, 39, 128], "tail": [68, 76, 129, 130, 131, 164], "tailor": 175, "take": [4, 5, 12, 14, 15, 115, 116, 121, 122, 126, 128, 132, 138, 167, 168, 170, 171, 172, 176, 178, 179, 180, 181], "taken": 18, "target": [2, 15, 74, 76, 82, 84, 85, 94, 96, 111, 120, 121, 122, 123, 127, 132, 133, 134, 135], "tau": [106, 138], "tc": 12, "technologi": 11, "tend": [14, 39, 106, 115, 121, 122, 164], "term": [11, 31, 33, 115, 116, 121, 122, 134, 140, 168], "test": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 48, 56, 61, 62, 63, 64, 65, 93, 94, 95, 96, 107, 108, 109, 110, 112, 123, 124, 127, 157, 175, 177, 178], "test_index": [94, 95], "test_set_index": 94, "test_siz": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 95, 164, 172, 176, 177, 179], "text": [48, 61, 62, 63, 64, 65, 112, 122, 124, 126, 145, 147, 149, 155, 176, 181], "th": 107, "than": [5, 11, 14, 29, 30, 31, 32, 33, 36, 39, 43, 47, 79, 95, 96, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 115, 116, 118, 119, 121, 122, 123, 126, 129, 130, 131, 132, 133, 134, 157, 168, 176, 178, 180], "thank": 164, "theat": 72, "thei": [0, 48, 61, 62, 63, 64, 65, 77, 78, 112, 124, 139, 164, 168, 169, 172, 176, 178], "them": [5, 6, 13, 26, 31, 33, 36, 39, 40, 127, 128, 140, 178, 180], "theori": [40, 58, 97, 99, 100, 101, 103, 106, 108, 160, 164], "therefor": [14, 134, 157, 168], "theta": 72, "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 157, 164, 168, 172, 173, 175, 176, 177, 178, 180], "third": [29, 30, 32, 48, 61, 62, 63, 64, 65, 87, 112, 124], "thoma": [30, 118, 176], "those": [94, 175], "three": [14, 15, 31, 33, 36, 40, 48, 61, 62, 63, 64, 65, 106, 111, 112, 124, 132, 169], "threshold": [39, 47, 56, 97, 99, 100, 101, 103, 106, 108, 132, 134, 135, 157, 179], "through": [5, 72, 107, 129, 130, 131, 140, 168, 176, 180], "thu": 95, "tibshirani": 155, "tickformat": [14, 15, 40], "time": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 55, 57, 58, 59, 60, 92, 94, 95, 105, 107, 114, 115, 116, 118, 119, 121, 122, 124, 126, 129, 130, 131, 135, 168, 175, 176], "timeseriessplit": 95, "titl": [14, 15, 40, 48, 61, 62, 63, 64, 65, 112, 124, 128, 164], "titlecas": [48, 61, 62, 63, 64, 65, 112, 124], "tlt": [115, 116, 121, 122, 126, 138, 164], "to_keep_": [132, 133, 134], "to_surfac": [10, 128], "togeth": [6, 36, 127, 164, 176, 178], "toi": [7, 8, 33], "tol": 107, "tol_gap_ab": [115, 116, 121, 122, 126], "tol_gap_rel": [115, 116, 121, 122, 126], "toler": 107, "tone": 100, "tonexti": [14, 40], "too": [48, 61, 62, 63, 64, 65, 112, 124], "tool": [7, 8, 164, 172, 175, 178], "top": [29, 30, 40, 118, 119, 164, 173, 176], "topic": 178, "topmost": [29, 119, 176], "total": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 46, 96, 111, 114, 115, 118, 119, 121, 122, 126, 131, 135, 165, 176], "toward": [12, 13, 111], "tr": [107, 108, 109, 110], "trace": [108, 109, 110], "track": [1, 16, 45, 121, 122, 164, 165, 176], "tracking_rms": 2, "tractabl": 116, "trade": [13, 111, 164, 178], "tradeoff": 2, "tradit": 99, "trail": [5, 48, 61, 62, 63, 64, 65, 112, 124], "train": [2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 94, 95, 96, 107, 116, 123, 127, 141, 175, 176, 178], "train_index": [94, 95], "train_siz": [12, 13, 14, 15, 31, 33, 36, 40, 95, 164], "train_spx": 2, "train_test_split": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 164, 172, 175, 176, 177, 179], "transact": [1, 16, 45, 109, 114, 115, 116, 118, 119, 121, 122, 126, 131, 165, 176, 178], "transaction_cost": [12, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 131, 164], "transform": [7, 8, 11, 12, 13, 38, 39, 40, 43, 45, 55, 57, 59, 60, 132, 133, 134, 135, 139, 164, 168], "transform_output": [39, 40, 164, 179], "translat": [48, 61, 62, 63, 64, 65, 112, 124], "travers": [29, 119, 176], "tree": [29, 30, 32, 118, 119, 123, 176], "triangular": [3, 4, 5, 142, 180], "true": [10, 14, 29, 30, 32, 40, 43, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 92, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 157, 159, 164, 168, 172, 177], "truncat": [48, 61, 62, 63, 64, 65, 112, 124], "try": [48, 50, 51, 61, 62, 63, 64, 65, 112, 124], "tune": [164, 173], "tupl": [48, 61, 62, 63, 64, 65, 112, 124, 127, 158], "turnov": [115, 121, 122, 126, 164, 176], "tutori": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 115, 116, 121, 122, 126], "two": [2, 6, 14, 29, 31, 33, 40, 47, 48, 58, 61, 62, 63, 64, 65, 79, 106, 107, 108, 109, 110, 111, 112, 118, 119, 124, 128, 129, 130, 131, 132, 155, 168, 172, 176], "type": [107, 108, 109, 110, 128, 150], "u": [29, 30, 32, 48, 61, 62, 63, 64, 65, 112, 115, 116, 121, 122, 124, 126, 138, 155, 164], "u_": [145, 146, 147, 148, 149, 181], "ulcer": [7, 8, 9, 14, 15, 18, 19, 20, 23, 29, 36, 40, 64, 65, 88, 122, 126, 129, 130, 131, 164, 176], "ulcer_index": [65, 114, 115, 118, 119, 122, 126, 129, 130, 131], "ulcer_index_ratio": [64, 129, 130, 131], "umbrella": 15, "un": 14, "unbias": [103, 111, 131], "uncas": [48, 61, 62, 63, 64, 65, 112, 124], "uncertain": [13, 114, 115, 118, 119, 121, 122, 126], "uncertainti": [1, 16, 26, 45, 115, 122, 138, 143, 144, 145, 146, 147, 148, 149, 165, 176], "uncertainty_set": [15, 164, 176, 181], "uncertainty_set_": [145, 146, 147, 148, 181], "uncertaintyset": [145, 146, 147, 148, 181], "unchang": [97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 132, 133, 134, 157], "uncommon": 168, "uncompound": [77, 78], "under": [9, 10, 13, 14, 15, 106, 107, 108, 109, 110, 148, 164, 168, 173, 176], "underli": [107, 178], "underperform": [7, 8, 33, 138], "underscor": [5, 15], "unfortun": 164, "unh": [7, 8, 43, 52], "unicod": [48, 61, 62, 63, 64, 65, 112, 124], "unicodeencodeerror": [48, 61, 62, 63, 64, 65, 112, 124], "unifi": 164, "uniform": [14, 15, 26, 116, 162, 163, 172, 176], "uniformli": [14, 15, 172], "unit": [128, 129, 130, 131], "univers": [119, 123, 168, 179], "unless": [48, 61, 62, 63, 64, 65, 96, 107, 112, 123, 124, 127, 141], "unrealist": 12, "unrepresent": [48, 61, 62, 63, 64, 65, 112, 124], "unsupervis": [132, 133, 134], "until": [134, 173], "untouch": [48, 61, 62, 63, 64, 65, 112, 124], "unus": 48, "unwant": [13, 114, 115, 118, 119, 121, 122, 126], "up": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 30, 31, 32, 33, 36, 39, 40, 43, 49, 50, 51, 52, 53, 97, 99, 100, 101, 103, 106, 108, 169], "updat": [4, 12, 29, 30, 47, 54, 55, 56, 57, 58, 59, 60, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 176, 180], "update_layout": [10, 14, 15, 40], "update_xax": 15, "update_yax": [14, 15, 40], "upgma": 48, "upgmc": 48, "upper": [14, 15, 48, 61, 62, 63, 64, 65, 70, 73, 112, 114, 115, 116, 118, 119, 121, 122, 124, 126, 129, 130, 131], "uppercas": [48, 61, 62, 63, 64, 65, 112, 124], "upsid": [29, 30, 32, 74, 76, 82, 84, 85, 115, 122, 126, 129, 130, 131], "url": 164, "uryasev": [26, 116], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 38, 39, 40, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 73, 74, 76, 79, 82, 83, 84, 85, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 157, 160, 161, 164, 166, 168, 169, 172, 175, 176, 178, 180, 181], "usabl": [48, 61, 62, 63, 64, 65, 112, 124], "user": [0, 7, 8, 47, 54, 55, 56, 57, 58, 59, 60, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 164, 168, 169], "usmv": [49, 176, 180], "usual": [13, 100, 172], "utf": [48, 61, 62, 63, 64, 65, 112, 124], "util": [12, 13, 29, 36, 72, 107, 108, 109, 110, 116, 122, 124, 129, 130, 131, 164, 176, 177], "v": [28, 34, 45, 48, 135, 139, 155, 165, 168], "valid": [14, 32, 40, 48, 61, 62, 63, 64, 65, 93, 94, 95, 96, 107, 112, 123, 124, 127, 172, 173, 176], "valu": [2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 23, 29, 30, 32, 36, 40, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 155, 157, 159, 164, 172, 176], "value_at_risk": [62, 114, 118, 119, 129, 130, 131], "value_at_risk_beta": [129, 130, 131], "value_at_risk_ratio": [64, 129, 130, 131], "valueerror": [48, 61, 62, 63, 64, 65, 112, 124, 128, 151, 152, 153], "var": [62, 68, 73, 89, 129, 130, 131], "variabl": [5, 14, 15, 58, 79, 94, 115, 116, 121, 122, 126, 129, 130, 131, 132, 140, 147, 169, 172, 176, 180], "varianc": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 29, 30, 32, 33, 36, 39, 40, 43, 45, 47, 48, 65, 79, 85, 97, 99, 100, 101, 103, 106, 108, 111, 114, 115, 118, 119, 122, 123, 126, 129, 130, 131, 134, 140, 142, 145, 146, 147, 148, 157, 165, 168, 172, 176, 177, 178], "variance_from_asset": 131, "variance_upp": 10, "variant": 106, "variat": [58, 164, 172], "variou": 127, "vast": [7, 8], "vec": [145, 147, 149, 181], "vector": [11, 12, 13, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 111, 114, 115, 116, 118, 119, 121, 122, 126, 128, 129, 131, 132, 133, 134, 138, 147, 156, 158, 162, 163, 168, 175, 176, 178], "verbos": [96, 107, 115, 116, 121, 122, 123, 126, 127], "veri": [30, 107, 127, 168, 172, 176], "verifi": 159, "version": [14, 47, 48, 61, 62, 63, 64, 65, 92, 107, 108, 109, 110, 112, 124, 132, 133, 134, 172, 173], "versu": [2, 10], "vert": [14, 71, 115, 121, 122, 131], "vert_": [14, 71, 115, 121, 122, 131], "vertic": 40, "via": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 48, 61, 62, 63, 64, 65, 112, 124, 169], "view": [138, 164, 176, 180], "view_confid": 138, "views_": 138, "visual": [12, 13], "vlue": [6, 49, 164, 176, 180], "vod": 50, "vol": [7, 18, 19, 164], "vol_weighted_target": 111, "volatil": [7, 12, 14, 18, 19, 23, 36, 49, 111, 120, 121, 131, 164, 176], "volum": 108, "voor": 48, "w": [11, 12, 13, 14, 15, 71, 105, 114, 115, 116, 118, 119, 121, 122, 124, 126, 131, 147, 168, 176, 178], "w_": [12, 13, 14, 114, 115, 118, 119, 121, 122, 126, 131, 155, 168, 178], "wa": [7, 8, 12, 33, 48, 56, 132, 133, 134], "wai": [40, 121, 122, 172], "walk": [12, 13, 15, 95, 164], "walkforward": [12, 13, 14, 15, 31, 33, 36, 40, 164, 178], "wang": [47, 118, 155], "want": [10, 12, 13, 176], "ward": [29, 30, 31, 32, 33, 47, 48, 118, 119, 176], "warn": [115, 116, 121, 122, 126], "wasserstein": [26, 116, 176], "wasserstein_ball_radiu": [26, 116, 176], "we": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 45, 92, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 134, 140, 147, 157, 164, 168, 172, 173, 175, 176, 177, 180], "wei": [47, 118, 155], "weight": [0, 1, 2, 4, 8, 12, 13, 14, 16, 23, 26, 29, 30, 31, 32, 33, 36, 45, 48, 71, 83, 101, 102, 105, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 135, 138, 162, 163, 165, 168, 176, 177, 178], "weights_": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 32, 39, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 164, 172, 176, 177, 181], "weir": 50, "well": [47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 164, 175, 176], "were": [4, 6, 164], "werner": [145, 146, 147, 148], "when": [11, 12, 13, 14, 29, 30, 32, 40, 47, 48, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 121, 122, 123, 124, 126, 127, 132, 133, 134, 135, 138, 139, 140, 141, 142, 172, 175, 178], "where": [11, 29, 30, 48, 61, 62, 63, 64, 65, 94, 96, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 112, 118, 119, 121, 124, 128, 132, 133, 134, 155, 168, 172, 175, 176, 178], "whether": [48, 61, 62, 63, 64, 65, 107, 108, 109, 110, 112, 124, 159], "which": [4, 5, 6, 11, 12, 13, 14, 15, 23, 26, 29, 30, 32, 48, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 65, 70, 72, 73, 94, 96, 106, 107, 108, 109, 110, 112, 115, 116, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 138, 140, 157, 168, 169, 172, 175, 176, 178, 180], "while": [2, 36, 79, 94, 96, 106, 127, 129, 130, 131, 164, 172, 173], "white": [145, 146], "whitespac": [48, 61, 62, 63, 64, 65, 112, 124], "whole": [32, 123, 176], "whose": [48, 61, 62, 63, 64, 65, 94, 107, 108, 109, 110, 112, 124, 132, 133, 134, 175], "wi": 131, "wide": [55, 57, 59, 60, 172], "width": [14, 40, 48, 61, 62, 63, 64, 65, 112, 124], "wiesel": 109, "william": [71, 131], "window": [101, 102, 103, 104, 106, 129, 130, 131], "window_s": [101, 102, 103, 104, 106], "wise": 168, "wishart": 147, "wit": 168, "within": [26, 30, 48, 61, 62, 63, 64, 65, 112, 116, 118, 124, 127, 155, 172, 176], "without": [2, 5, 7, 8, 12, 13, 14, 15, 20, 39, 40, 115, 116, 121, 122, 126, 129, 130, 131], "wmt": [7, 8, 29, 30, 32, 43, 52], "wolf": [108, 164], "word": [31, 48, 61, 62, 63, 64, 65, 112, 124], "work": [36, 40, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148], "wors": [129, 130, 131], "worst": [7, 8, 9, 14, 15, 18, 19, 20, 23, 26, 29, 36, 40, 64, 65, 67, 68, 69, 89, 91, 115, 116, 122, 126, 129, 130, 131, 133, 164, 181], "worst_real": [65, 114, 115, 118, 119, 122, 126, 129, 130, 131], "worst_realization_ratio": [64, 129, 130, 131], "would": [11, 13, 14, 36, 114, 115, 118, 119, 121, 122, 126, 132, 133, 134, 164, 168, 176, 178], "wpgma": 48, "wpgmc": 48, "wpp": 50, "wrap": 92, "write": 172, "written": [115, 116, 121, 122, 126], "wtb": 50, "www": [115, 116, 121, 122, 126], "x": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 151, 152, 153, 154, 159, 160, 161, 164, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181], "x0": [131, 132, 133, 134], "x1": [131, 132, 133, 134], "x_new": [132, 133, 134], "x_r": [132, 133, 134], "x_test": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 107, 108, 109, 110, 164, 172, 176, 177, 179], "x_train": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 164, 172, 176, 177, 179], "xaxis_titl": [14, 15, 40], "xmlcharrefreplac": [48, 61, 62, 63, 64, 65, 112, 124], "xom": [7, 8, 43, 52], "y": [2, 5, 6, 9, 10, 14, 15, 29, 40, 43, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 145, 146, 147, 148, 164, 176, 177, 180], "y_test": [2, 5, 6, 29, 164, 176], "y_test_mean": [14, 15], "y_test_std": 14, "y_train": [2, 5, 6, 29, 164, 176], "y_train_mean": 14, "y_train_std": 14, "yahoo": [49, 50, 51, 52, 53, 169], "yaxis_titl": [14, 15, 40], "year": [12, 13, 14, 15, 26, 31, 33, 36, 40, 43, 164, 168], "yearli": [13, 168], "yellow": [29, 30, 32, 47], "yet": 107, "yield": [94, 95, 107, 123, 127, 168], "you": [7, 8, 9, 11, 12, 13, 15, 29, 58, 92, 95, 105, 107, 108, 109, 110, 115, 116, 121, 122, 126, 127, 138, 164, 168, 173, 176], "your": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 168, 172, 176], "yue": [47, 118, 155], "z": [10, 48, 61, 62, 63, 64, 65, 112, 124, 128, 132, 177], "zero": [14, 48, 61, 62, 63, 64, 65, 97, 99, 100, 101, 103, 106, 107, 108, 109, 110, 112, 115, 121, 122, 124, 129, 130, 131, 132, 133, 134, 145, 146, 147, 148, 157, 162, 178], "zfill": [48, 61, 62, 63, 64, 65, 112, 124], "zhou": 134, "zip": 45, "zvra": 51, "zyme": 51, "zyne": 51, "zyxi": 51, "\u00ecn": 172}, "titles": ["API Reference", "Mean-Risk", "Tracking Error", "Empirical Prior", "Black &amp; Litterman", "Factor Model", "Black &amp; Litterman Factor Model", "Maximum Sharpe Ratio", "Minimum CVaR", "Efficient Frontier", "Mean-Variance-CDaR Surface", "Weight Constraints", "Transaction Costs", "Management Fees", "L1 and L2 Regularization", "Uncertainty Set", "Computation times", "Risk Budgeting", "Risk Parity - Variance", "Risk Budgeting - CVaR", "Risk Parity - Covariance shrinkage", "Computation times", "Maximum Diversification", "Maximum Diversification", "Computation times", "Distributionally Robust CVaR", "Distributionally Robust CVaR", "Computation times", "Hierarchical Clustering and NCO", "Hierarchical Risk Parity - CVaR", "Hierarchical Equal Risk Contribution - CDaR", "HRP vs HERC", "Nested Clusters Optimization", "NCO - Combinatorial Purged CV", "Computation times", "Ensemble Optimizations", "Stacking Optimization", "Computation times", "Pre-selection", "Drop Highly Correlated Assets", "Select Best Performers", "Computation times", "Data Preparation", "Investment Horizon", "Computation times", "Examples", "Computation times", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.cluster</span></code>.HierarchicalClustering", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.cluster</span></code>.LinkageMethod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_factors_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_ftse100_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_nasdaq_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_sp500_dataset", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.datasets</span></code>.load_sp500_index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.BaseDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.CovarianceDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.DistanceCorrelation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.KendallDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.MutualInformation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.PearsonDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.distance</span></code>.SpearmanDistance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.BaseMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.ExtraRiskMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.PerfMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.RatioMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.RiskMeasure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.average_drawdown", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.cdar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.cvar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.drawdown_at_risk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.edar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.effective_number_assets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.entropic_risk_measure", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.evar", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.first_lower_partial_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.fourth_central_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.fourth_lower_partial_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.get_cumulative_returns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.get_drawdowns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.gini_mean_difference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.max_drawdown", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.mean", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.mean_absolute_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.owa_gmd_weights", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.semi_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.semi_variance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.standard_deviation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.third_central_moment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.ulcer_index", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.value_at_risk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.variance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.measures</span></code>.worst_realization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.metrics</span></code>.make_scorer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.BaseCombinatorialCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.CombinatorialPurgedCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.WalkForward", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.model_selection</span></code>.cross_val_predict", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.BaseCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.BaseMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.DenoiseCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.DetoneCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EWCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EWMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EmpiricalCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EmpiricalMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.EquilibriumMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.GerberCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.GraphicalLassoCV", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.LedoitWolf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.OAS", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkCovariance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkMu", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.moments</span></code>.ShrunkMuMethods", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.BaseComposition", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.BaseHierarchicalOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.ConvexOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.DistributionallyRobustCVaR", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.EqualWeighted", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.HierarchicalEqualRiskContribution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.HierarchicalRiskParity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.InverseVolatility", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.MaximumDiversification", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.MeanRisk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.NestedClustersOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.ObjectiveFunction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.Random", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.RiskBudgeting", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.optimization</span></code>.StackingOptimization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.population</span></code>.Population", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.BasePortfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.MultiPeriodPortfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.portfolio</span></code>.Portfolio", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.DropCorrelated", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectKExtremes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.pre_selection</span></code>.SelectNonDominated", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.preprocessing</span></code>.prices_to_returns", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BaseLoadingMatrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BasePrior", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.BlackLitterman", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.EmpiricalPrior", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.FactorModel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.LoadingMatrixRegression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.prior</span></code>.PriorModel", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BaseCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BaseMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BootstrapCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.BootstrapMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.EmpiricalCovarianceUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.EmpiricalMuUncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.uncertainty_set</span></code>.UncertaintySet", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.NBinsMethod", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_distance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_square", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.assert_is_symmetric", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.commutation_matrix", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.compute_optimal_n_clusters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.corr_to_cov", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.cov_nearest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.cov_to_corr", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.is_cholesky_dec", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.n_bins_freedman", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.n_bins_knuth", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.rand_weights", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">skfolio.utils.stats</span></code>.rand_weights_dirichlet", "skfolio", "Computation times", "Clustering Estimators", "Covariance Estimator", "Data Preparation", "Datasets", "Distance Estimator", "Expected Return Estimator", "Hyper-Parameters Tuning", "User Guide", "Installation", "Model Selection", "Optimization", "Population", "Portfolio", "Pre-Selection Transformers", "Prior Estimator", "Uncertainty Set Estimator"], "titleterms": {"In": 168, "The": 168, "alloc": 176, "an": 172, "analysi": [5, 7, 8, 9, 10, 18, 19, 20, 23, 26, 31, 33, 36], "analyst": [4, 6], "api": 0, "approach": 168, "assert_is_dist": 151, "assert_is_squar": 152, "assert_is_symmetr": 153, "asset": 39, "attribut": 178, "avail": 164, "average_drawdown": 66, "base": [0, 178], "basecombinatorialcv": 93, "basecomposit": 113, "basecovari": 97, "basecovarianceuncertaintyset": 143, "basedist": 54, "basehierarchicaloptim": 114, "baseloadingmatrix": 136, "basemeasur": 61, "basemu": 98, "basemuuncertaintyset": 144, "baseportfolio": 129, "baseprior": 137, "benchmark": [3, 36], "best": 40, "black": [4, 6, 164, 180], "blacklitterman": 138, "bootstrapcovarianceuncertaintyset": 145, "bootstrapmuuncertaintyset": 146, "bound": 11, "budget": [11, 17, 19, 45, 176], "case": 176, "cdar": [10, 30, 67], "citat": 164, "class": 0, "cluster": [0, 28, 32, 45, 47, 48, 164, 166, 176], "combin": [176, 180], "combinatori": [31, 33, 36, 39, 164, 175], "combinatorialpurgedcv": 94, "commutation_matrix": 154, "composit": [29, 30, 32, 172], "comput": [16, 21, 24, 27, 34, 37, 41, 44, 46, 165], "compute_optimal_n_clust": 155, "concept": 164, "conclus": [7, 8, 33, 36], "constraint": [11, 164], "contribut": [18, 19, 29, 30, 176], "convex": 0, "convexoptim": 115, "corr_to_cov": 156, "correct": 168, "correl": 39, "cost": [12, 164], "cov_nearest": 157, "cov_to_corr": 158, "covari": [0, 20, 164, 167], "covariancedist": 55, "cross": [31, 33, 36, 39, 164, 175], "cross_val_predict": 96, "custom": 176, "cv": 33, "cvar": [8, 19, 25, 26, 29, 45, 68, 164, 176], "data": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 42, 45, 168], "dataclass": 0, "dataset": [0, 49, 50, 51, 52, 53, 164, 169], "dendrogram": [29, 30, 32], "denois": 164, "denoisecovari": 99, "deton": 164, "detonecovari": 100, "distanc": [0, 29, 30, 32, 54, 55, 56, 57, 58, 59, 60, 170], "distancecorrel": 56, "distribut": [31, 33, 36, 39], "distribution": [25, 26, 45, 176], "distributionallyrobustcvar": 116, "diversif": [22, 23, 45, 176], "drawdown_at_risk": 69, "drop": 39, "dropcorrel": 132, "edar": 70, "effective_number_asset": 71, "effici": [9, 14, 15], "embed": 164, "empir": [3, 4, 5, 180], "empiricalcovari": 103, "empiricalcovarianceuncertaintyset": 147, "empiricalmu": 104, "empiricalmuuncertaintyset": 148, "empiricalprior": 139, "ensembl": [0, 35, 45], "entropic_risk_measur": 72, "enum": 0, "equal": [30, 176], "equalweight": 117, "equilibriummu": 105, "error": 2, "estim": [0, 29, 30, 32, 166, 167, 170, 171, 172, 176, 180, 181], "evar": 73, "ewcovari": 101, "ewmu": 102, "exampl": [45, 168], "exhaust": 172, "expect": [164, 171], "extrariskmeasur": 62, "factor": [0, 5, 6, 164, 180], "factormodel": 140, "fee": 13, "first_lower_partial_mo": 74, "fit": 164, "fold": 164, "fourth_central_mo": 75, "fourth_lower_partial_mo": 76, "frontier": [9, 14, 15], "function": 0, "further": 176, "gerber": 164, "gerbercovari": 106, "get_cumulative_return": 77, "get_drawdown": 78, "gini_mean_differ": 79, "go": 176, "graphicallassocv": 107, "grid": [164, 172], "group": 11, "guid": 173, "herc": 31, "hierarch": [28, 29, 30, 45, 176], "hierarchicalclust": 47, "hierarchicalequalriskcontribut": 118, "hierarchicalriskpar": 119, "highli": 39, "horizon": 43, "hrp": 31, "hyper": [14, 15, 172], "import": 164, "inequ": 11, "instal": [164, 174], "inversevolatil": 120, "invest": 43, "is_cholesky_dec": 159, "k": 164, "kei": 164, "kendalldist": 57, "l1": 14, "l2": [14, 164], "ledoitwolf": 108, "left": 11, "linear": [11, 43, 168], "linkag": [29, 30, 32], "linkagemethod": 48, "litterman": [4, 6, 164, 180], "load": [0, 164], "load_factors_dataset": 49, "load_ftse100_dataset": 50, "load_nasdaq_dataset": 51, "load_sp500_dataset": 52, "load_sp500_index": 53, "loadingmatrixregress": 141, "logarithm": 168, "long": 11, "lower": 11, "make_scor": 92, "manag": 13, "matrix": 0, "max_drawdown": 80, "maximum": [7, 22, 23, 45, 164, 176], "maximumdiversif": 121, "mean": [1, 10, 45, 81, 176], "mean_absolute_devi": 82, "meanrisk": 122, "measur": [0, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "method": [29, 30, 32, 178], "metric": [0, 92, 172], "minimum": [8, 164], "model": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 43, 164, 175, 180], "model_select": [0, 93, 94, 95, 96], "moment": [0, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "mu": 0, "multi": [12, 13, 178], "multiperiodportfolio": 130, "multipl": 180, "mutualinform": 58, "n_bins_freedman": 160, "n_bins_knuth": 161, "naiv": [0, 176], "nbinsmethod": 150, "nco": [28, 33, 45], "nest": [32, 164, 176], "nestedclustersoptim": 123, "norm": 164, "oa": 109, "object": 172, "objectivefunct": 124, "optim": [0, 10, 32, 35, 36, 45, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 164, 168, 172, 176], "owa_gmd_weight": 83, "parallel": [164, 172], "paramet": [14, 15, 31, 33, 36, 40, 164, 172], "pareto": 10, "pariti": [18, 20, 29, 164, 176], "pearsondist": 59, "perfmeasur": 63, "perform": 40, "period": [12, 13, 178], "pipelin": [39, 40, 164], "pitfal": 168, "popul": [0, 128, 177], "portfolio": [0, 12, 13, 129, 130, 131, 168, 178], "posit": 11, "pre": [0, 38, 45, 164, 179], "pre_select": [0, 132, 133, 134], "predict": [2, 3, 4, 5, 6, 7, 8, 9, 14, 18, 19, 20, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 164, 175], "prepar": [42, 45, 168], "preprocess": [0, 135], "price": 43, "prices_to_return": 135, "prior": [0, 3, 29, 136, 137, 138, 139, 140, 141, 142, 176, 180], "priormodel": 142, "purg": [31, 33, 36, 39, 164, 175], "quickstart": 164, "rand_weight": 162, "rand_weights_dirichlet": 163, "random": [125, 164, 172], "ratio": [7, 164], "ratiomeasur": 64, "recognit": 164, "refer": 0, "regular": 14, "return": [43, 164, 168, 171], "right": 11, "risk": [1, 17, 18, 19, 20, 29, 30, 45, 164, 176], "riskbudget": 126, "riskmeasur": 65, "robust": [25, 26, 45, 176], "search": [164, 172], "select": [0, 38, 40, 45, 164, 175, 179], "selectkextrem": 133, "selectnondomin": 134, "semi_devi": 84, "semi_vari": 85, "set": [0, 15, 164, 181], "sharp": 7, "short": 11, "shrinkag": 20, "shrunk": 164, "shrunkcovari": 110, "shrunkmu": 111, "shrunkmumethod": 112, "skfolio": [0, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168], "sortino": 164, "space": 172, "spearmandist": 60, "specifi": 172, "split": 164, "stack": [36, 176], "stackingoptim": 127, "standard_devi": 86, "stat": [0, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "stock": 168, "summari": 29, "surfac": 10, "test": 164, "third_central_mo": 87, "time": [16, 21, 24, 27, 34, 37, 41, 44, 46, 165], "tip": 172, "track": 2, "train": 164, "transact": [12, 164], "transform": [0, 179], "tune": [14, 15, 31, 33, 36, 40, 172], "ulcer_index": 88, "uncertainti": [0, 15, 164, 181], "uncertainty_set": [0, 143, 144, 145, 146, 147, 148, 149], "uncertaintyset": 149, "upper": 11, "user": 173, "util": [0, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163], "v": 31, "valid": [31, 33, 36, 39, 164, 175], "value_at_risk": 89, "varianc": [10, 18, 90, 164], "view": [4, 6], "walkforward": 95, "weight": [11, 164], "worst": 176, "worst_real": 91}})